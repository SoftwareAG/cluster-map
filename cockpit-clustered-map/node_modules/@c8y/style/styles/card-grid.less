/*==============================================
 generate classes for setting  two columns on 
 a 12 columns grid
==============================================*/
.createGridCols(@value; ) when (@value >=0) {
  @one: @value;
  @two: 12 - @value;

  .grid__col--@{one}-@{two} {
    grid-template-columns: 1fr;

    @media(min-width: 991px) {
      grid-template-columns: (@one * 1fr) (@two * 1fr);
    }
  }

  .createGridCols((@value - 1));
}

/*==============================================
 generate classes for setting  two rows on 
 a 12 rows grid

  example: grid__row-4-6

==============================================*/
.createGridRows(@value; ) when (@value >=0) {
  @one: @value;
  @two: 12 - @value;

  .grid__row--@{one}-@{two} {
    @media(min-width: 991px) {
      grid-template-rows: (@one * 1fr) (@two * 1fr);
    }
  }

  .createGridRows((@value - 1));
}


.createGridCols(11);

.createGridRows(11);



.card--grid, .card.card--grid {
  display: grid;
}

.card--grid--fullpage {
  margin-bottom:0!important;
  @media(min-width: @screen-sm-min) {
    height: calc(~'100vh - 118px');
    .has-tabs.horizontal-tabs &{
      height: calc(~'100vh - 165px');
    }
    .has-action-bar &{
      height: calc(~'100vh - 150px');
    }
  }
}



.card--grid__inner-scroll {
  position: relative;
  overflow: auto;
  height: 100%;
  .card-header{
    background-color: @component-background;
    position: sticky;
    top:0;
    z-index: 1;
  }
  .card-block{
    .legend:first-child{
      margin-top:0;
    }
  }
}