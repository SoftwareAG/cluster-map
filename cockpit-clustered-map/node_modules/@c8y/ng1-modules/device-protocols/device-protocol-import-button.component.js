"use strict";function asyncGeneratorStep(e,t,r,o,n,c,a){try{var i=e[c](a),s=i.value}catch(e){return void r(e)}i.done?t(s):Promise.resolve(s).then(o,n)}function _asyncToGenerator(i){return function(){var e=this,a=arguments;return new Promise(function(t,r){var o=i.apply(e,a);function n(e){asyncGeneratorStep(o,t,r,n,c,"next",e)}function c(e){asyncGeneratorStep(o,t,r,n,c,"throw",e)}n(void 0)})}}!function(){function e(r,o,n,c,a){var i=this;function e(){return(e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r.importDeviceTypeWithUI();case 3:t=e.sent,c.success(a("New device protocol imported.")),i.onImported({importedProtocol:t}),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),s(e.t0);case 11:n.$apply();case 12:case"end":return e.stop()}},e,null,[[0,8]])}))).apply(this,arguments)}function s(e){if(_.isObjectLike(e)){var t=e.errorMessage;t?c.danger(o.getString('Could not import device protocol due to: "{{errorMessage | translate}}".',{errorMessage:t})):c.danger(a("Could not import device protocol."))}}_.assign(i,{importDeviceType:function(){return e.apply(this,arguments)}})}e.$inject=["c8yDeviceDatabase","gettextCatalog","$rootScope","c8yAlert","gettext"],angular.module("c8y.deviceProtocols").component("c8yDeviceProtocolImportButton",{bindings:{onImported:"&"},templateUrl:":::PLUGIN_PATH:::/device-protocol-import-button.html",controller:e,controllerAs:"vm"})}();