"use strict";!function(){function e(e,t,i,n,c){var r=this;_.assign(r,{$onInit:function(){e.all([i.getDeviceTypes().then(function(e){r.deviceTypes=_.uniqBy(e,"id"),0===e.length&&u(a)}),i.getConnectivityPlans().then(l).then(function(e){r.connectivityPlans=_.uniqBy(e,"id"),0===r.connectivityPlans.length&&u(o)}),i.getDeviceProfiles().then(function(e){r.deviceProfiles=_.uniqBy(e,"id"),0===e.length&&u(s)})]).catch(function(e){r.errMsg.push(e.data)}).finally(function(){r.providerSettingsLoaded=!0})},save:function(){n.disableInteractionWhenRequestInProgress(r,!0),n.setFormData(r.wizardCtrl.data,{device:r.device}),i.createNewDeviceRequest(function(e){var t=_.pick(e.deviceType,["name","id"]),i=_.cloneDeep(e);return _.unset(i,"deviceType"),_.set(i,"deviceType",t),i}(r.device)).then(function(e){n.setSuccessData(r.wizardCtrl.data,e),r.wizardCtrl.goTo("finish")}).catch(function(e){n.setErrorData(r.wizardCtrl.data,e),r.wizardCtrl.goTo("finish")}).finally(function(){n.disableInteractionWhenRequestInProgress(r,!1),t(d,500)})},doResize:d,errMsg:[]});var a=c("No device types configured. Create a LoRa device type using device database."),o=c("No connectivity plans with free slots available."),s=c("No device profiles.");function d(){n.doResize()}function l(e){return _.filter(e,function(e){return _.parseInt(e.grantedConnections)>_.parseInt(e.usedConnections)})}function u(e){r.errMsg.push({message:e})}}e.$inject=["$q","$timeout","deviceRegistrationActilityProviderService","deviceRegistrationWizardUtils","gettext"],angular.module("c8y.deviceRegistrationActility").component("deviceRegistrationActility",{controllerAs:"vm",templateUrl:":::PLUGIN_PATH:::/deviceRegistrationActility.html",require:{wizardCtrl:"^c8yWizardStep"},bindings:{backStep:"@?"},controller:e})}();