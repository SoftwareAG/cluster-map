"use strict";function asyncGeneratorStep(t,e,r,n,a,i,c){try{var o=t[i](c),u=o.value}catch(t){return void r(t)}o.done?e(u):Promise.resolve(u).then(n,a)}function _asyncToGenerator(o){return function(){var t=this,c=arguments;return new Promise(function(e,r){var n=o.apply(t,c);function a(t){asyncGeneratorStep(n,e,r,a,i,"next",t)}function i(t){asyncGeneratorStep(n,e,r,a,i,"throw",t)}a(void 0)})}}!function(){function t(n,a,r,i,c,o,u,s){var l={true:{title:s.getString("Activate Cell ID information"),body:s.getString("Activating this feature will result in automatically updating the GPS position of the device when it sends new Cell ID data. Using this feature can result in additional costs."),status:"danger",labels:{ok:s.getString("Activate")}},false:{title:s.getString("Deactivate Cell ID information"),body:s.getString("Are you sure you want to deactivate Cell ID information for this device?"),status:"info",labels:{ok:s.getString("Deactivate")}}};return{shouldShowActivator:function(){return t.apply(this,arguments)},isActivatedFor:function(t){return e.apply(this,arguments)},activate:_.curry(p)(!0),deactivate:_.curry(p)(!1)};function t(){return(t=_asyncToGenerator(regeneratorRuntime.mark(function t(){var e;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,r.detailValue({category:"cellid",key:"operation.mode"});case 2:return e=t.sent,t.abrupt("return","manual"===e);case 4:case"end":return t.stop()}},t)}))).apply(this,arguments)}function e(){return(e=_asyncToGenerator(regeneratorRuntime.mark(function t(e){var r;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(t.t0=_.isString(e),t.t0)return t.t1=c,t.next=5,i.detail(e);t.next=7;break;case 5:t.t2=t.sent,t.t0=t.t1.getResData.call(t.t1,t.t2);case 7:return r=t.t0,t.abrupt("return",!!_.get(r,"c8y_CellIdFeatureActive"));case 9:case"end":return t.stop()}},t)}))).apply(this,arguments)}function p(t,e){return f.apply(this,arguments)}function f(){return(f=_asyncToGenerator(regeneratorRuntime.mark(function t(e,r){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,g(e);case 3:if(t.sent)return t.next=7,a.post(c.url("service/cellid/devices/".concat(r)),{active:e});t.next=10;break;case 7:n.$broadcast("$routeChangeStart"),n.$broadcast("$routeChangeSuccess"),u.success(e?s.getString("Cell ID information activated"):s.getString("Cell ID information deactivated"));case 10:t.next=15;break;case 12:t.prev=12,t.t0=t.catch(0),console.error(t.t0.data.message);case 15:case"end":return t.stop()}},t,null,[[0,12]])}))).apply(this,arguments)}function g(t){return v.apply(this,arguments)}function v(){return(v=_asyncToGenerator(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,o(l[e]);case 3:return t.abrupt("return",t.sent);case 6:return t.prev=6,t.t0=t.catch(0),t.abrupt("return",0);case 9:case"end":return t.stop()}},t,null,[[0,6]])}))).apply(this,arguments)}}t.$inject=["$rootScope","$http","c8ySettings","c8yDevices","c8yBase","c8yModal","c8yAlert","gettextCatalog"],angular.module("c8y.cellIdInformationActivator").factory("cellIdInformationActivator",t)}();