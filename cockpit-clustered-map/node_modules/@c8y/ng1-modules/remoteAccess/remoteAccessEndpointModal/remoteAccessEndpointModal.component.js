"use strict";!function(){function e(n,t,e){var o,s,i,c,r,a=this;function l(){a.endpoint.config.credentialsType=a.selectedCredentialsType.value}function d(e){a.changingPassword=e,_.set(a.endpoint,"config.password",e?"":o)}function p(e){a.changingCredentials=e,_.set(a.endpoint,"config.username",e?"":s),_.set(a.endpoint,"config.password",e?"":o)}function u(e){a.changingKeyPair=e,_.set(a.endpoint,"config.privateKey",""),_.set(a.endpoint,"config.publicKey",i)}_.assign(a,{protocols:n.PROTOCOLS,ipOrHostnamePattern:new RegExp("".concat(e.validation.ip.pattern.source,"|").concat(e.validation.hostname.pattern.source)),$onInit:function(){(function(e,n){o=_.get(e,"config.credentials.password"),s=_.get(e,"config.credentials.username"),i=_.get(e,"config.credentials.publicKey"),c=_.get(e,"config.credentials.privateKey"),r=_.get(e,"config.credentials.hostKey"),a.passwordAlreadyExists=!_.isEmpty(o),a.usernameAlreadyExists=!_.isEmpty(s),a.publicKeyAlreadyExists=!_.isEmpty(i),a.privateKeyAlreadyExists=!_.isEmpty(c),a.hostKeyAlreadyExists=!_.isEmpty(r),a.generating=!1,void 0===e?(a.selectedProtocol=a.protocols.VNC,a.selectedCredentialsType=a.selectedProtocol.supportedCredentialsTypes[0]):(a.selectedProtocol=_.find(a.protocols.values(),{value:e.config.protocol}),a.selectedCredentialsType=e.config.credentials.type?_.find(a.credentialsTypes.values(),{value:e.config.credentials.type}):a.selectedProtocol.supportedCredentialsTypes[0]);a.endpoint=_.defaults(e,{device:n,config:{hostname:a.selectedProtocol.defaults.host,port:a.selectedProtocol.defaults.port,protocol:a.selectedProtocol.value,credentialsType:a.selectedCredentialsType.value}}),a.usernameAlreadyExists&&(a.endpoint.config.username=s);a.publicKeyAlreadyExists&&(a.endpoint.config.publicKey=i);a.hostKeyAlreadyExists&&(a.endpoint.config.hostKey=r);l()})(a.resolve.endpoint,a.resolve.rootDevice),function(e){t.getSuggestedIPAddresses(e).then(function(e){a.suggestedIPAddresses=e})}(a.resolve.rootDevice)},save:function(){a.modalInstance.close(a.endpoint)},cancel:function(){a.modalInstance.dismiss()},changePassword:function(){return d(!0)},cancelChangePassword:function(){return d(!1)},changeCredentials:function(){return p(!0)},cancelChangeCredentials:function(){return p(!1)},changeKeyPair:function(){return u(!0)},cancelChangeKeyPair:function(){return u(!1)},onProtocolChange:function(){a.selectedCredentialsType=a.selectedProtocol.supportedCredentialsTypes[0],_.assign(a.endpoint.config,{protocol:a.selectedProtocol.value,port:a.selectedProtocol.defaults.port,hostname:a.selectedProtocol.defaults.host,credentialsType:a.selectedCredentialsType.value})},onCredentialsTypeChange:l,credentialsTypes:n.CREDENTIALS_TYPES,credentialsAvailable:function(){return s&&o},keyPairAvailable:function(){return c&&i},downloadPublicKey:function(){n.exportSshKey(_.get(a,"endpoint.config.publicKey"))},generateKeys:function(){var e=a.endpoint.config.hostname||a.selectedProtocol.defaults.host;a.generating=!0,n.generateKeys(e).then(function(e){var n=e.privateKey,t=e.publicKey;n&&t&&_.assign(a.endpoint.config,{privateKey:n,publicKey:t})}).finally(function(){a.generating=!1})}})}e.$inject=["c8yRemoteAccess","c8yRemoteAccessUI","c8yConfig"],angular.module("c8y.remoteAccess").component("c8yRemoteAccessEndpointModal",{bindings:{resolve:"<",modalInstance:"<"},templateUrl:":::PLUGIN_PATH:::/remoteAccessEndpointModal/remoteAccessEndpointModal.html",controller:e,controllerAs:"vm"})}();