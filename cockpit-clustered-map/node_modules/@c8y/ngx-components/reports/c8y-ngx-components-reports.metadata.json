{"__symbolic":"module","version":4,"metadata":{"ReportsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":16,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ExportSchedulesComponent"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"}],"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":18,"character":12},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"FormsModule","line":18,"character":24},{"__symbolic":"reference","module":"ngx-bootstrap/dropdown","name":"BsDropdownModule","line":18,"character":37},{"__symbolic":"reference","module":"ngx-bootstrap/tooltip","name":"TooltipModule","line":18,"character":55}],"entryComponents":[{"__symbolic":"reference","name":"ExportSchedulesComponent"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"}],"providers":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"exports":[{"__symbolic":"reference","name":"ExportSchedulesComponent"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"}]}]}],"members":{}},"ExportSchedulesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"export-schedules","template":"<div>\n  <div *ngIf=\"loadingStatus.inProgress\" class=\"flex-row\">\n    <div style=\"position: relative; min-height: 40px;min-width: 55px;\">\n      <div class=\"spinner\">\n        <div class=\"rect1\"></div>\n        <div class=\"rect2\"></div>\n        <div class=\"rect3\"></div>\n        <div class=\"rect4\"></div>\n        <div class=\"rect5\"></div>\n      </div>\n    </div>\n    <span translate>Retrieving schedules…</span>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error\">\n    <div class=\"alert alert-warning\" translate>\n      Could not load schedules list.\n    </div>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error\">\n    <div class=\"c8y-empty-state text-center\" *ngIf=\"!scheduleList.length\">\n      <h1 c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></h1>\n      <h3 translate>No export schedules defined.</h3>\n    </div>\n\n    <div class=\"list-group\" *ngIf=\"scheduleList.length\">\n      <div\n        class=\"list-group-item flex-row pointer\"\n        *ngFor=\"let schedule of scheduleList\"\n        (click)=\"editSchedule(schedule, $event)\"\n      >\n        <div class=\"list-item-actions\" (click)=\"$event.stopPropagation()\">\n          <div class=\"settings dropdown\" dropdown>\n            <button\n              class=\"dropdown-toggle c8y-dropdown\"\n              dropdownToggle\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              title=\"{{ 'Actions' | translate }}\"\n            >\n              <i [c8yIcon]=\"'ellipsis-v'\"></i>\n            </button>\n            <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n              <li role=\"menuitem\">\n                <a\n                  href=\"\"\n                  title=\"{{ 'Edit schedule' | translate }}\"\n                  (click)=\"editSchedule(schedule, $event)\"\n                >\n                  <i [c8yIcon]=\"'pencil'\"></i> {{ 'Edit' | translate }}\n                </a>\n              </li>\n              <li role=\"menuitem\">\n                <a\n                  href=\"\"\n                  title=\"{{ 'Duplicate schedule' | translate }}\"\n                  (click)=\"duplicateSchedule(schedule, $event)\"\n                >\n                  <i [c8yIcon]=\"'copy'\"></i> {{ 'Duplicate' | translate }}\n                </a>\n              </li>\n              <li role=\"menuitem\">\n                <a\n                  href=\"\"\n                  title=\"{{ 'Delete schedule' | translate }}\"\n                  (click)=\"removeSchedule(schedule, $event)\"\n                >\n                  <i [c8yIcon]=\"'trash'\"></i> {{ 'Delete' | translate }}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"list-item-icon\">\n          <i c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></i>\n        </div>\n        <div class=\"list-item-body flex-row\">\n          <div class=\"col-sm-6\">\n            <div class=\"text-truncate\" title=\"{{ schedule.emailConfig.subject }}\">\n              {{ schedule.emailConfig.subject }}\n            </div>\n          </div>\n          <div class=\"col-sm-6\">\n            <div class=\"flex-row\" style=\"align-items: baseline;\">\n              <i c8yIcon=\"calendar\" class=\"text-muted m-r-4\"></i>\n              <small class=\"smart-rule-information text-muted\">\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 2\" translate>\n                  Hourly: {{ schedule.cronConfig.minute | number: '2.0-0' }} minute(s) past the\n                  hour.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 3\" translate>\n                  Daily: at {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 4\" translate>\n                  Weekly: {{ cronService.getWeekDayName(schedule.cronConfig) }}, at\n                  {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 5\" translate>\n                  Monthly: {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the month,\n                  at {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 6\" translate>\n                  Yearly: {{ cronService.getMonthName(schedule.cronConfig) }},\n                  {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the month, at\n                  {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button\n    type=\"button\"\n    class=\"btn-add-block m-t-16\"\n    title=\"{{ 'Add schedule' | translate }}\"\n    (click)=\"addSchedule()\"\n  >\n    <i [c8yIcon]=\"'plus-square'\"></i> {{ 'Add schedule' | translate }}\n  </button>\n</div>\n"}]}],"members":{"exportId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalService","line":57,"character":28},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":59,"character":30},{"__symbolic":"reference","module":"@c8y/client","name":"UserService","line":60,"character":25}]}],"ngOnInit":[{"__symbolic":"method"}],"getCurrentUserEmail":[{"__symbolic":"method"}],"getScheduleList":[{"__symbolic":"method"}],"addSchedule":[{"__symbolic":"method"}],"editSchedule":[{"__symbolic":"method"}],"duplicateSchedule":[{"__symbolic":"method"}],"openAddEditModal":[{"__symbolic":"method"}],"getMessageFromModal":[{"__symbolic":"method"}],"removeSchedule":[{"__symbolic":"method"}]}},"ng1Modules":["c8y.upgrade.reports"],"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":18,"character":26},{"__symbolic":"reference","module":"@c8y/client","name":"InventoryService","line":19,"character":30},{"__symbolic":"reference","module":"@c8y/client","name":"FetchClient","line":20,"character":20}]}],"getExport":[{"__symbolic":"method"}],"getScheduleList":[{"__symbolic":"method"}],"extractScheduleListFromExport":[{"__symbolic":"method"}],"addSchedule":[{"__symbolic":"method"}],"updateSchedule":[{"__symbolic":"method"}],"updateSchedules":[{"__symbolic":"method"}],"reschedule":[{"__symbolic":"method"}],"deleteSchedule":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":52,"character":40}]}],"generateCron":[{"__symbolic":"method"}],"generateCronConfig":[{"__symbolic":"method"}],"getBase":[{"__symbolic":"method"}],"validateModels":[{"__symbolic":"method"}],"clearNextModels":[{"__symbolic":"method"}],"getWeekDayName":[{"__symbolic":"method"}],"getMonthDayName":[{"__symbolic":"method"}],"getMonthName":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"schedule-modal","template":"<div class=\"modal-header text-center bg-primary\">\n  <header class=\"text-white\">\n    <div style=\"font-size: 62px;\">\n      <span c8yIcon=\"c8y-report\"></span>\n    </div>\n    <h4 class=\"text-uppercase\" style=\"margin:0; letter-spacing: 0.15em;\">\n      <span *ngIf=\"actionType === ActionType.CREATE\" translate>New export schedule</span>\n      <span *ngIf=\"actionType === ActionType.EDIT\" translate>Edit export schedule</span>\n      <span *ngIf=\"actionType === ActionType.DUPLICATE\" translate>Duplicate export schedule</span>\n    </h4>\n  </header>\n</div>\n\n<div class=\"modal-body\">\n  <p class=\"lead text-center p-t-24\" style=\"margin-bottom: 0;\" translate>\n    On schedule send export via email\n  </p>\n</div>\n<div class=\"modal-inner-scroll smart-rule-control\">\n  <form #scheduleForm=\"ngForm\" class=\"edit-smart-rule-details\">\n    <div class=\"list-group\">\n      <div class=\"list-group-item bg-gray-white\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light\">1</span\n          ><strong class=\"p-l-4\" translate>Frequency</strong>\n        </div>\n        <div class=\"p-t-4\">\n          <div class=\"form-group\">\n            <cron [cronIn]=\"cronExpression\" (emitter)=\"getCron($event)\" name=\"cron\"></cron>\n          </div>\n        </div>\n      </div>\n      <div class=\"list-group-item\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light\">2</span>&nbsp;<strong translate>Send email</strong>\n        </div>\n        <div class=\"form-horizontal p-t-16\">\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class=\"control-label col-sm-3\" translate>Send to</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  name=\"to\"\n                  [(ngModel)]=\"emailTo\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  required\n                  [pattern]=\"multiEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class=\"control-label col-sm-3\" translate>CC</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"cc\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  [(ngModel)]=\"emailCc\"\n                  [pattern]=\"multiEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class=\"control-label col-sm-3\" translate>BCC</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"bcc\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  [(ngModel)]=\"emailBcc\"\n                  [pattern]=\"multiEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label col-sm-3\" translate>Reply to</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"replyTo\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  [(ngModel)]=\"emailReplyTo\"\n                  [pattern]=\"singleEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_singleEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label col-sm-3\" translate>Subject</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"subject\"\n                  [(ngModel)]=\"emailSubject\"\n                  placeholder=\"{{ 'e.g. Daily report' | translate }}\"\n                  required\n                />\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em>{{ placeholdersInfo | translate }}</em>\n            </div>\n            <label class=\"col-sm-3 control-label\" translate>Message</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <textarea\n                  class=\"form-control\"\n                  name=\"text\"\n                  [(ngModel)]=\"emailText\"\n                  placeholder=\"{{ 'Message' | translate }}\"\n                  required\n                ></textarea>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button class=\"btn btn-default\" (click)=\"cancel()\" title=\"{{ 'Cancel' | translate }}\" translate>\n    Cancel\n  </button>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"save()\"\n    [ngClass]=\"{ ' btn-pending ': savingStatus.inProgress }\"\n    [disabled]=\"!validCron || !scheduleForm.form.valid\"\n  >\n    <span *ngIf=\"!savingStatus.inProgress\">\n      <span *ngIf=\"actionType === ActionType.CREATE\" title=\"{{ 'Create' | translate }}\" translate\n        >Create</span\n      >\n      <span *ngIf=\"actionType === ActionType.EDIT\" title=\"{{ 'Save' | translate }}\" translate\n        >Save</span\n      >\n      <span\n        *ngIf=\"actionType === ActionType.DUPLICATE\"\n        title=\"{{ 'Duplicate' | translate }}\"\n        translate\n        >Duplicate</span\n      >\n    </span>\n    <span *ngIf=\"savingStatus.inProgress\" title=\"{{ 'Saving' | translate }}…\"\n      >{{ 'Saving' | translate }}…</span\n    >\n  </button>\n</div>\n"}]}],"members":{"emitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalRef","line":40,"character":21},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}]}],"ngOnInit":[{"__symbolic":"method"}],"populateEmailFieldsFromSchedule":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"getCron":[{"__symbolic":"method"}],"populateScheduleFromCronExpression":[{"__symbolic":"method"}],"convertStringOfEmailsToArray":[{"__symbolic":"method"}],"populateScheduleFromEmailFields":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"cron","template":"<div class=\"cron-wrap form-horizontal\">\n  <div class=\"form-group smart-cron-job-every\">\n    <label for=\"smart-cron-job-every\" \n      class=\"col-sm-3 control-label\"\n      translate>\n      Interval\n    </label>\n    <div class=\"col-sm-9\">\n      <div class=\"c8y-select-wrapper\">\n        <select\n          id=\"smart-cron-job-every\"\n          class=\"cron-select form-control\"\n          [(ngModel)]=\"base\"\n          required=\"true\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngIf=\"base === 1\" value=\"1\" translate>Select...</option>\n          <option *ngFor=\"let baseInterval of intervals\" [ngValue]=\"baseInterval.value\">\n            {{ baseInterval.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group smart-cron-job-on\" *ngIf=\"base == 4\">\n    <label for=\"smart-cron-job-on\" class=\"col-sm-3 control-label\" translate>\n      Day\n    </label>\n    <div class=\"col-sm-9\">\n      <div class=\"c8y-select-wrapper\">\n        <select\n          id=\"smart-cron-job-on\"\n          class=\"cron-select form-control day-value\"\n          [(ngModel)]=\"cronConfig.weekday\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngFor=\"let dayOfWeek of daysOfWeekPosix\" [ngValue]=\"dayOfWeek.value\">\n            {{ dayOfWeek.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group smart-cron-job-of\" *ngIf=\"base == 6\">\n    <label for=\"smart-cron-job-of\" class=\"col-sm-3 control-label\" translate>\n      Month\n    </label>\n    <div class=\"col-sm-9\">\n      <div class=\"c8y-select-wrapper\">\n        <select\n          id=\"smart-cron-job-of\"\n          class=\"cron-select form-control month-value\"\n          [(ngModel)]=\"cronConfig.month\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngFor=\"let month of months\" [ngValue]=\"month.value\">\n            {{ month.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group smart-cron-job-on-the\" *ngIf=\"base >= 5\">\n    <label for=\"smart-cron-job-on-the\" class=\"col-sm-3 control-label\" translate>\n      Day\n    </label>\n    <div class=\"col-sm-9\">\n      <div class=\"c8y-select-wrapper\">\n        <select\n          id=\"smart-cron-job-on-the\"\n          class=\"cron-select form-control day-of-month-value\"\n          [(ngModel)]=\"cronConfig.day\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngFor=\"let dayOfMonth of daysOfMonth\" [ngValue]=\"dayOfMonth.value\">\n            {{ dayOfMonth.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group smart-cron-job-at\" *ngIf=\"base >= 2\">\n    <label for=\"smart-cron-job-at-hour\" class=\"col-sm-3 control-label\">\n      <span *ngIf=\"base >= 3\" translate>Time</span>\n      <span *ngIf=\"base < 3\" translate>Minutes</span>\n    </label>\n    <div class=\"col-sm-9\">\n      <div class=\"form-inline\">\n        <div class=\"c8y-select-wrapper\" *ngIf=\"base >= 3\">\n          <select\n            id=\"smart-cron-job-at-hour\"\n            class=\"cron-select form-control hour-value\"\n            [(ngModel)]=\"cronConfig.hour\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let hour of hours\" [ngValue]=\"hour.value\">\n              {{ hour.value | number: '2.0-0'  }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n        <span *ngIf=\"base >= 3\"> : </span>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            id=\"smart-cron-job-at-minute\"\n            class=\"cron-select form-control minute-value\"\n            [(ngModel)]=\"cronConfig.minute\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let minute of minutes\" [ngValue]=\"minute.value\">\n              {{ minute.value | number: '2.0-0' }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"cronIn":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"emitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"ngOnInit":[{"__symbolic":"method"}],"onChangeSelect":[{"__symbolic":"method"}]}}},"origins":{"ReportsModule":"./reports.module","ExportSchedulesComponent":"./export-schedules.component","ng1Modules":"./ng1/index","ɵa":"./reports.service","ɵb":"./cron.service","ɵc":"./schedule-modal.component","ɵd":"./cron.component"},"importAs":"@c8y/ngx-components/reports"}