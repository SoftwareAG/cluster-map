{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/protocol-opcua/address-space.service.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-address-space-detail.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcuaService.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-object-mapping.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-mapping.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-detail.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-data-reporting.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-mapping-customaction.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-object-mapping-status-icon.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-address-space.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-agent.guard.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-microservice.guard.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-server-config.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-server-list.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-server.guard.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-servers.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-description.component.ts","ng://@c8y/ngx-components/protocol-opcua/dynamic-data-source.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-address-space-tree.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-auto-apply-settings.component.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-device-protocol-browse-path-validation.directive.ts","ng://@c8y/ngx-components/protocol-opcua/opcua-protocol.module.ts","ng://@c8y/ngx-components/protocol-opcua/ng1/downgraded.components.ts","ng://@c8y/ngx-components/protocol-opcua/ng1/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","__read","o","m","ar","error","AddressSpaceService","fetchClient","client","microserviceUrl","header","Content-Type","nodeNavigationData$","BehaviorSubject","node","undefined","selectedAncestorIds","resetTreeToRootNode","triggerNodeToOpen","nodeNavigationData","getNodeNavData$","asObservable","getNode","serverId","nodeId","getNodeById","getRootNode","options","method","headers","fetch","param","encodeURIComponent","getChildrenOf","childrenAvailable","nodeReferences","some","ref","inverse","hierarchical","getSearchedNodes","searchKey","url","params","searchString","_a","json","getIcon","nodeClassName","Variable","Method","View","ObjectType","VariableType","ReferenceType","DataType","FetchClient","Injectable","OpcuaAddressSpaceDetailComponent","addressSpaceService","selected","showDetails","toggleAttrDetail","EventEmitter","_node","setNodeData","nodeData","attributes","references","nodeDataRef","nodeDataAttr","assign","omit","toggleDetail","emit","navigateTo","ancestors","nodeNavData","tslib_1.__decorate","Input","Output","Component","selector","template","OpcuaService","inventoryService","router","alertService","deviceTypeProtocolUrl","binaryService","binary","getServers","id","createServer","data","doesGatewayIdExist","cleanUpPayload","JSON","stringify","updateServer","server","doesIdExist","res","status","addServerFailure","removeServer","gatewayId","getKeystore","binaryId","detail","uploadKeystore","file","size","updateKeystore","removeKeystore","delete","getMoId","currentUrl","routerState","snapshot","RegExp","test","match","getId","getDeviceProtocol","updateDeviceProtocol","createDeviceProtocol","quickInfo","InventoryService","Router","AlertService","OpcuaDeviceProtocolObjectMapping","elementRef","injector","_super","tslib_1.__extends","ElementRef","Injector","Directive","UpgradeComponent","OpcuaDeviceProtocolMapping","_this","onAction","isPathFocused","isBrowsePathUniq","dataReporting","isTreeOpen","isNew","resetModel","moId","getMappings","getParentAttr","isDetailOpen","initialFormSetup","ngOnInit","customAction","bodyTemplate","type","endpoint","mapping","browsePath","name","subscriptionType","cloneDeep","_model","isEmpty","stringfyBrowsePath","nodeDisplayName","referencedRootNodeId","referencedNode","children","expanded","absolutePaths","get","mapHeadersObjectToList","unset","showAddressSpaceTree","referencedServerId","ngAfterViewInit","keys","map","item","path","updateBrowsePath","relativePath","displayName","browsePathModel","control","markAsDirty","updateDisplayname","updateBrowsePathInput","parse","save","subFormRef","hasCustomAction","reducedHeaders","reduce","bodyTemplateAsString","obj","action","cancel","onDelete","isFormValid","variableForm","valid","objectMappingForm","$componentScope","mappingForm","$valid","isActive","setTreeFromRefNode","ViewChild","static","viewProviders","provide","ControlContainer","useExisting","NgModelGroup","OpcuaDeviceProtocolDetailComponent","changeDetectorRef","opcuaService","initialModel","fieldbusType","description","unit","fieldbusVersion","mappings","overriddenSubscriptions","applyConstraints","browsePathMatchesRegex","matchesNodeIds","serverObjectHasFragment","matchesServerIds","enabled","isLoaded","model","ngAfterContentChecked","detectChanges","getMapping","getEmptyMappingObject","getOverriddenSubscriptionsByPath","find","getStructuredResource","resource","_b","updateViableMapping","trackByIndex","index","addVariable","updateVariable","mappingObject","findIndex","splice","removeVariable","actionHandler","actionObject","extractOverridSubscriptionType","_mapping","variableMapping","forEach","element","prepareRequestJson","requestJson","pick","navigate","success","gettext","danger","canSave","deviceTypeForm","instanceList","filter","form","ChangeDetectorRef","ViewChildren","OpcuaDeviceProtocolDataReportingComponent","onSubscriptionChange","subscription","subscriptionParameters","samplingRate","deadbandType","deadbandValue","ranges","queueSize","dataChangeTrigger","discardOldest","cyclicReadParameters","rate","types","filters","triggers","discard","requireCyclic","requireSubscription","parseReadingInterval","$event","toInteger","updateModel","setTimeout","set","OpcuaDeviceProtocolMappingCustomAction","getHeaderPair","addHeader","updateCustomAction","removeCustomAction","placeholder","deviceId","replace","bodyTemplateMessage","text","bodyTemplateInvalidMessage","OpcuaDeviceProtocolObjectMappingStatus","OpcuaAddressSpaceComponent","selectednode","loading","searchInProgress","focusStatus","filterLabel","ngOnDestroy","searchNodes","clearNodeListAndCheckSearchString","isSearch","currentNode","nodeList","resultLabel","clearSearch","selectNode","toggleCurrentNode","isNodeSet","backHandler","OpcuaAgentGuard","canActivate","contextData","OpcuaMicroserviceGuard","app","microserviceName","checkApp","isApplicationAvailable","AppStateService","OpcuaServerConfigComponent","fileName","targetConnectionState","minIntervalNumber","connectionStatusLabel","canceled","removed","saved","NONE","SIGN","SIGN_ENC","securityPolicies","sign","sign_enc","ANONYM","USER_PASSWORD","KEY_BASED","initialKeystore","lastModified","slice","keystore","authSwitch","_server","config","keystoreFilename","updateConnectionStatusLabel","securityModes","authenticationModes","setCurrentAuthenticationMode","setCurrentSecurityMode","ngOnChanges","remove","keystoreBinaryId","response","uploadFile","droppedFiles","console","warn","setPolicy","securityMode","setServerConnection","updateAuthentication","resetUserAuthentication","resetKeyBasedAuthentication","restoreUserData","restoreKeyBasedData","c8y_Connection","userName","userPassword","userIdentityMode","keystorePass","certificatePass","getServerConfig","cfg","el","currentSecMode","foundInSignEncrypt","authenticationMode","DropAreaComponent","OpcuaServerListComponent","serverList","present","presentConfig","active","OpcuaServerGuard","OpcuaServersComponent","translateService","context","serverObjectList","initialServerObject","serverUrl","rescanCron","timeout","autoReconnect","statusCheckInterval","padlock","padlockMsg","NEW_SERVER_ID","paramIndex","decorator","_c","setQuickInfo","localServerObjectExist","addServer","onPresent","onSaved","reloadTabs","refreshTabs","onCanceled","removeServerObjectListById","onRemoved","mo","log","ex_1","svr","updateServerObjectListById","updatedServer","ex_2","idx","instant","TranslateService","ContextRouteComponent","Optional","tslib_1.__param","OpcuaDeviceProtocolDescription","autoScan","setAutoScanOption","NgForm","DynamicDataSource","treeControl","dataChange","isExpanded","dataNodes","connect","collectionViewer","expansionModel","onChange","subscribe","change","added","handleTreeControl","merge","viewChange","pipe","toggleNode","reverse","addressSpaceNode","expand","currentlyLoadingChildren","parentNode","refreshNestedTree","catch","treeData","triggerResize","window","dispatchEvent","Event","OpcuaAddressSpaceTreeComponent","focusEmitter","selectedNode","dataSource","getChildren","hasChild","_nodeData","_moId","nodeNavDataSubscription","openNode","subscriptionRef","focused","isFocusedNode","closed","unsubscribe","setupTree","clonedAncestors","clone","shift","setChildNodes","toggleFocusedNode","nodes","ids","toggledNode","rootNode","nestedTreeControl","NestedTreeControl","getRelativePath","unshift","browseName","OpcuaAutoApplySettingsComponent","opcuaServers","constraints","placeholderSelectServerIds","list","pageSize","withTotalPages","itemId","serverIdsSelected","items","onChangeNodeId","event","checked","showRootNodes","add","trackByFn","OpcuaDeviceProtocolBrowsePathValidation","validate","isValidJson","invalidBrowsePathNotation","isBrowsePathUnique","browsePathNotUnique","toArray","str","isEqual","OpcuaDeviceProtocolBrowsePathValidation_1","providers","NG_VALIDATORS","forwardRef","multi","routes","ViewContext","Device","component","icon","deviceProtocolRoutes","OpcuaProtocolModule","NgModule","declarations","imports","CoreModule","FormsModule","ReactiveFormsModule","DropAreaModule","ButtonsModule","CdkTreeModule","RouterModule","forRoot","useHash","TooltipModule","PopoverModule","DeviceStatusModule","BrowserAnimationsModule","CollapseModule","BsDropdownModule","entryComponents","HOOK_ONCE_ROUTE","useValue","ɵ0","opcuaAddressSpaceTreeComponent","downgradeComponent","inputs","outputs","NAME","ng1Modules","angular\n    .module","directive","registerNgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions } from '@c8y/client';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressSpaceService {\n  private nodeNavigationData$: BehaviorSubject<NodeNavigationData>;\n  private client: FetchClient;\n  private microserviceUrl: string;\n  private header: any;\n\n  constructor(fetchClient: FetchClient) {\n    this.client = fetchClient;\n    this.microserviceUrl = '/service/opcua-mgmt-service/address-space';\n    this.header = { 'Content-Type': 'application/json' };\n    this.nodeNavigationData$ = new BehaviorSubject<NodeNavigationData>({\n      node: undefined,\n      selectedAncestorIds: []\n    });\n  }\n\n  resetTreeToRootNode() {\n    this.triggerNodeToOpen({ node: undefined, selectedAncestorIds: [] });\n  }\n\n  triggerNodeToOpen(nodeNavigationData: NodeNavigationData) {\n    this.nodeNavigationData$.next(nodeNavigationData);\n  }\n\n  getNodeNavData$(): Observable<NodeNavigationData> {\n    return this.nodeNavigationData$.asObservable();\n  }\n\n  getNode(serverId: string, nodeId?: string) {\n    if (serverId && serverId.length > 0) {\n      if (nodeId && nodeId.length > 0) {\n        return this.getNodeById(serverId, nodeId);\n      }\n      return this.getRootNode(serverId);\n    }\n  }\n\n  getRootNode(serverId: string) {\n    if (serverId && serverId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${serverId}`, options);\n    }\n  }\n\n  getNodeById(serverId: string, nodeId: string) {\n    if (serverId && nodeId && serverId.length > 0 && nodeId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      const param = encodeURIComponent(nodeId);\n      return this.client.fetch(`${this.microserviceUrl}/${serverId}?nodeId=${param}`, options);\n    }\n  }\n\n  getChildrenOf(node: AddressSpaceNode, serverId: string) {\n    if (serverId && node.nodeId && serverId.length > 0 && node.nodeId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      const param = encodeURIComponent(node.nodeId);\n      return this.client.fetch(\n        `${this.microserviceUrl}/${serverId}/children?nodeId=${param}`,\n        options\n      );\n    }\n  }\n\n  childrenAvailable(nodeReferences: AdressSpaceNodeReference[]): boolean {\n    if (!nodeReferences || nodeReferences.length === 0) {\n      return false;\n    }\n    return nodeReferences.some(ref => !ref.inverse && ref.hierarchical);\n  }\n\n  async getSearchedNodes(searchKey: string, serverId: string) {\n    const url = `service/opcua-mgmt-service/search/${serverId}/`;\n    const options: IFetchOptions = {\n      headers: this.header,\n      params: {\n        searchString: '*' + searchKey + '*'\n      }\n    };\n    const res = await this.client.fetch(url, options);\n    return res.json();\n  }\n\n  getIcon(nodeClassName: string) {\n    const iconList = {\n      Object: 'cube',\n      Variable: 'th-list',\n      Method: 'random',\n      View: 'window-maximize',\n      ObjectType: 'c8y-group',\n      VariableType: 'c8y-group',\n      ReferenceType: 'c8y-group',\n      DataType: 'c8y-group'\n    };\n    return iconList[nodeClassName] || 'circle';\n  }\n}\n\nexport interface AddressSpaceNode {\n  nodeId: string;\n  currentlyLoadingChildren?: boolean;\n  nodeClass?: number;\n  nodeClassName?: string;\n  browseName?: string;\n  displayName?: string;\n  description?: any;\n  references?: AdressSpaceNodeReference[];\n  ancestorNodeIds?: [string[]];\n  children: AddressSpaceNode[];\n  expanded: boolean;\n  absolutePaths: [string[]];\n  relativePath?: string[];\n  parentNode?: AddressSpaceNode;\n}\n\nexport interface AdressSpaceNodeReference {\n  referenceId: string;\n  targetId: string;\n  inverse: boolean;\n  hierarchical: boolean;\n}\n\nexport interface SearchedNode {\n  absolutePath: string[];\n  ancestorNodeIds: [string[]];\n  displayName: string;\n  nodeClassName: string;\n  nodeId: string;\n}\n\nexport interface NodeNavigationData {\n  node: AddressSpaceNode;\n  selectedAncestorIds: string[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { AddressSpaceNode, AddressSpaceService, NodeNavigationData } from './address-space.service';\nimport { omit } from 'lodash-es';\n\n@Component({\n  selector: 'opcua-address-space-detail',\n  templateUrl: './opcua-address-space-detail.component.html'\n})\nexport class OpcuaAddressSpaceDetailComponent {\n  @Input() set node(n) {\n    this._node = n;\n    if (n) {\n      this.setNodeData(n);\n    } else {\n      // remove details from current view\n      this.showDetails = false;\n    }\n  }\n  nodeDataAttr: Map<string, string>;\n  nodeDataRef: object[];\n  selected: boolean = false;\n  showDetails: boolean = false;\n\n  @Output() toggleAttrDetail: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n\n  private _node: AddressSpaceNode;\n\n  constructor(private addressSpaceService: AddressSpaceService) {}\n  setNodeData(nodeData) {\n    this.showDetails = true;\n    const { attributes, references } = nodeData;\n    this.nodeDataRef = references;\n    const omitList = [\n      'attributes',\n      'references',\n      'children',\n      'currentlyLoadingChildren',\n      'expanded',\n      'browsePath',\n      'relativePath',\n      'parentNode'\n    ];\n    this.nodeDataAttr = Object.assign({}, attributes, omit(nodeData, omitList));\n  }\n\n  toggleDetail(node) {\n    this.showDetails = !this.showDetails;\n    this.toggleAttrDetail.emit(node);\n  }\n\n  navigateTo(ancestors: string[]) {\n    const nodeNavData: NodeNavigationData = {\n      node: this._node,\n      selectedAncestorIds: ancestors\n    };\n\n    this.toggleDetail(this._node);\n    this.addressSpaceService.triggerNodeToOpen(nodeNavData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions, InventoryService, InventoryBinaryService } from '@c8y/client';\nimport { OpcuaServer } from './opcua-server.interface';\nimport { Router } from '@angular/router';\nimport { AlertService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class OpcuaService {\n  private binaryService: InventoryBinaryService;\n  private microserviceUrl: string;\n  private deviceTypeProtocolUrl: string;\n  private header: any;\n\n  constructor(\n    private client: FetchClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private alertService: AlertService\n    ) {\n    this.microserviceUrl = '/service/opcua-mgmt-service/server';\n    this.deviceTypeProtocolUrl = '/service/opcua-mgmt-service/deviceTypes';\n    this.header = { 'Content-Type': 'application/json' };\n    this.binaryService = inventoryService.binary;\n  }\n\n  getServers(id: string) {\n    if (id && id.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${id}`, options);\n    }\n  }\n\n  createServer(data: OpcuaServer) {\n    if (this.doesGatewayIdExist(data)) {\n      this.cleanUpPayload(data);\n      const options: IFetchOptions = {\n        method: 'POST',\n        headers: this.header,\n        body: JSON.stringify(data)\n      };\n      return this.client.fetch(`${this.microserviceUrl}`, options);\n    }\n  }\n\n  async updateServer(server: OpcuaServer) {\n    if (this.doesGatewayIdExist(server) && this.doesIdExist(server)) {\n      this.cleanUpPayload(server);\n      const options: IFetchOptions = {\n        method: 'POST',\n        headers: this.header,\n        body: JSON.stringify(server)\n      };\n      const res = await this.client.fetch(`${this.microserviceUrl}`, options);\n      let data;\n      try {\n        data = await res.json();\n      } catch (e) {\n        // nothing\n      }\n\n      if (res.status !== 200) {\n        this.alertService.addServerFailure({ data, res });\n      } else {\n        return data;\n      }\n    }\n  }\n\n  removeServer(data: OpcuaServer) {\n    if (this.doesGatewayIdExist(data) && this.doesIdExist(data)) {\n      const options: IFetchOptions = {\n        method: 'DELETE'\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${data.gatewayId}/${data.id}`, options);\n    }\n  }\n\n  getKeystore(binaryId: string) {\n    if (binaryId && binaryId.length > 0) {\n      return this.inventoryService.detail(binaryId);\n    }\n    return null;\n  }\n\n  uploadKeystore(file: File) {\n    if (file && file.size > 0) {\n      return this.binaryService.create(file);\n    }\n    return Promise.reject('Invalid file');\n  }\n\n  async updateKeystore(id: string, file: File) {\n    if (id && id.length > 0 && file && file.size > 0) {\n      const { res } = await this.removeKeystore(id);\n      if (res && res.status === 204) {\n        return this.uploadKeystore(file);\n      }\n    }\n    return Promise.reject('Invalid file');\n  }\n\n  removeKeystore(id: string) {\n    if (id && id.length > 0) {\n      return this.binaryService.delete(id);\n    }\n  }\n\n  getMoId() {\n    const currentUrl: string = this.router.routerState.snapshot.url;\n    const isDevice: boolean = new RegExp(/device\\/\\d+/).test(currentUrl);\n    if (isDevice) {\n      return currentUrl.match(/\\d+/)[0];\n    }\n    return '';\n  }\n\n  getId() {\n    const currentUrl: string = this.router.routerState.snapshot.url;\n    const isDeviceprotocol: boolean = new RegExp(/deviceprotocols/).test(currentUrl);\n    if (isDeviceprotocol && RegExp(/\\d+$/).test(currentUrl)) {\n      return currentUrl.match(/\\d+$/)[0];\n    }\n  }\n\n  async getDeviceProtocol(id: string) {\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.header,\n      };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}/${id}`, options);\n\n  }\n\n  async updateDeviceProtocol(data) {\n    const options: IFetchOptions = {\n      method: 'PUT',\n      headers: this.header,\n      body: JSON.stringify(data)\n    };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}/${data.id}`, options);\n\n  }\n\n  async createDeviceProtocol(data) {\n    const options: IFetchOptions = {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(data)\n    };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}`, options);\n  }\n\n  private doesGatewayIdExist(data: OpcuaServer) {\n    return data && data.gatewayId && data.gatewayId.length > 0;\n  }\n\n  private doesIdExist(data: OpcuaServer) {\n    return data && data.id && data.id.length > 0 && data.id !== 'new';\n  }\n\n  private cleanUpPayload(data: OpcuaServer) {\n    if (data) {\n      if (data.id && data.id === 'new') { delete data.id; }\n      if (data.quickInfo) { delete data.quickInfo; }\n    }\n  }\n}\n","import { Directive, ElementRef, Injector, ViewChild, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-object-mapping'\n})\nexport class OpcuaDeviceProtocolObjectMapping extends UpgradeComponent {\n  @Input() mapping: any;\n  @Input() customActions: any;\n  @Input() autoObserveParams: any;\n  @Input() hideAutoObserve: any;\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yObjectMapping', elementRef, injector);\n  }\n}\n","import { Component, OnInit, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm, ControlContainer, FormControl, NgModelGroup } from '@angular/forms';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isEmpty, assign, unset, get, reject, find, cloneDeep } from 'lodash';\nimport { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';\nimport { AddressSpaceService } from './address-space.service';\n\n@Component({\n  selector: 'opcua-device-protocol-mapping',\n  templateUrl: './opcua-device-protocol-mapping.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolMapping implements OnInit {\n  @ViewChild(OpcuaDeviceProtocolObjectMapping, { static: false }) objectMappingForm: any;\n  @ViewChild('variableForm', { static: false }) subFormRef: any;\n  @ViewChild('browsePathModel', { static: false }) browsePathModel: any;\n\n  @Input('resource') _model;\n  @Input() index;\n  @Input() getParentAttr;\n  @Input() referencedServerId;\n  @Input() referencedRootNodeId;\n  @Output() onAction: EventEmitter<any> = new EventEmitter<any>();\n\n  mapping;\n\n  isDetailOpen;\n  customAction;\n  referencedNode;\n  isPathFocused = false;\n  groupName: string;\n  browsePath: string;\n  nodeDisplayName: string;\n  isBrowsePathUniq = true;\n  dataReporting = 'default';\n  isTreeOpen = false;\n  isNew = false;\n  resetModel = false;\n  private moId: string = '';\n  constructor(\n    private alertService: AlertService,\n    private addressSpaceService: AddressSpaceService\n  ) {}\n\n  toggleDetail() {\n    this.isDetailOpen = !this.isDetailOpen;\n    if (this.resetModel) {\n      this.initialFormSetup();\n    }\n  }\n\n  getMappings = () => this.getParentAttr('mappings');\n\n  ngOnInit() {\n    this.initialFormSetup();\n  }\n\n  initialFormSetup() {\n    const mapping = {\n      id: '',\n      browsePath: [],\n      name: '',\n      subscriptionType: {\n        type: 'None'\n      }\n    };\n\n    const customAction = {\n      headers: [{ key: 'Authorization', value: '' }, { key: 'Content-Type', value: '' }],\n      bodyTemplate: '',\n      type: 'HttpPost',\n      endpoint: ''\n    };\n\n    this.mapping = assign({}, mapping, cloneDeep(this._model));\n    if (isEmpty(this.mapping.browsePath)) {\n      this.isNew = true;\n      this.isDetailOpen = true;\n    } else {\n      this.browsePath = this.stringfyBrowsePath(this.mapping.browsePath);\n      this.nodeDisplayName = this.mapping.name;\n    }\n\n    if (this.referencedRootNodeId) {\n      this.referencedNode = { nodeId: this.referencedRootNodeId };\n      this.addressSpaceService.triggerNodeToOpen({\n        node: {\n          nodeId: this.referencedRootNodeId,\n          children: [],\n          expanded: false,\n          absolutePaths: [[]]\n        },\n        selectedAncestorIds: []\n      });\n    } else {\n      this.referencedNode = { nodeId: '' };\n    }\n\n    if (get(this.mapping, 'customAction')) {\n      this.customAction = assign(customAction, get(this.mapping, 'customAction'));\n      this.customAction.headers = this.mapHeadersObjectToList(get(this.customAction, 'headers'));\n    } else {\n      this.customAction = assign({}, customAction);\n    }\n\n    unset(this.mapping, 'customAction');\n    if (get(this._model, 'subscriptionType')) {\n      this.dataReporting = 'custom';\n    } else {\n      this.dataReporting = 'default';\n    }\n    this.resetModel = false;\n  }\n\n  showAddressSpaceTree() {\n    return !isEmpty(this.referencedServerId);\n  }\n\n  ngAfterViewInit() {\n    if (\n      get(this.mapping, 'subscriptionType') &&\n      get(this.mapping, 'subscriptionType.type') !== 'None'\n    ) {\n      this.dataReporting = 'custom';\n    }\n  }\n\n  mapHeadersObjectToList(headers) {\n    if (Object.keys(headers).length > 0) {\n      return Object.keys(headers).map(item => {\n        return { key: item, value: headers[item] };\n      });\n    }\n  }\n\n  stringfyBrowsePath(path) {\n    return JSON.stringify(path);\n  }\n\n  updateBrowsePath(node) {\n    this.mapping.browsePath = node.relativePath;\n    this.nodeDisplayName = node.displayName;\n    this.mapping.name = this.nodeDisplayName;\n    this.browsePath = this.stringfyBrowsePath(this.mapping.browsePath);\n    this.browsePathModel.control.markAsDirty();\n  }\n\n  updateDisplayname() {\n    this.mapping.name = this.nodeDisplayName;\n  }\n\n  updateBrowsePathInput() {\n    if (this.browsePath) {\n      try {\n        this.mapping.browsePath = JSON.parse(this.browsePath);\n      } catch (error) {\n        return;\n      }\n    }\n  }\n\n  save() {\n    if (this.dataReporting === 'default') {\n      unset(this.mapping, 'subscriptionType');\n    }\n\n    const { customAction } = this.subFormRef.value;\n    if (customAction.hasCustomAction) {\n      const reducedHeaders = this.customAction.headers.reduce((result, item) => {\n        result[item.key] = item.value;\n        return result;\n      }, {});\n\n      if (customAction.bodyTemplate) {\n        const bodyTemplateAsString = customAction.bodyTemplate as string;\n\n        // parsing the string back into object and then stringify it back\n        // will remove all whitespaces, linebreaks etc.\n        const obj = JSON.parse(bodyTemplateAsString);\n        const result = JSON.stringify(obj);\n\n        this.customAction.bodyTemplate = result;\n      }\n\n      this.customAction = assign(this.customAction, { headers: reducedHeaders });\n      this.mapping = assign(this.mapping, { customAction: this.customAction });\n    }\n\n    this.onAction.emit({ action: 'save', data: assign({}, this.mapping) });\n    this.isDetailOpen = false;\n  }\n\n  cancel() {\n    this.isDetailOpen = false;\n    this.resetModel = true;\n    if (this.mapping.id === 'new') {\n      this.onAction.emit({ action: 'delete', data: assign({}, this.mapping) });\n    }\n  }\n\n  onDelete() {\n    this.onAction.emit({ action: 'delete', data: this.mapping });\n  }\n\n  isFormValid(variableForm) {\n    return variableForm.valid && this.objectMappingForm.$componentScope.mappingForm.$valid;\n  }\n\n  isActive() {\n    return this.isDetailOpen;\n  }\n\n  setTreeFromRefNode() {\n    if (this.referencedRootNodeId) {\n      this.addressSpaceService.triggerNodeToOpen({\n        node: {\n          nodeId: this.referencedRootNodeId,\n          children: [],\n          expanded: false,\n          absolutePaths: [[]]\n        },\n        selectedAncestorIds: []\n      });\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChildren,\n  QueryList,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  OnChanges,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OpcuaService } from './opcuaService';\nimport { NgForm } from '@angular/forms';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { OpcuaDeviceType } from './opcua-protocol-device-type.interface';\nimport { find, assign, omit, findIndex, pick, unset, get } from 'lodash';\nimport { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';\n\n@Component({\n  selector: 'opcua-device-protocol-detail',\n  templateUrl: './opcua-device-protocol-detail.html'\n})\nexport class OpcuaDeviceProtocolDetailComponent implements OnInit {\n  @ViewChildren(OpcuaDeviceProtocolMapping) instanceList: QueryList<OpcuaDeviceProtocolMapping>;\n\n  initialModel: OpcuaDeviceType = {\n    id: '',\n    fieldbusType: 'opcuaV2',\n    description: '',\n    unit: '',\n    fieldbusVersion: 4,\n    name: '',\n    referencedServerId: '',\n    referencedRootNodeId: '',\n    subscriptionType: {\n      type: 'None'\n    },\n    mappings: [],\n    overriddenSubscriptions: [],\n    applyConstraints: {\n      browsePathMatchesRegex: '',\n      matchesNodeIds: [],\n      serverObjectHasFragment: '',\n      matchesServerIds: []\n    },\n    enabled: ''\n  };\n\n  model: any;\n  server: any;\n  selectedNode: any;\n  isLoaded = true;\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private opcuaService: OpcuaService,\n    private alertService: AlertService,\n    private router: Router\n  ) {}\n\n  ngAfterContentChecked() {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  getParentAttr = key => get(this.model, key);\n\n  getMapping() {\n    return this.model.mappings;\n  }\n\n  getEmptyMappingObject() {\n    return {\n      id: 'new',\n      browsePath: []\n    };\n  }\n\n  getOverriddenSubscriptionsByPath(browsePath) {\n    return find(this.model.overriddenSubscriptions, { browsePath });\n  }\n\n  getStructuredResource(resource) {\n    const overriddenSubscriptions = this.getOverriddenSubscriptionsByPath(resource.browsePath);\n    let result = assign({}, resource);\n    if (overriddenSubscriptions) {\n      result = assign({}, resource, { subscriptionType: overriddenSubscriptions.subscriptionType });\n    }\n    return result;\n  }\n\n  async ngOnInit() {\n    const id = this.opcuaService.getId();\n    if (id) {\n      const res = await this.opcuaService.getDeviceProtocol(id);\n      if (res && res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n        this.isLoaded = false;\n      } else {\n        const data = await res.json();\n        if (data && data.applyConstraints === null) {\n          delete data.applyConstraints;\n        }\n        if (data && data.subscriptionType === null) {\n          delete data.subscriptionType;\n        }\n        this.model = assign(this.initialModel, data);\n        if (!this.model.mappings) {\n          this.model.mappings = [];\n        }\n        this.model = assign(this.initialModel, this.updateViableMapping(data));\n        this.isLoaded = false;\n      }\n    }\n  }\n\n  updateViableMapping(model) {\n    const { mappings } = model;\n    let result = [];\n    if (mappings) {\n      result = mappings.map((item, i) => {\n        return assign(item, { id: i });\n      });\n    }\n    return assign(model, { mappings: result });\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  addVariable() {\n    this.model.mappings.push(this.getEmptyMappingObject());\n  }\n\n  updateVariable(mappingObject) {\n    const { mappings } = this.model;\n    const index = findIndex(mappings, { id: mappingObject.id });\n    mappings.splice(index, 1);\n    if (mappingObject.id === 'new') {\n      mappingObject.id = mappings.length;\n    }\n    mappings.push(mappingObject);\n  }\n\n  removeVariable(mappingObject) {\n    const { mappings } = this.model;\n    const index = findIndex(mappings, { id: mappingObject.id });\n    mappings.splice(index, 1);\n  }\n\n  actionHandler(actionObject) {\n    switch (actionObject.action) {\n      case 'save':\n        this.updateVariable(actionObject.data);\n        break;\n      case 'delete':\n        this.removeVariable(actionObject.data);\n        break;\n    }\n  }\n\n  extractOverridSubscriptionType(_mapping) {\n    const overriddenSubscriptions = [];\n    const variableMapping = [];\n    _mapping.forEach(element => {\n      if (element.id !== 'new') {\n        if (element.subscriptionType) {\n          overriddenSubscriptions.push(\n            assign(\n              { browsePath: element.browsePath },\n              { subscriptionType: element.subscriptionType }\n            )\n          );\n        }\n        variableMapping.push(omit(element, ['subscriptionType']));\n      }\n    });\n    return [variableMapping, overriddenSubscriptions];\n  }\n\n  prepareRequestJson(_model) {\n    let requestJson = {};\n    const [mappings, overriddenSubscriptions] = this.extractOverridSubscriptionType(\n      _model.mappings\n    );\n    requestJson = assign(requestJson, pick(_model, Object.keys(this.initialModel)), {\n      mappings,\n      overriddenSubscriptions\n    });\n    return requestJson;\n  }\n\n  async save() {\n    try {\n      const res = await this.opcuaService.updateDeviceProtocol(this.prepareRequestJson(this.model));\n\n      if (res && res.status === 200) {\n        this.router.navigate(['deviceprotocols']);\n        this.alertService.success(gettext('Device protocol saved.'));\n      } else {\n        this.alertService.addServerFailure({ res });\n      }\n    } catch (ex) {\n      this.alertService.danger(gettext('Failed to save. Try again.'));\n    }\n  }\n\n  canSave(deviceTypeForm) {\n    if (this.instanceList) {\n      const activeInstances = this.instanceList.filter(item => item.isActive());\n\n      if (activeInstances.length > 0) {\n        return true;\n      }\n    }\n    return !deviceTypeForm.form.valid;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { set, unset, toInteger } from 'lodash';\nimport { gettext } from '@c8y/ngx-components';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\n\n@Component({\n  selector: 'opcua-device-protocol-data-reporting',\n  templateUrl: './opcua-device-protocol-data-reporting.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolDataReportingComponent {\n  @Input() set model(_model) {\n    if (_model.subscriptionType) {\n      this.subscription = _model.subscriptionType;\n      if (this.subscription.type === 'CyclicRead') {\n        this.cyclicReadParameters = _model.subscriptionType.cyclicReadParameters;\n        this.requireCyclic = true;\n        this.requireSubscription = false;\n      }\n\n      if (this.subscription.type === 'Subscription') {\n        this.subscriptionParameters = _model.subscriptionType.subscriptionParameters;\n        this.requireCyclic = false;\n        this.requireSubscription = true;\n      }\n\n      if (this.subscription.type === 'None') {\n        this.requireCyclic = false;\n        this.requireSubscription = false;\n      }\n    }\n    this._model = _model;\n  }\n  @Input() groupName;\n\n  _model: object;\n  @Output() onSubscriptionChange: EventEmitter<any> = new EventEmitter<any>();\n\n  subscription = {\n    type: 'None'\n  };\n  subscriptionParameters = {\n    samplingRate: undefined,\n    deadbandType: 'None',\n    deadbandValue: undefined,\n    ranges: '',\n    queueSize: undefined,\n    dataChangeTrigger: 'Status',\n    discardOldest: true\n  };\n\n  cyclicReadParameters = {\n    rate: undefined\n  };\n\n  types: any[] = [\n    { value: 'None', label: gettext('None') },\n    { value: 'CyclicRead', label: gettext('Cyclic read') },\n    { value: 'Subscription', label: gettext('Subscription') }\n  ];\n\n  filters: any[] = [\n    { value: 'None', label: gettext('None') },\n    { value: 'absolute', label: gettext('Absolute') },\n    { value: 'percent', label: gettext('Percent') }\n  ];\n\n  triggers: any[] = [\n    { value: 'Status', label: gettext('Status') },\n    { value: 'StatusValue', label: gettext('Status/Value') },\n    { value: 'StatusValueTimestamp', label: gettext('Status/Value/Timestamp') }\n  ];\n\n  discard: any[] = [\n    { value: true, label: gettext('oldest`data`') },\n    { value: false, label: gettext('newest`data`') }\n  ];\n\n  requireCyclic: boolean = false;\n  requireSubscription: boolean = false;\n\n  parseReadingInterval = $event => toInteger($event.target.value);\n\n  updateModel() {\n    setTimeout(() => {\n      unset(this.subscription, 'subscriptionParameters');\n      unset(this.subscription, 'cyclicReadParameters');\n      if (this.subscription.type === 'CyclicRead') {\n        this.requireCyclic = true;\n        this.requireSubscription = false;\n        set(this.subscription, 'cyclicReadParameters', this.cyclicReadParameters);\n      } else if (this.subscription.type === 'Subscription') {\n        this.requireCyclic = false;\n        this.requireSubscription = true;\n        set(this.subscription, 'subscriptionParameters', this.subscriptionParameters);\n      } else if (this.subscription.type === 'None') {\n        this.requireCyclic = false;\n        this.requireSubscription = false;\n      }\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgModelGroup, ControlContainer } from '@angular/forms';\nimport { get } from 'lodash-es';\n\n@Component({\n  selector: 'opcua-device-protocol-mapping-customaction',\n  templateUrl: './opcua-device-protocol-mapping-customaction.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolMappingCustomAction implements OnInit {\n  _model: any;\n  @Input() customAction;\n\n  hasCustomAction = false;\n  bodyTemplateInvalidMessage: string;\n\n  getHeaderPair() {\n    return { key: '', value: '' };\n  }\n\n  get headers() {\n    return this.customAction.headers;\n  }\n\n  addHeader() {\n    const { headers } = this.customAction;\n    headers.push(this.getHeaderPair());\n  }\n\n  updateCustomAction() {\n    this.hasCustomAction = !this.hasCustomAction;\n  }\n\n  removeCustomAction(index) {\n    const { headers } = this.customAction;\n\n    headers.splice(index, 1);\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  ngOnInit() {\n    if (get(this.customAction, 'endpoint')) {\n      this.hasCustomAction = true;\n    }\n  }\n\n  placeholder() {\n    const exampleBody = {\n      value: '${value}',\n      serverId: '${serverId}',\n      nodeId: '${nodeId}',\n      deviceId: '${deviceId}'\n    };\n    const pretty = JSON.stringify(exampleBody, undefined, 2);\n    return pretty.replace(/\"\\$\\{value\\}\\\"/, '${value}');\n  }\n\n  bodyTemplateMessage(text) {\n    this.bodyTemplateInvalidMessage = text;\n  }\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-object-mapping-status-icons'\n})\nexport class OpcuaDeviceProtocolObjectMappingStatus extends UpgradeComponent {\n  @Input() mapping: any;\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yObjectMappingStatusIcons', elementRef, injector);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { AddressSpaceService, AddressSpaceNode } from './address-space.service';\nimport { gettext } from '@c8y/ngx-components';\nimport { DynamicDataSource } from './dynamic-data-source';\nimport { OpcuaService } from './opcuaService';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'opcua-address-space',\n  templateUrl: './opcua-address-space.component.html'\n})\nexport class OpcuaAddressSpaceComponent implements OnInit, OnDestroy {\n  currentNode: AddressSpaceNode;\n  selectednode: boolean = false;\n  searchKey: string;\n  isSearch: boolean;\n  loading: boolean = false;\n  searchInProgress: boolean = false;\n  filterLabel: string;\n  dataSource: DynamicDataSource;\n  nodeList;\n\n  @Output() focusStatus: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  private moId: string = '';\n  constructor(\n    private addressSpaceService: AddressSpaceService,\n    private opcuaService: OpcuaService\n  ) {}\n\n  async ngOnInit() {\n    this.filterLabel = gettext('Filter…');\n    this.moId = this.opcuaService.getMoId();\n  }\n\n  ngOnDestroy() {\n    // The BehaviourSubject will store the last array of ancestorNodes from the previous search\n    // this would cause the component while subscribing in the init-phase to the subject to travers\n    // to the last searched node again. From user perspective it does not make sense, because the user\n    // left the Address space (tab) and should loose the context and just request a new search or\n    // browse the tree manually.\n    this.addressSpaceService.resetTreeToRootNode();\n  }\n\n  async searchNodes() {\n    this.searchInProgress = true;\n    this.clearNodeListAndCheckSearchString();\n    if (this.isSearch) {\n      this.currentNode = undefined;\n      this.nodeList = await this.addressSpaceService.getSearchedNodes(this.searchKey, this.moId);\n      this.searchInProgress = false;\n      this.nodeList.resultLabel = gettext('Results found');\n    }\n  }\n\n  clearNodeListAndCheckSearchString() {\n    this.isSearch = this.searchKey !== undefined && this.searchKey !== '' ? true : false;\n    if (!this.isSearch) {\n      this.searchInProgress = false;\n    }\n  }\n\n  clearSearch() {\n    this.isSearch = false;\n    this.searchKey = '';\n    this.currentNode = undefined;\n  }\n\n  getIcon(nodeClassName: string) {\n    return this.addressSpaceService.getIcon(nodeClassName);\n  }\n\n  async selectNode(node) {\n    if (node && node.nodeId && node.nodeId.length > 0) {\n      const res = await this.addressSpaceService.getNodeById(this.moId, node.nodeId);\n      this.toggleCurrentNode((await res.json()) as AddressSpaceNode);\n    }\n  }\n\n  toggleCurrentNode(node: AddressSpaceNode) {\n    this.currentNode = this.isNodeSet(node) ? undefined : node;\n  }\n\n  backHandler(node) {\n    this.isSearch = false;\n    this.focusStatus.emit(node);\n    this.toggleCurrentNode(node);\n  }\n\n  isNodeSet(node: AddressSpaceNode) {\n    if (this.currentNode !== undefined && this.currentNode.nodeId === node.nodeId) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class OpcuaAgentGuard implements CanActivate {\n  type = 'c8y_OPCUA_Device_Agent';\n  canActivate( { data } ) {\n    const { contextData } = data;\n    return contextData && contextData.type === this.type;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AppStateService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class OpcuaMicroserviceGuard implements CanActivate {\n  microserviceName: string = 'opcua-mgmt-service';\n  checkApp: Promise<boolean>;\n\n  constructor(\n    private app: AppStateService\n  ) {}\n\n  canActivate() {\n    if (!this.checkApp) {\n      this.checkApp = this.app.isApplicationAvailable(this.microserviceName);\n    }\n    return this.checkApp;\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, ViewChild } from '@angular/core';\nimport { gettext, DroppedFile, DropAreaComponent } from '@c8y/ngx-components';\nimport { OpcuaServer, OpcuaServerConfig } from './opcua-server.interface';\nimport { cloneDeep } from 'lodash-es';\nimport { OpcuaService } from './opcuaService';\n\n@Component({\n  selector: 'opcua-server-config',\n  templateUrl: './opcua-server-config.component.html'\n})\nexport class OpcuaServerConfigComponent implements OnInit, OnChanges {\n  currentSecMode: string;\n  fileName: string = '';\n  targetConnectionState: string = '1';\n  minIntervalNumber: number = 1;\n  connectionStatusLabel: string = '';\n  @ViewChild('opcuaConfigForm', {static: false}) opcuaConfigForm: any;\n  @ViewChild(DropAreaComponent, {static: false}) dropArea: DropAreaComponent;\n  @Output() canceled = new EventEmitter<OpcuaServer>();\n  @Output() removed = new EventEmitter<OpcuaServer>();\n  @Output() saved = new EventEmitter<OpcuaServer>();\n  @Input() set server(server: OpcuaServer) {\n    if (server) {\n      this._server = cloneDeep(server);\n      this.model = cloneDeep(server);\n      this.fileName = this.model.config.keystoreFilename;\n\n      if (server.id && server.id === 'new') {\n        // enabled connection state\n        this.targetConnectionState = '1';\n        this.model.config.targetConnectionState = 'enabled';\n      } else {\n        this.targetConnectionState = (this.model.config.targetConnectionState === 'enabled') ? '1' : '0';\n      }\n      this.updateConnectionStatusLabel(this._server);\n    }\n  }\n\n  get server(): OpcuaServer {\n    return this._server;\n  }\n\n  model: OpcuaServer;\n  securityModes: string[];\n  authenticationMode: any;\n  authenticationModes: any[];\n  NONE: string = 'NONE';\n  SIGN: string = 'SIGN';\n  SIGN_ENC: string = 'SIGN_ENCRYPT';\n  securityPolicies: any = {\n    sign: [\n      `BASIC256_${this.SIGN}`,\n      `BASIC128RSA15_${this.SIGN}`,\n      `BASIC256SHA256_${this.SIGN}`\n    ],\n    sign_enc: [\n      `BASIC256_${this.SIGN_ENC}`,\n      `BASIC128RSA15_${this.SIGN_ENC}`,\n      `BASIC256SHA256_${this.SIGN_ENC}`,\n    ]\n  };\n\n  private ANONYM = {\n    id: 1,\n    value: gettext('Anonymous')\n  };\n  private USER_PASSWORD = {\n    id: 2,\n    value: gettext('Username/Password')\n  };\n  private KEY_BASED = {\n    id: 3,\n    value: gettext('Key-based Authentication')\n  };\n  private _server: OpcuaServer;\n  private opcuaService: OpcuaService;\n  private initialKeystore: File = {\n    lastModified: 0,\n    name: '',\n    type: '',\n    slice: null,\n    size: 0\n  };\n  private keystore: File = this.initialKeystore;\n  private authSwitch: boolean = false;\n\n  constructor(opcuaService: OpcuaService) {\n    this.opcuaService = opcuaService;\n  }\n\n  async ngOnInit() {\n    this.authSwitch = false;\n\n    this.securityModes = [\n      this.NONE,\n      this.SIGN,\n      this.SIGN_ENC\n    ];\n\n    this.authenticationModes = [\n      this.ANONYM,\n      this.USER_PASSWORD,\n      this.KEY_BASED\n    ];\n\n    this.setCurrentAuthenticationMode();\n    this.setCurrentSecurityMode();\n  }\n\n  ngOnChanges() {\n    this.setCurrentSecurityMode();\n    this.setCurrentAuthenticationMode();\n  }\n\n  cancel() {\n    this.canceled.emit(this.model);\n  }\n\n  async remove() {\n    await this.removeKeystore(this.model);\n    this.removed.emit(this.model);\n  }\n\n  async save() {\n    if (this.keystore && this.keystore.size > 0 && this.keystore.name && this.keystore.name.length > 0) {\n      const response = await this.uploadKeystore(this.model.config.keystoreBinaryId);\n\n      if (response && response.data && response.data.id) {\n        this.model.config.keystoreBinaryId = response.data.id;\n      }\n\n      // if the keystore was uploaded successful we can remove\n      // the local keystore. This will prevent another request to binary api\n      // when the user will edit other inputs in the form and hit save again.\n      this.keystore = this.initialKeystore;\n    }\n\n    // will remove keystore (binary) when the user switched\n    // authentication settings from key-based to anonymous or username/password\n    if (this.authSwitch) {\n      this.removeKeystore(this.server);\n    }\n\n    this.saved.emit(this.model);\n  }\n\n  uploadFile(droppedFiles: DroppedFile[]) {\n    if (droppedFiles.length === 1) {\n      this.keystore = droppedFiles[0].file;\n      this.fileName = this.keystore.name;\n    } else {\n      // dropped more than one file\n      console.warn('Tried to import... Import aborted.');\n    }\n  }\n\n  setPolicy(data: any) {\n    if (data === this.NONE) {\n      this.model.config.securityMode = this.NONE;\n    } else if (data === this.SIGN) {\n      this.model.config.securityMode = this.securityPolicies.sign[0];\n    } else if (data === this.SIGN_ENC) {\n      this.model.config.securityMode = this.securityPolicies.sign_enc[0];\n    }\n  }\n\n  setServerConnection(data: string) {\n    this.model.config.targetConnectionState = (data !== '0') ? 'enabled' : 'disabled';\n  }\n\n  updateAuthentication(data: any) {\n    if (data && data.id) {\n      switch (data.id) {\n        // Anonymous\n        case 1:\n          this.resetUserAuthentication();\n          this.resetKeyBasedAuthentication();\n          break;\n\n        // User/Password\n        case 2:\n          this.resetKeyBasedAuthentication();\n          this.restoreUserData();\n          break;\n\n        // Key-based\n        case 3:\n          this.resetUserAuthentication();\n          this.restoreKeyBasedData();\n          break;\n\n        default:\n          console.warn('Invalid authentication id', data.id);\n          break;\n      }\n    }\n  }\n\n  updateConnectionStatusLabel(server) {\n    const connected = server.c8y_Connection && server.c8y_Connection.status === 'CONNECTED';\n    const label = connected ? gettext('Connected') : gettext('Disconnected');\n    this.connectionStatusLabel = label;\n  }\n\n  private uploadKeystore(binaryId?: string) {\n    if (!binaryId) {\n      return this.opcuaService.uploadKeystore(this.keystore);\n    } else if (binaryId && binaryId.length > 0) {\n      // update existing binary\n      return this.opcuaService.updateKeystore(binaryId, this.keystore);\n    }\n  }\n\n  private removeKeystore(server: OpcuaServer) {\n    if (server &&\n      server.config &&\n      server.config.keystoreBinaryId &&\n      server.config.keystoreBinaryId.length > 0) {\n      this.authSwitch = false;\n      return this.opcuaService.removeKeystore(this.server.config.keystoreBinaryId);\n    }\n  }\n\n  private resetUserAuthentication() {\n    this.model.config.userName = null;\n    this.model.config.userPassword = null;\n    this.model.config.userIdentityMode = 'none';\n  }\n\n  private resetKeyBasedAuthentication() {\n    this.authSwitch = true;\n\n    this.model.config.keystorePass = null;\n    this.model.config.certificatePass = null;\n    this.model.config.keystoreBinaryId = '';\n    this.model.config.keystoreFilename = '';\n    this.model.config.userIdentityMode = 'none';\n  }\n\n  private restoreUserData() {\n    this.model.config.userName = this._server.config.userName;\n    this.model.config.userPassword = this._server.config.userPassword;\n    this.model.config.userIdentityMode = 'userAndPassword';\n  }\n\n  private restoreKeyBasedData() {\n    this.authSwitch = false;\n    this.model.config.keystorePass = this._server.config.keystorePass;\n    this.model.config.certificatePass = this._server.config.certificatePass;\n    this.model.config.keystoreBinaryId = this._server.config.keystoreBinaryId;\n    this.model.config.keystoreFilename = this._server.config.keystoreFilename;\n    this.model.config.userIdentityMode = 'certificate';\n  }\n\n  private getServerConfig(): OpcuaServerConfig {\n    let cfg: OpcuaServerConfig = {\n      securityMode: this.NONE,\n      userIdentityMode: 'none'\n    };\n    if (this.server && this.server.config) {\n      cfg = this.server.config;\n    }\n    return cfg;\n  }\n\n  private setCurrentSecurityMode() {\n    const { securityMode } = this.getServerConfig();\n    if (securityMode) {\n      const foundInSign = this.securityPolicies.sign.find((el) => el === securityMode);\n      if (foundInSign) {\n        this.currentSecMode = this.SIGN;\n      } else {\n        const foundInSignEncrypt = this.securityPolicies.sign_enc.find((el) => el === securityMode);\n        foundInSignEncrypt ? this.currentSecMode = this.SIGN_ENC : this.currentSecMode = this.NONE;\n      }\n    }\n  }\n\n  private setCurrentAuthenticationMode() {\n    const {\n      userIdentityMode\n    } = this.getServerConfig();\n\n    switch (userIdentityMode) {\n      case 'certificate':\n        this.authenticationMode = this.KEY_BASED;\n        break;\n\n      case 'userAndPassword':\n        this.authenticationMode = this.USER_PASSWORD;\n        break;\n\n      case 'Anonymous':\n        this.authenticationMode = this.ANONYM;\n        break;\n\n      case 'UserName':\n        this.authenticationMode = this.USER_PASSWORD;\n        break;\n\n      case 'Certificate':\n        this.authenticationMode = this.KEY_BASED;\n        break;\n\n      default:\n        this.authenticationMode = this.ANONYM;\n        break;\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { OpcuaServer } from './opcua-server.interface';\n\n@Component({\n  selector: 'opcua-server-list',\n  templateUrl: './opcua-server-list.component.html'\n})\nexport class OpcuaServerListComponent {\n  @Input() serverList: OpcuaServer[] = [];\n  @Output() present = new EventEmitter<OpcuaServer>();\n\n  presentConfig(server: OpcuaServer) {\n    server.active = true;\n    this.present.emit(server);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class OpcuaServerGuard implements CanActivate {\n  type = 'c8y_OpcuaServer';\n  canActivate( { data } ) {\n    const { contextData } = data;\n    return contextData && contextData.type === this.type;\n  }\n}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { AlertService, ContextRouteComponent, gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { OpcuaServer } from './opcua-server.interface';\nimport { OpcuaService } from './opcuaService';\n\n@Component({\n  selector: 'opcua-servers',\n  templateUrl: './opcua-servers.component.html'\n})\nexport class OpcuaServersComponent implements OnInit {\n  serverObjectList: OpcuaServer[] = [];\n  initialServerObject: OpcuaServer = {\n    id: '',\n    name: 'New Server',\n    config: {\n      securityMode: 'NONE',\n      keystorePass: null,\n      keystoreBinaryId: null,\n      keystoreFilename: '',\n      certificatePass: null,\n      serverUrl: '',\n      userName: '',\n      userPassword: '',\n      rescanCron: null,\n      timeout: null,\n      autoReconnect: true,\n      statusCheckInterval: null,\n      valid: true\n    },\n    quickInfo: {\n      padlock: 'unlock',\n      padlockMsg: ''\n    },\n    active: true\n  };\n  server: OpcuaServer;\n  active: boolean = false;\n  private moId: string;\n  private NEW_SERVER_ID: string;\n\n  constructor(\n    private opcuaService: OpcuaService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    @Optional() private context: ContextRouteComponent\n  ) {\n    this.moId = '';\n    this.NEW_SERVER_ID = 'new';\n    this.initialServerObject.id = this.NEW_SERVER_ID;\n  }\n\n  async ngOnInit() {\n    this.moId = this.opcuaService.getMoId();\n    if (this.moId && this.moId.length > 0) {\n      const res = await this.opcuaService.getServers(this.moId);\n      if (res && res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n      } else {\n        this.serverObjectList = (await res.json()) as OpcuaServer[];\n        this.serverObjectList.map(server => this.setQuickInfo(server));\n      }\n    }\n  }\n\n  localServerObjectExist() {\n    return !!this.serverObjectList.find(server => server.id === this.NEW_SERVER_ID);\n  }\n\n  addServer() {\n    const server: OpcuaServer = this.initialServerObject;\n    this.serverObjectList.push(server);\n    this.onPresent(server);\n  }\n\n  onSaved(server: OpcuaServer) {\n    if (server && server.id) {\n      server.gatewayId = this.moId;\n      if (server.id === this.NEW_SERVER_ID) {\n        this.createServer(server);\n      } else {\n        this.updateServer(server);\n      }\n    }\n  }\n\n  reloadTabs() {\n    if (this.context) {\n      this.context.refreshTabs();\n    }\n  }\n\n  onCanceled(server: OpcuaServer) {\n    if (server && server.id && server.id === this.NEW_SERVER_ID) {\n      this.removeServerObjectListById(server.id);\n    } else {\n      // update activity status for UI\n      this.serverObjectList.forEach(item => {\n        if (item.id === server.id) {\n          item.active = false;\n        }\n      });\n      // When server id is not 'new' we just close the details\n      delete this.server;\n    }\n  }\n\n  onRemoved(server: OpcuaServer) {\n    if (server.id === this.NEW_SERVER_ID) {\n      this.onCanceled(server);\n    } else {\n      this.removeServer(server);\n    }\n  }\n\n  async getKeystore(binaryId: string) {\n    const { data } = await this.opcuaService.getKeystore(binaryId);\n    return data;\n  }\n\n  async onPresent(server: OpcuaServer) {\n    if (\n      server &&\n      server.id !== this.NEW_SERVER_ID &&\n      server.config &&\n      server.config.keystoreBinaryId\n    ) {\n      try {\n        const mo = await this.getKeystore(server.config.keystoreBinaryId);\n        server.config.keystoreFilename = mo.name;\n      } catch (ex) {\n        this.server = Object.assign({}, server);\n        console.log('Could not get existing keystore:', ex);\n      }\n    }\n    if (this.serverObjectList.length > 0) {\n      this.serverObjectList.forEach(item => {\n        item.active = false;\n\n        if (item.id === server.id) {\n          item.active = true;\n          server.active = item.active;\n        }\n      });\n      this.setQuickInfo(server);\n      this.server = Object.assign({}, server);\n    }\n  }\n\n  private async createServer(server: OpcuaServer) {\n    const response = await this.opcuaService.createServer(server);\n    const svr = (await response.json()) as OpcuaServer;\n    this.updateServerObjectListById(this.NEW_SERVER_ID, svr);\n    this.reloadTabs();\n  }\n\n  private async updateServer(server: OpcuaServer) {\n    const updatedServer = (await this.opcuaService.updateServer(server)) as OpcuaServer;\n    if (updatedServer) {\n      this.updateServerObjectListById(updatedServer.id, updatedServer);\n    }\n  }\n\n  private async removeServer(server: OpcuaServer) {\n    try {\n      await this.opcuaService.removeServer(server);\n      this.removeServerObjectListById(server.id);\n      this.reloadTabs();\n    } catch (ex) {\n      console.log('Could not remove OPC UA server:', ex);\n    }\n  }\n\n  private removeServerObjectListById(id: string) {\n    this.serverObjectList.forEach((item, index) => {\n      if (item.id === id) {\n        this.serverObjectList.splice(index, 1);\n        delete this.server;\n      }\n    });\n  }\n\n  private updateServerObjectListById(id: string, server: OpcuaServer) {\n    const idx = this.serverObjectList.findIndex(item => item.id === id);\n    if (idx > -1) {\n      this.setQuickInfo(server);\n      this.serverObjectList[idx] = server;\n    }\n    delete this.server;\n  }\n\n  private setQuickInfo(server: OpcuaServer) {\n    server.quickInfo = {\n      padlock: 'unlock',\n      padlockMsg: ''\n    };\n\n    if (server && server.config) {\n      if (server.config.securityMode) {\n        server.quickInfo.padlock = server.config.securityMode !== 'NONE' ? 'lock' : 'unlock';\n        server.quickInfo.padlockMsg = this.translateService.instant(\n          gettext('The security policy is set to {{param}}.'),\n          { param: server.config.securityMode }\n        );\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport {NgForm, ControlContainer} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'opcua-device-protocol-description',\r\n  templateUrl: './opcua-device-protocol-description.html',\r\n  viewProviders: [{provide: ControlContainer, useExisting: NgForm}]\r\n})\r\n\r\nexport class OpcuaDeviceProtocolDescription {\r\n  _model: any;\r\n  autoScan: string;\r\n  @Input() set model(_model) {\r\n    this.moId = _model.referencedServerId;\r\n    this._model = _model;\r\n    this.autoScan = _model.enabled ? '1' : '0';\r\n  }\r\n\r\n  private moId: string = '';\r\n\r\n  setAutoScanOption(data: string) {\r\n    this._model.enabled = data !== '0' ? true : false;\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable, merge, Subscription } from 'rxjs';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { AddressSpaceService, AddressSpaceNode } from './address-space.service';\nimport { map } from 'rxjs/operators';\n\nexport class DynamicDataSource {\n  dataChange = new BehaviorSubject<AddressSpaceNode[]>([]);\n\n  get data(): AddressSpaceNode[] {\n    return this.dataChange.value;\n  }\n  set data(value: AddressSpaceNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(\n    public treeControl: NestedTreeControl<AddressSpaceNode>,\n    private addressSpaceService: AddressSpaceService,\n    private serverId: string\n  ) {\n    this.treeControl.isExpanded = (node: AddressSpaceNode) => node.expanded;\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<AddressSpaceNode[]> {\n    this.treeControl.expansionModel.onChange.subscribe(\n      (change: SelectionChange<AddressSpaceNode>) => {\n        if (change.added || change.removed) {\n          this.handleTreeControl(change);\n        }\n      }\n    );\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<AddressSpaceNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed\n        .slice()\n        .reverse()\n        .forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  async toggleNode(addressSpaceNode: AddressSpaceNode, expand: boolean) {\n    if (!addressSpaceNode.children || addressSpaceNode.children.length === 0) {\n      addressSpaceNode.currentlyLoadingChildren = true;\n\n      const res = await this.addressSpaceService.getChildrenOf(addressSpaceNode, this.serverId);\n      const children = (await res.json()) as AddressSpaceNode[];\n\n      addressSpaceNode.children = children || [];\n      addressSpaceNode.children = addressSpaceNode.children.map((node: AddressSpaceNode) => {\n        node.parentNode = addressSpaceNode;\n        return node;\n      });\n      addressSpaceNode.currentlyLoadingChildren = false;\n\n      this.treeControl.expand(addressSpaceNode);\n    }\n\n    addressSpaceNode.expanded = expand && addressSpaceNode.children.length > 0;\n    this.refreshNestedTree(this.data);\n\n    return Promise.resolve(addressSpaceNode);\n  }\n  catch() {\n    // do nothing\n  }\n\n  private refreshNestedTree(treeData: AddressSpaceNode[]) {\n    // necessary to rerender tree, otherwise new nodes will not\n    // appear, but they are added to the list.\n    this.data = [];\n    this.dataChange.next(treeData);\n    this.triggerResize(); // to resize the modal window when creating a new device protocol\n  }\n\n  private triggerResize() {\n    setTimeout(() => {\n      try {\n        window.dispatchEvent(new Event('resize'));\n      } catch (error) {\n        // do nothing\n      }\n    }, 200);\n  }\n}\n","import { Component, Input, Output, OnInit, EventEmitter, OnDestroy } from '@angular/core';\nimport { AddressSpaceNode, AddressSpaceService, NodeNavigationData } from './address-space.service';\nimport { OpcuaService } from './opcuaService';\nimport { AlertService } from '@c8y/ngx-components';\nimport { DynamicDataSource } from './dynamic-data-source';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { clone, cloneDeep } from 'lodash';\nimport { Subscription } from 'rxjs';\nimport { relative } from 'path';\n\n@Component({\n  selector: 'opcua-address-space-tree',\n  templateUrl: './opcua-address-space-tree.component.html'\n})\nexport class OpcuaAddressSpaceTreeComponent implements OnInit, OnDestroy {\n  @Input()\n  set moId(id: string) {\n    this._moId = id || undefined;\n  }\n\n  @Input() node;\n  @Input() focusEmitter: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  @Output() selectedNode: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  nestedTreeControl: NestedTreeControl<AddressSpaceNode>;\n  dataSource: DynamicDataSource = null;\n  focused: AddressSpaceNode;\n  loading: boolean = false;\n  subscriptionRef: Subscription;\n  nodeNavDataSubscription: Subscription;\n  private _moId: string;\n  constructor(\n    private addressSpaceService: AddressSpaceService,\n    private opcuaService: OpcuaService,\n    private alertService: AlertService\n  ) {}\n\n  getChildren = (node: AddressSpaceNode) => (node.expanded ? node.children : []);\n  hasChild = (_: number, _nodeData: AddressSpaceNode) =>\n    this.addressSpaceService.childrenAvailable(_nodeData.references)\n\n  ngOnInit() {\n    this.nodeNavDataSubscription = this.addressSpaceService\n      .getNodeNavData$()\n      .subscribe(nodeNavData => this.openNode(nodeNavData));\n    this.subscriptionRef = this.focusEmitter.subscribe(node => {\n      this.focused = this.isFocusedNode(node) ? undefined : node;\n    });\n  }\n\n  ngOnDestroy() {\n    // clean up the address-space-tree\n    this.addressSpaceService.resetTreeToRootNode();\n\n    if (this.nodeNavDataSubscription && !this.nodeNavDataSubscription.closed) {\n      this.nodeNavDataSubscription.unsubscribe();\n    }\n\n    if (this.subscriptionRef && !this.subscriptionRef.closed) {\n      this.subscriptionRef.unsubscribe();\n    }\n  }\n\n  async openNode(nodeNavData: NodeNavigationData) {\n    const { node, selectedAncestorIds } = nodeNavData;\n    let nodeId;\n\n    // We just set the nodeId when the selectedAncestorIds variable an empty array.\n    // If selectedAncestorIds contain any id we assume that the tree should be travsersed beginning\n    // from the root node.\n    if (node && node.nodeId && selectedAncestorIds && selectedAncestorIds.length === 0) {\n      nodeId = node.nodeId;\n    }\n    // Always recreate the tree when routing to a specific nested node,\n    // because previous modifications to the tree-structure could cause errors\n    // while traversing with 'old' tree-data\n    // -----------------\n    // setupTree is able to handle nodeId = undefined\n    await this.setupTree(nodeId);\n\n    if (!selectedAncestorIds || selectedAncestorIds.length === 0) {\n      return;\n    }\n\n    if (nodeNavData && this.dataSource) {\n      const clonedAncestors = clone(selectedAncestorIds);\n      clonedAncestors.shift();\n\n      const n = await this.dataSource.toggleNode(this.dataSource.data[0], true);\n      this.setChildNodes(n.children, clonedAncestors);\n\n      this.toggleFocusedNode(node);\n    }\n  }\n\n  setChildNodes(nodes: AddressSpaceNode[], ids: string[]) {\n    if (nodes) {\n      ids.forEach(async id => {\n        const match = nodes.find(n => n.nodeId === id);\n        if (match && ids.length > 0) {\n          const idx = ids.findIndex(value => value === id);\n          if (idx >= 0) {\n            ids.splice(idx, 1);\n          }\n          const toggledNode = await this.dataSource.toggleNode(match, true);\n          this.setChildNodes(toggledNode.children, ids);\n        }\n      });\n    }\n  }\n\n  async setupTree(nodeId?: string) {\n    this.loading = true;\n\n    if (!this._moId || this._moId.length === 0) {\n      this._moId = this.opcuaService.getMoId();\n    }\n\n    // addressSpaceService.getNode returns either the root node of the server (moId)\n    // or if nodeId !== undefined the node with given nodeId\n    const res = await this.addressSpaceService.getNode(this._moId, nodeId);\n    if (res) {\n      if (res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n        this.dataSource = undefined;\n      } else {\n        const rootNode = (await res.json()) as AddressSpaceNode;\n        this.nestedTreeControl = new NestedTreeControl<AddressSpaceNode>(this.getChildren);\n        this.dataSource = new DynamicDataSource(\n          this.nestedTreeControl,\n          this.addressSpaceService,\n          this._moId\n        );\n        this.dataSource.data = [rootNode];\n      }\n      this.loading = false;\n    } else {\n      this.loading = false;\n    }\n  }\n\n  getMoId() {\n    if (!this._moId || this._moId.length === 0) {\n      return this.opcuaService.getMoId();\n    }\n    return this._moId;\n  }\n\n  getIcon(nodeClassName) {\n    return this.addressSpaceService.getIcon(nodeClassName);\n  }\n\n  toggleFocusedNode(node) {\n    const relativePath = [];\n    this.getRelativePath(node, relativePath);\n    node.relativePath = relativePath;\n\n    this.selectedNode.emit(node);\n    this.focused = this.isFocusedNode(node) ? undefined : node;\n  }\n\n  isFocusedNode(node: AddressSpaceNode) {\n    if (this.focused) {\n      return node.nodeId === this.focused.nodeId;\n    }\n    return false;\n  }\n\n  private getRelativePath(node: AddressSpaceNode, relativePath: string[]) {\n    if (node.parentNode) {\n      relativePath.unshift(node.browseName);\n      this.getRelativePath(node.parentNode, relativePath);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AutoApplyConstraints } from './opcua-protocol-device-type.interface';\nimport { IManagedObject, InventoryService } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'opcua-auto-apply',\n  templateUrl: './opcua-auto-apply-settings.component.html'\n})\nexport class OpcuaAutoApplySettingsComponent implements OnInit {\n  opcuaServers: IManagedObject[] = [];\n  selected: IManagedObject[] = [];\n  constraints: AutoApplyConstraints = {\n    browsePathMatchesRegex: '',\n    matchesNodeIds: [],\n    serverObjectHasFragment: '',\n    matchesServerIds: []\n  };\n  placeholderSelectServerIds: string = gettext('Select server IDs from list');\n  showServerIds: boolean;\n  showBrowsePath: boolean;\n  showServerFragment: boolean;\n  showRootNodes: boolean;\n  private _model: IManagedObject;\n\n  constructor(private inventoryService: InventoryService) {}\n\n  async ngOnInit() {\n    const { data } = await this.inventoryService.list({\n      pageSize: 1000,\n      withTotalPages: true,\n      type: 'c8y_OpcuaServer'\n    });\n\n    this.opcuaServers = data;\n    this.selected = [];\n\n    const { matchesServerIds } = this.constraints;\n\n    data.forEach(server => {\n      if (\n        matchesServerIds &&\n        matchesServerIds.length > 0 &&\n        matchesServerIds.find(itemId => itemId === server.id)\n      ) {\n        this.selected.push(server);\n      }\n    });\n  }\n\n  @Input() set model(model) {\n    if (model && model.applyConstraints) {\n      this.constraints = model.applyConstraints as AutoApplyConstraints;\n    }\n    this._model = model;\n  }\n\n  get model() {\n    return this._model;\n  }\n\n  serverIdsSelected(items: IManagedObject[]) {\n    if (this.constraints) {\n      this.constraints.matchesServerIds = items.map((item: IManagedObject) => item.id);\n    }\n    this.selected = items;\n  }\n\n  onChangeNodeId(event) {\n    if (event.target.checked) {\n      this.showRootNodes = true;\n      this.add();\n    } else {\n      this.showRootNodes = false;\n      this.constraints.matchesNodeIds = [];\n    }\n  }\n\n  add() {\n    this.constraints.matchesNodeIds.push('');\n  }\n\n  remove(index) {\n    this.constraints.matchesNodeIds.splice(index, 1);\n  }\n\n  trackByFn(index: any, item: any) {\n    return index;\n  }\n}\n","import { Directive, forwardRef, ElementRef, Input, HostListener } from '@angular/core';\nimport { NgForm, Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\nimport { some, isEqual, isEmpty } from 'lodash-es';\n\n@Directive({\n  selector: '[c8yBrowsePathValidator][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => OpcuaDeviceProtocolBrowsePathValidation),\n      multi: true\n    }\n  ]\n})\nexport class OpcuaDeviceProtocolBrowsePathValidation implements Validator {\n  @Input() getMappings: () => [];\n  @Input() model: any;\n\n  constructor(private el: ElementRef) {}\n\n  validate(control: AbstractControl): { [key: string]: any } {\n    if (control.value) {\n      if (!this.isValidJson(control.value)) {\n        return { invalidBrowsePathNotation: true };\n      } else {\n        if (this.isBrowsePathUnique(control.value)) {\n          return { browsePathNotUnique: true };\n        }\n      }\n    }\n    return null;\n  }\n\n  isValidJson(value) {\n    try {\n      const browsePath = JSON.parse(value);\n      return !isEmpty(browsePath);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  toArray(str) {\n    return JSON.parse(str);\n  }\n\n  isBrowsePathUnique(value): boolean {\n    const mappings = this.getMappings();\n    const found = some(mappings, item => {\n      if (isEqual(item.browsePath, this.toArray(value)) && item.id !== this.model.id) {\n        return item;\n      }\n    });\n    return found ? true : false;\n  }\n}\n","import { CdkTreeModule } from '@angular/cdk/tree';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  DeviceStatusModule,\n  DropAreaModule,\n  FormsModule,\n  gettext,\n  HOOK_ONCE_ROUTE,\n  Route,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { AddressSpaceService } from './address-space.service';\nimport { OpcuaAddressSpaceDetailComponent } from './opcua-address-space-detail.component';\nimport { OpcuaDeviceProtocolDetailComponent } from './opcua-device-protocol-detail.component';\nimport { OpcuaDeviceProtocolDataReportingComponent } from './opcua-device-protocol-data-reporting.component';\nimport { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';\nimport { OpcuaDeviceProtocolMappingCustomAction } from './opcua-device-protocol-mapping-customaction.component';\nimport { OpcuaDeviceProtocolObjectMappingStatus } from './opcua-device-protocol-object-mapping-status-icon.component';\nimport { OpcuaAddressSpaceComponent } from './opcua-address-space.component';\nimport { OpcuaAgentGuard } from './opcua-agent.guard';\nimport { OpcuaMicroserviceGuard } from './opcua-microservice.guard';\nimport { OpcuaServerConfigComponent } from './opcua-server-config.component';\nimport { OpcuaServerListComponent } from './opcua-server-list.component';\nimport { OpcuaServerGuard } from './opcua-server.guard';\nimport { OpcuaServersComponent } from './opcua-servers.component';\nimport { OpcuaService } from './opcuaService';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { OpcuaDeviceProtocolDescription } from './opcua-device-protocol-description.component';\nimport { OpcuaAddressSpaceTreeComponent } from './opcua-address-space-tree.component';\nimport { OpcuaAutoApplySettingsComponent } from './opcua-auto-apply-settings.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OpcuaDeviceProtocolBrowsePathValidation } from './opcua-device-protocol-browse-path-validation.directive';\n\nconst routes: Route[] = [\n  {\n    context: ViewContext.Device,\n    path: 'opcua-servers',\n    component: OpcuaServersComponent,\n    label: gettext('OPC UA server'),\n    icon: 'server',\n    canActivate: [OpcuaAgentGuard, OpcuaMicroserviceGuard]\n  },\n  {\n    context: ViewContext.Device,\n    path: 'address-space',\n    component: OpcuaAddressSpaceComponent,\n    label: gettext('Address space'),\n    icon: 'sitemap',\n    canActivate: [OpcuaServerGuard, OpcuaMicroserviceGuard]\n  }\n];\n\nconst deviceProtocolRoutes: Route[] = [\n  {\n    path: 'deviceprotocols/opcuaV2/:id',\n    component: OpcuaDeviceProtocolDetailComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    OpcuaServersComponent,\n    OpcuaServerListComponent,\n    OpcuaServerConfigComponent,\n    OpcuaAddressSpaceComponent,\n    OpcuaAddressSpaceTreeComponent,\n    OpcuaAddressSpaceDetailComponent,\n    OpcuaDeviceProtocolDescription,\n    OpcuaDeviceProtocolDetailComponent,\n    OpcuaDeviceProtocolDataReportingComponent,\n    OpcuaDeviceProtocolMapping,\n    OpcuaDeviceProtocolObjectMapping,\n    OpcuaDeviceProtocolMappingCustomAction,\n    OpcuaDeviceProtocolObjectMappingStatus,\n    OpcuaAutoApplySettingsComponent,\n    OpcuaDeviceProtocolBrowsePathValidation\n  ],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DropAreaModule,\n    ButtonsModule,\n    CdkTreeModule,\n    RouterModule.forRoot(deviceProtocolRoutes, { useHash: true }),\n    TooltipModule.forRoot(),\n    PopoverModule.forRoot(),\n    DeviceStatusModule,\n    BrowserAnimationsModule,\n    CollapseModule.forRoot(),\n    BsDropdownModule.forRoot()\n  ],\n  entryComponents: [\n    OpcuaAddressSpaceTreeComponent,\n    OpcuaAddressSpaceComponent,\n    OpcuaServersComponent\n  ],\n  providers: [\n    OpcuaAgentGuard,\n    OpcuaServerGuard,\n    OpcuaMicroserviceGuard,\n    OpcuaService,\n    AddressSpaceService,\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: routes,\n      multi: true\n    }\n  ]\n})\nexport class OpcuaProtocolModule {}\n","import { downgradeComponent } from '@angular/upgrade/static';\nimport { OpcuaAddressSpaceTreeComponent } from '../opcua-address-space-tree.component';\nexport const opcuaAddressSpaceTreeComponent = downgradeComponent({\n  component: OpcuaAddressSpaceTreeComponent,\n  inputs: ['moId'],\n  outputs: ['selectedNode']\n});\n","import * as angular from 'angular';\nimport { registerNgModule } from '@c8y/ng1-modules/core/bootstrap';\nimport { opcuaAddressSpaceTreeComponent } from './downgraded.components';\n\nconst NAME = 'c8y.upgrade.opcua';\n\nconst angularJsModule = angular\n  .module(NAME, [])\n  .directive('c8yOpcuaAddressSpaceTree', opcuaAddressSpaceTreeComponent);\n\nexport const ng1Modules = [NAME];\n\nregisterNgModule(ng1Modules);\n"]}