!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@c8y/ngx-components"),require("@angular/router"),require("@c8y/client"),require("@ngx-translate/core"),require("ngx-bootstrap/tooltip"),require("file-saver/FileSaver"),require("ngx-bootstrap/modal"),require("lodash-es")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/device-configuration",["exports","@angular/core","@c8y/ngx-components","@angular/router","@c8y/client","@ngx-translate/core","ngx-bootstrap/tooltip","file-saver/FileSaver","ngx-bootstrap/modal","lodash-es"],e):e(((t=t||self).c8y=t.c8y||{},t.c8y["ngx-components"]=t.c8y["ngx-components"]||{},t.c8y["ngx-components"]["device-configuration"]={}),t.ng.core,t.c8y["ngx-components"],t.ng.router,t.client,t.core$1,t.tooltip,t.FileSaver,t.modal,t.lodashEs)}(this,(function(t,e,n,i,o,r,a,s,c,p){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function l(t,e,n,i){var o,r=arguments.length,a=r<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,i);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(r<3?o(a):r>3?o(e,n,a):o(e,n))||a);return r>3&&a&&Object.defineProperty(e,n,a),a}function u(t,e,n,i){return new(n||(n=Promise))((function(o,r){function a(t){try{c(i.next(t))}catch(t){r(t)}}function s(t){try{c(i.throw(t))}catch(t){r(t)}}function c(t){t.done?o(t.value):new n((function(e){e(t.value)})).then(a,s)}c((i=i.apply(t,e||[])).next())}))}function d(t,e){var n,i,o,r,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,i=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===r[0]||2===r[0])){a=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){a.label=r[1];break}if(6===r[0]&&a.label<o[1]){a.label=o[1],o=r;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(r);break}o[2]&&a.ops.pop(),a.trys.pop();continue}r=e.call(t,a)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}}var f,v=function(){function t(t,n,i,o,r,a,s){this.eventService=t,this.eventBinaryService=n,this.operationService=i,this.alertService=o,this.inventoryService=r,this.inventoryBinaryService=a,this.translateService=s,this.dateFrom=new Date(0),this.dateTo=new Date(Date.now()+864e5),this.repositoryConfigListUpdated=new e.EventEmitter}return t.prototype.getLatestConfigurationEvent=function(t,e){return u(this,void 0,void 0,(function(){var n;return d(this,(function(i){switch(i.label){case 0:return n={source:t,type:e,dateFrom:this.dateFrom.toISOString(),dateTo:this.dateTo.toISOString(),pageSize:1},[4,this.eventService.list(n)];case 1:return[2,i.sent().data[0]]}}))}))},t.prototype.getEventConfigurationBinary=function(t){return u(this,void 0,void 0,(function(){var e,n,i;return d(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),[4,this.eventBinaryService.download(t)];case 1:return n=o.sent(),e=n.text(),[3,3];case 2:return i=o.sent(),this.alertService.addServerFailure(i),[3,3];case 3:return[2,e]}}))}))},t.prototype.createUploadConfigFileOperation=function(t,e){return u(this,void 0,void 0,(function(){var i,o,r,a,s;return d(this,(function(c){switch(c.label){case 0:o=n.gettext("Retrieve {{ configurationType }} configuration snapshot from device {{ deviceName }}"),r={deviceId:t.id,c8y_UploadConfigFile:{type:e},description:this.translateService.instant(o,{configurationType:e,deviceName:t.name})},c.label=1;case 1:return c.trys.push([1,3,,4]),[4,this.operationService.create(r)];case 2:return a=c.sent().data,i=a,[3,4];case 3:return s=c.sent(),this.alertService.addServerFailure(s),[3,4];case 4:return[2,i]}}))}))},t.prototype.getLatestConfigFileOperation=function(t,e,n){return u(this,void 0,void 0,(function(){var i;return d(this,(function(o){switch(o.label){case 0:return i={deviceId:t,fragmentType:n,dateFrom:this.dateFrom.toISOString(),dateTo:this.dateTo.toISOString(),revert:!0,pageSize:2e3},[4,this.operationService.list(i)];case 1:return[2,o.sent().data.find((function(t){return t[n].type===e}))]}}))}))},t.prototype.getSnapshotsFromRepository=function(t,e){return u(this,void 0,void 0,(function(){var n,i,o;return d(this,(function(r){switch(r.label){case 0:return i={pageSize:2e3,withTotalPages:!0},n={__filter:{__and:[{type:"c8y_ConfigurationDump"},{__or:[{configurationType:{__eq:e}},{__not:{__has:"configurationType"}}]}]},__orderby:[{configurationType:-1,name:1}]},t&&(o={__or:[{deviceType:{__eq:t}},{__not:{__has:"deviceType"}}]},n.__filter.__and.push(o)),[4,this.inventoryService.listQuery(n,i)];case 1:return[2,r.sent().data]}}))}))},t.prototype.createDownloadConfigFileOperation=function(t,e,i){return u(this,void 0,void 0,(function(){var o,r,a,s,c;return d(this,(function(p){switch(p.label){case 0:r=n.gettext("Send configuration {{ configurationType }} to device {{ deviceName }}"),a={deviceId:t.id,c8y_DownloadConfigFile:{url:i,type:e},description:this.translateService.instant(r,{configurationType:e,deviceName:t.name})},p.label=1;case 1:return p.trys.push([1,3,,4]),[4,this.operationService.create(a)];case 2:return s=p.sent().data,o=s,[3,4];case 3:return c=p.sent(),this.alertService.addServerFailure(c),[3,4];case 4:return[2,o]}}))}))},t.prototype.getConfigurationBinaryFile=function(t){return u(this,void 0,void 0,(function(){var e,n,i;return d(this,(function(o){switch(o.label){case 0:return(n=this.inventoryBinaryService.getIdFromUrl(t))?[4,this.inventoryService.detail(n)]:[3,4];case 1:return i=o.sent().data,[4,this.inventoryBinaryService.download(i)];case 2:return[4,o.sent().text()];case 3:return e=o.sent(),[3,5];case 4:e=this.fetchExternalBinary(t),o.label=5;case 5:return[2,e]}}))}))},t.prototype.saveToConfigurationRepository=function(t){return u(this,void 0,void 0,(function(){var e,n;return d(this,(function(i){switch(i.label){case 0:return e={},Object.assign(e,{name:t.name,type:"c8y_ConfigurationDump",deviceType:t.deviceType,configurationType:t.configurationType,c8y_Global:{}}),[4,this.inventoryBinaryService.create(new Blob([t.binary]),{c8y_Global:{}})];case 1:return n=i.sent(),e.url=n.data.self,[2,this.inventoryService.create(e)]}}))}))},t.prototype.updateRepositoryConfigList=function(){this.repositoryConfigListUpdated.emit()},t.prototype.fetchExternalBinary=function(t){return u(this,void 0,void 0,(function(){var e,n;return d(this,(function(i){switch(i.label){case 0:return i.trys.push([0,4,,5]),[4,fetch(t)];case 1:return 200!==(n=i.sent()).status?[3,3]:[4,n.text()];case 2:e=i.sent(),i.label=3;case 3:return[3,5];case 4:return i.sent(),[3,5];case 5:return[2,e]}}))}))},t.ctorParameters=function(){return[{type:o.EventService},{type:o.EventBinaryService},{type:o.OperationService},{type:n.AlertService},{type:o.InventoryService},{type:o.InventoryBinaryService},{type:r.TranslateService}]},t=l([e.Injectable()],t)}(),g=function(){function t(t,e,n){var i=this;this.route=t,this.deviceConfigurationService=e,this.realtime=n,this.configSnapshot={},this.deviceConfigurationService.repositoryConfigListUpdated.subscribe((function(){return u(i,void 0,void 0,(function(){var t;return d(this,(function(e){switch(e.label){case 0:return this.repositorySnapshot=void 0,t=this,[4,this.getSnapshotsFromRepository(this.device.type,this.configurationType)];case 1:return t.repositorySnapshots=e.sent(),[2]}}))}))}))}return t.prototype.ngOnInit=function(){var t=this;this.device=this.route.snapshot.parent.data.contextData,this.supportedConfigurations=this.device.c8y_SupportedConfigurations.map((function(t){return{name:t}})),this.repositorySnapshotsEmptyState={icon:"gears",title:n.gettext("No configurations available."),text:n.gettext("Add configuration to configuration repository")};var e="/eventsWithChildren/"+this.device.id;this.eventsSubscription=this.realtime.observable(e).subscribe((function(e){var n=e.data;t.updateConfigSnapshotOnEvent(n)}))},t.prototype.onConfigTypeSelected=function(t){return u(this,void 0,void 0,(function(){var e,n;return d(this,(function(i){switch(i.label){case 0:return this.configurationType=void 0,this.repositorySnapshot=void 0,this.configSnapshot={},[4,this.deviceConfigurationService.getLatestConfigurationEvent(this.device.id,t.name)];case 1:return e=i.sent(),this.updateConfigSnapshotOnEvent(e,t.name),this.configurationType=t.name,n=this,[4,this.getSnapshotsFromRepository(this.device.type,t.name)];case 2:return n.repositorySnapshots=i.sent(),[2]}}))}))},t.prototype.getSnapshotsFromRepository=function(t,e){return this.deviceConfigurationService.getSnapshotsFromRepository(t,e)},t.prototype.updateConfigSnapshotOnEvent=function(t,e){return u(this,void 0,void 0,(function(){var n,i;return d(this,(function(o){switch(o.label){case 0:return n=e||this.configurationType,t&&t.type===n?(this.configSnapshot={time:t.time,name:t.text,deviceType:this.device.deviceType,configurationType:n},i=this.configSnapshot,[4,this.deviceConfigurationService.getEventConfigurationBinary(t)]):[3,2];case 1:i.binary=o.sent(),o.label=2;case 2:return[2]}}))}))},t.prototype.onRepositoryConfigSelected=function(t){return u(this,void 0,void 0,(function(){var e;return d(this,(function(n){switch(n.label){case 0:return this.repositorySnapshot={time:t.creationTime,name:t.name,binaryUrl:t.url,deviceType:t.deviceType,configurationType:t.configurationType},t.url?(e=this.repositorySnapshot,[4,this.deviceConfigurationService.getConfigurationBinaryFile(t.url)]):[3,2];case 1:e.binary=n.sent(),n.label=2;case 2:return[2]}}))}))},t.prototype.ngOnDestroy=function(){this.eventsSubscription.unsubscribe()},t.ctorParameters=function(){return[{type:i.ActivatedRoute},{type:v},{type:o.Realtime}]},t=l([e.Component({selector:"c8y-device-configuration",template:'<div class="card card--grid card--grid--fullpage grid__col--4-8 grid__row--6-6">\n  \x3c!-- DEVICE SUPPORTED CONFIGURATIONS --\x3e\n  <div class="card--grid__inner-scroll">\n    <div class="card-header separator">\n      <h4 class="card-title" translate>Configurations</h4>\n    </div>\n    <div class="card-block">\n      <h5 class="legend form-block"><span translate>Device-supported configurations</span></h5>\n    </div>\n    <div class="p-r-16">\n      <c8y-device-configuration-list\n        [items]="supportedConfigurations"\n        [itemIcon]="\'gears\'"\n        (configSelected)="onConfigTypeSelected($event)"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  \x3c!-- CONFIGURATION PREVIEW --\x3e\n  <div class="card--grid__inner-scroll bg-gray-lighter">\n    <div class="card-header separator bg-gray-lighter hidden-xs hidden-sm">\n      <h4>&nbsp;</h4>\n    </div>\n    <div class="card-block">\n      <h5 class="legend form-block"><span translate>Preview</span></h5>\n\n      \x3c!-- EMPTY STATE --\x3e\n      <div class="c8y-empty-state text-left" *ngIf="!configurationType">\n        <h1 [c8yIcon]="\'file-text\'"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small translate>Select a configuration to preview</small>\n        </p>\n      </div>\n\n      \x3c!-- PREVIEW AVAILABLE STATE --\x3e\n      <c8y-device-configuration-preview\n        *ngIf="configurationType"\n        [device]="device"\n        [configurationType]="configurationType"\n        [configSnapshot]="configSnapshot"\n        [canSaveSnapshot]="true"\n        [operationToTrigger]="\'c8y_UploadConfigFile\'"\n        [actionButtonText]="\'Get snapshot from device\' | translate"\n        [actionButtonIcon]="\'download\'"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n\n  \x3c!-- AVAILABLE SUPPORTED CONFIGURATIONS --\x3e\n  <div class="card--grid__inner-scroll">\n    <div class="card-block">\n      <h5 class="legend form-block" translate>Available supported configurations</h5>\n    </div>\n\n    \x3c!-- EMPTY STATE --\x3e\n    <div class="c8y-empty-state text-left" *ngIf="!configurationType">\n      <h1 [c8yIcon]="\'gears\'"></h1>\n      <p>\n        <strong translate>No selection</strong><br />\n        <small translate>Select a configuration from the device-supported configuration list</small>\n      </p>\n    </div>\n    <div class="p-r-16" *ngIf="configurationType">\n      <c8y-device-configuration-list\n        [items]="repositorySnapshots"\n        [itemIcon]="\'file-text\'"\n        [emptyState]="repositorySnapshotsEmptyState"\n        [isFilterEnabled]="true"\n        (configSelected)="onRepositoryConfigSelected($event)"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  \x3c!-- CONFIGURATION PREVIEW --\x3e\n  <div class="card--grid__inner-scroll bg-gray-lighter">\n    <div class="card-block">\n      <h5 class="legend form-block" translate>Preview</h5>\n\n      \x3c!-- EMPTY STATE --\x3e\n\n      <div class="c8y-empty-state text-left" *ngIf="!repositorySnapshot">\n        <h1 [c8yIcon]="\'file-text\'"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small *ngIf="!configurationType; else noSnapshot" translate\n            >Select a configuration to preview</small\n          >\n          <ng-template #noSnapshot>\n            <small translate>Select the configuration you want to preview</small>\n          </ng-template>\n        </p>\n      </div>\n\n      \x3c!-- CONFIGURATION SELECTED STATE --\x3e\n      <c8y-device-configuration-preview\n        *ngIf="repositorySnapshot"\n        [device]="device"\n        [configurationType]="configurationType"\n        [configSnapshot]="repositorySnapshot"\n        [operationToTrigger]="\'c8y_DownloadConfigFile\'"\n        [actionButtonText]="\'Send configuration to device\' | translate"\n        [actionButtonIcon]="\'upload\'"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n</div>\n'})],t)}(),h=function(){function t(){this.configSelected=new e.EventEmitter,this.filterTerm=""}return t.prototype.showConfigurationTypePreview=function(t){this.selectedConfig=t,this.configSelected.emit(t)},t.prototype.updatePipe=function(t){this.filterTerm=t},l([e.Input()],t.prototype,"items",void 0),l([e.Input()],t.prototype,"itemIcon",void 0),l([e.Input()],t.prototype,"emptyState",void 0),l([e.Input()],t.prototype,"isFilterEnabled",void 0),l([e.Output()],t.prototype,"configSelected",void 0),t=l([e.Component({selector:"c8y-device-configuration-list",template:'<div class="left-p-md bottom-p-xs" *ngIf="isFilterEnabled">\n  <c8y-filter [icon]="\'search\'" (onSearch)="updatePipe($event)"></c8y-filter>\n</div>\n\n\x3c!-- EMPTY STATE --\x3e\n<div class="c8y-empty-state text-left" *ngIf="items?.length === 0">\n  <h1 [c8yIcon]="emptyState.icon"></h1>\n  <p>\n    <strong>{{ emptyState.title | translate }}</strong\n    ><br />\n    <small>{{ emptyState.text | translate }}</small>\n  </p>\n</div>\n\n\x3c!-- CONFIGURATIONS AVAILABLE --\x3e\n<div class="c8y-nav-stacked">\n  <div\n    class="c8y-stacked-item flex-row"\n    [class.active]="config === selectedConfig"\n    *ngFor="let config of items | configurationFilterPipe: filterTerm"\n    (click)="showConfigurationTypePreview(config)"\n  >\n    <div class="list-item-icon">\n      <i [c8yIcon]="itemIcon"></i>\n    </div>\n    <div class="list-item-body text-truncate">\n      <span>{{ config.name }}</span>\n      <span class="text-uppercase text-gray-light pull-right">{{ config.deviceType }}</span>\n    </div>\n  </div>\n</div>\n\n\x3c!-- for Carlos: config.configurationType to differentiate whether a config matches configuration type. --\x3e\n'})],t)}(),y=function(){function t(){}return t.prototype.ngOnInit=function(){this.statusIcons=n.operationStatusIcons,this.statusClasses=n.operationStatusClasses},l([e.Input()],t.prototype,"operation",void 0),t=l([e.Component({selector:"c8y-device-configuration-operation",template:'<div class="card">\n  <div class="list-group list-group-links">\n    <a class="list-group-item flex-row" href="#/device/{{ operation.deviceId }}/control">\n      <div class="list-item-icon">\n        <i\n          [c8yIcon]="statusIcons[operation.status]"\n          [ngClass]="statusClasses[operation.status]"\n          [tooltip]="operation.status | translate"\n          tooltip-placement="right"\n        ></i>\n      </div>\n      <div class="list-item-body">\n        <div class="flex-row row">\n          <span class="col-sm-8">{{ operation.description | translate }}</span>\n          <div class="col-sm-4 text-muted">\n            <i c8yIcon="calendar"></i>&nbsp;\n            <small>{{ operation.creationTime | date: \'medium\' }}</small>\n          </div>\n        </div>\n      </div>\n    </a>\n  </div>\n</div>\n'})],t)}(),m=function(){function t(){}return l([e.Input()],t.prototype,"isDisabled",void 0),l([e.Input()],t.prototype,"text",void 0),t=l([e.Component({selector:"c8y-source-code-preview",template:'<textarea [disabled]="isDisabled" class="form-control no-resize" rows="8">{{ text }}</textarea>\n'})],t)}(),S=function(){function t(){}return t.prototype.canActivate=function(t,e){var n=t.data.contextData||t.parent.data.contextData;return n&&n.c8y_SupportedConfigurations&&n.c8y_SupportedConfigurations.length>0},t}();!function(t){t.UPLOAD_CONFIG="c8y_UploadConfigFile",t.DOWNLOAD_CONFIG="c8y_DownloadConfigFile"}(f||(f={}));var b=function(){function t(t,e,n){var i=this;this.modal=t,this.alertService=e,this.deviceConfigurationService=n,this.result=new Promise((function(t,e){i._save=t,i._cancel=e}))}return t.prototype.save=function(){return u(this,void 0,void 0,(function(){var t;return d(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.deviceConfigurationService.saveToConfigurationRepository(this.configSnapshot)];case 1:return e.sent(),this.alertService.success(n.gettext("Configuration saved.")),this._save(),[3,3];case 2:return(t=e.sent()).data&&this.alertService.danger(t.data.message),[3,3];case 3:return[2]}}))}))},t.prototype.close=function(){this._cancel(),this.modal.hide()},t.ctorParameters=function(){return[{type:c.BsModalRef},{type:n.AlertService},{type:v}]},t=l([e.Component({selector:"c8y-save-config-to-configuration-repository",template:'<div class="modal-header bg-primary text-center text-white">\n  <div style="font-size: 62px;">\n    <span c8yIcon="gears"></span>\n  </div>\n  <h4 class="text-uppercase" translate>\n    Save configuration\n  </h4>\n</div>\n<div class="modal-body">\n  <form #saveConfigurationSnapshot="ngForm" class="p-t-24">\n    <c8y-form-group>\n      <label translate for="name">Name</label>\n      <input\n        id="name"\n        type="text"\n        class="form-control"\n        autocomplete="off"\n        name="name"\n        [(ngModel)]="configSnapshot.name"\n        required\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for="deviceType">Device type</label>\n      <input\n        id="deviceType"\n        class="form-control"\n        rows="6"\n        name="deviceType"\n        [(ngModel)]="configSnapshot.deviceType"\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for="configurationType">Configuration type</label>\n      <input\n        id="configurationType"\n        class="form-control"\n        rows="6"\n        name="configurationType"\n        [(ngModel)]="configSnapshot.configurationType"\n      />\n    </c8y-form-group>\n  </form>\n</div>\n<div class="modal-footer">\n  <button title="{{ \'Cancel\' | translate }}" class="btn btn-default" (click)="close()" translate>\n    Cancel\n  </button>\n\n  <button\n    title="{{ \'Add certificate\' | translate }}"\n    class="btn btn-primary"\n    (click)="save()"\n    [disabled]="saveConfigurationSnapshot.form.invalid"\n    translate\n  >\n    Save\n  </button>\n</div>\n'})],t)}(),T=function(){function t(t,e,n,i,o){this.deviceConfigurationService=t,this.realtime=e,this.bsModal=n,this.user=i,this.appState=o}return t.prototype.ngOnInit=function(){return u(this,void 0,void 0,(function(){var t,e,n=this;return d(this,(function(i){switch(i.label){case 0:return this.operationToTrigger!==f.UPLOAD_CONFIG?[3,2]:[4,this.getOperation()];case 1:t=i.sent(),this.updateOperation(t),i.label=2;case 2:return e="/operations/"+this.device.id,this.operationsSubscription=this.realtime.observable(e).subscribe((function(t){var e=t.data;n.updateOperation(e)})),[2]}}))}))},t.prototype.createDeviceOperation=function(){return u(this,void 0,void 0,(function(){var t,e;return d(this,(function(n){switch(n.label){case 0:return this.operationToTrigger!==f.DOWNLOAD_CONFIG?[3,2]:(t=this,[4,this.deviceConfigurationService.createDownloadConfigFileOperation(this.device,this.configurationType,this.configSnapshot.binaryUrl)]);case 1:t.operation=n.sent(),n.label=2;case 2:return this.operationToTrigger!==f.UPLOAD_CONFIG?[3,4]:(e=this,[4,this.deviceConfigurationService.createUploadConfigFileOperation(this.device,this.configurationType)]);case 3:e.operation=n.sent(),n.label=4;case 4:return[2]}}))}))},t.prototype.showOperation=function(){return this.operationToTrigger===f.DOWNLOAD_CONFIG?!!this.operation:this.operation&&[o.OperationStatus.PENDING,o.OperationStatus.EXECUTING,o.OperationStatus.FAILED].includes(this.operation.status)},t.prototype.showBinary=function(){return this.operationToTrigger===f.DOWNLOAD_CONFIG||!this.showOperation()},t.prototype.isCreateOperationDisabled=function(){return this.operation&&[o.OperationStatus.PENDING,o.OperationStatus.EXECUTING].includes(this.operation.status)},t.prototype.updateOperation=function(t){t&&t[this.operationToTrigger]&&t[this.operationToTrigger].type&&t[this.operationToTrigger].type===this.configurationType&&(this.operation=t)},t.prototype.getOperation=function(){return this.deviceConfigurationService.getLatestConfigFileOperation(this.device.id,this.configurationType,this.operationToTrigger)},t.prototype.download=function(){var t=new Blob([this.configSnapshot.binary]),e=this.configSnapshot.name;s.saveAs(t,e)},t.prototype.saveToRepository=function(){return u(this,void 0,void 0,(function(){var t,e;return d(this,(function(n){switch(n.label){case 0:t={configSnapshot:p.cloneDeep(this.configSnapshot)},e=this.bsModal.show(b,{class:"modal-sm",initialState:t,ignoreBackdropClick:!0}).content,n.label=1;case 1:return n.trys.push([1,3,,4]),[4,e.result];case 2:return n.sent(),this.deviceConfigurationService.updateRepositoryConfigList(),e.close(),[3,4];case 3:return n.sent(),[3,4];case 4:return[2]}}))}))},t.prototype.hasPermission=function(){return this.user.hasAnyRole(this.appState.currentUser.value,["ROLE_INVENTORY_ADMIN","ROLE_INVENTORY_CREATE"])},t.prototype.ngOnDestroy=function(){this.operationsSubscription.unsubscribe()},t.ctorParameters=function(){return[{type:v},{type:o.Realtime},{type:c.BsModalService},{type:o.UserService},{type:n.AppStateService}]},l([e.Input()],t.prototype,"device",void 0),l([e.Input()],t.prototype,"configurationType",void 0),l([e.Input()],t.prototype,"configSnapshot",void 0),l([e.Input()],t.prototype,"canSaveSnapshot",void 0),l([e.Input()],t.prototype,"actionButtonText",void 0),l([e.Input()],t.prototype,"actionButtonIcon",void 0),l([e.Input()],t.prototype,"operationToTrigger",void 0),t=l([e.Component({selector:"c8y-device-configuration-preview",template:'<div *ngIf="configSnapshot">\n  <div class="content-flex-55 p-b-16">\n    <div class="col-5 p-t-4">\n      <span class="text-label-small text-uppercase m-r-4" translate>Configuration</span>\n      <span *ngIf="configSnapshot.name; else emptyText">\n        <strong>{{ configSnapshot.name }}</strong>\n      </span>\n      <ng-template #emptyText> --- </ng-template>\n    </div>\n    <div class="col-4 p-t-4">\n      <span class="text-label-small text-uppercase m-r-4" translate>Last updated</span>\n      <small *ngIf="configSnapshot.time; else emptyDate">\n        {{ configSnapshot.time | date: \'medium\' }}\n      </small>\n      <ng-template #emptyDate> --- </ng-template>\n    </div>\n    <div class="col-3">\n      <button\n        class="btn btn-default btn-sm pull-right"\n        type="button"\n        title="{{ actionButtonText | translate }}"\n        (click)="createDeviceOperation()"\n        [disabled]="isCreateOperationDisabled()"\n      >\n        <i [c8yIcon]="actionButtonIcon"></i> {{ actionButtonText | translate }}\n      </button>\n    </div>\n  </div>\n  <div class="c8y-empty-state text-left" *ngIf="!configSnapshot.binary && showBinary()">\n    <h1 [c8yIcon]="\'file-image-o\'"></h1>\n    <p>\n      <strong translate>No preview available.</strong><br />\n      <small translate>Could not fetch the file.</small>\n    </p>\n  </div>\n  <div *ngIf="configSnapshot.binary && showBinary()">\n    <c8y-source-code-preview\n      [text]="configSnapshot.binary"\n      [isDisabled]="true"\n    ></c8y-source-code-preview>\n    <div *ngIf="canSaveSnapshot" class="top-p-md">\n      <button\n        type="button"\n        class="btn btn-primary btn-sm pull-right left-m-sm"\n        (click)="download()"\n        translate\n      >\n        Download\n      </button>\n      <button\n        *ngIf="hasPermission()"\n        type="button"\n        class="btn btn-default btn-sm pull-right"\n        (click)="saveToRepository()"\n        translate\n      >\n        Save to repository\n      </button>\n    </div>\n  </div>\n  <div *ngIf="showOperation()">\n    <c8y-device-configuration-operation\n      [operation]="operation"\n    ></c8y-device-configuration-operation>\n  </div>\n</div>\n'})],t)}(),C=function(){function t(){}return t.prototype.transform=function(t,e){var n=this;return 0===e.trim().length?t:t.filter((function(t){return n.filterContainString(t.name,e)||n.filterContainString(t.deviceType,e)}))},t.prototype.filterContainString=function(t,e){var n=e.toLowerCase().trim();return t&&t.toLowerCase().indexOf(n)>-1},t=l([e.Pipe({name:"configurationFilterPipe"})],t)}(),x=[{context:n.ViewContext.Device,path:"device-configuration",component:g,label:n.gettext("Configuration"),icon:"gears",canActivate:[S]}],I=function(){function t(){}return t=l([e.NgModule({declarations:[g,h,y,m,T,C,b],exports:[],imports:[n.CoreModule,a.TooltipModule],entryComponents:[g,b],providers:[v,S,{provide:n.HOOK_ONCE_ROUTE,useValue:x,multi:!0}]})],t)}();t.DeviceConfigurationModule=I,t.ɵ0=x,t.ɵa=g,t.ɵb=v,t.ɵc=h,t.ɵd=y,t.ɵe=m,t.ɵf=T,t.ɵg=C,t.ɵh=b,t.ɵi=S,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-device-configuration.umd.min.js.map