(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@c8y/ngx-components'), require('rxjs'), require('rxjs/operators'), require('@c8y/client'), require('ngx-bootstrap/modal'), require('lodash'), require('ngx-bootstrap/tooltip')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/repository', ['exports', '@angular/core', '@c8y/ngx-components', 'rxjs', 'rxjs/operators', '@c8y/client', 'ngx-bootstrap/modal', 'lodash', 'ngx-bootstrap/tooltip'], factory) :
    (global = global || self, factory((global.c8y = global.c8y || {}, global.c8y['ngx-components'] = global.c8y['ngx-components'] || {}, global.c8y['ngx-components'].repository = {}), global.ng.core, global.c8y['ngx-components'], global.rxjs, global.rxjs.operators, global.client, global.modal, global.lodash, global.tooltip));
}(this, (function (exports, core, ngxComponents, rxjs, operators, client, modal, lodash, tooltip) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    var _a;
    var RepositoryType;
    (function (RepositoryType) {
        RepositoryType["FIRMWARE"] = "c8y_Firmware";
        RepositoryType["SOFTWARE"] = "c8y_Software";
        RepositoryType["CONFIGURATION"] = "c8y_ConfigurationDump";
    })(RepositoryType || (RepositoryType = {}));
    var REPOSITORY_BINARY_TYPE = (_a = {},
        _a[RepositoryType.SOFTWARE] = 'c8y_SoftwareBinary',
        _a[RepositoryType.FIRMWARE] = 'c8y_FirmwareBinary',
        _a[RepositoryType.CONFIGURATION] = 'c8y_ConfigurationDumpBinary',
        _a);

    var RepositoryService = /** @class */ (function () {
        function RepositoryService(inventory, inventoryBinary) {
            this.inventory = inventory;
            this.inventoryBinary = inventoryBinary;
        }
        RepositoryService.prototype.listConfigurations = function () {
            return this.inventory.list({
                type: RepositoryType.CONFIGURATION,
                withTotalPages: true,
                pageSize: 50
            });
        };
        RepositoryService.prototype.delete = function (entity) {
            // TODO: add cascading delete (will be done by Dawid)
            return this.inventory.delete(entity);
        };
        RepositoryService.prototype.save = function (data, type, mo) {
            if (mo === void 0) { mo = {}; }
            return __awaiter(this, void 0, void 0, function () {
                var existingUrl, response;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            switch (type) {
                                case RepositoryType.CONFIGURATION: {
                                    Object.assign(mo, {
                                        type: RepositoryType.CONFIGURATION,
                                        configurationType: data.selected ? data.selected.configurationType : undefined,
                                        name: data.versionOrName,
                                        description: data.description,
                                        deviceType: data.deviceType,
                                        c8y_Global: {}
                                    });
                                    break;
                                }
                            }
                            existingUrl = mo.url;
                            if (!data.binary.url) return [3 /*break*/, 1];
                            mo.url = data.binary.url;
                            return [3 /*break*/, 3];
                        case 1:
                            if (!data.binary.file) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.inventoryBinary.create(data.binary.file, { c8y_Global: {} })];
                        case 2:
                            response = _a.sent();
                            mo.url = response.data.self;
                            _a.label = 3;
                        case 3:
                            if (mo.id) {
                                return [2 /*return*/, this.updateEntry(mo, existingUrl)];
                            }
                            return [2 /*return*/, this.createEntry(mo)];
                    }
                });
            });
        };
        RepositoryService.prototype.createEntry = function (mo) {
            return __awaiter(this, void 0, void 0, function () {
                var binaryId, newMo;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.inventoryBinary.getIdFromUrl(mo.url)];
                        case 1:
                            binaryId = _a.sent();
                            return [4 /*yield*/, this.inventory.create(mo)];
                        case 2:
                            newMo = _a.sent();
                            if (!binaryId) return [3 /*break*/, 4];
                            return [4 /*yield*/, this.inventory.childAdditionsAdd(binaryId, newMo.data)];
                        case 3:
                            _a.sent();
                            _a.label = 4;
                        case 4: return [2 /*return*/, newMo];
                    }
                });
            });
        };
        RepositoryService.prototype.updateEntry = function (mo, url) {
            return __awaiter(this, void 0, void 0, function () {
                var existingBinaryId, newBinaryId, id;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.inventoryBinary.getIdFromUrl(url)];
                        case 1:
                            existingBinaryId = _a.sent();
                            return [4 /*yield*/, this.inventoryBinary.getIdFromUrl(mo.url)];
                        case 2:
                            newBinaryId = _a.sent();
                            if (!(existingBinaryId && existingBinaryId !== newBinaryId)) return [3 /*break*/, 4];
                            id = this.inventoryBinary.getIdFromUrl(url);
                            return [4 /*yield*/, this.inventoryBinary.delete(id)];
                        case 3:
                            _a.sent();
                            _a.label = 4;
                        case 4:
                            if (!newBinaryId) return [3 /*break*/, 6];
                            return [4 /*yield*/, this.inventory.childAdditionsAdd(newBinaryId, mo)];
                        case 5:
                            _a.sent();
                            _a.label = 6;
                        case 6: return [2 /*return*/, this.inventory.update(mo)];
                    }
                });
            });
        };
        RepositoryService.ctorParameters = function () { return [
            { type: client.InventoryService },
            { type: client.InventoryBinaryService }
        ]; };
        RepositoryService = __decorate([
            core.Injectable()
        ], RepositoryService);
        return RepositoryService;
    }());

    var ConfigurationNewModalComponent = /** @class */ (function () {
        function ConfigurationNewModalComponent(repositoryService, bsModalRef, alert) {
            var _this = this;
            this.repositoryService = repositoryService;
            this.bsModalRef = bsModalRef;
            this.alert = alert;
            this.binary = {
                file: undefined,
                url: undefined
            };
            this.pattern = '';
            this.mo = {};
            this.isLoading = false;
            this.result = new Promise(function (resolve, reject) {
                _this._save = resolve;
                _this._cancel = reject;
            });
        }
        ConfigurationNewModalComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this;
                            return [4 /*yield*/, this.repositoryService.listConfigurations()];
                        case 1:
                            _a.configs = _b.sent();
                            this.setPipe('');
                            return [2 /*return*/];
                    }
                });
            });
        };
        ConfigurationNewModalComponent.prototype.cancel = function () {
            this.bsModalRef.hide();
            this._cancel();
        };
        ConfigurationNewModalComponent.prototype.setPipe = function (filterStr) {
            this.pattern = filterStr;
            this.filterPipe = rxjs.pipe(operators.map(function (data) { return lodash.uniqBy(data, 'configurationType'); }), operators.map(function (data) {
                return data.filter(function (mo) {
                    return mo.configurationType &&
                        mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1;
                });
            }));
        };
        ConfigurationNewModalComponent.prototype.uploadFile = function (dropped, ngForm) {
            this.binary.file = dropped[0].file;
            this.binary.url = undefined;
            ngForm.form.markAsDirty();
        };
        ConfigurationNewModalComponent.prototype.save = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, selected, versionOrName, description, binary, deviceType, ex_1;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _b.trys.push([0, 2, 3, 4]);
                            this.isLoading = true;
                            _a = this, selected = _a.selected, versionOrName = _a.versionOrName, description = _a.description, binary = _a.binary, deviceType = _a.deviceType;
                            return [4 /*yield*/, this.repositoryService.save({ selected: selected, versionOrName: versionOrName, description: description, binary: binary, deviceType: deviceType }, RepositoryType.CONFIGURATION, this.mo)];
                        case 1:
                            _b.sent();
                            this.alert.success(this.mo.id ? ngxComponents.gettext('Configuration updated.') : ngxComponents.gettext('Configuration created.'));
                            this.bsModalRef.hide();
                            this._save();
                            return [3 /*break*/, 4];
                        case 2:
                            ex_1 = _b.sent();
                            this.alert.addServerFailure(ex_1);
                            this._cancel();
                            return [3 /*break*/, 4];
                        case 3:
                            this.isLoading = false;
                            return [7 /*endfinally*/];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        ConfigurationNewModalComponent.ctorParameters = function () { return [
            { type: RepositoryService },
            { type: modal.BsModalRef },
            { type: ngxComponents.AlertService }
        ]; };
        ConfigurationNewModalComponent = __decorate([
            core.Component({
                selector: 'c8y-configuration-new-modal',
                template: "<div class=\"modal-header bg-primary text-white text-center\">\n  <h1 c8yIcon=\"cogs\" style=\"font-size: 55px;\"></h1>\n  <h4 class=\"p-t-16 text-uppercase\" translate *ngIf=\"mo.id\">Update configuration</h4>\n  <h4 class=\"p-t-16 text-uppercase\" translate *ngIf=\"!mo.id\">Add configuration</h4>\n</div>\n\n<form #configurationForm=\"ngForm\" (ngSubmit)=\"configurationForm.form.valid && save()\">\n  <div class=\"modal-body\">\n    <c8y-form-group>\n      <label translate>Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"e.g. hosts\"\n        autocomplete=\"off\"\n        required\n        maxlength=\"254\"\n        [(ngModel)]=\"versionOrName\"\n        name=\"versionOrName\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Device type</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"e.g. Posix\"\n        maxlength=\"254\"\n        autocomplete=\"off\"\n        [(ngModel)]=\"deviceType\"\n        name=\"deviceType\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Description</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"e.g. Host configuration Posix\"\n        maxlength=\"254\"\n        autocomplete=\"off\"\n        [(ngModel)]=\"description\"\n        name=\"description\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Configuration type</label>\n      <c8y-typeahead\n        [(selected)]=\"selected\"\n        placeholder=\"e.g. ssh\"\n        (onSearch)=\"setPipe($event)\"\n        displayProperty=\"configurationType\"\n      >\n        <c8y-li\n          *c8yFor=\"let config of configs; pipe: filterPipe; notFound: notFoundTemplate\"\n          class=\"p-l-8 p-r-8 c8y-list__item--link\"\n          (click)=\"selected = config; setPipe('')\"\n          [active]=\"selected === config\"\n        >\n          <c8y-highlight\n            [text]=\"config.configurationType || '--'\"\n            [pattern]=\"pattern\"\n          ></c8y-highlight>\n        </c8y-li>\n        <ng-template #notFoundTemplate>\n          <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"pattern.length > 0\">\n            <span translate>No match found, add new`configuration`?</span>\n            <button type=\"button\" class=\"btn btn-primary btn-xs m-l-16\" translate>\n              Create new`configuration`\n            </button>\n          </c8y-li>\n        </ng-template>\n      </c8y-typeahead>\n    </c8y-form-group>\n\n    <c8y-drop-area\n      (dropped)=\"uploadFile($event, configurationForm)\"\n      [loadingMessage]=\"'Importing, please wait.' | translate\"\n      [title]=\"'Add a configuration file' | translate\"\n      [loading]=\"isLoading\"\n    >\n    </c8y-drop-area>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-default\" [disabled]=\"isLoading\">\n      <span translate>Cancel</span>\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      type=\"submit\"\n      [disabled]=\"!configurationForm.valid || configurationForm.pristine || isLoading\"\n    >\n      <span translate *ngIf=\"!mo.id\">Add configuration</span>\n      <span translate *ngIf=\"mo.id\">Update configuration</span>\n    </button>\n  </div>\n</form>\n"
            })
        ], ConfigurationNewModalComponent);
        return ConfigurationNewModalComponent;
    }());

    var ConfigurationListComponent = /** @class */ (function () {
        function ConfigurationListComponent(alert, repositoryService, modalService) {
            this.alert = alert;
            this.repositoryService = repositoryService;
            this.modalService = modalService;
            this.filterChange$ = new rxjs.Subject();
            this.filterTerm = '';
            this.CARRIAGE_RETURN_KEY = 13;
            this.CARRIAGE_RETURN_CODE = 'Enter';
            this.DELETED_SUCCESS_MSG = ngxComponents.gettext('Configuration deleted.');
        }
        ConfigurationListComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.reset()];
                        case 1:
                            _a.sent();
                            this.filterChange$
                                .pipe(operators.debounce(function (event) {
                                return event.code === _this.CARRIAGE_RETURN_CODE || event.keyCode === _this.CARRIAGE_RETURN_KEY
                                    ? rxjs.timer(10)
                                    : rxjs.timer(300);
                            }), operators.map(function (e) { return e.target.value; }), operators.distinctUntilChanged())
                                .subscribe(function (filterTerm) {
                                _this.filterTerm = filterTerm;
                                _this.setPipe(filterTerm);
                            });
                            return [2 /*return*/];
                    }
                });
            });
        };
        ConfigurationListComponent.prototype.ngOnDestroy = function () {
            this.filterChange$.complete();
        };
        ConfigurationListComponent.prototype.add = function () {
            return __awaiter(this, void 0, void 0, function () {
                var ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 4]);
                            return [4 /*yield*/, this.modalService.show(ConfigurationNewModalComponent, {
                                    class: 'modal-sm',
                                    ignoreBackdropClick: true
                                }).content.result];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.reset()];
                        case 2:
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 3:
                            ex_1 = _a.sent();
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        ConfigurationListComponent.prototype.edit = function (configuration) {
            return __awaiter(this, void 0, void 0, function () {
                var modal, ex_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 4]);
                            modal = this.modalService.show(ConfigurationNewModalComponent, {
                                class: 'modal-sm',
                                ignoreBackdropClick: true,
                                initialState: {
                                    selected: { id: configuration.id, configurationType: configuration.configurationType },
                                    versionOrName: configuration.name,
                                    deviceType: configuration.deviceType,
                                    description: configuration.description,
                                    binary: { url: configuration.url }
                                }
                            }).content;
                            modal.mo = configuration;
                            return [4 /*yield*/, modal.result];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.reset()];
                        case 2:
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 3:
                            ex_2 = _a.sent();
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        ConfigurationListComponent.prototype.delete = function (configuration) {
            return __awaiter(this, void 0, void 0, function () {
                var ex_3;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 4]);
                            return [4 /*yield*/, this.repositoryService.delete(configuration)];
                        case 1:
                            _a.sent();
                            this.alert.success(this.DELETED_SUCCESS_MSG);
                            return [4 /*yield*/, this.reset()];
                        case 2:
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 3:
                            ex_3 = _a.sent();
                            this.alert.addServerFailure(ex_3);
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        ConfigurationListComponent.prototype.setPipe = function (filterTerm) {
            var _this = this;
            this.filterPipe = rxjs.pipe(operators.map(function (data) {
                return filterTerm.trim().length === 0
                    ? data
                    : data.filter(function (mo) {
                        return _this.filterContainString(mo.name, filterTerm) ||
                            _this.filterContainString(mo.configurationType, filterTerm);
                    });
            }));
        };
        ConfigurationListComponent.prototype.filterContainString = function (name, filterTerm) {
            var term = filterTerm.toLowerCase().trim();
            return name && name.toLowerCase().indexOf(term) > -1;
        };
        ConfigurationListComponent.prototype.reset = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.filterTerm = '';
                            _a = this;
                            _b = rxjs.of;
                            return [4 /*yield*/, this.repositoryService.listConfigurations()];
                        case 1:
                            _a.configurations$ = _b.apply(void 0, [_c.sent()]);
                            this.setPipe('');
                            return [2 /*return*/];
                    }
                });
            });
        };
        ConfigurationListComponent.ctorParameters = function () { return [
            { type: ngxComponents.AlertService },
            { type: RepositoryService },
            { type: modal.BsModalService }
        ]; };
        ConfigurationListComponent = __decorate([
            core.Component({
                selector: 'c8y-configuration-list',
                template: "<c8y-title>\n  <span translate>Configuration snapshots repository</span>&nbsp;\n  <small *ngIf=\"(configurations$ | async)?.paging.totalPages === 1 && !filterTerm\"\n    >{{ (configurations$ | async).data.length }} <span translate>snapshots</span></small\n  >\n  <small\n    *ngIf=\"(configurations$ | async)?.paging.totalPages > 1 && !filterTerm\"\n    [tooltip]=\"'More data available. Scroll to the bottom of the list to load it.' | translate\"\n    container=\"body\"\n    >{{ (configurations$ | async).paging.pageSize }}+ <span translate>snapshots</span></small\n  >\n  <small *ngIf=\"filterTerm\"\n    ><span translate>Search results for</span>&nbsp;\"{{ this.filterTerm }}\"</small\n  >\n</c8y-title>\n\n<c8y-action-bar-item itemClass=\"navbar-form\">\n  <div class=\"input-group input-group-search\">\n    <input\n      class=\"form-control\"\n      placeholder=\"{{ 'Filter\u2026' | translate }}\"\n      type=\"text\"\n      [value]=\"filterTerm\"\n      (keyup)=\"filterChange$.next($event)\"\n    />\n    <span class=\"input-group-btn\">\n      <button class=\"btn btn-clean\" (click)=\"filterTerm = ''; setPipe('')\">\n        <i [c8yIcon]=\"filterTerm.length === 0 ? 'filter' : 'close'\"></i>\n      </button>\n    </span>\n  </div>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" (click)=\"add()\">\n    <i c8yIcon=\"plus-square\"></i> {{ 'Add configuration snapshot' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div\n  class=\"c8y-empty-state text-center\"\n  *ngIf=\"!filterTerm && (configurations$ | async)?.data.length === 0\"\n>\n  <h1 c8yIcon=\"gears\"></h1>\n  <h3 translate>There are no configuration snapshots defined</h3>\n  <p translate>Add a configuration snapshot first.</p>\n  <div>\n    <button (click)=\"add()\" class=\"btn btn-primary\" translate>\n      Add configuration snapshot\n    </button>\n  </div>\n  <p c8y-guide-docs>\n    <small translate\n      >Find out more in the\n      <a c8y-guide-href=\"users-guide/device-management/#configuration-repository\"\n        >User guide`KEEP_ORIGINAL`</a\n      >.</small\n    >\n  </p>\n</div>\n\n<ng-template #notFound>\n  <c8y-li class=\"p-8 text-center\">\n    <p>\n      <span translate>No more entries found for filter:</span>&nbsp;<strong>{{\n        filterTerm\n      }}</strong>\n    </p>\n    <button class=\"btn btn-primary btn-xs m-t-8\" translate (click)=\"filterTerm = ''; setPipe('')\">\n      Reset filter\n    </button>\n  </c8y-li>\n</ng-template>\n<div class=\"p-b-32\">\n  <c8y-list-group>\n    <c8y-li\n      *c8yFor=\"\n        let configuration of configurations$;\n        pipe: filterPipe;\n        notFound: this.filterTerm ? notFound : undefined\n      \"\n    >\n      <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n      <div class=\"row flex-row\">\n        <div class=\"col-xs-3\">\n          <c8y-highlight\n            [text]=\"configuration.name || '-'\"\n            elementClass=\"text-info\"\n            [pattern]=\"filterTerm\"\n          ></c8y-highlight>\n        </div>\n        <div class=\"col-xs-3\">\n          <span class=\"text-muted text-truncate\" [title]=\"configuration.description\">{{\n            configuration.description\n          }}</span>\n        </div>\n        <div class=\"col-xs-3\">\n          <small translate class=\"text-muted text-uppercase\">Device type:</small>&nbsp;\n          {{ configuration.deviceType || '-' }}\n        </div>\n        <div class=\"col-xs-3 text-right\">\n          <span class=\"label label-primary\" *ngIf=\"configuration.configurationType\">\n            <c8y-highlight\n              [text]=\"configuration.configurationType\"\n              elementClass=\"text-info\"\n              [pattern]=\"filterTerm\"\n            ></c8y-highlight>\n          </span>\n        </div>\n      </div>\n      <c8y-li-action (click)=\"edit(configuration)\" icon=\"pencil\">\n        Edit\n      </c8y-li-action>\n      <c8y-li-action (click)=\"delete(configuration)\" icon=\"trash-o\">\n        Delete\n      </c8y-li-action>\n    </c8y-li>\n  </c8y-list-group>\n</div>\n"
            })
        ], ConfigurationListComponent);
        return ConfigurationListComponent;
    }());

    var RepositoryNavigationFactory = /** @class */ (function () {
        function RepositoryNavigationFactory(optionsService) {
            this.optionsService = optionsService;
            this.navs = [];
        }
        RepositoryNavigationFactory.prototype.get = function () {
            return __awaiter(this, void 0, void 0, function () {
                var betaFlag;
                return __generator(this, function (_a) {
                    betaFlag = localStorage.getItem('c8y_beta_status');
                    if (betaFlag === 'all' && this.navs.length === 0) {
                        this.navs.push(new ngxComponents.NavigatorNode({
                            label: ngxComponents.gettext('Configuration repository'),
                            path: 'configuration-new',
                            icon: 'gears',
                            parent: ngxComponents.gettext('Management'),
                            priority: 800
                        }));
                    }
                    return [2 /*return*/, this.navs];
                });
            });
        };
        RepositoryNavigationFactory.ctorParameters = function () { return [
            { type: ngxComponents.OptionsService }
        ]; };
        RepositoryNavigationFactory = __decorate([
            core.Injectable()
        ], RepositoryNavigationFactory);
        return RepositoryNavigationFactory;
    }());

    var ɵ0 = [
        {
            path: 'configuration-new',
            component: ConfigurationListComponent
        }
    ];
    var RepositoryModule = /** @class */ (function () {
        function RepositoryModule() {
        }
        RepositoryModule = __decorate([
            core.NgModule({
                imports: [ngxComponents.CoreModule, tooltip.TooltipModule],
                exports: [],
                entryComponents: [ConfigurationListComponent, ConfigurationNewModalComponent],
                declarations: [ConfigurationListComponent, ConfigurationNewModalComponent],
                providers: [
                    RepositoryService,
                    {
                        provide: ngxComponents.HOOK_NAVIGATOR_NODES,
                        useClass: RepositoryNavigationFactory,
                        multi: true
                    },
                    {
                        provide: ngxComponents.HOOK_ONCE_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            })
        ], RepositoryModule);
        return RepositoryModule;
    }());

    exports.RepositoryModule = RepositoryModule;
    exports.ɵ0 = ɵ0;
    exports.ɵa = ConfigurationListComponent;
    exports.ɵb = RepositoryService;
    exports.ɵc = ConfigurationNewModalComponent;
    exports.ɵd = RepositoryNavigationFactory;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=c8y-ngx-components-repository.umd.js.map
