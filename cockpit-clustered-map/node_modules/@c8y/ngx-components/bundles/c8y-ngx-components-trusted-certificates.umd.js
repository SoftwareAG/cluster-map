(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@c8y/ngx-components'), require('ngx-bootstrap/modal'), require('@c8y/client'), require('@ngx-translate/core'), require('rxjs/operators'), require('rxjs'), require('ngx-bootstrap/dropdown'), require('ngx-bootstrap/popover'), require('ngx-bootstrap/tooltip'), require('ngx-bootstrap/buttons'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/trusted-certificates', ['exports', '@angular/core', '@angular/router', '@c8y/ngx-components', 'ngx-bootstrap/modal', '@c8y/client', '@ngx-translate/core', 'rxjs/operators', 'rxjs', 'ngx-bootstrap/dropdown', 'ngx-bootstrap/popover', 'ngx-bootstrap/tooltip', 'ngx-bootstrap/buttons', '@angular/forms'], factory) :
    (global = global || self, factory((global.c8y = global.c8y || {}, global.c8y['ngx-components'] = global.c8y['ngx-components'] || {}, global.c8y['ngx-components']['trusted-certificates'] = {}), global.ng.core, global.ng.router, global.c8y['ngx-components'], global.modal, global.client, global.core$1, global.rxjs.operators, global.rxjs, global.dropdown, global.popover, global.tooltip, global.buttons, global.ng.forms));
}(this, (function (exports, core, router, ngxComponents, modal, client, core$1, operators, rxjs, dropdown, popover, tooltip, buttons, forms) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    var AddTrustedCertificateComponent = /** @class */ (function () {
        function AddTrustedCertificateComponent(modal, trustedCertificateService, alertService) {
            var _this = this;
            this.modal = modal;
            this.trustedCertificateService = trustedCertificateService;
            this.alertService = alertService;
            this.AUTO_REGISTRATION_POPOVER = ngxComponents.gettext('All devices with credentials signed by this certificate will be able to communicate with the platform without a prior registration.');
            this.trustedCertificate = {
                status: 'DISABLED'
            };
            this.result = new Promise(function (resolve, reject) {
                _this._save = resolve;
                _this._cancel = reject;
            });
        }
        AddTrustedCertificateComponent.prototype.save = function () {
            return __awaiter(this, void 0, void 0, function () {
                var ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.trustedCertificateService.create(this.trustedCertificate)];
                        case 1:
                            _a.sent();
                            this.alertService.success(ngxComponents.gettext('Certificate saved.'));
                            this._save();
                            return [3 /*break*/, 3];
                        case 2:
                            ex_1 = _a.sent();
                            this.alertService.addServerFailure(ex_1);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        AddTrustedCertificateComponent.prototype.close = function () {
            this._cancel();
            this.modal.hide();
        };
        AddTrustedCertificateComponent.ctorParameters = function () { return [
            { type: modal.BsModalRef },
            { type: client.TrustedCertificateService },
            { type: ngxComponents.AlertService }
        ]; };
        AddTrustedCertificateComponent = __decorate([
            core.Component({
                selector: 'c8y-add-trusted-certificate',
                template: "<div class=\"modal-header bg-primary text-center text-white\">\n  <div style=\"font-size: 62px;\">\n    <span c8yIcon=\"certificate\"></span>\n  </div>\n  <h4 class=\"text-uppercase\" translate>\n    Add trusted certificate\n  </h4>\n</div>\n<div class=\"modal-body\">\n  <form #addTrustedCertificateForm=\"ngForm\" class=\"p-t-24\">\n    <c8y-form-group>\n      <label translate for=\"certificateName\">Certificate name</label>\n      <input\n        id=\"certificateName\"\n        type=\"text\"\n        class=\"form-control\"\n        autocomplete=\"off\"\n        name=\"certificateName\"\n        [(ngModel)]=\"trustedCertificate.name\"\n        placeholder=\"{{ 'e.g. My certificate' | translate }}\"\n        required\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for=\"certificate\">Certificate</label>\n      <textarea\n        id=\"certificate\"\n        class=\"form-control\"\n        rows=\"6\"\n        name=\"certificateInPemFormat\"\n        [(ngModel)]=\"trustedCertificate.certInPemFormat\"\n        placeholder=\"{{ 'Paste the certificate in PEM format here (required)' | translate }}\"\n        required\n      ></textarea>\n    </c8y-form-group>\n    <c8y-form-group>\n      <label class=\"c8y-checkbox\" title=\"{{ 'Auto registration' | translate }}\">\n        <input\n          id=\"autoRegistration\"\n          type=\"checkbox\"\n          name=\"autoRegistration\"\n          [(ngModel)]=\"trustedCertificate.autoRegistrationEnabled\"\n        /><span></span>&nbsp;\n        {{ 'Auto registration' | translate }}\n        <button\n          class=\"btn btn-clean\"\n          popover=\"{{ AUTO_REGISTRATION_POPOVER | translate }}\"\n          triggers=\"focus\"\n        >\n          <i [c8yIcon]=\"'question-circle-o'\"></i>\n        </button>\n      </label>\n    </c8y-form-group>\n    <button\n      type=\"button\"\n      class=\"btn\"\n      name=\"certificateStatus\"\n      [(ngModel)]=\"trustedCertificate.status\"\n      btnCheckbox\n      btnCheckboxTrue=\"ENABLED\"\n      btnCheckboxFalse=\"DISABLED\"\n    >\n      <span\n        title=\"{{ 'Disabled`trusted certificate status`' | translate }}\"\n        [hidden]=\"trustedCertificate.status !== 'DISABLED'\"\n      >\n        {{ 'Disabled`trusted certificate status`' | translate }}\n      </span>\n      <span\n        title=\"{{ 'Enabled`trusted certificate status`' | translate }}\"\n        [hidden]=\"trustedCertificate.status !== 'ENABLED'\"\n      >\n        {{ 'Enabled`trusted certificate status`' | translate }}\n      </span>\n    </button>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button title=\"{{ 'Cancel' | translate }}\" class=\"btn btn-default\" (click)=\"close()\" translate>\n    Cancel\n  </button>\n\n  <button\n    title=\"{{ 'Add certificate' | translate }}\"\n    class=\"btn btn-primary\"\n    (click)=\"save()\"\n    [disabled]=\"addTrustedCertificateForm.form.invalid || addTrustedCertificateForm.form.pristine\"\n    translate\n  >\n    Add certificate\n  </button>\n</div>\n"
            })
        ], AddTrustedCertificateComponent);
        return AddTrustedCertificateComponent;
    }());

    var TrustedCertificatesComponent = /** @class */ (function () {
        function TrustedCertificatesComponent(bsModal, alertService, trustedCertificateService, modalService, translateService) {
            var _this = this;
            this.bsModal = bsModal;
            this.alertService = alertService;
            this.trustedCertificateService = trustedCertificateService;
            this.modalService = modalService;
            this.translateService = translateService;
            this.reloading = new rxjs.BehaviorSubject(false);
            this.reload = new rxjs.BehaviorSubject(null);
            this.trustedCertificates = this.reload.pipe(operators.tap(function () { return _this.reloading.next(true); }), operators.switchMap(function () { return _this.getTrustedCertificates(); }), operators.tap(function () { return _this.reloading.next(false); }));
            this.sortByExpirationDateAsc = rxjs.pipe(operators.tap(function (results) {
                return results.sort(function (n1, n2) { return n1.notAfter.localeCompare(n2.notAfter); });
            }));
        }
        TrustedCertificatesComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.loadTrustedCertificates()];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        TrustedCertificatesComponent.prototype.loadTrustedCertificates = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.reload.next();
                    return [2 /*return*/];
                });
            });
        };
        TrustedCertificatesComponent.prototype.getTrustedCertificates = function () {
            var filter = {
                pageSize: 1000,
                withTotalPages: true,
            };
            return this.trustedCertificateService.list(filter);
        };
        TrustedCertificatesComponent.prototype.addTrustedCertificate = function () {
            return __awaiter(this, void 0, void 0, function () {
                var modal, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            modal = this.bsModal.show(AddTrustedCertificateComponent, {
                                class: 'modal-sm',
                                ignoreBackdropClick: true,
                            }).content;
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, modal.result];
                        case 2:
                            _a.sent();
                            modal.close();
                            this.reload.next();
                            return [3 /*break*/, 4];
                        case 3:
                            ex_1 = _a.sent();
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        TrustedCertificatesComponent.prototype.deleteTrustedCertificate = function (certificate, index) {
            return __awaiter(this, void 0, void 0, function () {
                var title, confirmationText, finalQuestion, certificateName, body, ex_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            title = ngxComponents.gettext('Delete trusted certificate');
                            confirmationText = ngxComponents.gettext('You are about to delete a trusted certificate "{{ certificateName }}".');
                            finalQuestion = ngxComponents.gettext('Do you want to proceed?');
                            certificateName = certificate.name;
                            body = [
                                this.translateService.instant(confirmationText, {
                                    certificateName: certificateName,
                                }),
                                this.translateService.instant(finalQuestion),
                            ].join(' ');
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 4, , 5]);
                            return [4 /*yield*/, this.modalService.confirm(title, body, ngxComponents.Status.DANGER, { ok: ngxComponents.gettext('Delete') })];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.trustedCertificateService.delete(certificate.fingerprint)];
                        case 3:
                            _a.sent();
                            this.alertService.success(ngxComponents.gettext('Certificate deleted.'));
                            this.reload.next();
                            return [3 /*break*/, 5];
                        case 4:
                            ex_2 = _a.sent();
                            this.alertService.addServerFailure(ex_2);
                            return [3 /*break*/, 5];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        TrustedCertificatesComponent.prototype.updateCertificate = function (trustedCertificate, updatingPart) {
            return __awaiter(this, void 0, void 0, function () {
                var ex_3;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.trustedCertificateService.update(__assign({ fingerprint: trustedCertificate.fingerprint }, updatingPart))];
                        case 1:
                            _a.sent();
                            this.alertService.success(ngxComponents.gettext('Certificate saved.'));
                            return [3 /*break*/, 3];
                        case 2:
                            ex_3 = _a.sent();
                            this.alertService.addServerFailure(ex_3);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        TrustedCertificatesComponent.prototype.highlightDependingOnExpirationStatus = function (item) {
            var warningOffset = 24 * 60 * 60 * 1000 * 90; // 90 days
            var todayTimestamp = new Date().getTime();
            var warningTimestamp = new Date().getTime() + warningOffset;
            var notAfterTimestamp = new Date(item.notAfter).getTime();
            var expired = notAfterTimestamp < todayTimestamp;
            var expiresInLessThan90Days = notAfterTimestamp < warningTimestamp;
            if (expired) {
                return 'text-danger';
            }
            if (expiresInLessThan90Days) {
                return 'text-warning';
            }
            return '';
        };
        TrustedCertificatesComponent.ctorParameters = function () { return [
            { type: modal.BsModalService },
            { type: ngxComponents.AlertService },
            { type: client.TrustedCertificateService },
            { type: ngxComponents.ModalService },
            { type: core$1.TranslateService }
        ]; };
        TrustedCertificatesComponent = __decorate([
            core.Component({
                selector: 'c8y-trusted-certificates',
                template: "<c8y-title>{{ 'Trusted certificates' | translate }}</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    title=\"{{ 'Add certificate' | translate }}\"\n    class=\"btn btn-link\"\n    (click)=\"addTrustedCertificate()\"\n  >\n    <i c8yIcon=\"plus-square\"></i> {{ 'Add trusted certificate' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    title=\"{{ 'Reload' | translate }}\"\n    class=\"btn btn-link\"\n    (click)=\"loadTrustedCertificates()\"\n  >\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'fa-spin': reloading | async }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"c8y-empty-state text-center\" *ngIf=\"(trustedCertificates | async)?.data.length === 0\">\n  <h1 class=\"c8y-icon fa fa-certificate\"></h1>\n  <h3 translate>No trusted certificates to display.</h3>\n  <p translate>Add your first certificate by clicking below.</p>\n  <p>\n    <button\n      title=\"{{ 'Add trusted certificate' | translate }}\"\n      (click)=\"addTrustedCertificate()\"\n      class=\"btn btn-primary\"\n      translate\n    >\n      Add trusted certificate\n    </button>\n  </p>\n</div>\n\n<c8y-list-group class=\"elevation-1\">\n  <c8y-li\n    *c8yFor=\"\n      let trustedCertificate of trustedCertificates | async;\n      let i = index;\n      pipe: sortByExpirationDateAsc;\n      loadMore: 'none'\n    \"\n  >\n    <c8y-li-icon>\n      <i c8yIcon=\"certificate\"></i>\n      <i\n        c8yIcon=\"check-circle\"\n        class=\"text-success\"\n        *ngIf=\"trustedCertificate.status === 'ENABLED'\"\n      ></i>\n      <i c8yIcon=\"ban\" class=\"text-danger\" *ngIf=\"trustedCertificate.status === 'DISABLED'\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-6\">{{ trustedCertificate.name }}</div>\n      <div class=\"col-6\">\n        <span class=\"text-label-small m-r-8\" translate>Algorithm</span>\n        {{ trustedCertificate.algorithmName }}\n      </div>\n      <div class=\"col-6\">\n        <span class=\"text-label-small m-r-8\" translate>Expiration date</span>\n        <small [ngClass]=\"highlightDependingOnExpirationStatus(trustedCertificate)\">\n          <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n          <span>{{ trustedCertificate.notAfter | date: 'medium' }}</span>\n        </small>\n      </div>\n      <div class=\"col-6\">\n        <span title=\"{{ 'Auto registration' | translate }}\" translate class=\"text-label-small m-r-8\"\n          >Auto registration</span\n        >\n        <small *ngIf=\"trustedCertificate.autoRegistrationEnabled\">{{\n          'Enabled`auto registration`' | translate\n        }}</small>\n        <small *ngIf=\"!trustedCertificate.autoRegistrationEnabled\">{{\n          'Disabled`auto registration`' | translate\n        }}</small>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-action\n      (click)=\"deleteTrustedCertificate(trustedCertificate, i)\"\n      icon=\"trash\"\n      label=\"{{ 'Delete' | translate }}\"\n    >\n    </c8y-li-action>\n\n    <c8y-li-collapse [item]=\"trustedCertificate\">\n      <div class=\"p-t-16 p-b-16\">\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <c8y-form-group>\n              <label class=\"control-label\" translate>\n                Certificate name\n              </label>\n              <div class=\"input-group input-group-editable\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"trustedCertificate.name\" />\n                <span></span>\n                <div class=\"input-group-btn\">\n                  <button\n                    title=\"{{ 'Update certificate name' | translate }}\"\n                    (click)=\"\n                      updateCertificate(trustedCertificate, { name: trustedCertificate.name })\n                    \"\n                    class=\"btn btn-primary\"\n                  >\n                    {{ 'Save' | translate }}\n                  </button>\n                </div>\n              </div>\n            </c8y-form-group>\n            <c8y-form-group>\n              <label class=\"c8y-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"trustedCertificate.autoRegistrationEnabled\"\n                  (ngModelChange)=\"\n                    updateCertificate(trustedCertificate, { autoRegistrationEnabled: $event })\n                  \"\n                />\n                <span></span>\n                <span translate> Auto registration</span>\n              </label>\n            </c8y-form-group>\n            <c8y-form-group>\n              <button\n                type=\"button\"\n                class=\"btn\"\n                name=\"certificateStatus\"\n                [(ngModel)]=\"trustedCertificate.status\"\n                btnCheckbox\n                btnCheckboxTrue=\"ENABLED\"\n                btnCheckboxFalse=\"DISABLED\"\n                (ngModelChange)=\"updateCertificate(trustedCertificate, { status: $event })\"\n              >\n                <span\n                  title=\"{{ 'Disabled`trusted certificate status`' | translate }}\"\n                  [hidden]=\"trustedCertificate.status !== 'DISABLED'\"\n                >\n                  {{ 'Disabled`trusted certificate status`' | translate }}\n                </span>\n                <span\n                  title=\"{{ 'Enabled`trusted certificate status`' | translate }}\"\n                  [hidden]=\"trustedCertificate.status !== 'ENABLED'\"\n                >\n                  {{ 'Enabled`trusted certificate status`' | translate }}\n                </span>\n              </button>\n            </c8y-form-group>\n          </div>\n          <div class=\"col-md-4\">\n            <c8y-form-group>\n              <label class=\"control-label\" translate>\n                Certificate\n              </label>\n              <textarea\n                class=\"form-control no-resize\"\n                name=\"name\"\n                type=\"text\"\n                rows=\"10\"\n                readonly\n                [(ngModel)]=\"trustedCertificate.certInPemFormat\"\n              >\n              </textarea>\n            </c8y-form-group>\n          </div>\n          <div class=\"col-md-4 p-r-24\">\n            <label translate>Additional properties</label>\n            <div class=\"content-flex-30 separator-top p-t-4 p-b-4\">\n              <div class=\"col-4 text-label-small\" translate>Algorithm</div>\n              <div class=\"col-8 small text-break-word\">{{ trustedCertificate.algorithmName }}</div>\n            </div>\n            <div class=\"content-flex-30 separator-top p-t-4 p-b-4\">\n              <div class=\"col-4 text-label-small\" translate>Version</div>\n              <div class=\"col-8 small text-break-word\">{{ trustedCertificate.version }}</div>\n            </div>\n            <div class=\"content-flex-30 separator-top p-t-4 p-b-4\">\n              <div class=\"col-4 text-label-small\" translate>Valid from</div>\n              <div class=\"col-8 small text-break-word\">\n                {{ trustedCertificate.notBefore | date: 'medium' }}\n              </div>\n            </div>\n            <div class=\"content-flex-30 separator-top p-t-4 p-b-4\">\n              <div class=\"col-4 text-label-small\" translate>Issuer</div>\n              <div class=\"col-8 small text-break-word\">{{ trustedCertificate.issuer }}</div>\n            </div>\n            <div class=\"content-flex-30 separator-top p-t-4 p-b-4\">\n              <div class=\"col-4 text-label-small\" translate>Expiration date</div>\n              <div class=\"col-8 small text-break-word\">\n                {{ trustedCertificate.notAfter | date: 'medium' }}\n              </div>\n            </div>\n            <div class=\"content-flex-30 separator-top p-t-4 p-b-4\">\n              <div class=\"col-4 text-label-small\" translate>Serial number</div>\n              <div class=\"col-8 small text-break-word\">{{ trustedCertificate.serialNumber }}</div>\n            </div>\n            <div class=\"content-flex-30 separator-top p-t-4 p-b-4\">\n              <div class=\"col-4 text-label-small\">\n                {{ 'Subject`of a certificate`' | translate }}\n              </div>\n              <div class=\"col-8 small text-break-word\">{{ trustedCertificate.subject }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </c8y-li-collapse>\n  </c8y-li>\n</c8y-list-group>\n"
            })
        ], TrustedCertificatesComponent);
        return TrustedCertificatesComponent;
    }());

    var TrustedCertificatesGuard = /** @class */ (function () {
        function TrustedCertificatesGuard(optionsService) {
            this.optionsService = optionsService;
        }
        TrustedCertificatesGuard.prototype.canActivate = function (route, state) {
            return this.isFeatureEnabled();
        };
        TrustedCertificatesGuard.prototype.isFeatureEnabled = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!(this.isFeatureEnabledCache === undefined)) return [3 /*break*/, 2];
                            _a = this;
                            return [4 /*yield*/, this.optionsService.getTenantOption('oauth.internal.token', 'trusted-certificates.enabled', false)];
                        case 1:
                            _a.isFeatureEnabledCache = (_b.sent());
                            _b.label = 2;
                        case 2: return [2 /*return*/, this.isFeatureEnabledCache];
                    }
                });
            });
        };
        TrustedCertificatesGuard.ctorParameters = function () { return [
            { type: ngxComponents.OptionsService }
        ]; };
        TrustedCertificatesGuard = __decorate([
            core.Injectable()
        ], TrustedCertificatesGuard);
        return TrustedCertificatesGuard;
    }());

    var TrustedCertificatesNavigationFactory = /** @class */ (function () {
        function TrustedCertificatesNavigationFactory(tenantOptionsService, trustedCertificatesGuard) {
            this.tenantOptionsService = tenantOptionsService;
            this.trustedCertificatesGuard = trustedCertificatesGuard;
            this.nav = [];
        }
        TrustedCertificatesNavigationFactory.prototype.get = function () {
            return __awaiter(this, void 0, void 0, function () {
                var isFeatureEnabled;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.trustedCertificatesGuard.isFeatureEnabled()];
                        case 1:
                            isFeatureEnabled = _a.sent();
                            if (isFeatureEnabled && this.nav.length === 0) {
                                this.nav.push(new ngxComponents.NavigatorNode({
                                    label: ngxComponents.gettext('Trusted certificates'),
                                    icon: 'certificate',
                                    path: '/trusted-certificates',
                                    parent: ngxComponents.gettext('Management'),
                                    priority: 100
                                }));
                            }
                            return [2 /*return*/, this.nav];
                    }
                });
            });
        };
        TrustedCertificatesNavigationFactory.ctorParameters = function () { return [
            { type: client.TenantOptionsService },
            { type: TrustedCertificatesGuard }
        ]; };
        TrustedCertificatesNavigationFactory = __decorate([
            core.Injectable()
        ], TrustedCertificatesNavigationFactory);
        return TrustedCertificatesNavigationFactory;
    }());

    var trustedCertificatesRoutes = [
        {
            path: 'trusted-certificates',
            component: TrustedCertificatesComponent,
            canActivate: [TrustedCertificatesGuard]
        }
    ];
    var TrustedCertificatesModule = /** @class */ (function () {
        function TrustedCertificatesModule() {
        }
        TrustedCertificatesModule = __decorate([
            core.NgModule({
                declarations: [TrustedCertificatesComponent, AddTrustedCertificateComponent],
                exports: [],
                imports: [
                    ngxComponents.CoreModule,
                    ngxComponents.CommonModule,
                    router.RouterModule.forRoot(trustedCertificatesRoutes, { useHash: true }),
                    dropdown.BsDropdownModule.forRoot(),
                    tooltip.TooltipModule,
                    forms.ReactiveFormsModule,
                    buttons.ButtonsModule,
                    popover.PopoverModule
                ],
                entryComponents: [TrustedCertificatesComponent, AddTrustedCertificateComponent],
                providers: [
                    {
                        provide: ngxComponents.HOOK_NAVIGATOR_NODES,
                        useClass: TrustedCertificatesNavigationFactory,
                        multi: true
                    },
                    TrustedCertificatesGuard
                ]
            })
        ], TrustedCertificatesModule);
        return TrustedCertificatesModule;
    }());

    exports.TrustedCertificatesModule = TrustedCertificatesModule;
    exports.ɵa = TrustedCertificatesComponent;
    exports.ɵb = AddTrustedCertificateComponent;
    exports.ɵc = TrustedCertificatesGuard;
    exports.ɵd = TrustedCertificatesNavigationFactory;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=c8y-ngx-components-trusted-certificates.umd.js.map
