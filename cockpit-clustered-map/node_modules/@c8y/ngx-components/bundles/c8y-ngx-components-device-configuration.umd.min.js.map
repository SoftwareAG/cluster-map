{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/device-configuration/device-configuration.model.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.service.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-list.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-operation.component.ts","ng://@c8y/ngx-components/device-configuration/source-code-preview.component.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.guard.ts","ng://@c8y/ngx-components/device-configuration/save-to-repository.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-preview.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-filter.pipe.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","DeviceConfigurationOperation","DeviceConfigurationService","eventService","eventBinaryService","operationService","alertService","inventoryService","inventoryBinaryService","translateService","dateFrom","Date","dateTo","now","repositoryConfigListUpdated","EventEmitter","prototype","getLatestConfigurationEvent","deviceId","type","filter","source","toISOString","pageSize","list","_a","data","getEventConfigurationBinary","event","download","res","binary","text","addServerFailure","ex_1","createUploadConfigFileOperation","device","configurationType","operationText","gettext","operationCfg","id","c8y_UploadConfigFile","description","instant","deviceName","name","create","operation","ex_2","getLatestConfigFileOperation","configType","operationType","fragmentType","revert","find","getSnapshotsFromRepository","deviceType","withTotalPages","query","__filter","__and","__or","__eq","__not","__has","__orderby","deviceTypeFilter","listQuery","createDownloadConfigFileOperation","binaryUrl","c8y_DownloadConfigFile","url","ex_3","getConfigurationBinaryFile","moId","getIdFromUrl","detail","binaryMO","fetchExternalBinary","saveToConfigurationRepository","config","mo","assign","c8y_Global","Blob","response","self","updateRepositoryConfigList","emit","fetch","status","configBinary","EventService","EventBinaryService","OperationService","AlertService","InventoryService","InventoryBinaryService","TranslateService","Injectable","DeviceConfigurationComponent","route","deviceConfigurationService","realtime","_this","configSnapshot","subscribe","repositorySnapshot","undefined","repositorySnapshots","_b","ngOnInit","snapshot","parent","contextData","supportedConfigurations","c8y_SupportedConfigurations","map","item","repositorySnapshotsEmptyState","icon","title","eventsChannel","eventsSubscription","observable","updateConfigSnapshotOnEvent","onConfigTypeSelected","configEvent","time","onRepositoryConfigSelected","creationTime","ngOnDestroy","unsubscribe","ActivatedRoute","Realtime","Component","selector","template","ConfigurationListComponent","configSelected","filterTerm","showConfigurationTypePreview","selectedConfig","updatePipe","tslib_1.__decorate","Input","Output","ConfigurationOperationComponent","statusIcons","operationStatusIcons","statusClasses","operationStatusClasses","SourceCodePreviewComponent","DeviceConfigurationGuard","canActivate","state","SaveToRepositoryComponent","modal","_save","_cancel","save","success","danger","message","close","hide","BsModalRef","ConfigurationPreviewComponent","bsModal","user","appState","operationToTrigger","UPLOAD_CONFIG","getOperation","configOperation","updateOperation","operationsChannel","operationsSubscription","createDeviceOperation","DOWNLOAD_CONFIG","_c","showOperation","OperationStatus","PENDING","EXECUTING","FAILED","includes","showBinary","isCreateOperationDisabled","blob","fileName","saveAs","saveToRepository","initialState","cloneDeep","show","class","ignoreBackdropClick","content","hasPermission","hasAnyRole","currentUser","BsModalService","UserService","AppStateService","ConfigurationFilterPipe","transform","items","trim","filterContainString","term","toLowerCase","indexOf","Pipe","context","ViewContext","Device","path","component","DeviceConfigurationModule","NgModule","declarations","exports","imports","CoreModule","TooltipModule","entryComponents","providers","provide","HOOK_ONCE_ROUTE","useValue","Éµ0","multi"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface ConfigurationSnapshot {\n  time: string;\n  name: string;\n  binaryUrl?: string;\n  binary?: any;\n  deviceType?: string;\n  configurationType?: string;\n}\n\nexport interface SupportedConfigurationItem {\n  name: string;\n  deviceType?: string;\n  configurationType?: string;\n}\n\nexport interface ConfigurationListEmptyState {\n  icon?: string;\n  title?: string;\n  text?: string;\n}\n\nexport enum DeviceConfigurationOperation {\n  UPLOAD_CONFIG = 'c8y_UploadConfigFile',\n  DOWNLOAD_CONFIG = 'c8y_DownloadConfigFile'\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport {\n  EventBinaryService,\n  EventService,\n  IEvent,\n  IManagedObject,\n  InventoryBinaryService,\n  InventoryService,\n  IOperation,\n  OperationService\n} from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class DeviceConfigurationService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  repositoryConfigListUpdated = new EventEmitter<any>();\n\n  constructor(\n    private eventService: EventService,\n    private eventBinaryService: EventBinaryService,\n    private operationService: OperationService,\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private translateService: TranslateService\n  ) {}\n\n  async getLatestConfigurationEvent(deviceId: string | number, type: string): Promise<IEvent> {\n    const filter: object = {\n      source: deviceId,\n      type,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      pageSize: 1\n    };\n\n    const { data } = await this.eventService.list(filter);\n    return data[0];\n  }\n\n  async getEventConfigurationBinary(event: IEvent): Promise<string> {\n    let binary;\n    try {\n      const res = await this.eventBinaryService.download(event);\n      binary = res.text();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return binary;\n  }\n\n  async createUploadConfigFileOperation(device, configurationType) {\n    let operation;\n    const operationText = gettext(\n      'Retrieve {{ configurationType }} configuration snapshot from device {{ deviceName }}'\n    );\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      c8y_UploadConfigFile: {\n        type: configurationType\n      },\n      description: this.translateService.instant(operationText, {\n        configurationType,\n        deviceName: device.name\n      })\n    };\n\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  async getLatestConfigFileOperation(deviceId, configType, operationType): Promise<IOperation> {\n    const filter: object = {\n      deviceId,\n      fragmentType: operationType,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 2000\n    };\n\n    const { data } = await this.operationService.list(filter);\n    return data.find(op => op[operationType].type === configType);\n  }\n\n  async getSnapshotsFromRepository(deviceType, configurationType): Promise<IManagedObject[]> {\n    let query: any;\n    const filter: object = {\n      pageSize: 2000,\n      withTotalPages: true\n    };\n    query = {\n      __filter: {\n        __and: [\n          {\n            type: 'c8y_ConfigurationDump'\n          },\n          {\n            __or: [\n              { configurationType: { __eq: configurationType } },\n              {\n                __not: {\n                  __has: 'configurationType'\n                }\n              }\n            ]\n          }\n        ]\n      },\n      __orderby: [{ configurationType: -1, name: 1 }]\n    };\n\n    if (deviceType) {\n      const deviceTypeFilter = {\n        __or: [\n          { deviceType: { __eq: deviceType } },\n          {\n            __not: {\n              __has: 'deviceType'\n            }\n          }\n        ]\n      };\n      query.__filter.__and.push(deviceTypeFilter);\n    }\n    return (await this.inventoryService.listQuery(query, filter)).data;\n  }\n\n  async createDownloadConfigFileOperation(device, configurationType, binaryUrl) {\n    let operation;\n    const operationText = gettext(\n      'Send configuration {{ configurationType }} to device {{ deviceName }}'\n    );\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      c8y_DownloadConfigFile: {\n        url: binaryUrl,\n        type: configurationType\n      },\n      description: this.translateService.instant(operationText, {\n        configurationType,\n        deviceName: device.name\n      })\n    };\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  async getConfigurationBinaryFile(url) {\n    let binary;\n    const moId = this.inventoryBinaryService.getIdFromUrl(url);\n    if (moId) {\n      const binaryMO = (await this.inventoryService.detail(moId)).data;\n      const res = await this.inventoryBinaryService.download(binaryMO);\n      binary = await res.text();\n    } else {\n      binary = this.fetchExternalBinary(url);\n    }\n    return binary;\n  }\n\n  async saveToConfigurationRepository(config) {\n    const mo: Partial<IManagedObject> = {};\n    Object.assign(mo, {\n      name: config.name,\n      type: 'c8y_ConfigurationDump',\n      deviceType: config.deviceType,\n      configurationType: config.configurationType,\n      c8y_Global: {}\n    });\n    const response = await this.inventoryBinaryService.create(new Blob([config.binary]), {\n      c8y_Global: {}\n    });\n    mo.url = response.data.self;\n    return this.inventoryService.create(mo);\n  }\n\n  updateRepositoryConfigList() {\n    this.repositoryConfigListUpdated.emit();\n  }\n\n  private async fetchExternalBinary(url) {\n    let configBinary;\n    try {\n      const res = await fetch(url);\n      if (res.status === 200) {\n        configBinary = await res.text();\n      }\n    } catch (ex) {\n      // do nothing\n    }\n    return configBinary;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IEvent, IManagedObject, Realtime } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport {\n  ConfigurationListEmptyState,\n  ConfigurationSnapshot,\n  SupportedConfigurationItem\n} from './device-configuration.model';\nimport { Subscription } from 'rxjs';\nimport { gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-configuration',\n  templateUrl: './device-configuration.component.html'\n})\nexport class DeviceConfigurationComponent implements OnInit, OnDestroy {\n  supportedConfigurations: SupportedConfigurationItem[];\n  configurationType: string;\n  configSnapshot: Partial<ConfigurationSnapshot> = {};\n  repositorySnapshots: IManagedObject[];\n  repositorySnapshot: ConfigurationSnapshot;\n  repositorySnapshotsEmptyState: ConfigurationListEmptyState;\n  device: IManagedObject;\n\n  private eventsSubscription: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime\n  ) {\n    this.deviceConfigurationService.repositoryConfigListUpdated.subscribe(async () => {\n      this.repositorySnapshot = undefined;\n      this.repositorySnapshots = await this.getSnapshotsFromRepository(\n        this.device.type,\n        this.configurationType\n      );\n    });\n  }\n\n  ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({\n      name: item\n    }));\n\n    this.repositorySnapshotsEmptyState = {\n      icon: 'gears',\n      title: gettext('No configurations available.'),\n      text: gettext('Add configuration to configuration repository')\n    };\n    const eventsChannel = '/eventsWithChildren/' + this.device.id;\n    this.eventsSubscription = this.realtime.observable(eventsChannel).subscribe(({ data }) => {\n      this.updateConfigSnapshotOnEvent(data);\n    });\n  }\n\n  async onConfigTypeSelected(config) {\n    this.configurationType = undefined;\n    this.repositorySnapshot = undefined;\n    this.configSnapshot = {};\n\n    const configEvent = await this.deviceConfigurationService.getLatestConfigurationEvent(\n      this.device.id,\n      config.name\n    );\n    this.updateConfigSnapshotOnEvent(configEvent, config.name);\n\n    this.configurationType = config.name;\n    this.repositorySnapshots = await this.getSnapshotsFromRepository(this.device.type, config.name);\n  }\n\n  getSnapshotsFromRepository(deviceType, configurationType) {\n    return this.deviceConfigurationService.getSnapshotsFromRepository(\n      deviceType,\n      configurationType\n    );\n  }\n\n  async updateConfigSnapshotOnEvent(event: IEvent, configurationType?) {\n    const type = configurationType || this.configurationType;\n    if (event && event.type === type) {\n      this.configSnapshot = {\n        time: event.time,\n        name: event.text,\n        deviceType: this.device.deviceType,\n        configurationType: type\n      };\n      this.configSnapshot.binary = await this.deviceConfigurationService.getEventConfigurationBinary(\n        event\n      );\n    }\n  }\n\n  async onRepositoryConfigSelected(config) {\n    this.repositorySnapshot = {\n      time: config.creationTime,\n      name: config.name,\n      binaryUrl: config.url,\n      deviceType: config.deviceType,\n      configurationType: config.configurationType\n    };\n    if (config.url) {\n      this.repositorySnapshot.binary = await this.deviceConfigurationService.getConfigurationBinaryFile(\n        config.url\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.eventsSubscription.unsubscribe();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  ConfigurationListEmptyState,\n  SupportedConfigurationItem\n} from './device-configuration.model';\n\n@Component({\n  selector: 'c8y-device-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent {\n  @Input() items: SupportedConfigurationItem[];\n  @Input() itemIcon: string;\n  @Input() emptyState: ConfigurationListEmptyState;\n  @Input() isFilterEnabled: boolean;\n  @Output() configSelected = new EventEmitter<string>();\n  selectedConfig;\n  filterTerm: string = '';\n\n  showConfigurationTypePreview(config): void {\n    this.selectedConfig = config;\n    this.configSelected.emit(config);\n  }\n\n  updatePipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { operationStatusIcons, operationStatusClasses } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-configuration-operation',\n  templateUrl: './configuration-operation.component.html'\n})\nexport class ConfigurationOperationComponent {\n  @Input() operation: IOperation;\n  statusIcons: object;\n  statusClasses: object;\n\n  ngOnInit() {\n    this.statusIcons = operationStatusIcons;\n    this.statusClasses = operationStatusClasses;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-source-code-preview',\n  templateUrl: './source-code-preview.component.html'\n})\nexport class SourceCodePreviewComponent {\n  @Input() isDisabled: boolean;\n  @Input() text: string;\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\n\nexport class DeviceConfigurationGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    return (\n      contextData &&\n      contextData.c8y_SupportedConfigurations &&\n      contextData.c8y_SupportedConfigurations.length > 0\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ConfigurationSnapshot } from './device-configuration.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Component({\n  selector: 'c8y-save-config-to-configuration-repository',\n  templateUrl: 'save-to-repository.component.html'\n})\nexport class SaveToRepositoryComponent {\n  configSnapshot: ConfigurationSnapshot;\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private alertService: AlertService,\n    private deviceConfigurationService: DeviceConfigurationService\n  ) {}\n\n  async save() {\n    try {\n      await this.deviceConfigurationService.saveToConfigurationRepository(this.configSnapshot);\n      this.alertService.success(gettext('Configuration saved.'));\n      this._save();\n    } catch (ex) {\n      if (ex.data) {\n        this.alertService.danger(ex.data.message);\n      }\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation } from './device-configuration.model';\nimport { IManagedObject, IOperation, OperationStatus, Realtime, UserService } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { Subscription } from 'rxjs';\nimport { saveAs } from 'file-saver/FileSaver';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { cloneDeep } from 'lodash-es';\nimport { AppStateService } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-configuration-preview',\n  templateUrl: './configuration-preview.component.html'\n})\nexport class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n  @Input() device: IManagedObject;\n  @Input() configurationType: string;\n  @Input() configSnapshot: ConfigurationSnapshot;\n  @Input() canSaveSnapshot: boolean;\n  @Input() actionButtonText: string;\n  @Input() actionButtonIcon: string;\n  @Input() operationToTrigger:\n    | DeviceConfigurationOperation.UPLOAD_CONFIG\n    | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n\n  operation: IOperation;\n  private operationsSubscription: Subscription;\n\n  constructor(\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private bsModal: BsModalService,\n    private user: UserService,\n    private appState: AppStateService\n  ) {}\n\n  async ngOnInit() {\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      const configOperation = await this.getOperation();\n      this.updateOperation(configOperation);\n    }\n\n    const operationsChannel = `/operations/${this.device.id}`;\n    this.operationsSubscription = this.realtime\n      .observable(operationsChannel)\n      .subscribe(({ data }) => {\n        this.updateOperation(data);\n      });\n  }\n\n  async createDeviceOperation() {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      this.operation = await this.deviceConfigurationService.createDownloadConfigFileOperation(\n        this.device,\n        this.configurationType,\n        this.configSnapshot.binaryUrl\n      );\n    }\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      this.operation = await this.deviceConfigurationService.createUploadConfigFileOperation(\n        this.device,\n        this.configurationType\n      );\n    }\n  }\n\n  showOperation(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return !!this.operation;\n    }\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(\n        this.operation.status\n      )\n    );\n  }\n\n  showBinary(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return true;\n    }\n    return !this.showOperation();\n  }\n\n  isCreateOperationDisabled(): boolean {\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status)\n    );\n  }\n\n  updateOperation(operation: IOperation) {\n    if (\n      operation &&\n      operation[this.operationToTrigger] &&\n      operation[this.operationToTrigger].type &&\n      operation[this.operationToTrigger].type === this.configurationType\n    ) {\n      this.operation = operation;\n    }\n  }\n\n  getOperation() {\n    return this.deviceConfigurationService.getLatestConfigFileOperation(\n      this.device.id,\n      this.configurationType,\n      this.operationToTrigger\n    );\n  }\n\n  download() {\n    const blob = new Blob([this.configSnapshot.binary]);\n    const fileName = this.configSnapshot.name;\n    saveAs(blob, fileName);\n  }\n\n  async saveToRepository() {\n    const initialState = {\n      configSnapshot: cloneDeep(this.configSnapshot)\n    };\n    const modal = this.bsModal.show(SaveToRepositoryComponent, {\n      class: 'modal-sm',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as SaveToRepositoryComponent;\n    try {\n      await modal.result;\n      this.deviceConfigurationService.updateRepositoryConfigList();\n      modal.close();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  hasPermission(): boolean {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  ngOnDestroy() {\n    this.operationsSubscription.unsubscribe();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SupportedConfigurationItem } from './device-configuration.model';\n\n@Pipe({\n  name: 'configurationFilterPipe'\n})\nexport class ConfigurationFilterPipe implements PipeTransform {\n  transform(items: any[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter(\n          (item: SupportedConfigurationItem) =>\n            this.filterContainString(item.name, filterTerm) ||\n            this.filterContainString(item.deviceType, filterTerm)\n        );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, gettext, HOOK_ONCE_ROUTE, Route, ViewContext } from '@c8y/ngx-components';\nimport { DeviceConfigurationComponent } from './device-configuration.component';\nimport { ConfigurationListComponent } from './configuration-list.component';\nimport { ConfigurationOperationComponent } from './configuration-operation.component';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { SourceCodePreviewComponent } from './source-code-preview.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { DeviceConfigurationGuard } from './device-configuration.guard';\nimport { ConfigurationPreviewComponent } from './configuration-preview.component';\nimport { ConfigurationFilterPipe } from './configuration-filter.pipe';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\n\nconst routes: Route[] = [\n  {\n    context: ViewContext.Device,\n    path: 'device-configuration',\n    component: DeviceConfigurationComponent,\n    label: gettext('Configuration'),\n    icon: 'gears',\n    canActivate: [DeviceConfigurationGuard]\n  }\n];\n\n@NgModule({\n  declarations: [\n    DeviceConfigurationComponent,\n    ConfigurationListComponent,\n    ConfigurationOperationComponent,\n    SourceCodePreviewComponent,\n    ConfigurationPreviewComponent,\n    ConfigurationFilterPipe,\n    SaveToRepositoryComponent\n  ],\n  exports: [],\n  imports: [CoreModule, TooltipModule],\n  entryComponents: [DeviceConfigurationComponent, SaveToRepositoryComponent],\n  providers: [\n    DeviceConfigurationService,\n    DeviceConfigurationGuard,\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: routes,\n      multi: true\n    }\n  ]\n})\nexport class DeviceConfigurationModule {}\n"]}