!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/router"),require("@c8y/ngx-components"),require("lodash-es")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/device-lists",["exports","@angular/core","@angular/router","@c8y/ngx-components","lodash-es"],n):n(((e=e||self).c8y=e.c8y||{},e.c8y["ngx-components"]=e.c8y["ngx-components"]||{},e.c8y["ngx-components"]["device-lists"]={}),e.ng.core,e.ng.router,e.c8y["ngx-components"],e.lodashEs)}(this,(function(e,n,t,r,o){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function i(e,n,t,r){var o,i=arguments.length,c=i<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,n,t,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(c=(i<3?o(c):i>3?o(n,t,c):o(n,t))||c);return i>3&&c&&Object.defineProperty(n,t,c),c}function c(e,n){var t,r,o,i,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;c;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,r=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!(o=(o=c.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=n.call(e,c)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}var a=function(){function e(e){this.optionsService=e}return e.prototype.canActivate=function(e,n){return Boolean(this.optionsService.get("beta",!1))},e.ctorParameters=function(){return[{type:r.OptionsService}]},e=i([n.Injectable()],e)}(),l=function(){function e(e){this.deviceGridExampleGuard=e}return e.prototype.get=function(){return e=this,n=void 0,o=function(){var e;return c(this,(function(n){return this.deviceGridExampleGuard.canActivate(null,null)?((e=new r.NavigatorNode({label:r.gettext("Grids"),icon:"table"})).add(new r.NavigatorNode({label:r.gettext("Device grid"),path:"/grids/device-grid",icon:"table"})),[2,e]):[2,[]]}))},new((t=void 0)||(t=Promise))((function(r,i){function c(e){try{l(o.next(e))}catch(e){i(e)}}function a(e){try{l(o.throw(e))}catch(e){i(e)}}function l(e){e.done?r(e.value):new t((function(n){n(e.value)})).then(c,a)}l((o=o.apply(e,n||[])).next())}));var e,n,t,o},e.ctorParameters=function(){return[{type:a}]},e=i([n.Injectable()],e)}(),s=function(){function e(e){this.deviceGridService=e,this.examples=[this.getExampleWithStandardColumns(),this.getExampleWithStandardColumnsAndSavedFilteringSorting(),this.getExampleWithCustomColumnAndPredefinedFiltering()]}return e.prototype.getExampleWithStandardColumns=function(){return{label:"Standard columns",columns:this.deviceGridService.getDefaultColumns()}},e.prototype.getExampleWithStandardColumnsAndSavedFilteringSorting=function(){var e=this.deviceGridService.getDefaultColumns(),n=o.find(e,{name:"name"});return n.externalFilterQuery={names:["*Temp*"]},n.sortOrder="desc",{label:"Standard columns with saved filtering/sorting",columns:e}},e.prototype.getExampleWithCustomColumnAndPredefinedFiltering=function(){var e=this.deviceGridService.getDefaultColumns(),n=new r.CustomDeviceGridColumn;return n.name="type",n.path="type",n.header=r.gettext("Type"),n.externalFilterQuery={equals:["c8y_MQTTDevice"]},e.splice(2,0,n),{label:"Standard columns with custom one with predefined filtering",columns:e}},e.prototype.onExampleSelect=function(e){this.columnsInput=e.columns},e.ctorParameters=function(){return[{type:r.DeviceGridService}]},e=i([n.Component({selector:"c8y-device-grid-example",template:'<div class="row">\n  <c8y-device-grid\n    [title]="\'Select devices for bulk operation\'"\n    [columns]="columnsInput"\n    [actionControls]="[]"\n    (onColumnsChange)="columnsOutput = $event"\n    (onDeviceQueryStringChange)="deviceQueryStringOutput = $event"\n  ></c8y-device-grid>\n</div>\n\n<div class="row">\n  <div class="card col-sm-6">\n    <div class="card-header separator">\n      <h4 class="card-title">Input</h4>\n    </div>\n    <div class="card-block">\n      <div class="c8y-select-wrapper">\n        <select\n          class="form-control"\n          [ngModel]="selectedExample"\n          (ngModelChange)="onExampleSelect($event)"\n        >\n          <option *ngFor="let example of examples" [ngValue]="example">{{\n            example.label\n          }}</option></select\n        ><span></span>\n      </div>\n      <pre\n        >{{ columnsInput | json }}\n      </pre>\n    </div>\n  </div>\n\n  <div class="card col-sm-6">\n    <div class="card-header">\n      <span>\n        <h4 class="card-title">Output</h4>\n      </span>\n    </div>\n    <div class="card-block">\n      <pre\n        >{{ deviceQueryStringOutput | json }}\n      </pre>\n      <pre\n        >{{ columnsOutput | json }}\n      </pre>\n    </div>\n  </div>\n</div>\n'})],e)}(),u=[{path:"grids/device-grid",component:s,canActivate:[a]}],d=function(){function e(){}return e=i([n.NgModule({imports:[r.CoreModule,r.CommonModule,t.RouterModule.forRoot(u,{useHash:!0})],declarations:[s],entryComponents:[s],exports:[],providers:[{provide:r.HOOK_NAVIGATOR_NODES,useClass:l,multi:!0},a]})],e)}();e.DeviceListsModule=d,e.ɵa=s,e.ɵb=a,e.ɵc=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-device-lists.umd.min.js.map