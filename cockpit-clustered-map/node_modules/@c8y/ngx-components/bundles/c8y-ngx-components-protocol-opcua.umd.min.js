!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/cdk/tree"),require("@angular/router"),require("@angular/core"),require("@c8y/ngx-components"),require("ngx-bootstrap/buttons"),require("@c8y/client"),require("rxjs"),require("lodash-es"),require("lodash"),require("@angular/forms"),require("@angular/upgrade/static"),require("@ngx-translate/core"),require("ngx-bootstrap/collapse"),require("ngx-bootstrap/dropdown"),require("ngx-bootstrap/tooltip"),require("ngx-bootstrap/popover"),require("rxjs/operators"),require("@angular/platform-browser/animations"),require("angular"),require("@c8y/ng1-modules/core/bootstrap")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/protocol-opcua",["exports","@angular/cdk/tree","@angular/router","@angular/core","@c8y/ngx-components","ngx-bootstrap/buttons","@c8y/client","rxjs","lodash-es","lodash","@angular/forms","@angular/upgrade/static","@ngx-translate/core","ngx-bootstrap/collapse","ngx-bootstrap/dropdown","ngx-bootstrap/tooltip","ngx-bootstrap/popover","rxjs/operators","@angular/platform-browser/animations","angular","@c8y/ng1-modules/core/bootstrap"],t):t(((e=e||self).c8y=e.c8y||{},e.c8y["ngx-components"]=e.c8y["ngx-components"]||{},e.c8y["ngx-components"]["protocol-opcua"]={}),e.ng.cdk.tree,e.ng.router,e.ng.core,e.c8y["ngx-components"],e.buttons,e.client,e.rxjs,e.lodashEs,e.lodash,e.ng.forms,e.ng.upgrade.static,e.core$1,e.collapse,e.dropdown,e.tooltip,e.popover,e.rxjs.operators,e.ng.platformBrowser.animations,e.angular,e.bootstrap)}(this,(function(e,t,n,o,i,s,r,a,c,l,d,p,u,h,v,g,m,f,y,b,S){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var I=function(e,t){return(I=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function w(e,t){function n(){this.constructor=e}I(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function N(e,t,n,o){var i,s=arguments.length,r=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(r=(s<3?i(r):s>3?i(t,n,r):i(t,n))||r);return s>3&&r&&Object.defineProperty(t,n,r),r}function x(e,t,n,o){return new(n||(n=Promise))((function(i,s){function r(e){try{c(o.next(e))}catch(e){s(e)}}function a(e){try{c(o.throw(e))}catch(e){s(e)}}function c(e){e.done?i(e.value):new n((function(t){t(e.value)})).then(r,a)}c((o=o.apply(e,t||[])).next())}))}function C(e,t){var n,o,i,s,r={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,o&&(i=2&s[0]?o.return:s[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,s[1])).done)return i;switch(o=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,o=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(i=(i=r.trys).length>0&&i[i.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){r.label=s[1];break}if(6===s[0]&&r.label<i[1]){r.label=i[1],i=s;break}if(i&&r.label<i[2]){r.label=i[2],r.ops.push(s);break}i[2]&&r.ops.pop(),r.trys.pop();continue}s=t.call(e,r)}catch(e){s=[6,e],o=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}}function P(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,s=n.call(e),r=[];try{for(;(void 0===t||t-- >0)&&!(o=s.next()).done;)r.push(o.value)}catch(e){i={error:e}}finally{try{o&&!o.done&&(n=s.return)&&n.call(s)}finally{if(i)throw i.error}}return r}var k=function(){function e(e){this.client=e,this.microserviceUrl="/service/opcua-mgmt-service/address-space",this.header={"Content-Type":"application/json"},this.nodeNavigationData$=new a.BehaviorSubject({node:void 0,selectedAncestorIds:[]})}return e.prototype.resetTreeToRootNode=function(){this.triggerNodeToOpen({node:void 0,selectedAncestorIds:[]})},e.prototype.triggerNodeToOpen=function(e){this.nodeNavigationData$.next(e)},e.prototype.getNodeNavData$=function(){return this.nodeNavigationData$.asObservable()},e.prototype.getNode=function(e,t){if(e&&e.length>0)return t&&t.length>0?this.getNodeById(e,t):this.getRootNode(e)},e.prototype.getRootNode=function(e){if(e&&e.length>0){var t={method:"GET",headers:this.header};return this.client.fetch(this.microserviceUrl+"/"+e,t)}},e.prototype.getNodeById=function(e,t){if(e&&t&&e.length>0&&t.length>0){var n={method:"GET",headers:this.header},o=encodeURIComponent(t);return this.client.fetch(this.microserviceUrl+"/"+e+"?nodeId="+o,n)}},e.prototype.getChildrenOf=function(e,t){if(t&&e.nodeId&&t.length>0&&e.nodeId.length>0){var n={method:"GET",headers:this.header},o=encodeURIComponent(e.nodeId);return this.client.fetch(this.microserviceUrl+"/"+t+"/children?nodeId="+o,n)}},e.prototype.childrenAvailable=function(e){return!(!e||0===e.length)&&e.some((function(e){return!e.inverse&&e.hierarchical}))},e.prototype.getSearchedNodes=function(e,t){return x(this,void 0,void 0,(function(){var n,o;return C(this,(function(i){switch(i.label){case 0:return n="service/opcua-mgmt-service/search/"+t+"/",o={headers:this.header,params:{searchString:"*"+e+"*"}},[4,this.client.fetch(n,o)];case 1:return[2,i.sent().json()]}}))}))},e.prototype.getIcon=function(e){return{Object:"cube",Variable:"th-list",Method:"random",View:"window-maximize",ObjectType:"c8y-group",VariableType:"c8y-group",ReferenceType:"c8y-group",DataType:"c8y-group"}[e]||"circle"},e.ctorParameters=function(){return[{type:r.FetchClient}]},e=N([o.Injectable()],e)}(),M=function(){function e(e){this.addressSpaceService=e,this.selected=!1,this.showDetails=!1,this.toggleAttrDetail=new o.EventEmitter}return Object.defineProperty(e.prototype,"node",{set:function(e){this._node=e,e?this.setNodeData(e):this.showDetails=!1},enumerable:!0,configurable:!0}),e.prototype.setNodeData=function(e){this.showDetails=!0;var t=e.attributes,n=e.references;this.nodeDataRef=n;this.nodeDataAttr=Object.assign({},t,c.omit(e,["attributes","references","children","currentlyLoadingChildren","expanded","browsePath","relativePath","parentNode"]))},e.prototype.toggleDetail=function(e){this.showDetails=!this.showDetails,this.toggleAttrDetail.emit(e)},e.prototype.navigateTo=function(e){var t={node:this._node,selectedAncestorIds:e};this.toggleDetail(this._node),this.addressSpaceService.triggerNodeToOpen(t)},e.ctorParameters=function(){return[{type:k}]},N([o.Input()],e.prototype,"node",null),N([o.Output()],e.prototype,"toggleAttrDetail",void 0),e=N([o.Component({selector:"opcua-address-space-detail",template:'<div\n  class="card flex-scroll bottom-m-xs split-row-2 animated fast"\n  style="pointer-events: all"\n  [ngClass]="{ fadeInRightBig: showDetails, fadeOutRightBig: !showDetails }"\n>\n  <div class="card-header separator ">\n    <h4>{{ \'Attributes\' | translate }}</h4>\n    <button\n      class="close flex-item-right visible-sm visible-xs"\n      title="{{ \'Close\' | translate }}"\n      (click)="toggleDetail(nodeDataAttr)"\n    >\n      &times;\n    </button>\n  </div>\n  <div class="card-inner-scroll">\n    <div class="card-block">\n      <table class="table table-striped table-condensed">\n        <colgroup>\n          <col width="50%" />\n          <col width="50%" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th>{{ \'Attribute\' | translate }}</th>\n            <th>{{ \'Value\' | translate }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let item of nodeDataAttr | keyvalue">\n            <td>{{ item.key }}</td>\n            <td *ngIf="item.key === \'absolutePaths\'" class="text-break-word">\n              {{ item.value | json }}\n            </td>\n            <td *ngIf="item.key === \'ancestorNodeIds\'" class="text-break-word">\n              <a *ngFor="let value of item.value" (click)="navigateTo(value)">\n                {{ value | json }}</a\n              >\n            </td>\n            <td *ngIf="item.key !== \'absolutePaths\' && item.key !== \'ancestorNodeIds\'">\n              {{ item.value }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<div\n  class="card flex-scroll split-row-2 animated fast"\n  style="pointer-events: all"\n  [ngClass]="{ fadeInRightBig: showDetails, fadeOutRightBig: !showDetails }"\n>\n  <div class="card-header separator">\n    <h4>{{ \'References\' | translate }}</h4>\n  </div>\n  <div class="card-inner-scroll">\n    <div class="card-block">\n      <table class="table table-striped table-condensed">\n        <colgroup>\n          <col width="50%" />\n          <col width="50%" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th>{{ \'Attribute\' | translate }}</th>\n            <th>{{ \'Value\' | translate }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let item of nodeDataRef">\n            <td>{{ item.referenceLabel }}</td>\n            <td class="text-break-word">{{ item.targetLabel }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n'})],e)}(),A=function(){function e(e,t,n,o){this.client=e,this.inventoryService=t,this.router=n,this.alertService=o,this.microserviceUrl="/service/opcua-mgmt-service/server",this.deviceTypeProtocolUrl="/service/opcua-mgmt-service/deviceTypes",this.header={"Content-Type":"application/json"},this.binaryService=t.binary}return e.prototype.getServers=function(e){if(e&&e.length>0){var t={method:"GET",headers:this.header};return this.client.fetch(this.microserviceUrl+"/"+e,t)}},e.prototype.createServer=function(e){if(this.doesGatewayIdExist(e)){this.cleanUpPayload(e);var t={method:"POST",headers:this.header,body:JSON.stringify(e)};return this.client.fetch(""+this.microserviceUrl,t)}},e.prototype.updateServer=function(e){return x(this,void 0,void 0,(function(){var t,n,o;return C(this,(function(i){switch(i.label){case 0:return this.doesGatewayIdExist(e)&&this.doesIdExist(e)?(this.cleanUpPayload(e),t={method:"POST",headers:this.header,body:JSON.stringify(e)},[4,this.client.fetch(""+this.microserviceUrl,t)]):[3,6];case 1:n=i.sent(),o=void 0,i.label=2;case 2:return i.trys.push([2,4,,5]),[4,n.json()];case 3:return o=i.sent(),[3,5];case 4:return i.sent(),[3,5];case 5:if(200===n.status)return[2,o];this.alertService.addServerFailure({data:o,res:n}),i.label=6;case 6:return[2]}}))}))},e.prototype.removeServer=function(e){if(this.doesGatewayIdExist(e)&&this.doesIdExist(e)){return this.client.fetch(this.microserviceUrl+"/"+e.gatewayId+"/"+e.id,{method:"DELETE"})}},e.prototype.getKeystore=function(e){return e&&e.length>0?this.inventoryService.detail(e):null},e.prototype.uploadKeystore=function(e){return e&&e.size>0?this.binaryService.create(e):Promise.reject("Invalid file")},e.prototype.updateKeystore=function(e,t){return x(this,void 0,void 0,(function(){var n;return C(this,(function(o){switch(o.label){case 0:return e&&e.length>0&&t&&t.size>0?[4,this.removeKeystore(e)]:[3,2];case 1:if((n=o.sent().res)&&204===n.status)return[2,this.uploadKeystore(t)];o.label=2;case 2:return[2,Promise.reject("Invalid file")]}}))}))},e.prototype.removeKeystore=function(e){if(e&&e.length>0)return this.binaryService.delete(e)},e.prototype.getMoId=function(){var e=this.router.routerState.snapshot.url;return new RegExp(/device\/\d+/).test(e)?e.match(/\d+/)[0]:""},e.prototype.getId=function(){var e=this.router.routerState.snapshot.url;if(new RegExp(/deviceprotocols/).test(e)&&RegExp(/\d+$/).test(e))return e.match(/\d+$/)[0]},e.prototype.getDeviceProtocol=function(e){return x(this,void 0,void 0,(function(){var t;return C(this,(function(n){return t={method:"GET",headers:this.header},[2,this.client.fetch(this.deviceTypeProtocolUrl+"/"+e,t)]}))}))},e.prototype.updateDeviceProtocol=function(e){return x(this,void 0,void 0,(function(){var t;return C(this,(function(n){return t={method:"PUT",headers:this.header,body:JSON.stringify(e)},[2,this.client.fetch(this.deviceTypeProtocolUrl+"/"+e.id,t)]}))}))},e.prototype.createDeviceProtocol=function(e){return x(this,void 0,void 0,(function(){var t;return C(this,(function(n){return t={method:"POST",headers:this.header,body:JSON.stringify(e)},[2,this.client.fetch(""+this.deviceTypeProtocolUrl,t)]}))}))},e.prototype.doesGatewayIdExist=function(e){return e&&e.gatewayId&&e.gatewayId.length>0},e.prototype.doesIdExist=function(e){return e&&e.id&&e.id.length>0&&"new"!==e.id},e.prototype.cleanUpPayload=function(e){e&&(e.id&&"new"===e.id&&delete e.id,e.quickInfo&&delete e.quickInfo)},e.ctorParameters=function(){return[{type:r.FetchClient},{type:r.InventoryService},{type:n.Router},{type:i.AlertService}]},e=N([o.Injectable()],e)}(),O=function(e){function t(t,n){return e.call(this,"c8yObjectMapping",t,n)||this}return w(t,e),t.ctorParameters=function(){return[{type:o.ElementRef},{type:o.Injector}]},N([o.Input()],t.prototype,"mapping",void 0),N([o.Input()],t.prototype,"customActions",void 0),N([o.Input()],t.prototype,"autoObserveParams",void 0),N([o.Input()],t.prototype,"hideAutoObserve",void 0),t=N([o.Directive({selector:"c8y-object-mapping"})],t)}(p.UpgradeComponent),E=function(){function e(e,t){var n=this;this.alertService=e,this.addressSpaceService=t,this.onAction=new o.EventEmitter,this.isPathFocused=!1,this.isBrowsePathUniq=!0,this.dataReporting="default",this.isTreeOpen=!1,this.isNew=!1,this.resetModel=!1,this.moId="",this.getMappings=function(){return n.getParentAttr("mappings")}}return e.prototype.toggleDetail=function(){this.isDetailOpen=!this.isDetailOpen,this.resetModel&&this.initialFormSetup()},e.prototype.ngOnInit=function(){this.initialFormSetup()},e.prototype.initialFormSetup=function(){var e={headers:[{key:"Authorization",value:""},{key:"Content-Type",value:""}],bodyTemplate:"",type:"HttpPost",endpoint:""};this.mapping=l.assign({},{id:"",browsePath:[],name:"",subscriptionType:{type:"None"}},l.cloneDeep(this._model)),l.isEmpty(this.mapping.browsePath)?(this.isNew=!0,this.isDetailOpen=!0):(this.browsePath=this.stringfyBrowsePath(this.mapping.browsePath),this.nodeDisplayName=this.mapping.name),this.referencedRootNodeId?(this.referencedNode={nodeId:this.referencedRootNodeId},this.addressSpaceService.triggerNodeToOpen({node:{nodeId:this.referencedRootNodeId,children:[],expanded:!1,absolutePaths:[[]]},selectedAncestorIds:[]})):this.referencedNode={nodeId:""},l.get(this.mapping,"customAction")?(this.customAction=l.assign(e,l.get(this.mapping,"customAction")),this.customAction.headers=this.mapHeadersObjectToList(l.get(this.customAction,"headers"))):this.customAction=l.assign({},e),l.unset(this.mapping,"customAction"),l.get(this._model,"subscriptionType")?this.dataReporting="custom":this.dataReporting="default",this.resetModel=!1},e.prototype.showAddressSpaceTree=function(){return!l.isEmpty(this.referencedServerId)},e.prototype.ngAfterViewInit=function(){l.get(this.mapping,"subscriptionType")&&"None"!==l.get(this.mapping,"subscriptionType.type")&&(this.dataReporting="custom")},e.prototype.mapHeadersObjectToList=function(e){if(Object.keys(e).length>0)return Object.keys(e).map((function(t){return{key:t,value:e[t]}}))},e.prototype.stringfyBrowsePath=function(e){return JSON.stringify(e)},e.prototype.updateBrowsePath=function(e){this.mapping.browsePath=e.relativePath,this.nodeDisplayName=e.displayName,this.mapping.name=this.nodeDisplayName,this.browsePath=this.stringfyBrowsePath(this.mapping.browsePath),this.browsePathModel.control.markAsDirty()},e.prototype.updateDisplayname=function(){this.mapping.name=this.nodeDisplayName},e.prototype.updateBrowsePathInput=function(){if(this.browsePath)try{this.mapping.browsePath=JSON.parse(this.browsePath)}catch(e){return}},e.prototype.save=function(){"default"===this.dataReporting&&l.unset(this.mapping,"subscriptionType");var e=this.subFormRef.value.customAction;if(e.hasCustomAction){var t=this.customAction.headers.reduce((function(e,t){return e[t.key]=t.value,e}),{});if(e.bodyTemplate){var n=e.bodyTemplate,o=JSON.parse(n),i=JSON.stringify(o);this.customAction.bodyTemplate=i}this.customAction=l.assign(this.customAction,{headers:t}),this.mapping=l.assign(this.mapping,{customAction:this.customAction})}this.onAction.emit({action:"save",data:l.assign({},this.mapping)}),this.isDetailOpen=!1},e.prototype.cancel=function(){this.isDetailOpen=!1,this.resetModel=!0,"new"===this.mapping.id&&this.onAction.emit({action:"delete",data:l.assign({},this.mapping)})},e.prototype.onDelete=function(){this.onAction.emit({action:"delete",data:this.mapping})},e.prototype.isFormValid=function(e){return e.valid&&this.objectMappingForm.$componentScope.mappingForm.$valid},e.prototype.isActive=function(){return this.isDetailOpen},e.prototype.setTreeFromRefNode=function(){this.referencedRootNodeId&&this.addressSpaceService.triggerNodeToOpen({node:{nodeId:this.referencedRootNodeId,children:[],expanded:!1,absolutePaths:[[]]},selectedAncestorIds:[]})},e.ctorParameters=function(){return[{type:i.AlertService},{type:k}]},N([o.ViewChild(O,{static:!1})],e.prototype,"objectMappingForm",void 0),N([o.ViewChild("variableForm",{static:!1})],e.prototype,"subFormRef",void 0),N([o.ViewChild("browsePathModel",{static:!1})],e.prototype,"browsePathModel",void 0),N([o.Input("resource")],e.prototype,"_model",void 0),N([o.Input()],e.prototype,"index",void 0),N([o.Input()],e.prototype,"getParentAttr",void 0),N([o.Input()],e.prototype,"referencedServerId",void 0),N([o.Input()],e.prototype,"referencedRootNodeId",void 0),N([o.Output()],e.prototype,"onAction",void 0),e=N([o.Component({selector:"opcua-device-protocol-mapping",template:'<div class="list-group-item collapsible" [ngClass]="{ expanded: isDetailOpen }">\n  <div class="flex-row" (click)="toggleDetail()">\n    <div class="list-item-actions">\n      <button class="btn btn-clean showOnHover flex-item-right" title="{{ \'Delete\' | translate }}">\n        <i c8yIcon="minus-circle" class="text-danger" (click)="onDelete()"></i>\n      </button>\n      <button\n        type="button"\n        title="{{ \'Expand\' | translate }}"\n        class="collapse-btn"\n        [ngClass]="{ active: isDetailOpen }"\n      >\n        <i class="fa fw fa-chevron-down"></i>\n      </button>\n    </div>\n\n    <div class="list-item-icon">\n      <i c8yIcon="sliders"></i>\n    </div>\n\n    <div class="list-item-body">\n      <div class="row flex-row">\n        <div class="col-sm-7 col-xs-12">\n          <p>\n            {{ nodeDisplayName }}<br />\n            <small\n              *ngIf="mapping.browsePath.length > 0"\n              class="text-muted text-truncate"\n              title="{{ mapping.browsePath | json }}"\n              >{{ mapping.browsePath | json }}</small\n            >\n          </p>\n\n          <p></p>\n        </div>\n\n        <div class="col-sm-4 col-xs-10">\n          <div class="list-functionalities">\n            <label class="small right-m hidden-xs" translate>Functionalities</label>&nbsp;\n            <c8y-object-mapping-status-icons [mapping]="mapping"></c8y-object-mapping-status-icons>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="detail" [collapse]="!isDetailOpen" [isAnimated]="true">\n    <div class="form" [ngModelGroup]="index" #variableForm="ngModelGroup" *ngIf="isDetailOpen">\n      <div class="row top-p-sm">\n        <c8y-form-group class="col-md-4" [status]="!isBrowsePathUniq ? \'error\' : \'\'">\n          <label translate>Path</label>\n          <div\n            class="dropdown"\n            dropdown\n            #dropdown="bs-dropdown"\n            [insideClick]="true"\n            style="width:100%;"\n          >\n            <input\n              class="form-control"\n              c8yBrowsePathValidator\n              [getMappings]="getMappings"\n              [model]="mapping"\n              type="text"\n              name="browsePath"\n              dropdownToggle\n              placeholder="{{ \'e.g.\' | translate }} {{ [\'2:Node1\', \'2:SubNode1\'] | json }}"\n              [(ngModel)]="browsePath"\n              (change)="updateBrowsePathInput()"\n              (focus)="setTreeFromRefNode()"\n              required\n              #browsePathModel="ngModel"\n            />\n            <div\n              *dropdownMenu\n              class="dropdown-menu panel-inner-scroll"\n              style="max-height:200px; width: 100%;"\n            >\n              <opcua-address-space-tree\n                *ngIf="showAddressSpaceTree()"\n                [node]="referencedNode"\n                [moId]="referencedServerId"\n                (selectedNode)="updateBrowsePath($event); dropdown.hide()"\n              ></opcua-address-space-tree>\n            </div>\n          </div>\n          <c8y-messages>\n            <c8y-message\n              name="invalidBrowsePathNotation"\n              text="{{ \'Must be a valid array of strings.\' | translate }}"\n            ></c8y-message>\n            <c8y-message\n              name="browsePathNotUnique"\n              text="{{ \'Variable with this path is already added.\' | translate }}"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n\n        <c8y-form-group class="col-md-4">\n          <label translate>Name</label>\n          <div class="input-group">\n            <input\n              class="form-control"\n              type="test"\n              name="displayName"\n              placeholder="{{ \'e.g. childDevice2\' | translate }} "\n              required\n              [(ngModel)]="nodeDisplayName"\n              (change)="updateDisplayname()"\n            />\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class="row" ngModelGroup="dataReportingSection">\n        <c8y-form-group class="col-sm-4 col-md-3 col-lg-2">\n          <label>\n            <span translate>Data reporting</span>\n          </label>\n          <div class="input-group">\n            <label class="c8y-radio radio-inline">\n              <input\n                type="radio"\n                [(ngModel)]="dataReporting"\n                name="ReportingMode"\n                value="default"\n              />\n              <span></span> {{ \'Default\' | translate }}\n            </label>\n            <label class="c8y-radio radio-inline">\n              <input type="radio" [(ngModel)]="dataReporting" name="ReportingMode" value="custom" />\n              <span></span> {{ \'Custom\' | translate }}\n            </label>\n          </div>\n        </c8y-form-group>\n        <div\n          class="col-sm-8 col-md-9 col-lg-10"\n          *ngIf="dataReporting === \'custom\'"\n          ngModelGroup="overriddenSubscription"\n        >\n          <opcua-device-protocol-data-reporting\n            [model]="mapping"\n          ></opcua-device-protocol-data-reporting>\n        </div>\n      </div>\n\n      <c8y-object-mapping [mapping]="mapping" [hideAutoObserve]="true"></c8y-object-mapping>\n      <div ngModelGroup="customAction">\n        <opcua-device-protocol-mapping-customaction\n          [customAction]="customAction"\n        ></opcua-device-protocol-mapping-customaction>\n      </div>\n      <button\n        id="cancelBtn"\n        class="btn btn-default top-m-md bottom-m-lg"\n        style="min-width: 100px;"\n        (click)="cancel()"\n        translate\n      >\n        Cancel\n      </button>\n      <button\n        id="saveBtn"\n        class="btn btn-primary top-m-md bottom-m-lg"\n        style="min-width: 100px;"\n        (click)="save()"\n        [disabled]="!isFormValid(variableForm)"\n        translate\n      >\n        Save\n      </button>\n    </div>\n  </div>\n</div>\n',viewProviders:[{provide:d.ControlContainer,useExisting:d.NgModelGroup}]})],e)}(),R=function(){function e(e,t,n,o){var i=this;this.changeDetectorRef=e,this.opcuaService=t,this.alertService=n,this.router=o,this.initialModel={id:"",fieldbusType:"opcuaV2",description:"",unit:"",fieldbusVersion:4,name:"",referencedServerId:"",referencedRootNodeId:"",subscriptionType:{type:"None"},mappings:[],overriddenSubscriptions:[],applyConstraints:{browsePathMatchesRegex:"",matchesNodeIds:[],serverObjectHasFragment:"",matchesServerIds:[]},enabled:""},this.isLoaded=!0,this.getParentAttr=function(e){return l.get(i.model,e)}}return e.prototype.ngAfterContentChecked=function(){this.changeDetectorRef.detectChanges()},e.prototype.getMapping=function(){return this.model.mappings},e.prototype.getEmptyMappingObject=function(){return{id:"new",browsePath:[]}},e.prototype.getOverriddenSubscriptionsByPath=function(e){return l.find(this.model.overriddenSubscriptions,{browsePath:e})},e.prototype.getStructuredResource=function(e){var t=this.getOverriddenSubscriptionsByPath(e.browsePath),n=l.assign({},e);return t&&(n=l.assign({},e,{subscriptionType:t.subscriptionType})),n},e.prototype.ngOnInit=function(){return x(this,void 0,void 0,(function(){var e,t,n,o;return C(this,(function(i){switch(i.label){case 0:return(e=this.opcuaService.getId())?[4,this.opcuaService.getDeviceProtocol(e)]:[3,7];case 1:return(t=i.sent())&&200!==t.status?t.json?[4,t.json()]:[3,3]:[3,5];case 2:return n=i.sent(),[3,4];case 3:n=void 0,i.label=4;case 4:return o=n,this.alertService.addServerFailure({data:o,res:t}),this.isLoaded=!1,[3,7];case 5:return[4,t.json()];case 6:(o=i.sent())&&null===o.applyConstraints&&delete o.applyConstraints,o&&null===o.subscriptionType&&delete o.subscriptionType,this.model=l.assign(this.initialModel,o),this.model.mappings||(this.model.mappings=[]),this.model=l.assign(this.initialModel,this.updateViableMapping(o)),this.isLoaded=!1,i.label=7;case 7:return[2]}}))}))},e.prototype.updateViableMapping=function(e){var t=e.mappings,n=[];return t&&(n=t.map((function(e,t){return l.assign(e,{id:t})}))),l.assign(e,{mappings:n})},e.prototype.trackByIndex=function(e){return e},e.prototype.addVariable=function(){this.model.mappings.push(this.getEmptyMappingObject())},e.prototype.updateVariable=function(e){var t=this.model.mappings,n=l.findIndex(t,{id:e.id});t.splice(n,1),"new"===e.id&&(e.id=t.length),t.push(e)},e.prototype.removeVariable=function(e){var t=this.model.mappings,n=l.findIndex(t,{id:e.id});t.splice(n,1)},e.prototype.actionHandler=function(e){switch(e.action){case"save":this.updateVariable(e.data);break;case"delete":this.removeVariable(e.data)}},e.prototype.extractOverridSubscriptionType=function(e){var t=[],n=[];return e.forEach((function(e){"new"!==e.id&&(e.subscriptionType&&t.push(l.assign({browsePath:e.browsePath},{subscriptionType:e.subscriptionType})),n.push(l.omit(e,["subscriptionType"])))})),[n,t]},e.prototype.prepareRequestJson=function(e){var t={},n=P(this.extractOverridSubscriptionType(e.mappings),2),o=n[0],i=n[1];return t=l.assign(t,l.pick(e,Object.keys(this.initialModel)),{mappings:o,overriddenSubscriptions:i})},e.prototype.save=function(){return x(this,void 0,void 0,(function(){var e;return C(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,this.opcuaService.updateDeviceProtocol(this.prepareRequestJson(this.model))];case 1:return(e=t.sent())&&200===e.status?(this.router.navigate(["deviceprotocols"]),this.alertService.success(i.gettext("Device protocol saved."))):this.alertService.addServerFailure({res:e}),[3,3];case 2:return t.sent(),this.alertService.danger(i.gettext("Failed to save. Try again.")),[3,3];case 3:return[2]}}))}))},e.prototype.canSave=function(e){if(this.instanceList&&this.instanceList.filter((function(e){return e.isActive()})).length>0)return!0;return!e.form.valid},e.ctorParameters=function(){return[{type:o.ChangeDetectorRef},{type:A},{type:i.AlertService},{type:n.Router}]},N([o.ViewChildren(E)],e.prototype,"instanceList",void 0),e=N([o.Component({selector:"opcua-device-protocol-detail",template:'<c8y-title *ngIf="!isLoaded">{{ model.name }}</c8y-title>\n<div>\n  <form #deviceTypeForm="ngForm" name="detailForm" *ngIf="!isLoaded">\n    <opcua-device-protocol-description [model]="model"></opcua-device-protocol-description>\n    <div class="card m-b-4">\n      <div class="card-header separator">\n        <h4 translate>Variables</h4>\n      </div>\n      <div class="list-group" *ngIf="model.mappings.length > 0" ngModelGroup="variable">\n        <opcua-device-protocol-mapping\n          *ngFor="let resource of getMapping(); trackBy: trackByIndex; let i = index"\n          [index]="i"\n          [referencedServerId]="model.referencedServerId"\n          [referencedRootNodeId]="model.referencedRootNodeId"\n          [resource]="getStructuredResource(resource)"\n          [getParentAttr]="getParentAttr"\n          (onAction)="actionHandler($event)"\n        >\n        </opcua-device-protocol-mapping>\n      </div>\n      <div class="card-block">\n        <div class="c8y-empty-state text-left" *ngIf="model.mappings.length === 0">\n          <h1 c8yIcon="sliders"></h1>\n          <p translate>No variables to display. Click below to add.</p>\n        </div>\n        <button\n          title="{{ \'Add variable\' | translate }}"\n          class="btn-add-block addVariableBtn"\n          (click)="addVariable()"\n        >\n          <i c8yIcon="plus-square"></i> {{ \'Add variable\' | translate }}\n        </button>\n      </div>\n    </div>\n    <div class="card m-b-4">\n      <div class="card-header separator">\n        <h4 translate>Data reporting</h4>\n      </div>\n      <div class="card-block" ngModelGroup="subscription">\n        <opcua-device-protocol-data-reporting\n          [groupName]="\'subscription\'"\n          [model]="model"\n        ></opcua-device-protocol-data-reporting>\n      </div>\n    </div>\n    <div class="card">\n      <div class="card-header separator">\n        <h4 translate>Auto apply constraints</h4>\n      </div>\n      <div class="card-block overflow-visible" ngModelGroup="autoApply">\n        <opcua-auto-apply [model]="model"></opcua-auto-apply>\n      </div>\n    </div>\n\n    <span>\n      <div class="text-center page-footer m-t-16">\n        <div class="btn-save-wrapper animated">\n          <button\n            title="{{ \'Save\' | translate }}"\n            id="deviceTypeSave"\n            class="btn btn-primary"\n            (click)="save()"\n            [disabled]="canSave(deviceTypeForm)"\n            translate\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </span>\n  </form>\n</div>\n'})],e)}(),T=function(){function e(){this.onSubscriptionChange=new o.EventEmitter,this.subscription={type:"None"},this.subscriptionParameters={samplingRate:void 0,deadbandType:"None",deadbandValue:void 0,ranges:"",queueSize:void 0,dataChangeTrigger:"Status",discardOldest:!0},this.cyclicReadParameters={rate:void 0},this.types=[{value:"None",label:i.gettext("None")},{value:"CyclicRead",label:i.gettext("Cyclic read")},{value:"Subscription",label:i.gettext("Subscription")}],this.filters=[{value:"None",label:i.gettext("None")},{value:"absolute",label:i.gettext("Absolute")},{value:"percent",label:i.gettext("Percent")}],this.triggers=[{value:"Status",label:i.gettext("Status")},{value:"StatusValue",label:i.gettext("Status/Value")},{value:"StatusValueTimestamp",label:i.gettext("Status/Value/Timestamp")}],this.discard=[{value:!0,label:i.gettext("oldest`data`")},{value:!1,label:i.gettext("newest`data`")}],this.requireCyclic=!1,this.requireSubscription=!1,this.parseReadingInterval=function(e){return l.toInteger(e.target.value)}}return Object.defineProperty(e.prototype,"model",{set:function(e){e.subscriptionType&&(this.subscription=e.subscriptionType,"CyclicRead"===this.subscription.type&&(this.cyclicReadParameters=e.subscriptionType.cyclicReadParameters,this.requireCyclic=!0,this.requireSubscription=!1),"Subscription"===this.subscription.type&&(this.subscriptionParameters=e.subscriptionType.subscriptionParameters,this.requireCyclic=!1,this.requireSubscription=!0),"None"===this.subscription.type&&(this.requireCyclic=!1,this.requireSubscription=!1)),this._model=e},enumerable:!0,configurable:!0}),e.prototype.updateModel=function(){var e=this;setTimeout((function(){l.unset(e.subscription,"subscriptionParameters"),l.unset(e.subscription,"cyclicReadParameters"),"CyclicRead"===e.subscription.type?(e.requireCyclic=!0,e.requireSubscription=!1,l.set(e.subscription,"cyclicReadParameters",e.cyclicReadParameters)):"Subscription"===e.subscription.type?(e.requireCyclic=!1,e.requireSubscription=!0,l.set(e.subscription,"subscriptionParameters",e.subscriptionParameters)):"None"===e.subscription.type&&(e.requireCyclic=!1,e.requireSubscription=!1)}))},N([o.Input()],e.prototype,"model",null),N([o.Input()],e.prototype,"groupName",void 0),N([o.Output()],e.prototype,"onSubscriptionChange",void 0),e=N([o.Component({selector:"opcua-device-protocol-data-reporting",template:'<c8y-form-group>\n  <label translate>Mechanism</label>\n  <label\n    *ngFor="let mechanism of types"\n    title="{{ mechanism.label | translate }}"\n    class="c8y-radio radio-inline"\n  >\n    <input\n      type="radio"\n      name="subscriptionType"\n      [value]="mechanism.value"\n      [(ngModel)]="subscription.type"\n      (change)="updateModel()"\n      required\n    />\n    <span></span> {{ mechanism.label | translate }}\n  </label>\n</c8y-form-group>\n\n<div class="row collapse" [collapse]="subscription.type != \'CyclicRead\'" [isAnimated]="true">\n  <div class="col-sm-6 col-md-4 col-lg-3">\n    <c8y-form-group>\n      <label translate>Reading interval</label>\n      <div class="input-group">\n        <input\n          class="form-control"\n          type="number"\n          name="rate"\n          [(ngModel)]="cyclicReadParameters.rate"\n          placeholder="{{ \'e.g.\' | translate }} 50"\n          [required]="requireCyclic"\n          min="0"\n        />\n        <span class="input-group-addon units" title="{{ \'Milliseconds\' | translate }}" translate>\n          msec\n        </span>\n      </div>\n    </c8y-form-group>\n  </div>\n</div>\n\n<div class="row collapse" [collapse]="subscription.type != \'Subscription\'" [isAnimated]="true">\n  <div class="col-sm-6 col-lg-4">\n    <c8y-form-group>\n      <label translate>Sampling interval</label>\n      <div class="input-group">\n        <input\n          class="form-control"\n          type="number"\n          name="samplingRate"\n          [(ngModel)]="subscriptionParameters.samplingRate"\n          placeholder="{{ \'e.g.\' | translate }} 500"\n          [required]="requireSubscription"\n          min="0"\n        />\n        <span class="input-group-addon units" title="{{ \'Milliseconds\' | translate }}" translate>\n          msec\n        </span>\n      </div>\n    </c8y-form-group>\n  </div>\n  <div class="col-sm-6 col-lg-4">\n    <c8y-form-group>\n      <label translate>Queue size</label>\n      <div class="input-group">\n        <input\n          class="form-control"\n          type="number"\n          name="queueSize"\n          [(ngModel)]="subscriptionParameters.queueSize"\n          placeholder="{{ \'e.g.\' | translate }} 10"\n          min="1"\n          [required]="requireSubscription"\n        />\n        <span class="input-group-addon">\n          <strong translate>Discard</strong>&nbsp;\n          <label\n            *ngFor="let discardOption of discard"\n            title="{{ discardOption.label | translate }}"\n            class="c8y-radio radio-inline"\n          >\n            <input\n              type="radio"\n              name="discard"\n              [value]="discardOption.value"\n              [(ngModel)]="subscriptionParameters.discardOldest"\n              [required]="requireSubscription"\n            />\n            <span></span> {{ discardOption.label | translate }}\n          </label>\n        </span>\n      </div>\n    </c8y-form-group>\n  </div>\n  <div class="clearfix"></div>\n  <div class="col-sm-6 col-lg-4">\n    <c8y-form-group>\n      <label translate>Data change trigger</label>\n      <label\n        *ngFor="let trigger of triggers"\n        title="{{ trigger.label | translate }}"\n        class="c8y-radio radio-inline"\n      >\n        <input\n          type="radio"\n          name="dataChangeTrigger"\n          [value]="trigger.value"\n          [(ngModel)]="subscriptionParameters.dataChangeTrigger"\n          [required]="requireSubscription"\n        />\n        <span></span> {{ trigger.label | translate }}\n      </label>\n    </c8y-form-group>\n  </div>\n  <div class="col-sm-6 col-lg-4">\n    <c8y-form-group>\n      <label translate>Deadband filter</label>\n      <label\n        *ngFor="let deadbandFilter of filters"\n        title="{{ deadbandFilter.label | translate }}"\n        class="c8y-radio radio-inline"\n      >\n        <input\n          type="radio"\n          name="deadbandType"\n          [value]="deadbandFilter.value"\n          [(ngModel)]="subscriptionParameters.deadbandType"\n          [required]="requireSubscription"\n        />\n        <span></span> {{ deadbandFilter.label | translate }}\n      </label>\n    </c8y-form-group>\n    <div [collapse]="subscriptionParameters.deadbandType == \'None\'" [isAnimated]="true">\n      <c8y-form-group>\n        <label translate>Deadband value</label>\n        <input\n          class="form-control"\n          type="number"\n          name="deadbandValue"\n          [(ngModel)]="subscriptionParameters.deadbandValue"\n          placeholder="{{ \'e.g.\' | translate }} 10"\n          [required]="subscriptionParameters.deadbandType != \'None\'"\n          min="0"\n        />\n      </c8y-form-group>\n    </div>\n  </div>\n</div>\n',viewProviders:[{provide:d.ControlContainer,useExisting:d.NgModelGroup}]})],e)}(),D=function(){function e(){this.hasCustomAction=!1}return e.prototype.getHeaderPair=function(){return{key:"",value:""}},Object.defineProperty(e.prototype,"headers",{get:function(){return this.customAction.headers},enumerable:!0,configurable:!0}),e.prototype.addHeader=function(){this.customAction.headers.push(this.getHeaderPair())},e.prototype.updateCustomAction=function(){this.hasCustomAction=!this.hasCustomAction},e.prototype.removeCustomAction=function(e){this.customAction.headers.splice(e,1)},e.prototype.trackByIndex=function(e){return e},e.prototype.ngOnInit=function(){c.get(this.customAction,"endpoint")&&(this.hasCustomAction=!0)},e.prototype.placeholder=function(){return JSON.stringify({value:"${value}",serverId:"${serverId}",nodeId:"${nodeId}",deviceId:"${deviceId}"},void 0,2).replace(/"\$\{value\}\"/,"${value}")},e.prototype.bodyTemplateMessage=function(e){this.bodyTemplateInvalidMessage=e},N([o.Input()],e.prototype,"customAction",void 0),e=N([o.Component({selector:"opcua-device-protocol-mapping-customaction",template:'<div class="list-group" style="box-shadow:none;">\n  <div class="list-group-item">\n    <div class="flex-row">\n      <div class="list-item-switch">\n        <label class="c8y-switch">\n          <input\n            type="checkbox"\n            name="hasCustomAction"\n            [(ngModel)]="hasCustomAction"\n            (click)="updateCustomAction()"\n          />\n          <span></span>\n        </label>\n      </div>\n      <div class="list-item-icon">\n        <i c8yIcon="wrench"></i>\n      </div>\n      <div class="list-item-title" translate>\n        Custom action\n      </div>\n    </div>\n    <div [collapse]="!hasCustomAction" [isAnimated]="true">\n      <div class="top-p-sm" *ngIf="hasCustomAction">\n        <fieldset ngModelGroup="headers">\n          <div class="legend form-block" translate>Headers</div>\n          <div class="tight-grid flex-row hidden-xs">\n            <div class="col-sm-4">\n              <label translate>Key</label>\n            </div>\n            <div class="col-sm-4">\n              <label translate>Value</label>\n            </div>\n          </div>\n          <div\n            *ngFor="let header of headers; trackBy: trackByIndex; let i = index; last as isLast"\n            class="flex-row tight-grid row"\n            [ngModelGroup]="i"\n          >\n            <div class="col-xs-5 col-sm-4">\n              <c8y-form-group class="form-group-sm">\n                <label class="visible-xs" translate>Key</label>\n                <div class="input-group">\n                  <input\n                    class="form-control"\n                    type="text"\n                    name="key"\n                    placeholder="{{ \'e.g.\' | translate }} Content-Type"\n                    required\n                    [(ngModel)]="header.key"\n                  />\n                </div>\n              </c8y-form-group>\n            </div>\n            <div class="col-xs-5 col-sm-4">\n              <c8y-form-group class="form-group-sm">\n                <label class="visible-xs" translate>Value</label>\n                <div class="input-group">\n                  <input\n                    class="form-control"\n                    type="text"\n                    name="value"\n                    placeholder="{{ \'e.g.\' | translate }} application/json"\n                    required\n                    [(ngModel)]="header.value"\n                  />\n                </div>\n              </c8y-form-group>\n            </div>\n            <div class="col-xs-2">\n              <div class="form-group">\n                <label class="visible-xs">&nbsp;</label>\n                <button class="btn btn-clean" *ngIf="customAction.headers.length !== 1">\n                  <i c8yIcon="minus-circle" class="text-danger" (click)="removeCustomAction(i)"></i>\n                </button>\n                <button class="btn btn-clean" *ngIf="isLast">\n                  <i c8yIcon="plus-circle" class="text-primary" (click)="addHeader()"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n        <div class="legend form-block" translate>Action</div>\n        <div class="row">\n          <div class="col-md-4">\n            <c8y-form-group class="form-group-sm">\n              <label>\n                <span translate>Endpoint</span>\n              </label>\n              <div class="input-group">\n                <input\n                  class="form-control"\n                  type="text"\n                  name="endpoint"\n                  placeholder="{{ \'e.g.\' | translate }} http://localhost:1080/cucumber"\n                  required\n                  [(ngModel)]="customAction.endpoint"\n                />\n              </div>\n            </c8y-form-group>\n          </div>\n          <div class="col-md-4">\n            <c8y-form-group class="form-group-sm">\n              <label translate>Body template</label>\n              <textarea\n                [heightPerRow]="40"\n                prettyValidJson\n                class="form-control"\n                rows="3"\n                name="bodyTemplate"\n                [placeholder]="placeholder()"\n                [(ngModel)]="customAction.bodyTemplate"\n                (invalidJSON)="bodyTemplateMessage($event)"\n              ></textarea>\n              <c8y-messages>\n                <c8y-message *ngIf="bodyTemplateInvalidMessage">{{\n                  bodyTemplateInvalidMessage | translate\n                }}</c8y-message>\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',viewProviders:[{provide:d.ControlContainer,useExisting:d.NgModelGroup}]})],e)}(),j=function(e){function t(t,n){return e.call(this,"c8yObjectMappingStatusIcons",t,n)||this}return w(t,e),t.ctorParameters=function(){return[{type:o.ElementRef},{type:o.Injector}]},N([o.Input()],t.prototype,"mapping",void 0),t=N([o.Directive({selector:"c8y-object-mapping-status-icons"})],t)}(p.UpgradeComponent),_=function(){function e(e,t){this.addressSpaceService=e,this.opcuaService=t,this.selectednode=!1,this.loading=!1,this.searchInProgress=!1,this.focusStatus=new o.EventEmitter,this.moId=""}return e.prototype.ngOnInit=function(){return x(this,void 0,void 0,(function(){return C(this,(function(e){return this.filterLabel=i.gettext("Filter…"),this.moId=this.opcuaService.getMoId(),[2]}))}))},e.prototype.ngOnDestroy=function(){this.addressSpaceService.resetTreeToRootNode()},e.prototype.searchNodes=function(){return x(this,void 0,void 0,(function(){var e;return C(this,(function(t){switch(t.label){case 0:return this.searchInProgress=!0,this.clearNodeListAndCheckSearchString(),this.isSearch?(this.currentNode=void 0,e=this,[4,this.addressSpaceService.getSearchedNodes(this.searchKey,this.moId)]):[3,2];case 1:e.nodeList=t.sent(),this.searchInProgress=!1,this.nodeList.resultLabel=i.gettext("Results found"),t.label=2;case 2:return[2]}}))}))},e.prototype.clearNodeListAndCheckSearchString=function(){this.isSearch=void 0!==this.searchKey&&""!==this.searchKey,this.isSearch||(this.searchInProgress=!1)},e.prototype.clearSearch=function(){this.isSearch=!1,this.searchKey="",this.currentNode=void 0},e.prototype.getIcon=function(e){return this.addressSpaceService.getIcon(e)},e.prototype.selectNode=function(e){return x(this,void 0,void 0,(function(){var t,n;return C(this,(function(o){switch(o.label){case 0:return e&&e.nodeId&&e.nodeId.length>0?[4,this.addressSpaceService.getNodeById(this.moId,e.nodeId)]:[3,3];case 1:return t=o.sent(),n=this.toggleCurrentNode,[4,t.json()];case 2:n.apply(this,[o.sent()]),o.label=3;case 3:return[2]}}))}))},e.prototype.toggleCurrentNode=function(e){this.currentNode=this.isNodeSet(e)?void 0:e},e.prototype.backHandler=function(e){this.isSearch=!1,this.focusStatus.emit(e),this.toggleCurrentNode(e)},e.prototype.isNodeSet=function(e){return void 0!==this.currentNode&&this.currentNode.nodeId===e.nodeId},e.ctorParameters=function(){return[{type:k},{type:A}]},N([o.Output()],e.prototype,"focusStatus",void 0),e=N([o.Component({selector:"opcua-address-space",template:'<div class="row split-scroll">\n  <div class="col-md-5 col-xs-12 scroll-column no-gutter-r">\n    <div class="card bg-gray-lighter split-scroll flex-scroll">\n      <div class="card-block separator-bottom">\n        <div class="input-group input-group-search" style="margin: -4px 0;">\n          <input\n            class="form-control"\n            type="search"\n            placeholder="{{ filterLabel | translate }}"\n            (keydown.enter)="searchNodes()"\n            [(ngModel)]="searchKey"\n          />\n          <span class="input-group-btn">\n            <button *ngIf="!isSearch" type="submit" class="btn btn-clean" (click)="searchNodes()">\n              <i c8yIcon="search"></i>\n            </button>\n            <button *ngIf="isSearch" class="btn btn-clean" (click)="clearSearch()">\n              <i c8yIcon="times"></i>\n            </button>\n          </span>\n        </div>\n        <div *ngIf="isSearch && !loading" class="p-t-16">\n          <p *ngIf="!searchInProgress">\n            <em>{{ nodeList.resultLabel | translate }}</em\n            >&nbsp;\n            <span class="badge badge-info">{{ nodeList?.length }}</span>\n          </p>\n        </div>\n      </div>\n\n      <div style="padding: 8px;" *ngIf="(isSearch && loading) || searchInProgress">\n        <div class="spinner" style="position: relative">\n          <div class="rect1"></div>\n          <div class="rect2"></div>\n          <div class="rect3"></div>\n          <div class="rect4"></div>\n          <div class="rect5"></div>\n        </div>\n      </div>\n\n      <div class="flex-content-scroll" *ngIf="isSearch && !loading && !searchInProgress">\n        <div\n          class="list-group list-group-links"\n          *ngIf="isSearch && !loading"\n          style="box-shadow: none;"\n        >\n          <button\n            *ngFor="let nodeItem of nodeList"\n            (click)="selectNode(nodeItem)"\n            [ngClass]="{ \'list-group-item flex-row\': true }"\n          >\n            <div class="list-group-icon m-r-4">\n              <i class="right-m-xs" [c8yIcon]="getIcon(nodeItem.nodeClassName)"></i>\n            </div>\n            <div class="list-item-body text-truncate">\n              <span tile="nodeId">{{ nodeItem.nodeId }}</span> {{ nodeItem.displayName }}\n            </div>\n          </button>\n        </div>\n      </div>\n      <div class="flex-content-scroll" *ngIf="!isSearch">\n        <opcua-address-space-tree\n          (selectedNode)="toggleCurrentNode($event)"\n          [focusEmitter]="focusStatus"\n        ></opcua-address-space-tree>\n      </div>\n    </div>\n  </div>\n  <opcua-address-space-detail\n    [node]="currentNode"\n    class="col-md-7 col-xs-12 scroll-column no-gutter-l"\n    style="pointer-events: none;"\n    (toggleAttrDetail)="backHandler($event)"\n  ></opcua-address-space-detail>\n</div>\n'})],e)}(),q=function(){function e(){this.type="c8y_OPCUA_Device_Agent"}return e.prototype.canActivate=function(e){var t=e.data.contextData;return t&&t.type===this.type},e=N([o.Injectable()],e)}(),F=function(){function e(e){this.app=e,this.microserviceName="opcua-mgmt-service"}return e.prototype.canActivate=function(){return this.checkApp||(this.checkApp=this.app.isApplicationAvailable(this.microserviceName)),this.checkApp},e.ctorParameters=function(){return[{type:i.AppStateService}]},e=N([o.Injectable()],e)}(),B=function(){function e(e){this.fileName="",this.targetConnectionState="1",this.minIntervalNumber=1,this.connectionStatusLabel="",this.canceled=new o.EventEmitter,this.removed=new o.EventEmitter,this.saved=new o.EventEmitter,this.NONE="NONE",this.SIGN="SIGN",this.SIGN_ENC="SIGN_ENCRYPT",this.securityPolicies={sign:["BASIC256_"+this.SIGN,"BASIC128RSA15_"+this.SIGN,"BASIC256SHA256_"+this.SIGN],sign_enc:["BASIC256_"+this.SIGN_ENC,"BASIC128RSA15_"+this.SIGN_ENC,"BASIC256SHA256_"+this.SIGN_ENC]},this.ANONYM={id:1,value:i.gettext("Anonymous")},this.USER_PASSWORD={id:2,value:i.gettext("Username/Password")},this.KEY_BASED={id:3,value:i.gettext("Key-based Authentication")},this.initialKeystore={lastModified:0,name:"",type:"",slice:null,size:0},this.keystore=this.initialKeystore,this.authSwitch=!1,this.opcuaService=e}return Object.defineProperty(e.prototype,"server",{get:function(){return this._server},set:function(e){e&&(this._server=c.cloneDeep(e),this.model=c.cloneDeep(e),this.fileName=this.model.config.keystoreFilename,e.id&&"new"===e.id?(this.targetConnectionState="1",this.model.config.targetConnectionState="enabled"):this.targetConnectionState="enabled"===this.model.config.targetConnectionState?"1":"0",this.updateConnectionStatusLabel(this._server))},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){return x(this,void 0,void 0,(function(){return C(this,(function(e){return this.authSwitch=!1,this.securityModes=[this.NONE,this.SIGN,this.SIGN_ENC],this.authenticationModes=[this.ANONYM,this.USER_PASSWORD,this.KEY_BASED],this.setCurrentAuthenticationMode(),this.setCurrentSecurityMode(),[2]}))}))},e.prototype.ngOnChanges=function(){this.setCurrentSecurityMode(),this.setCurrentAuthenticationMode()},e.prototype.cancel=function(){this.canceled.emit(this.model)},e.prototype.remove=function(){return x(this,void 0,void 0,(function(){return C(this,(function(e){switch(e.label){case 0:return[4,this.removeKeystore(this.model)];case 1:return e.sent(),this.removed.emit(this.model),[2]}}))}))},e.prototype.save=function(){return x(this,void 0,void 0,(function(){var e;return C(this,(function(t){switch(t.label){case 0:return this.keystore&&this.keystore.size>0&&this.keystore.name&&this.keystore.name.length>0?[4,this.uploadKeystore(this.model.config.keystoreBinaryId)]:[3,2];case 1:(e=t.sent())&&e.data&&e.data.id&&(this.model.config.keystoreBinaryId=e.data.id),this.keystore=this.initialKeystore,t.label=2;case 2:return this.authSwitch&&this.removeKeystore(this.server),this.saved.emit(this.model),[2]}}))}))},e.prototype.uploadFile=function(e){1===e.length?(this.keystore=e[0].file,this.fileName=this.keystore.name):console.warn("Tried to import... Import aborted.")},e.prototype.setPolicy=function(e){e===this.NONE?this.model.config.securityMode=this.NONE:e===this.SIGN?this.model.config.securityMode=this.securityPolicies.sign[0]:e===this.SIGN_ENC&&(this.model.config.securityMode=this.securityPolicies.sign_enc[0])},e.prototype.setServerConnection=function(e){this.model.config.targetConnectionState="0"!==e?"enabled":"disabled"},e.prototype.updateAuthentication=function(e){if(e&&e.id)switch(e.id){case 1:this.resetUserAuthentication(),this.resetKeyBasedAuthentication();break;case 2:this.resetKeyBasedAuthentication(),this.restoreUserData();break;case 3:this.resetUserAuthentication(),this.restoreKeyBasedData();break;default:console.warn("Invalid authentication id",e.id)}},e.prototype.updateConnectionStatusLabel=function(e){var t=e.c8y_Connection&&"CONNECTED"===e.c8y_Connection.status?i.gettext("Connected"):i.gettext("Disconnected");this.connectionStatusLabel=t},e.prototype.uploadKeystore=function(e){return e?e&&e.length>0?this.opcuaService.updateKeystore(e,this.keystore):void 0:this.opcuaService.uploadKeystore(this.keystore)},e.prototype.removeKeystore=function(e){if(e&&e.config&&e.config.keystoreBinaryId&&e.config.keystoreBinaryId.length>0)return this.authSwitch=!1,this.opcuaService.removeKeystore(this.server.config.keystoreBinaryId)},e.prototype.resetUserAuthentication=function(){this.model.config.userName=null,this.model.config.userPassword=null,this.model.config.userIdentityMode="none"},e.prototype.resetKeyBasedAuthentication=function(){this.authSwitch=!0,this.model.config.keystorePass=null,this.model.config.certificatePass=null,this.model.config.keystoreBinaryId="",this.model.config.keystoreFilename="",this.model.config.userIdentityMode="none"},e.prototype.restoreUserData=function(){this.model.config.userName=this._server.config.userName,this.model.config.userPassword=this._server.config.userPassword,this.model.config.userIdentityMode="userAndPassword"},e.prototype.restoreKeyBasedData=function(){this.authSwitch=!1,this.model.config.keystorePass=this._server.config.keystorePass,this.model.config.certificatePass=this._server.config.certificatePass,this.model.config.keystoreBinaryId=this._server.config.keystoreBinaryId,this.model.config.keystoreFilename=this._server.config.keystoreFilename,this.model.config.userIdentityMode="certificate"},e.prototype.getServerConfig=function(){var e={securityMode:this.NONE,userIdentityMode:"none"};return this.server&&this.server.config&&(e=this.server.config),e},e.prototype.setCurrentSecurityMode=function(){var e=this.getServerConfig().securityMode;if(e)if(this.securityPolicies.sign.find((function(t){return t===e})))this.currentSecMode=this.SIGN;else{var t=this.securityPolicies.sign_enc.find((function(t){return t===e}));this.currentSecMode=t?this.SIGN_ENC:this.NONE}},e.prototype.setCurrentAuthenticationMode=function(){switch(this.getServerConfig().userIdentityMode){case"certificate":this.authenticationMode=this.KEY_BASED;break;case"userAndPassword":this.authenticationMode=this.USER_PASSWORD;break;case"Anonymous":this.authenticationMode=this.ANONYM;break;case"UserName":this.authenticationMode=this.USER_PASSWORD;break;case"Certificate":this.authenticationMode=this.KEY_BASED;break;default:this.authenticationMode=this.ANONYM}},e.ctorParameters=function(){return[{type:A}]},N([o.ViewChild("opcuaConfigForm",{static:!1})],e.prototype,"opcuaConfigForm",void 0),N([o.ViewChild(i.DropAreaComponent,{static:!1})],e.prototype,"dropArea",void 0),N([o.Output()],e.prototype,"canceled",void 0),N([o.Output()],e.prototype,"removed",void 0),N([o.Output()],e.prototype,"saved",void 0),N([o.Input()],e.prototype,"server",null),e=N([o.Component({selector:"opcua-server-config",template:'<form #opcuaConfigForm="ngForm" class="card card-scroll" *ngIf="server">\n  <div class="card-header" style="flex-wrap: wrap;">\n    <button\n      class="btn btn-clean visible-sm visible-xs"\n      title="{{ \'Back\' | translate }}"\n      (click)="cancel()"\n    >\n      <i c8y-icon="chevron-left" class="fa fw fa-chevron-left"></i\n      ><span translate>Back</span></button\n    ><br />\n    \x3c!-- SERVER NAME --\x3e\n    <label class="editable" style="width: 100%;">\n      <input\n        type="text"\n        class="form-control input-lg"\n        placeholder="{{ \'Server name\' | translate }}"\n        id="name"\n        name="name"\n        [(ngModel)]="model.name"\n        required\n      />\n    </label>\n  </div>\n  <div class="inner-scroll">\n    <div class="card-block bg-gray-lighter top-p-md">\n      <div class="tight-grid">\n        <div class="col-sm-6">\n          <label style="width: 100%;" translate>Server connection</label>\n          <button\n            type="button"\n            class="btn top-m-xs"\n            name="serverConnection"\n            [(ngModel)]="targetConnectionState"\n            (ngModelChange)="setServerConnection($event)"\n            btnCheckbox\n            btnCheckboxTrue="1"\n            btnCheckboxFalse="0"\n          >\n            <span\n              title="{{ \'Enabled\' | translate }}"\n              [hidden]="targetConnectionState !== \'1\'"\n              translate\n              >Enabled</span\n            >\n            <span\n              title="{{ \'Disabled\' | translate }}"\n              [hidden]="targetConnectionState !== \'0\'"\n              translate\n              >Disabled</span\n            >\n          </button>\n        </div>\n        <div class="col-sm-6">\n          <label translate>Connection status</label>\n          <div class="form-control-static">\n            <device-status class="right-p-sm" [mo]="server"></device-status>\n            <span>{{ connectionStatusLabel | translate }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="card-block">\n      \x3c!-- SERVER URL--\x3e\n      <c8y-form-group>\n        <label for="configServerUrl" translate>Server URL</label>\n        <input\n          type="text"\n          class="form-control"\n          id="configServerUrl"\n          name="serverUrl"\n          [(ngModel)]="model.config.serverUrl"\n          c8yDefaultValidation="opcuaBrowsePath"\n          required\n        />\n      </c8y-form-group>\n\n      \x3c!-- TIMEOUT & STATUS-CHECK-INTERVAL--\x3e\n      <div class="tight-grid">\n        <div class="col-md-6">\n          <c8y-form-group>\n            <label for="config.timeout" translate>Timeout</label>\n            <div class="input-group">\n              <input\n                type="number"\n                class="form-control"\n                id="config.timeout"\n                name="timeout"\n                [min]="minIntervalNumber"\n                placeholder="{{ \'e.g.\' | translate }} 30"\n                [(ngModel)]="model.config.timeout"\n                required\n              />\n              <span class="input-group-addon units" translate>\n                seconds\n              </span>\n            </div>\n          </c8y-form-group>\n        </div>\n        <div class="col-md-6">\n          <c8y-form-group>\n            <label for="config.statusCheckInterval" translate>Status check interval</label>\n            <div class="input-group">\n              <input\n                type="number"\n                class="form-control"\n                id="config.statusCheckInterval"\n                name="statusCheckInterval"\n                [min]="minIntervalNumber"\n                placeholder="{{ \'e.g.\' | translate }} 40"\n                [(ngModel)]="model.config.statusCheckInterval"\n                required\n              />\n              <span class="input-group-addon units" translate>\n                seconds\n              </span>\n            </div>\n          </c8y-form-group>\n        </div>\n      </div>\n\n      \x3c!-- SECURITY MODE --\x3e\n      <div class="tight-grid">\n        <div class="col-md-6">\n          <div class="form-group">\n            \x3c!-- NONE, SIGN, SIGN & ENCRYPT--\x3e\n            <label for="config.securityMode" translate>Security mode</label>\n            <div class="c8y-select-wrapper">\n              <select\n                class="form-control"\n                id="config.securityMode"\n                [(ngModel)]="currentSecMode"\n                (ngModelChange)="setPolicy($event)"\n                name="securityMode"\n                required\n              >\n                <option *ngFor="let mode of securityModes" [ngValue]="mode">{{ mode }}</option>\n              </select>\n              <span></span>\n            </div>\n          </div>\n        </div>\n        <div *ngIf="currentSecMode === NONE" class="col-md-6">\n          <div class="form-group">\n            <label for="config.securityPolicy" translate>Security policy</label>\n            <input\n              type="text"\n              class="form-control"\n              id="config.securityPolicy"\n              name="securityPolicy"\n              [readonly]="true"\n              [(ngModel)]="model.config.securityMode"\n              required\n            />\n          </div>\n        </div>\n        <div *ngIf="currentSecMode !== NONE" class="col-md-6">\n          <div class="form-group">\n            <label for="config.securityPolicy" translate>Security policy</label>\n            <div class="c8y-select-wrapper">\n              <select\n                *ngIf="currentSecMode === SIGN"\n                class="form-control"\n                id="config.securityPolicy"\n                [(ngModel)]="model.config.securityMode"\n                name="securityPolicy"\n                required\n              >\n                <option *ngFor="let policy of securityPolicies.sign" [ngValue]="policy">{{\n                  policy\n                }}</option>\n              </select>\n              <select\n                *ngIf="currentSecMode === SIGN_ENC"\n                class="form-control"\n                id="config.securityPolicy"\n                [(ngModel)]="model.config.securityMode"\n                name="securityPolicy"\n                required\n              >\n                <option *ngFor="let policy of securityPolicies.sign_enc" [ngValue]="policy">{{\n                  policy\n                }}</option>\n              </select>\n              <span></span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      \x3c!-- AUTHENTICATION --\x3e\n      <div class="form-group">\n        <label for="config.authenticationMode" translate>Authentication</label>\n        <div class="c8y-select-wrapper">\n          <select\n            class="form-control"\n            id="config.authenticationMode"\n            [(ngModel)]="authenticationMode"\n            name="authenticationMode"\n            (ngModelChange)="updateAuthentication($event)"\n            required\n          >\n            <option *ngFor="let auth of authenticationModes" [ngValue]="auth">{{\n              auth.value | translate\n            }}</option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n\n      \x3c!-- User/Pw--\x3e\n      <div *ngIf="authenticationMode.id === 2" class="tight-grid">\n        <div class="col-md-6">\n          <div class="form-group">\n            <label for="config.userName" translate>Username</label>\n            <input\n              type="text"\n              class="form-control"\n              id="config.userName"\n              name="userName"\n              placeholder="{{ \'e.g. joe.doe`LOCALIZE`\' | translate }}"\n              [(ngModel)]="model.config.userName"\n              required\n            />\n          </div>\n        </div>\n        <div class="col-md-6">\n          <div class="form-group">\n            <label for="config.password" translate>Password</label>\n            <input\n              type="password"\n              class="form-control"\n              id="config.userPassword"\n              name="password"\n              [(ngModel)]="model.config.userPassword"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      \x3c!-- Key-based --\x3e\n      <div *ngIf="authenticationMode.id === 3" class="tight-grid">\n        \x3c!-- KEYSTORE PASSWORD --\x3e\n        <div class="col-md-6">\n          <div class="form-group">\n            <label for="config.keystorePass" translate>Keystore password</label>\n            <input\n              type="password"\n              class="form-control"\n              id="config.keystorePass"\n              name="keystorePass"\n              [(ngModel)]="model.config.keystorePass"\n              required\n            />\n          </div>\n        </div>\n        <div class="col-md-6">\n          <div class="form-group">\n            <label for="config.certificatePass" translate>Certificate password</label>\n            <input\n              type="password"\n              class="form-control"\n              id="config.certificatePass"\n              name="keystorePass"\n              [(ngModel)]="model.config.certificatePass"\n              required\n            />\n          </div>\n        </div>\n        \x3c!-- UPLOAD KEYSTORE --\x3e\n        <div class="col-md-12">\n          <div class="form-group">\n            <label for="certificateUpload" translate>Upload keystore</label>\n            <input\n              type="text"\n              [readonly]="true"\n              name="certificateUpload"\n              class="form-control bottom-m-sm"\n              [ngModel]="fileName"\n              placeholder="{{ \'e.g.\' | translate }} yourKeystore.jks"\n              required\n            />\n            <c8y-drop-area\n              (dropped)="uploadFile($event)"\n              [loadingMessage]="\'Importing, please wait.\' | translate"\n              [title]="\'Import keystore with jks file extension\' | translate"\n            >\n            </c8y-drop-area>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="card-footer separator text-center">\n    <button title="{{ \'Cancel\' | translate }}" class="btn btn-default" (click)="cancel()" translate>\n      Cancel\n    </button>\n    <button title="{{ \'Remove\' | translate }}" class="btn btn-danger" (click)="remove()" translate>\n      Remove\n    </button>\n    \x3c!-- Add [disabled]="method()" when form is invalid--\x3e\n    <button\n      title="{{ \'Save\' | translate }}"\n      class="btn btn-primary"\n      (click)="save()"\n      [disabled]="!opcuaConfigForm.valid"\n      translate\n    >\n      Save\n    </button>\n  </div>\n</form>\n'})],e)}(),L=function(){function e(){this.serverList=[],this.present=new o.EventEmitter}return e.prototype.presentConfig=function(e){e.active=!0,this.present.emit(e)},N([o.Input()],e.prototype,"serverList",void 0),N([o.Output()],e.prototype,"present",void 0),e=N([o.Component({selector:"opcua-server-list",template:'\x3c!-- add active class to c8y-stacked-item when clicked --\x3e\n<div\n  class="c8y-stacked-item"\n  [class.active]="server.active"\n  *ngFor="let server of serverList"\n  (click)="presentConfig(server)"\n>\n  <i [c8yIcon]="\'server\'" style="font-size:1.4em;" class="text-gray-darker"></i>\n  <div class="left-p-md text-truncate">\n    <p id="serverName" class="text-truncate">{{ server.name }}</p>\n    <small id="serverUrl" class="text-truncate text-muted">{{ server.config.serverUrl }}</small>\n  </div>\n  <div class="flex-item-right left-p-sm" style="display: flex;">\n    <device-status class="right-p-sm" [mo]="server"></device-status>\n    <a\n      tooltip="{{ server.quickInfo.padlockMsg | translate }}"\n      placement="left"\n      container="body"\n      class="text-gray-darker"\n    >\n      <i [c8yIcon]="server.quickInfo.padlock"></i>\n    </a>\n  </div>\n</div>\n'})],e)}(),U=function(){function e(){this.type="c8y_OpcuaServer"}return e.prototype.canActivate=function(e){var t=e.data.contextData;return t&&t.type===this.type},e=N([o.Injectable()],e)}(),V=function(){function e(e,t,n,o){this.opcuaService=e,this.alertService=t,this.translateService=n,this.context=o,this.serverObjectList=[],this.initialServerObject={id:"",name:"New Server",config:{securityMode:"NONE",keystorePass:null,keystoreBinaryId:null,keystoreFilename:"",certificatePass:null,serverUrl:"",userName:"",userPassword:"",rescanCron:null,timeout:null,autoReconnect:!0,statusCheckInterval:null,valid:!0},quickInfo:{padlock:"unlock",padlockMsg:""},active:!0},this.active=!1,this.moId="",this.NEW_SERVER_ID="new",this.initialServerObject.id=this.NEW_SERVER_ID}var t,n;return e.prototype.ngOnInit=function(){return x(this,void 0,void 0,(function(){var e,t,n,o,i=this;return C(this,(function(s){switch(s.label){case 0:return this.moId=this.opcuaService.getMoId(),this.moId&&this.moId.length>0?[4,this.opcuaService.getServers(this.moId)]:[3,7];case 1:return(e=s.sent())&&200!==e.status?e.json?[4,e.json()]:[3,3]:[3,5];case 2:return n=s.sent(),[3,4];case 3:n=void 0,s.label=4;case 4:return t=n,this.alertService.addServerFailure({data:t,res:e}),[3,7];case 5:return o=this,[4,e.json()];case 6:o.serverObjectList=s.sent(),this.serverObjectList.map((function(e){return i.setQuickInfo(e)})),s.label=7;case 7:return[2]}}))}))},e.prototype.localServerObjectExist=function(){var e=this;return!!this.serverObjectList.find((function(t){return t.id===e.NEW_SERVER_ID}))},e.prototype.addServer=function(){var e=this.initialServerObject;this.serverObjectList.push(e),this.onPresent(e)},e.prototype.onSaved=function(e){e&&e.id&&(e.gatewayId=this.moId,e.id===this.NEW_SERVER_ID?this.createServer(e):this.updateServer(e))},e.prototype.reloadTabs=function(){this.context&&this.context.refreshTabs()},e.prototype.onCanceled=function(e){e&&e.id&&e.id===this.NEW_SERVER_ID?this.removeServerObjectListById(e.id):(this.serverObjectList.forEach((function(t){t.id===e.id&&(t.active=!1)})),delete this.server)},e.prototype.onRemoved=function(e){e.id===this.NEW_SERVER_ID?this.onCanceled(e):this.removeServer(e)},e.prototype.getKeystore=function(e){return x(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.opcuaService.getKeystore(e)];case 1:return[2,t.sent().data]}}))}))},e.prototype.onPresent=function(e){return x(this,void 0,void 0,(function(){var t,n;return C(this,(function(o){switch(o.label){case 0:if(!(e&&e.id!==this.NEW_SERVER_ID&&e.config&&e.config.keystoreBinaryId))return[3,4];o.label=1;case 1:return o.trys.push([1,3,,4]),[4,this.getKeystore(e.config.keystoreBinaryId)];case 2:return t=o.sent(),e.config.keystoreFilename=t.name,[3,4];case 3:return n=o.sent(),this.server=Object.assign({},e),console.log("Could not get existing keystore:",n),[3,4];case 4:return this.serverObjectList.length>0&&(this.serverObjectList.forEach((function(t){t.active=!1,t.id===e.id&&(t.active=!0,e.active=t.active)})),this.setQuickInfo(e),this.server=Object.assign({},e)),[2]}}))}))},e.prototype.createServer=function(e){return x(this,void 0,void 0,(function(){var t;return C(this,(function(n){switch(n.label){case 0:return[4,this.opcuaService.createServer(e)];case 1:return[4,n.sent().json()];case 2:return t=n.sent(),this.updateServerObjectListById(this.NEW_SERVER_ID,t),this.reloadTabs(),[2]}}))}))},e.prototype.updateServer=function(e){return x(this,void 0,void 0,(function(){var t;return C(this,(function(n){switch(n.label){case 0:return[4,this.opcuaService.updateServer(e)];case 1:return(t=n.sent())&&this.updateServerObjectListById(t.id,t),[2]}}))}))},e.prototype.removeServer=function(e){return x(this,void 0,void 0,(function(){var t;return C(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,this.opcuaService.removeServer(e)];case 1:return n.sent(),this.removeServerObjectListById(e.id),this.reloadTabs(),[3,3];case 2:return t=n.sent(),console.log("Could not remove OPC UA server:",t),[3,3];case 3:return[2]}}))}))},e.prototype.removeServerObjectListById=function(e){var t=this;this.serverObjectList.forEach((function(n,o){n.id===e&&(t.serverObjectList.splice(o,1),delete t.server)}))},e.prototype.updateServerObjectListById=function(e,t){var n=this.serverObjectList.findIndex((function(t){return t.id===e}));n>-1&&(this.setQuickInfo(t),this.serverObjectList[n]=t),delete this.server},e.prototype.setQuickInfo=function(e){e.quickInfo={padlock:"unlock",padlockMsg:""},e&&e.config&&e.config.securityMode&&(e.quickInfo.padlock="NONE"!==e.config.securityMode?"lock":"unlock",e.quickInfo.padlockMsg=this.translateService.instant(i.gettext("The security policy is set to {{param}}."),{param:e.config.securityMode}))},e.ctorParameters=function(){return[{type:A},{type:i.AlertService},{type:u.TranslateService},{type:i.ContextRouteComponent,decorators:[{type:o.Optional}]}]},e=N([o.Component({selector:"opcua-servers",template:'<div class="row split-scroll">\n  <div class="col-md-6 scroll-column has-footer">\n    <div class="c8y-nav-stacked inner-scroll">\n      <h4 class="bottom-m-sm" translate>OPC UA servers</h4>\n      <p class="bottom-m-lg" translate>\n        Below you can configure one or more OPC UA servers. The OPC UA agent will connect to these\n        servers if they are enabled and the connection state is set to "connected".\n      </p>\n      <opcua-server-list [serverList]="serverObjectList" (present)="onPresent($event)">\n      </opcua-server-list>\n    </div>\n    <div class="scroll-column-footer">\n      <button\n        title="{{ \'Add server\' | translate }}"\n        class="btn btn-add-block"\n        [disabled]="localServerObjectExist()"\n        (click)="addServer()"\n      >\n        <i [c8yIcon]="\'plus-square\'"></i> {{ \'Add server\' | translate }}\n      </button>\n    </div>\n  </div>\n\n  <opcua-server-config\n    class="col-md-6 scroll-column fast animated"\n    [ngClass]="{ slideInRight: server, slideOutRight: !server }"\n    (canceled)="onCanceled($event)"\n    (removed)="onRemoved($event)"\n    (saved)="onSaved($event)"\n    [server]="server"\n  >\n  </opcua-server-config>\n</div>\n'}),(t=3,n=o.Optional(),function(e,o){n(e,o,t)})],e)}(),G=function(){function e(){this.moId=""}return Object.defineProperty(e.prototype,"model",{set:function(e){this.moId=e.referencedServerId,this._model=e,this.autoScan=e.enabled?"1":"0"},enumerable:!0,configurable:!0}),e.prototype.setAutoScanOption=function(e){this._model.enabled="0"!==e},N([o.Input()],e.prototype,"model",null),e=N([o.Component({selector:"opcua-device-protocol-description",template:'<div class="card bottom-m-xs">\n  <div class="card-block">\n    <div class="row">\n      <div class="col-md-7">\n        <div class="form-group">\n          <label translate>Name</label>\n          <label class="editable" [ngClass]="{\'updated\': ctrlName.dirty}">\n            <input type="text" class="form-control" name="name" #ctrlName="ngModel" [(ngModel)]="_model.name">\n          </label>\n        </div>\n        <div class="form-group">\n          <label translate>Description</label>\n          <label class="editable" [ngClass]="{\'updated\': ctrlDescription.dirty}">\n            <textarea class="form-control" rows="1" name="description" #ctrlDescription="ngModel"\n              [(ngModel)]="_model.description"></textarea>\n            <span *ngIf="_model.description">{{ _model.description }}</span>\n          </label>\n        </div>\n        <div class="flex-row">\n          <div style="min-width: 120px;">\n            <button type="button" class="btn top-m-xs" name="autoScanAddressSpace" [(ngModel)]="autoScan"\n              (ngModelChange)="setAutoScanOption($event)" btnCheckbox btnCheckboxTrue="1" btnCheckboxFalse="0"\n              ngDefaultControl>\n              <span *ngIf="autoScan === \'1\'"><i c8yIcon="check" class="text-success"></i>\n                {{ \'Active\' | translate }}</span>\n              <span *ngIf="autoScan === \'0\'">\n                <i c8yIcon="ban" class="text-danger"></i> {{ \'Inactive\' | translate }}</span>\n            </button>\n          </div>\n          <small class="m-l-16 text-muted">\n            {{\n              \'When active, the gateway scans the address space of all servers and automatically applies\n            this device protocol to all nodes matching the criteria.\'\n                | translate\n            }}\n          </small>\n        </div>\n      </div>\n      <div class="col-md-5">\n        <dl class="dl-horizontal" style="margin-bottom:0;">\n          <dt><label translate>Device protocol type</label></dt>\n          <dd>\n            <span class="label label-info right-m-sm" style="text-transform: capitalize;">{{\n              _model.fieldbusType\n            }}</span>\n          </dd>\n          <dt><label class="small" translate>ID</label></dt>\n          <dd style="font-size:1.5em">{{ _model.id }}</dd>\n          <dt><label class="small" translate>Date created</label></dt>\n          <dd>{{ _model.creationTime | date: \'medium\' }}</dd>\n          <dt><label class="small" translate>Last update</label></dt>\n          <dd>{{ _model.lastUpdated | date: \'medium\' }}</dd>\n          <dt><label class="small" translate>Fieldbus version</label></dt>\n          <dd>{{ _model.fieldbusVersion }}</dd>\n        </dl>\n      </div>\n    </div>\n  </div>\n</div>',viewProviders:[{provide:d.ControlContainer,useExisting:d.NgForm}]})],e)}(),K=function(){function e(e,t,n){this.treeControl=e,this.addressSpaceService=t,this.serverId=n,this.dataChange=new a.BehaviorSubject([]),this.treeControl.isExpanded=function(e){return e.expanded}}return Object.defineProperty(e.prototype,"data",{get:function(){return this.dataChange.value},set:function(e){this.treeControl.dataNodes=e,this.dataChange.next(e)},enumerable:!0,configurable:!0}),e.prototype.connect=function(e){var t=this;return this.treeControl.expansionModel.onChange.subscribe((function(e){(e.added||e.removed)&&t.handleTreeControl(e)})),a.merge(e.viewChange,this.dataChange).pipe(f.map((function(){return t.data})))},e.prototype.handleTreeControl=function(e){var t=this;e.added&&e.added.forEach((function(e){return t.toggleNode(e,!0)})),e.removed&&e.removed.slice().reverse().forEach((function(e){return t.toggleNode(e,!1)}))},e.prototype.toggleNode=function(e,t){return x(this,void 0,void 0,(function(){var n;return C(this,(function(o){switch(o.label){case 0:return e.children&&0!==e.children.length?[3,3]:(e.currentlyLoadingChildren=!0,[4,this.addressSpaceService.getChildrenOf(e,this.serverId)]);case 1:return[4,o.sent().json()];case 2:n=o.sent(),e.children=n||[],e.children=e.children.map((function(t){return t.parentNode=e,t})),e.currentlyLoadingChildren=!1,this.treeControl.expand(e),o.label=3;case 3:return e.expanded=t&&e.children.length>0,this.refreshNestedTree(this.data),[2,Promise.resolve(e)]}}))}))},e.prototype.catch=function(){},e.prototype.refreshNestedTree=function(e){this.data=[],this.dataChange.next(e),this.triggerResize()},e.prototype.triggerResize=function(){setTimeout((function(){try{window.dispatchEvent(new Event("resize"))}catch(e){}}),200)},e}(),$=function(){function e(e,t,n){var i=this;this.addressSpaceService=e,this.opcuaService=t,this.alertService=n,this.focusEmitter=new o.EventEmitter,this.selectedNode=new o.EventEmitter,this.dataSource=null,this.loading=!1,this.getChildren=function(e){return e.expanded?e.children:[]},this.hasChild=function(e,t){return i.addressSpaceService.childrenAvailable(t.references)}}return Object.defineProperty(e.prototype,"moId",{set:function(e){this._moId=e||void 0},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.nodeNavDataSubscription=this.addressSpaceService.getNodeNavData$().subscribe((function(t){return e.openNode(t)})),this.subscriptionRef=this.focusEmitter.subscribe((function(t){e.focused=e.isFocusedNode(t)?void 0:t}))},e.prototype.ngOnDestroy=function(){this.addressSpaceService.resetTreeToRootNode(),this.nodeNavDataSubscription&&!this.nodeNavDataSubscription.closed&&this.nodeNavDataSubscription.unsubscribe(),this.subscriptionRef&&!this.subscriptionRef.closed&&this.subscriptionRef.unsubscribe()},e.prototype.openNode=function(e){return x(this,void 0,void 0,(function(){var t,n,o,i,s;return C(this,(function(r){switch(r.label){case 0:return t=e.node,n=e.selectedAncestorIds,t&&t.nodeId&&n&&0===n.length&&(o=t.nodeId),[4,this.setupTree(o)];case 1:return r.sent(),n&&0!==n.length?e&&this.dataSource?((i=l.clone(n)).shift(),[4,this.dataSource.toggleNode(this.dataSource.data[0],!0)]):[3,3]:[2];case 2:s=r.sent(),this.setChildNodes(s.children,i),this.toggleFocusedNode(t),r.label=3;case 3:return[2]}}))}))},e.prototype.setChildNodes=function(e,t){var n=this;e&&t.forEach((function(o){return x(n,void 0,void 0,(function(){var n,i,s;return C(this,(function(r){switch(r.label){case 0:return(n=e.find((function(e){return e.nodeId===o})))&&t.length>0?((i=t.findIndex((function(e){return e===o})))>=0&&t.splice(i,1),[4,this.dataSource.toggleNode(n,!0)]):[3,2];case 1:s=r.sent(),this.setChildNodes(s.children,t),r.label=2;case 2:return[2]}}))}))}))},e.prototype.setupTree=function(e){return x(this,void 0,void 0,(function(){var n,o,i,s;return C(this,(function(r){switch(r.label){case 0:return this.loading=!0,this._moId&&0!==this._moId.length||(this._moId=this.opcuaService.getMoId()),[4,this.addressSpaceService.getNode(this._moId,e)];case 1:return(n=r.sent())?200===n.status?[3,5]:n.json?[4,n.json()]:[3,3]:[3,8];case 2:return i=r.sent(),[3,4];case 3:i=void 0,r.label=4;case 4:return o=i,this.alertService.addServerFailure({data:o,res:n}),this.dataSource=void 0,[3,7];case 5:return[4,n.json()];case 6:s=r.sent(),this.nestedTreeControl=new t.NestedTreeControl(this.getChildren),this.dataSource=new K(this.nestedTreeControl,this.addressSpaceService,this._moId),this.dataSource.data=[s],r.label=7;case 7:return this.loading=!1,[3,9];case 8:this.loading=!1,r.label=9;case 9:return[2]}}))}))},e.prototype.getMoId=function(){return this._moId&&0!==this._moId.length?this._moId:this.opcuaService.getMoId()},e.prototype.getIcon=function(e){return this.addressSpaceService.getIcon(e)},e.prototype.toggleFocusedNode=function(e){var t=[];this.getRelativePath(e,t),e.relativePath=t,this.selectedNode.emit(e),this.focused=this.isFocusedNode(e)?void 0:e},e.prototype.isFocusedNode=function(e){return!!this.focused&&e.nodeId===this.focused.nodeId},e.prototype.getRelativePath=function(e,t){e.parentNode&&(t.unshift(e.browseName),this.getRelativePath(e.parentNode,t))},e.ctorParameters=function(){return[{type:k},{type:A},{type:i.AlertService}]},N([o.Input()],e.prototype,"moId",null),N([o.Input()],e.prototype,"node",void 0),N([o.Input()],e.prototype,"focusEmitter",void 0),N([o.Output()],e.prototype,"selectedNode",void 0),e=N([o.Component({selector:"opcua-address-space-tree",template:'<div class="card-block" *ngIf="dataSource && !loading">\n  <cdk-tree [dataSource]="dataSource" [treeControl]="nestedTreeControl">\n    \x3c!-- This is the tree node template for leaf nodes --\x3e\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node" (click)="toggleFocusedNode(node)"\n    [ngClass]="{\'strong\':isFocusedNode(node)}" style="cursor: pointer">\n      <span>\n        <i class="right-m-xs" \n        [c8yIcon]="getIcon(node.nodeClassName)" \n        [ngClass]="{\'strong\':isFocusedNode(node)}" \n        style="cursor: pointer"></i>\n        {{node.displayName}}\n      </span>\n    </cdk-nested-tree-node>\n    \x3c!-- This is the tree node template for expandable nodes --\x3e\n    <cdk-nested-tree-node *cdkTreeNodeDef="let node; when: hasChild">\n      <div class="flex-row">\n        <button cdkTreeNodeToggle class="btn-clean text-primary right-m-xs" [disabled]="node.currentlyLoadingChildren">\n          <i class="fa" [ngClass]="{\'fa-plus-square\': !node.expanded, \'fa-minus-square\': node.expanded}"></i>\n        </button>\n        <i class="right-m-xs" [c8yIcon]="getIcon(node.nodeClassName)" [ngClass]="{\'strong\':isFocusedNode(node)}" style="cursor: pointer"></i>\n        <span (click)="toggleFocusedNode(node)" [ngClass]="{\'strong\':isFocusedNode(node)}" style="cursor: pointer"> {{node.displayName}} </span>\n        <span class="left-m-xs" [style.visibility]="node.currentlyLoadingChildren ? \'visible\': \'hidden\'">\n          <i class="fa fa-circle-o-notch fa-spin"></i>\n        </span>\n      </div>\n      <ng-container cdkTreeNodeOutlet></ng-container>\n    </cdk-nested-tree-node>\n  </cdk-tree>\n</div>\n<div style="padding: 8px;" *ngIf="loading">\n  <div class="spinner" style="position: relative">\n    <div class="rect1"></div>\n    <div class="rect2"></div>\n    <div class="rect3"></div>\n    <div class="rect4"></div>\n    <div class="rect5"></div>\n  </div>\n</div>\n<div class="alert alert-info m-t-16" *ngIf="!dataSource && !loading" translate>\n  No source data available to fetch address space.\n</div>'})],e)}(),H=function(){function e(e){this.inventoryService=e,this.opcuaServers=[],this.selected=[],this.constraints={browsePathMatchesRegex:"",matchesNodeIds:[],serverObjectHasFragment:"",matchesServerIds:[]},this.placeholderSelectServerIds=i.gettext("Select server IDs from list")}return e.prototype.ngOnInit=function(){return x(this,void 0,void 0,(function(){var e,t,n=this;return C(this,(function(o){switch(o.label){case 0:return[4,this.inventoryService.list({pageSize:1e3,withTotalPages:!0,type:"c8y_OpcuaServer"})];case 1:return e=o.sent().data,this.opcuaServers=e,this.selected=[],t=this.constraints.matchesServerIds,e.forEach((function(e){t&&t.length>0&&t.find((function(t){return t===e.id}))&&n.selected.push(e)})),[2]}}))}))},Object.defineProperty(e.prototype,"model",{get:function(){return this._model},set:function(e){e&&e.applyConstraints&&(this.constraints=e.applyConstraints),this._model=e},enumerable:!0,configurable:!0}),e.prototype.serverIdsSelected=function(e){this.constraints&&(this.constraints.matchesServerIds=e.map((function(e){return e.id}))),this.selected=e},e.prototype.onChangeNodeId=function(e){e.target.checked?(this.showRootNodes=!0,this.add()):(this.showRootNodes=!1,this.constraints.matchesNodeIds=[])},e.prototype.add=function(){this.constraints.matchesNodeIds.push("")},e.prototype.remove=function(e){this.constraints.matchesNodeIds.splice(e,1)},e.prototype.trackByFn=function(e,t){return e},e.ctorParameters=function(){return[{type:r.InventoryService}]},N([o.Input()],e.prototype,"model",null),e=N([o.Component({selector:"opcua-auto-apply",template:'<div class="row">\n  <div class="col-md-4">\n    <p translate>\n      Specifying auto-apply constraints allows you to limit the scope where the device types are\n      applied, for example by specifying a set of possible servers or node IDs.\n    </p>\n    <p translate>\n      If no constraints are set, device types are applied at any fitting location on the OPC UA\n      server.\n    </p>\n  </div>\n\n  <div class="col-md-6">\n    <ul class="list-group" style="box-shadow: none;">\n      \x3c!-- Limit device type to a set of servers --\x3e\n      <li class="list-group-item">\n        <label class="c8y-checkbox">\n          <input\n            type="checkbox"\n            [checked]="constraints.matchesServerIds.length > 0"\n            (change)="$event.target.checked ? (showServerIds = true) : (showServerIds = false)"\n          />\n          <span></span>\n          <strong class="m-l-8" translate>Limit device type to a set of servers</strong>\n        </label>\n        <div\n          class="collapse"\n          [collapse]="!showServerIds && constraints.matchesServerIds.length < 1"\n        >\n          <c8y-form-group class="m-t-8 m-b-8">\n            <c8y-select\n              [items]="opcuaServers"\n              [selected]="selected"\n              [placeholder]="placeholderSelectServerIds"\n              (onChange)="serverIdsSelected($event)"\n            >\n            </c8y-select>\n          </c8y-form-group>\n        </div>\n      </li>\n      \x3c!-- Limit device type scope in the address space --\x3e\n      <li class="list-group-item">\n        <label class="c8y-checkbox">\n          <input\n            type="checkbox"\n            [checked]="constraints.browsePathMatchesRegex.length > 0"\n            (change)="$event.target.checked ? (showBrowsePath = true) : (showBrowsePath = false)"\n          />\n          <span></span>\n          <strong class="m-l-8" translate>Limit device type scope in the address space</strong>\n        </label>\n        <div\n          class="collapse"\n          [isAnimated]="true"\n          [collapse]="!showBrowsePath && constraints.browsePathMatchesRegex.length < 1"\n        >\n          <c8y-form-group class="m-t-8 m-b-8">\n            <input\n              name="browsePath"\n              type="text"\n              class="form-control"\n              placeholder="{{ \'e.g.\' | translate }} /objects/devices/.*"\n              [(ngModel)]="constraints.browsePathMatchesRegex"\n              ngDefaultControl\n            />\n          </c8y-form-group>\n        </div>\n      </li>\n      \x3c!-- Limit device type to servers with a certain fragment--\x3e\n      <li class="list-group-item">\n        <label class="c8y-checkbox">\n          <input\n            type="checkbox"\n            [checked]="constraints.serverObjectHasFragment.length > 0"\n            (change)="\n              $event.target.checked ? (showServerFragment = true) : (showServerFragment = false)\n            "\n          />\n          <span></span>\n          <strong class="m-l-8" translate\n            >Limit device type to servers with a certain fragment</strong\n          >\n        </label>\n        <div\n          class="collapse"\n          [isAnimated]="true"\n          [collapse]="!showServerFragment && constraints.serverObjectHasFragment.length < 1"\n        >\n          <c8y-form-group class="m-t-8 m-b-8">\n            <input\n              name="serverFragment"\n              type="text"\n              class="form-control"\n              placeholder="{{ \'e.g.\' | translate }} c8y_SomeServerMarker"\n              [(ngModel)]="constraints.serverObjectHasFragment"\n              ngDefaultControl\n            />\n          </c8y-form-group>\n        </div>\n      </li>\n      \x3c!-- Limit device type to a specific root node ID --\x3e\n      <li class="list-group-item">\n        <label class="c8y-checkbox">\n          <input\n            type="checkbox"\n            [checked]="constraints.matchesNodeIds.length > 0"\n            (change)="onChangeNodeId($event)"\n          />\n          <span></span>\n          <strong class="m-l-8" translate>Limit device type to specific root nodes ID</strong>\n        </label>\n        <div\n          class="collapse"\n          [isAnimated]="true"\n          [collapse]="!showRootNodes && constraints.matchesNodeIds.length < 1"\n        >\n          <c8y-form-group class="m-t-8 m-b-8">\n            <ul c8yInputGroupListContainer class="list-unstyled">\n              <li\n                class="m-b-8"\n                *ngFor="let item of constraints.matchesNodeIds; let i = index; trackBy: trackByFn"\n              >\n                <c8y-input-group-list [index]="i" (onAdd)="add()" (onRemove)="remove($event)">\n                  <input\n                    type="text"\n                    class="form-control"\n                    placeholder="{{ \'e.g.\' | translate }} nodeId"\n                    [(ngModel)]="constraints.matchesNodeIds[i]"\n                    [required]="true"\n                  />\n                </c8y-input-group-list>\n              </li>\n            </ul>\n          </c8y-form-group>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n'})],e)}(),z=function(){function e(e){this.el=e}var t;return t=e,e.prototype.validate=function(e){if(e.value){if(!this.isValidJson(e.value))return{invalidBrowsePathNotation:!0};if(this.isBrowsePathUnique(e.value))return{browsePathNotUnique:!0}}return null},e.prototype.isValidJson=function(e){try{var t=JSON.parse(e);return!c.isEmpty(t)}catch(e){return!1}},e.prototype.toArray=function(e){return JSON.parse(e)},e.prototype.isBrowsePathUnique=function(e){var t=this,n=this.getMappings();return!!c.some(n,(function(n){if(c.isEqual(n.browsePath,t.toArray(e))&&n.id!==t.model.id)return n}))},e.ctorParameters=function(){return[{type:o.ElementRef}]},N([o.Input()],e.prototype,"getMappings",void 0),N([o.Input()],e.prototype,"model",void 0),e=t=N([o.Directive({selector:"[c8yBrowsePathValidator][ngModel]",providers:[{provide:d.NG_VALIDATORS,useExisting:o.forwardRef((function(){return t})),multi:!0}]})],e)}(),J=[{context:i.ViewContext.Device,path:"opcua-servers",component:V,label:i.gettext("OPC UA server"),icon:"server",canActivate:[q,F]},{context:i.ViewContext.Device,path:"address-space",component:_,label:i.gettext("Address space"),icon:"sitemap",canActivate:[U,F]}],W=[{path:"deviceprotocols/opcuaV2/:id",component:R}],Y=J,Q=function(){function e(){}return e=N([o.NgModule({declarations:[V,L,B,_,$,M,G,R,T,E,O,D,j,H,z],imports:[i.CoreModule,i.FormsModule,d.ReactiveFormsModule,i.DropAreaModule,s.ButtonsModule,t.CdkTreeModule,n.RouterModule.forRoot(W,{useHash:!0}),g.TooltipModule.forRoot(),m.PopoverModule.forRoot(),i.DeviceStatusModule,y.BrowserAnimationsModule,h.CollapseModule.forRoot(),v.BsDropdownModule.forRoot()],entryComponents:[$,_,V],providers:[q,U,F,A,k,{provide:i.HOOK_ONCE_ROUTE,useValue:Y,multi:!0}]})],e)}(),Z=p.downgradeComponent({component:$,inputs:["moId"],outputs:["selectedNode"]}),X="c8y.upgrade.opcua",ee=(b.module(X,[]).directive("c8yOpcuaAddressSpaceTree",Z),[X]);S.registerNgModule(ee),e.OpcuaAddressSpaceTreeComponent=$,e.OpcuaAutoApplySettingsComponent=H,e.OpcuaDeviceProtocolDetailComponent=R,e.OpcuaProtocolModule=Q,e.OpcuaServersComponent=V,e.ng1Modules=ee,e.ɵ0=Y,e.ɵa=A,e.ɵb=L,e.ɵc=B,e.ɵd=_,e.ɵe=k,e.ɵf=M,e.ɵg=G,e.ɵh=E,e.ɵi=O,e.ɵj=T,e.ɵk=D,e.ɵl=j,e.ɵm=z,e.ɵn=q,e.ɵo=U,e.ɵp=F,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-protocol-opcua.umd.min.js.map