{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/upgrade/ng1/views.provider.ts","ng://@c8y/ngx-components/upgrade/bridge.service.ts","ng://@c8y/ngx-components/upgrade/action-bar.factory.ts","ng://@c8y/ngx-components/upgrade/action.factory.ts","ng://@c8y/ngx-components/upgrade/breadcrumb.factory.ts","ng://@c8y/ngx-components/upgrade/nodes.factory.ts","ng://@c8y/ngx-components/upgrade/search.factory.ts","ng://@c8y/ngx-components/upgrade/tabs.factory.ts","ng://@c8y/ngx-components/upgrade/docs.factory.ts","ng://@c8y/ngx-components/upgrade/upgrade.module.ts","ng://@c8y/ngx-components/upgrade/dashboard/dashboard-bridge.service.ts","ng://@c8y/ngx-components/upgrade/dashboard/widget.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/device-selector.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/component.factory.ts","ng://@c8y/ngx-components/upgrade/dashboard/copy-action.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/paste-action.component.ts","ng://@c8y/ngx-components/upgrade/dashboard/dashboard-actions.factory.ts","ng://@c8y/ngx-components/upgrade/dashboard/dashboard-upgrade.module.ts","ng://@c8y/ngx-components/upgrade/ng1/downgraded.components.ts","ng://@c8y/ngx-components/upgrade/ng1/serverMessages.service.ts","ng://@c8y/ngx-components/upgrade/ng1/downgraded.services.ts","ng://@c8y/ngx-components/upgrade/ng1/http.interceptor.ts","ng://@c8y/ngx-components/upgrade/ng1/navigator-node-root-legacy.ts","ng://@c8y/ngx-components/upgrade/ng1/root.component.ts","ng://@c8y/ngx-components/upgrade/ng1/index.ts","ng://@c8y/ngx-components/upgrade/ng1/title.decorator.ts","ng://@c8y/ngx-components/upgrade/ng1/alert.decorator.ts","ng://@c8y/ngx-components/upgrade/ng1/groupsHierarchyNavigator.decorator.ts","ng://@c8y/ngx-components/upgrade/ng1/navigator.provider.ts","ng://@c8y/ngx-components/upgrade/ng1/gettextCatalog.decorator.ts","ng://@c8y/ngx-components/upgrade/hybrid-app.module.ts","ng://@c8y/ngx-components/upgrade/upgrade.routes.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ViewContextLegacyParameter","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","ar","error","BridgeService","injector","appState","fetchClient","router","ngZone","routerService","actionService","$liveTabs","BehaviorSubject","fixE2eIssues","$ng1RouteChangeSuccess","fromNg1Event","get","$ng1RouteChangeStart","hookAuth","hookLanguage","hookTabs","hookNavigator","hookUserMenu","hookViewProvider","initialNavigation","ng1Routes","_this","contextViews","subscribe","cfg","addRoute","name","path","icon","context","ViewContext","contextKey","priority","component","EmptyComponent","data","showIf","ngxRoute","params","_a","id","showIfResult","invoke","undefined","$routeParams","when","Boolean","runPhase","navigateByUrl","url","fallbackRoutes","match","regexp","RegExp","keys","optional","template","$route","routes","forEach","c8yUiUtil","_getContext","getContext","events","pipe","filter","event","ActivationEnd","snapshot","routeConfig","replace","contextData","ngZone_1","Utils_1","window","org","cometd","Utils","timeoutFn_1","setTimeout","args","_i","runOutsideAngular","ace_1","ace","editFn_1","edit","ngZone_2","setToken","token","tfa","type","c8yAuth","onSetToken","setTFAToken","authReady","currentUser","u","headers","getFetchOptions","Authorization","tfatoken","$emit","hasAuth","first","map","store","lang","switchToLanguage","$apply","$location","c8yTabs","liveTabs","addTab","tab","decodeURIComponent","navigate","split","queryParams","search","skipLocationChange","refresh","$routeChanges","merge","EVENT_UPDATE","of","debounceTime","navigationNodes$","rootNodes$","getTabs","onlyVisible","show","upgradeTab","routeTabs","switchMap","all","checkingVisibility","startWith","combineLatest","_b","route","live","concat","getQuickLinks","list","getActionBarItems","c8yActionBar","$rootScope","elements","element","getAttribute","placement","getBreadcrumbs","c8yBreadcrumbs","breadcrumbs","breadcrumbsData","from","getLiveBreadcrumbs","items","slice","getSearch","c8ySearch","item","term","onSearch","getActions","registeredActions","action","hidden","text","disabled","obj","evt","stopListening","fromEventPattern","handler","$on","userMenuService","c8yAccessDenied","add","gettext","click","showAccessDeniedRequestsList","bridgeServiceFactory","bridgeServiceProvider","provide","useFactory","deps","AppStateService","FetchClient","Router","NgZone","RouterService","ActionService","Ng1ActionBarFactoryService","bridge","routeChanges$","Injectable","Ng1ActionFactoryService","tabs","items$","newTabs","handleTabsRedirect","redirectedTab","find","redirectedTo","topPriorityTab","TabsService","Ng1BreadcrumbFactoryService","trigger","ReplaySubject","Ng1NodesFactoryService","Ng1SearchFactoryService","Ng1TabsFactoryService","tabsObservable","Ng1DocsFactoryService","links","el","UpgradeModule","NgModule","imports","RouterModule","exports","providers","HOOK_NAVIGATOR_NODES","useClass","multi","HOOK_TABS","HOOK_ACTION_BAR","HOOK_ACTION","HOOK_BREADCRUMB","HOOK_SEARCH","HOOK_DOCS","DashboardBridgeService","ng1Injector","zone","contextDashboardService","dashboardSvc","compile","instantiateComponent","widget","dashboard","child","transformChildWithContext","forcedContext","transformedChild_1","deviceType","updateConfigTargetsWithContext","config","loadTemplate","loadConfigTemplate","editDashboard","editCurrentDashboard","dashboardId","copyDashboard","getDashboard","c8y_Dashboard","dashboardClipboard","pasteDashboard","newDashboard","navigateToDashboard","instantiateDeviceSelector","widgetConfig","transformedChild","scope","$new","dashboardContext","widgetComponent","innerHTML","templateUrl","test","relativeTo","getActivatedRoute","onlyDeviceSelector","settings","ng1","options","forms","rootId","configCmp","configComponent","configTemplateUrl","$watch","formStatus","formDisabled","componentForm","$invalid","ContextDashboardService","WidgetComponent","dashboardBridgeService","ngOnInit","nativeElement","ng1Scope","ngOnDestroy","$destroy","ElementRef","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","DeviceSelectorComponent","Ng1ComponentFactoryService","ng1Components","components","cmp","transformConfigWithContext","componentTransformConfigWithContext","upgrade","nameDisplay","description","previewImage","noNewWidgets","CopyActionComponent","vcRef","createEmbeddedView","templateCopy","ViewContainerRef","tslib_1.__decorate","ViewChild","read","TemplateRef","static","PasteActionComponent","dashboardName","templatePaste","Ng1DashboardActionFactoryService","activeRoute","actions","parent","isDashboard","canPaste","Device","Group","includes","DashboardUpgradeModule","declarations","entryComponents","CommonModule","TranslateModule","dashboardBridgeFactory","Optional","HOOK_COMPONENTS","bootstrapComponent","downgradeComponent","BootstrapComponent","userTotpComponent","UserTotpRevokeComponent","appLogsAutoRefreshComponent","AppLogsAutoRefreshComponent","dataGridComponent","DataGridComponent","impactProviderSettingsComponent","ImpactProviderSettingsComponent","ServerMessagesService","translateService","patterns","MESSAGE_PATTERNS","paramIndex","decorator","translate","instant","TranslateService","Inject","HOOK_PATTERN_MESSAGES","tslib_1.__param","bridgeService","downgradeInjectable","appStateService","headerService","HeaderService","alertsService","AlertService","UserMenuService","apiService","ApiService","docsService","DocsService","passwordService","PasswordService","serverMessagesService","c8yNg1HttpInterceptor","$q","c8yLoadingIndicator","c8yApiService","finishRequest","res","method","onFinish","response","request","onStart","requestError","rejection","responseError","NavigatorNodeRootLegacy","_super","__","constructor","create","tslib_1.__extends","addRoot","nodeData","duplicate","preventDuplicates","parents","some","routerLinkExact","createNode","node","newNode","update","bind","root","defineProperties","realName","_parent","addChild","nodeChild","set","NavigatorNodeRoot","rootComponent","controller","$timeout","c8yBase","c8yNavigator","c8yApplication","c8yHeaderService","vm","onAuthStateChange","authState","onAppInfo","tabsHorizontal","appOption","checkReady","document","querySelector","clientWidth","widthSet","$onInit","states","nav","open","isOpen","navOpen","configNavigator","canToggle","rootNodes","currentAppCached","navHiddenOnStartup","controllerAs","preventNg1Bootstrap","angular\n    .module","$httpProvider","ng1InterceptorIndex","interceptors","indexOf","splice","directive","factory","$delegate","$injector","$templateCache","$compile","changeTitle","newTitle","title","changeTitleInAngular","subtitle","isolatedScope","angular.element","domElement","setTitleElement","$element","targetScope","property","alert","addAlert","transformAlert","newAlert","onClose","onDetail","loadAll","addGroupNavigation","service","provider","rootNodesSubject","Subject","conditionalNodes","defer","children","addNavigation","nodes","isArray","showIfPermissions","showIfContainsVisibleViews","isConditional","navNode","removeNavigation","found","remove","findNode","$get","processShowIf","visibilityPromises","views","getByPath","view","configureVisibility","pick","viewsConditionalVisibility","every","visible","showIfPermission","$routeProvider","c8yTabsProvider","c8yPathUtils","viewMap","prefixWithSlash","newPath","__c8y_locales","c8yLocales","initDone","currentCfg","originalPath","upgradedContext","isUpgrade","appendSegment","substring","existingConfig","createTab","resolveRedirectTo","gettextCatalog","sortedCurrentCfg","sortTabsViews","current","pathParams","unary","val","redirectedViewPath","startsWith","$interpolate","c8yTranslate","originalGetString","angular.bind","getString","input","translatedString","interpolatedString","stringToReturn","ng1Modules","HybridAppModule","ngDoBootstrap","bootstrap","getElementById","strictDi","UPGRADE_ROUTES"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { startsWith, unary, map, find, forEach } from 'lodash-es';\nimport { ViewContext } from '@c8y/ngx-components';\nimport { ReplaySubject } from 'rxjs';\n\nexport enum ViewContextLegacyParameter {\n  Device = 'deviceId',\n  Group = 'groupId',\n  User = 'userId',\n  Application = 'applicationId',\n  SubscribedApplications = 'applicationId',\n  Tenant = 'tenantId'\n}\n\nfunction c8yViewsProvider($routeProvider, c8yTabsProvider, c8yPathUtils) {\n  'ngInject';\n\n  const viewMap = {};\n  const contextViews = new ReplaySubject();\n\n  return {\n    when,\n    $get() {\n      return {\n        contextViews,\n        when(path, cfg) {\n          return when(path, cfg, true);\n        },\n        getByPath,\n        prefixWithSlash\n      };\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name when\n   * @methodOf c8y.ui.provider:c8yViewsProvider\n   *\n   * @description\n   * Defines a view for given route.\n   * If multiple views are defined for a single route then there will be a separate tab for each view available when user visits that route.\n   *\n   * @param path Target route.\n   * @param cfg View configuration object with the following properties:\n   *\n   * - **name** - `string` - View's name (in case of multiple views at single route this will be displayed as tab's title).\n   * - **priority** - `integer` - View's priority (in case of multiple views at single route this will determine the position of view's tab in the tabs stack).\n   * - **icon** - `string` - Font Awesome icon name for the view (displayed on the tab's header).\n   * - **showIf** - `function` - Function returning boolean value indicating whether to show a tab for the view or not.\n   * - **templateUrl** - `string` - Path to the template to use for displaying the view.\n   *\n   * You can also provide other view options - the same as available for standard {@link https://docs.angularjs.org/api/ngRoute/provider/$routeProvider $routeProvider} in AngularJS.\n   *\n   * @example\n   * The following example demonstrates how to add a new view to device details route\n   * (which will be displayed as a tab if other views are assigned to the same route):\n   * <pre>\n   *   c8yViewsProvider.when('/device/:deviceId', {\n   *     name: 'Tracking',\n   *     templateUrl: ':::PLUGIN_PATH:::/views/index.html',\n   *     icon: 'crosshairs',\n   *     showIf: ['$routeParams', 'c8yDevices', function ($routeParams, c8yDevices) {\n   *       var deviceId = $routeParams.deviceId;\n   *       return c8yDevices.detailCached(deviceId).then(function (res) {\n   *         var device = res.data;\n   *         return device && (device.c8y_MotionTracking || device.c8y_Geofence);\n   *       });\n   *     }]\n   *   });\n   * </pre>\n   */\n  function when(path, cfg, runPhase) {\n    const newPath = prefixWithSlash(path);\n    cfg.resolve = cfg.resolve || {};\n    // eslint-disable-next-line no-underscore-dangle\n    cfg.resolve.__c8y_locales = [\n      'c8yLocales',\n      c8yLocales => {\n        return c8yLocales.initDone;\n      }\n    ];\n\n    let currentCfg = viewMap[newPath];\n    const originalPath = newPath;\n\n    if (!cfg.name) {\n      // console.warn('View name not defined');\n    }\n\n    if (!currentCfg) {\n      viewMap[newPath] = [];\n      currentCfg = viewMap[newPath];\n    }\n\n    const upgradedContext = Object.keys(ViewContext)\n      .map(key => ({\n        key,\n        isUpgrade:\n          prefixWithSlash(ViewContext[key].replace('id', ViewContextLegacyParameter[key])) === path\n      }))\n      .find(({ isUpgrade }) => isUpgrade);\n\n    if (upgradedContext) {\n      currentCfg.push(cfg);\n      cfg.path = newPath;\n\n      const p = c8yPathUtils.appendSegment(originalPath.replace(path, ''), cfg.name);\n      contextViews.next({\n        ...cfg,\n        path: cfg.name ? p.substring(1) : '',\n        contextKey: upgradedContext.key,\n        runPhase\n      });\n      cfg.showIf = undefined;\n      if (cfg.name) {\n        cfg.path = c8yPathUtils.appendSegment(originalPath, cfg.name);\n      }\n    } else {\n      if (currentCfg.length === 1) {\n        const [existingConfig] = currentCfg;\n        existingConfig.path = c8yPathUtils.appendSegment(originalPath, existingConfig.name);\n        existingConfig.tab = createTab(originalPath, existingConfig);\n        $routeProvider.when(existingConfig.path, existingConfig);\n      }\n\n      currentCfg.push(cfg);\n      cfg.path = newPath;\n\n      if (currentCfg.length > 1) {\n        cfg.path = c8yPathUtils.appendSegment(originalPath, cfg.name);\n        createTab(originalPath, cfg);\n\n        $routeProvider.when(prefixWithSlash(originalPath), {\n          resolveRedirectTo($route, $q, c8yUiUtil, c8yTabs, gettextCatalog) {\n            'ngInject';\n\n            const sortedCurrentCfg = c8yTabsProvider.sortTabsViews(currentCfg, gettextCatalog);\n            const params = $route.current.pathParams;\n\n            return $q\n              .all(map(sortedCurrentCfg, unary(c8yUiUtil.configureVisibility)))\n              .then(views => {\n                const first = find(views, 'show');\n                let url = first.path;\n                forEach(params, (val, key) => {\n                  url = url.replace(`:${key}`, val);\n                });\n                c8yTabs.redirectedViewPath = url;\n                return url;\n              });\n          }\n        });\n      }\n    }\n    return $routeProvider.when(prefixWithSlash(cfg.path), cfg);\n  }\n\n  function getByPath(path) {\n    return viewMap[prefixWithSlash(path)];\n  }\n\n  function createTab(path, cfg) {\n    c8yTabsProvider.addTab(path, cfg);\n  }\n\n  function prefixWithSlash(path) {\n    const prefix = startsWith(path, '/') ? '' : '/';\n    return prefix + path;\n  }\n}\n\nexport { c8yViewsProvider };\n","import {\n  Action,\n  ActionBarItem,\n  ActionService,\n  AppStateService,\n  Breadcrumb,\n  BreadcrumbItem,\n  EmptyComponent,\n  RouterService,\n  Search,\n  Tab,\n  ViewContext,\n  gettext,\n  DocLink\n} from '@c8y/ngx-components';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subject,\n  combineLatest,\n  from,\n  fromEventPattern,\n  of\n} from 'rxjs';\nimport { debounceTime, filter, map, merge, skip, startWith, switchMap } from 'rxjs/operators';\n\nimport { ActivationEnd } from '@angular/router';\nimport { FetchClient } from '@c8y/client';\nimport { NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ViewContextLegacyParameter } from './ng1/views.provider';\n\nexport class BridgeService {\n  $routeChanges: Observable<any>;\n  $ng1RouteChangeSuccess: Observable<any>;\n  $ng1RouteChangeStart: Observable<any>;\n  $liveTabs: Subject<Tab[]> = new BehaviorSubject([]);\n  navigationNodes$: Observable<any>;\n  constructor(\n    public injector: any,\n    private appState: AppStateService,\n    private fetchClient: FetchClient,\n    public router: Router,\n    private ngZone: NgZone,\n    private routerService: RouterService,\n    private actionService: ActionService\n  ) {\n    this.fixE2eIssues();\n    this.$ng1RouteChangeSuccess = this.fromNg1Event(\n      this.injector.get('$rootScope'),\n      '$routeChangeSuccess'\n    );\n    this.$ng1RouteChangeStart = this.fromNg1Event(\n      this.injector.get('$rootScope'),\n      '$routeChangeStart'\n    );\n    this.hookAuth();\n    this.hookLanguage();\n    this.hookTabs();\n    this.hookNavigator();\n    this.hookUserMenu();\n    this.hookViewProvider();\n    this.router.initialNavigation();\n    this.ng1Routes();\n  }\n\n  hookViewProvider() {\n    const c8yViews = this.injector.get('c8yViews');\n    c8yViews.contextViews.subscribe(cfg => this.addRoute(cfg));\n  }\n\n  addRoute(cfg) {\n    this.routerService.addRoute({\n      label: cfg.label || cfg.name,\n      path: cfg.path,\n      icon: cfg.icon,\n      context: ViewContext[cfg.contextKey] as ViewContext,\n      priority: cfg.priority,\n      component: EmptyComponent,\n      data: {\n        showIf: cfg.showIf\n          ? ngxRoute => {\n              const params = {\n                ...ngxRoute.params,\n                [ViewContextLegacyParameter[cfg.contextKey]]: ngxRoute.params.id\n              };\n              const showIfResult = this.injector.invoke(cfg.showIf, undefined, {\n                $routeParams: params\n              });\n              // make sure showIf result is a promise with boolean result:\n              return this.injector\n                .get('$q')\n                .when(showIfResult)\n                .then(Boolean);\n            }\n          : undefined\n      }\n    });\n    if (cfg.runPhase) {\n      this.router.navigateByUrl(this.router.url);\n    }\n  }\n\n  ng1Routes() {\n    const template = '';\n    const fallbackRoutes = [];\n\n    // tslint:disable-next-line: forin\n    for (const context in ViewContext) {\n      const path = ViewContext[context].match(/(\\w+)\\//)[1];\n      const regexp = new RegExp(`^/${path}/(?:([^/]+)).*$`);\n      fallbackRoutes.push({\n        keys: [{ name: ViewContextLegacyParameter[context], optional: false }],\n        regexp,\n        template\n      });\n    }\n\n    /**\n     * When asset detail routes (/device/:id,  /group/:id) are matched in Angular Router, ngRoute in\n     * angular.js must also have matching generic routes so that the ids can be extracted from the paths and\n     * injected in multiple calls (showIf, c8yActions, etc) as properties of $routeParams.\n     *\n     * The function in src/ngRoute/route.js (angular.js) where the routes are matched is called parseRoute(). This\n     * function calls angular.forEach and in turn this function checks for the presence of a forEach method before\n     * trying object key iteration.\n     * By attaching a non enumerable forEach method to the routes object we guarantee that the fallback generic routes\n     * are only matched after any other registered through $routeProvider.when.\n     */\n    const $route = this.injector.get('$route');\n    Object.defineProperty($route.routes, 'forEach', {\n      // make non enumerable\n      value: function forEach(iterator, context) {\n        // tslint:disable-next-line: forin\n        for (const key in this) {\n          iterator.call(context, this[key], key, this);\n        }\n        fallbackRoutes.forEach(r => iterator.call(context, r));\n      }\n    });\n\n    /**\n     * Some functions use the current context. As some parts are upgraded and some not, the following updates the\n     * angularjs getContext function to resolve always the right context.\n     */\n    const c8yUiUtil = this.injector.get('c8yUiUtil');\n    const _getContext = c8yUiUtil.getContext;\n    this.router.events\n      .pipe(filter(event => event instanceof ActivationEnd))\n      .subscribe((event: ActivationEnd) => {\n        if (event.snapshot.routeConfig.path === '**') {\n          c8yUiUtil.getContext = _getContext;\n        } else if (event.snapshot.data && event.snapshot.data.context) {\n          c8yUiUtil.getContext = () => {\n            return {\n              context: event.snapshot.data.context.replace('/:id', ''),\n              id: event.snapshot.data.contextData.id\n            };\n          };\n        } else {\n          c8yUiUtil.getContext = () => ({ context: null, id: null });\n        }\n      });\n  }\n\n  fixE2eIssues() {\n    try {\n      const { ngZone } = this;\n      const { Utils } = (window as any).org.cometd;\n      const timeoutFn = Utils.setTimeout;\n      // tslint:disable-next-line:only-arrow-functions\n      Utils.setTimeout = function(...args) {\n        return ngZone.runOutsideAngular(() => timeoutFn.apply(Utils, args));\n      };\n    } catch (e) {\n      // do nothing\n    }\n\n    try {\n      const { ace } = window as any;\n      const editFn = ace.edit;\n      const { ngZone } = this;\n      // tslint:disable-next-line:only-arrow-functions\n      ace.edit = function(...args) {\n        return ngZone.runOutsideAngular(() => editFn.apply(ace, args));\n      };\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  setToken(token?: string, tfa?: string, type = 'Basic') {\n    const c8yAuth = this.injector.get('c8yAuth');\n    if (type === 'Basic') {\n      c8yAuth.onSetToken({ token, type });\n      if (tfa) {\n        c8yAuth.setTFAToken(tfa);\n      }\n    } else {\n      c8yAuth.authReady();\n    }\n  }\n\n  hookAuth() {\n    this.appState.currentUser.subscribe(u => {\n      if (u) {\n        const { headers } = this.fetchClient.getFetchOptions({});\n        this.injector.get('c8yAuth').headers = () => this.fetchClient.getFetchOptions({}).headers;\n        if (headers.Authorization) {\n          const token = headers.Authorization.match(/basic\\s(.*)$/i)[1];\n          if (token) {\n            this.setToken(token, headers.tfatoken);\n          }\n        } else {\n          this.setToken(undefined, headers.tfatoken, 'Oauth');\n        }\n        this.injector.get('$rootScope').$emit('authStateChange', { hasAuth: true });\n      } else {\n        this.injector.get('$rootScope').$emit('authStateChange', { hasAuth: false });\n      }\n    });\n  }\n\n  hookLanguage() {\n    let first = true;\n    this.appState\n      .map(store => store.lang)\n      .subscribe(lang => {\n        this.injector.get('c8yLocales').switchToLanguage(lang);\n        if (!first) {\n          this.injector.get('$rootScope').$apply();\n        }\n        first = false;\n      });\n  }\n\n  hookTabs() {\n    // Just for instantiation of the c8yAction service\n    this.injector.get('c8yActions');\n    const $location = this.injector.get('$location');\n    const c8yTabs = this.injector.get('c8yTabs');\n    let liveTabs = [];\n    c8yTabs.addTab = tab => {\n      liveTabs.push({\n        ...tab,\n        label: tab.label || tab.name,\n        path: decodeURIComponent(tab.path)\n      });\n      this.$liveTabs.next(liveTabs);\n    };\n    this.$ng1RouteChangeStart.subscribe(e => {\n      liveTabs = [];\n      this.$liveTabs.next(liveTabs);\n    });\n    this.$ng1RouteChangeSuccess\n      .subscribe(e => {\n        const path = $location.path();\n        if (this.router.url !== path) {\n          this.router.navigate(path.split('/'), {\n            queryParams: $location.search(),\n            skipLocationChange: true\n          });\n        }\n        if (this.actionService) {\n          this.actionService.refresh();\n        }\n      });\n    this.$routeChanges = this.$ng1RouteChangeSuccess.pipe(\n      merge(this.fromNg1Event(c8yTabs, c8yTabs.EVENT_UPDATE), of(1)),\n      debounceTime(100)\n    );\n  }\n\n  hookNavigator() {\n    this.navigationNodes$ = this.injector.get('c8yNavigator').rootNodes$;\n  }\n\n  getTabs(): Observable<any> {\n    const onlyVisible = ({ show }) => show;\n    const upgradeTab = tab => ({\n      ...tab,\n      label: tab.label || tab.name,\n      path: decodeURIComponent(tab.path)\n    });\n    const routeTabs = this.$routeChanges.pipe(\n      switchMap(() => {\n        const routes = this.injector.get('c8yTabs').routeTabs;\n        const visibilityPromise = Promise.all(\n          routes.map(({ checkingVisibility }) => checkingVisibility)\n        );\n        return visibilityPromise.then(() => routes.filter(onlyVisible).map(upgradeTab));\n      }),\n      startWith([])\n    );\n    return combineLatest(routeTabs, this.$liveTabs).pipe(\n      map(([route, live]) => route.concat(live))\n    );\n  }\n\n  getQuickLinks(): Promise<DocLink[]> {\n    const c8yQuickLinks = this.injector.get('c8yQuickLinks');\n    return c8yQuickLinks.list();\n  }\n\n  getActionBarItems(): Observable<ActionBarItem> {\n    const c8yActionBar = this.injector.get('c8yActionBar');\n    const $rootScope = this.injector.get('$rootScope');\n    const getActionBarElements = () =>\n      c8yActionBar.elements.map(element => ({\n        priority: element.getAttribute('action-bar-priority') || 0,\n        template: element,\n        placement: element.getAttribute('action-bar-position') || 'right'\n      }));\n    return this.fromNg1Event($rootScope, 'c8yActionBarChanged').pipe(\n      startWith(1),\n      map(getActionBarElements)\n    );\n  }\n\n  getBreadcrumbs(): Observable<Breadcrumb[]> {\n    const $location = this.injector.get('$location');\n    const path = $location.path();\n    const c8yBreadcrumbs = this.injector.get('c8yBreadcrumbs');\n    const breadcrumbs = c8yBreadcrumbs.get(path) || {};\n    const breadcrumbsData = breadcrumbs.data ? this.injector.invoke(breadcrumbs.data) : of([]);\n    return from(breadcrumbsData).pipe(\n      map((value: any[]) => {\n        value = value.concat(c8yBreadcrumbs.getLiveBreadcrumbs());\n        return value.map(\n          items => ({ items: items.slice(0, items.length - 1) as BreadcrumbItem[] } as Breadcrumb)\n        );\n      })\n    );\n  }\n\n  getSearch(): Search[] {\n    const c8ySearch = this.injector.get('c8ySearch');\n    return c8ySearch.list().map(item => {\n      return {\n        icon: 'search',\n        name: item.name,\n        term: '',\n        onSearch() {\n          if (this.term) {\n            c8ySearch.search(this.term);\n          }\n        }\n      } as Search;\n    });\n  }\n\n  getActions(): Observable<Action> {\n    const registeredActions = this.injector.get('c8yActions').registeredActions;\n    return of(\n      registeredActions\n        .filter(action => !action.hidden)\n        .map(action => ({\n          // The priority was reversed: Aligned it to dashboard, high first, low last.\n          priority: (action.priority || 0) * -1,\n          label: action.text,\n          icon: action.icon,\n          disabled: action.disabled,\n          action: () => {\n            this.injector.invoke(action.action, action);\n          }\n        }))\n    );\n  }\n\n  fromNg1Event(obj, evt) {\n    let stopListening;\n    function add(handler) {\n      stopListening = obj.$on(evt, handler);\n    }\n    return fromEventPattern(add, () => stopListening());\n  }\n\n  private hookUserMenu() {\n    const userMenuService = this.injector.get('c8yUserMenuService');\n    const c8yAccessDenied = this.injector.get('c8yAccessDenied');\n    userMenuService.add({\n      icon: 'exclamation-triangle',\n      priority: 10,\n      label: gettext('Access denied requests'),\n      click: c8yAccessDenied.showAccessDeniedRequestsList\n    });\n  }\n}\n\nexport function bridgeServiceFactory(\n  injector: any,\n  appState: AppStateService,\n  fetchClient: FetchClient,\n  router: Router,\n  ngZone: NgZone,\n  routerService: RouterService,\n  actionService: ActionService\n) {\n  return new BridgeService(injector, appState, fetchClient, router, ngZone, routerService, actionService);\n}\n\nexport const bridgeServiceProvider = {\n  provide: BridgeService,\n  useFactory: bridgeServiceFactory,\n  deps: ['$injector', AppStateService, FetchClient, Router, NgZone, RouterService, ActionService]\n};\n","import { Injectable } from '@angular/core';\nimport { ActionBarFactory, ActionBarItem } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Ng1ActionBarFactoryService implements ActionBarFactory {\n  routeChanges$: Observable<any>;\n  constructor(\n    private bridge: BridgeService\n  ) {\n    this.routeChanges$ = bridge.$routeChanges;\n  }\n\n  get(): Observable<ActionBarItem> {\n    return this.bridge.getActionBarItems();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Action, ActionFactory, TabsService } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class Ng1ActionFactoryService implements ActionFactory {\n  routeChanges$: Observable<any>;\n  $location: any;\n  constructor(\n    private bridge: BridgeService,\n    private tabs: TabsService\n  ) {\n    this.routeChanges$ = bridge.$routeChanges;\n    this.$location = bridge.injector.get('$location');\n    this.tabs.items$.subscribe((newTabs) => this.handleTabsRedirect(newTabs));\n  }\n\n  handleTabsRedirect(tabs) {\n    /**\n     * This function is doing the same process as function redirect in the file\n     * modules/core/ui/navigation/tabs.provider.js\n     * That function  is not run because bridge.service.ts overrides the method addTab where the redirect() was called.\n     */\n    const redirectedTab = tabs.find((tab) => tab.redirectedTo);\n    const [ topPriorityTab ] = tabs;\n    if (redirectedTab && !topPriorityTab.redirectedTo) {\n      this.$location.replace();\n      this.$location.path(topPriorityTab.path);\n      topPriorityTab.redirectedTo = true;\n      redirectedTab.redirectedTo = false;\n    }\n  }\n\n  get() {\n    return this.bridge.getActions();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BreadcrumbFactory } from '@c8y/ngx-components';\nimport { ReplaySubject } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { BridgeService } from './bridge.service';\n\n@Injectable()\nexport class Ng1BreadcrumbFactoryService implements BreadcrumbFactory {\n  private trigger: any = new ReplaySubject(1);\n  private breadcrumbs = this.trigger.pipe(\n    debounceTime(100),\n    switchMap(() => {\n      return this.bridge.getBreadcrumbs();\n    })\n  );\n  constructor(\n    private bridge: BridgeService\n  ) {}\n\n  get() {\n    this.trigger.next();\n    return this.breadcrumbs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigatorNodeFactory } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Ng1NodesFactoryService implements NavigatorNodeFactory {\n  constructor(\n    private bridge: BridgeService\n  ) {}\n\n  get() {\n    return this.bridge.navigationNodes$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Search, SearchFactory } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\n\n@Injectable()\nexport class Ng1SearchFactoryService implements SearchFactory {\n  search: Search[];\n  constructor(private bridge: BridgeService) {\n    this.search = this.bridge.getSearch();\n  }\n\n  get() {\n    return this.search;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TabFactory } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Ng1TabsFactoryService implements TabFactory {\n  tabsObservable;\n  constructor(private bridge: BridgeService) {\n    this.tabsObservable = bridge.getTabs();\n  }\n  get() {\n    return this.tabsObservable;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DocLinkFactory, DocLink } from '@c8y/ngx-components';\nimport { BridgeService } from './bridge.service';\n\n@Injectable()\nexport class Ng1DocsFactoryService implements DocLinkFactory {\n  private links: Promise<DocLink[]>;\n  constructor(private bridge: BridgeService) {\n    this.links = this.bridge.getQuickLinks();\n    this.links.then(list => {\n      list.map(el => {\n        el.type = el.type || 'quicklink';\n        return el;\n      });\n    });\n  }\n\n  get() {\n    return this.links;\n  }\n}\n","import { bridgeServiceProvider } from './bridge.service';\nimport {\n  HOOK_ACTION,\n  HOOK_ACTION_BAR,\n  HOOK_BREADCRUMB,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_SEARCH,\n  HOOK_TABS,\n  HOOK_DOCS,\n  RouterModule\n} from '@c8y/ngx-components';\nimport { Ng1ActionBarFactoryService } from './action-bar.factory';\nimport { Ng1ActionFactoryService } from './action.factory';\nimport { Ng1BreadcrumbFactoryService } from './breadcrumb.factory';\nimport { Ng1NodesFactoryService } from './nodes.factory';\nimport { Ng1SearchFactoryService } from './search.factory';\nimport { Ng1TabsFactoryService } from './tabs.factory';\nimport { NgModule } from '@angular/core';\nimport { Ng1DocsFactoryService } from './docs.factory';\n\n@NgModule({\n  imports: [RouterModule],\n  exports: [],\n  providers: [\n    bridgeServiceProvider,\n    { provide: HOOK_NAVIGATOR_NODES, useClass: Ng1NodesFactoryService, multi: true },\n    { provide: HOOK_TABS, useClass: Ng1TabsFactoryService, multi: true },\n    { provide: HOOK_ACTION_BAR, useClass: Ng1ActionBarFactoryService, multi: true },\n    { provide: HOOK_ACTION, useClass: Ng1ActionFactoryService, multi: true },\n    { provide: HOOK_BREADCRUMB, useClass: Ng1BreadcrumbFactoryService, multi: true },\n    { provide: HOOK_SEARCH, useClass: Ng1SearchFactoryService, multi: true },\n    { provide: HOOK_DOCS, useClass: Ng1DocsFactoryService, multi: true }\n  ]\n})\nexport class UpgradeModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { getActivatedRoute } from '@c8y/ngx-components';\nimport {\n  ContextDashboardService,\n  ContextDashboardManagedObject,\n  ContextWidgetConfig\n} from '@c8y/ngx-components/context-dashboard';\nimport { gettext } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\n\n@Injectable()\nexport class DashboardBridgeService {\n  dashboardSvc;\n  compile;\n  dashboardClipboard;\n\n  constructor(\n    private ng1Injector: any,\n    private zone: NgZone,\n    private router: Router,\n    private contextDashboardService: ContextDashboardService\n  ) {\n    this.dashboardSvc = ng1Injector.get('dashboardSvc');\n    this.compile = ng1Injector.get('$compile');\n  }\n\n  get ng1Components() {\n    return this.ng1Injector.get('c8yComponents');\n  }\n\n  async instantiateComponent(widget, element) {\n    const { dashboard, context, child } = widget;\n    if (dashboard) {\n      const transformedChild = await this.dashboardSvc.transformChildWithContext(\n        this.dashboardSvc.forcedContext || context,\n        dashboard,\n        child\n      );\n      if (this.dashboardSvc.forcedContext || dashboard.deviceType) {\n        await this.dashboardSvc.updateConfigTargetsWithContext(\n          this.dashboardSvc.forcedContext || context,\n          transformedChild.config\n        );\n      }\n      return this.zone.runOutsideAngular(() =>\n        this.loadTemplate(transformedChild, child, element, context)\n      );\n    } else {\n      return this.loadConfigTemplate(element, widget);\n    }\n  }\n\n  async editDashboard(dashboard) {\n    return this.dashboardSvc.editCurrentDashboard({ dashboardId: dashboard.id });\n  }\n\n  copyDashboard() {\n    const dashboard = this.getDashboard();\n    const couldCopy = this.dashboardSvc.copyDashboard(dashboard.c8y_Dashboard);\n    if (couldCopy) {\n      this.dashboardClipboard = dashboard;\n      return dashboard;\n    }\n  }\n\n  async pasteDashboard() {\n    try {\n      const newDashboard = await this.dashboardSvc.pasteDashboard();\n      await this.contextDashboardService.addTab(newDashboard);\n      this.navigateToDashboard(newDashboard);\n      this.dashboardClipboard = undefined;\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  instantiateDeviceSelector(element, widgetConfig: ContextWidgetConfig) {\n    return this.loadConfigTemplate(element, widgetConfig, true);\n  }\n\n  private loadTemplate(transformedChild, child, element, context) {\n    const scope = this.ng1Injector.get('$rootScope').$new(true);\n    scope.child = transformedChild;\n    scope.dashboardContext = context;\n    if (child.widgetComponent) {\n      element.innerHTML = `<c8y-ui-component component-name=\"'${\n        child.widgetComponent\n      }'\" config=\"child.config\" context=\"dashboardContext\"></c8y-ui-component>`;\n    } else if (child.templateUrl) {\n      element.innerHTML = `<ng-include src=\"'${child.templateUrl}'\"></ng-include>`;\n    }\n    this.compile(element)(scope);\n    return scope;\n  }\n\n  private navigateToDashboard(dashboard: ContextDashboardManagedObject) {\n    if (/dashboard/.test(this.router.url)) {\n      this.router.navigate(['..', dashboard.id], {\n        relativeTo: getActivatedRoute(this.router)\n      });\n    } else {\n      this.router.navigate(['..', 'dashboard', dashboard.id], {\n        relativeTo: getActivatedRoute(this.router)\n      });\n    }\n  }\n\n  private getDashboard() {\n    return getActivatedRoute(this.router).snapshot.data.dashboard;\n  }\n\n  private loadConfigTemplate(\n    element,\n    widgetConfig: ContextWidgetConfig,\n    onlyDeviceSelector = false\n  ) {\n    const { settings } = widgetConfig;\n    const scope = this.ng1Injector.get('$rootScope').$new(true);\n\n    scope.settings = { ...settings, ...settings.ng1 };\n    scope.options = widgetConfig.options;\n    scope.config = widgetConfig;\n    scope.forms = {};\n    scope.rootId = settings.context.id;\n    scope.dashboard = get(widgetConfig, 'settings.dashboardMo');\n\n    let configCmp = '';\n    if (!onlyDeviceSelector) {\n      if (widgetConfig.settings.configComponent) {\n        configCmp = `<c8y-ui-component component-name=\"'${\n          widgetConfig.settings.configComponent\n        }'\" config=\"config\"></c8y-ui-component>`;\n      } else if (widgetConfig.settings.configTemplateUrl) {\n        configCmp = `<ng-include src=\"'${widgetConfig.settings.configTemplateUrl}'\"></ng-include>`;\n      }\n    }\n\n    element.innerHTML = `\n    <ng-form name=\"forms.componentForm\">\n      <div class=\"form-group\"\n        ng-if=\"!settings.noDeviceTarget\"\n        ng-style=\"{height: settings.hideTarget && '0', overflow: 'hidden'}\"\n      >\n        <label translate>${gettext('Target assets or devices')}</label>\n        <c8y-device-selector-combo parent=\"rootId\"\n          selected-child-device=\"config.device\"\n          groups-selectable=\"settings.groupsSelectable\"\n        ></c8y-device-selector-combo>\n      </div>\n      ${configCmp}\n    </ng-form>`;\n\n    scope.$watch('forms.componentForm.$invalid', formStatus => {\n      this.contextDashboardService.formDisabled = formStatus;\n    });\n    this.compile(element)(scope);\n    this.contextDashboardService.formDisabled = scope.forms.componentForm.$invalid;\n\n    return scope;\n  }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\n\n@Component({\n  selector: 'c8y-widget-legacy',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WidgetComponent implements OnInit, OnDestroy {\n  ng1Scope;\n  config;\n\n  constructor(\n    private dashboardBridgeService: DashboardBridgeService,\n    private el: ElementRef\n  ) {}\n\n  async ngOnInit() {\n    this.ng1Scope = await this.dashboardBridgeService.instantiateComponent(this.config, this.el.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    if (this.ng1Scope) {\n      this.ng1Scope.$destroy();\n    }\n  }\n}\n","import { Input, ChangeDetectionStrategy, Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\n\n@Component({\n  selector: 'c8y-device-selector-legacy',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeviceSelectorComponent implements OnInit, OnDestroy {\n  ng1Scope;\n  config;\n\n  constructor(\n    private dashboardBridgeService: DashboardBridgeService,\n    private el: ElementRef\n  ) {}\n\n  async ngOnInit() {\n    this.ng1Scope = this.dashboardBridgeService.instantiateDeviceSelector(this.el.nativeElement, this.config);\n  }\n\n  ngOnDestroy(): void {\n    if (this.ng1Scope) {\n      this.ng1Scope.$destroy();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DynamicComponentDefinition } from '@c8y/ngx-components';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\nimport { WidgetComponent } from './widget.component';\nimport { DeviceSelectorComponent } from './device-selector.component';\n\n@Injectable()\nexport class Ng1ComponentFactoryService {\n  constructor(private bridge: DashboardBridgeService) {}\n  async get() {\n    const components = (await this.bridge.ng1Components.list()).map(cmp => {\n      const data = {\n        settings: {\n          ...cmp.options,\n          configTemplateUrl: cmp.configTemplateUrl,\n          widgetComponent: cmp.widgetComponent,\n          configComponent: cmp.configComponent,\n          transformConfigWithContext:\n            cmp.transformConfigWithContext || cmp.componentTransformConfigWithContext,\n          upgrade: true\n        }\n      } as any;\n      data.settings.templateUrl = cmp.templateUrl; // workaround as in object it creates build error\n\n      return {\n        id: cmp.name,\n        label: cmp.nameDisplay || cmp.name,\n        description: cmp.description,\n        component: WidgetComponent,\n        configComponent: WidgetComponent,\n        previewImage: cmp.previewImage,\n        data\n      } as DynamicComponentDefinition;\n    });\n\n    // add the device selector legacy component\n    components.push({\n      id: 'device.selector.legacy',\n      label: 'Device selector',\n      description: '',\n      data: { settings: { noNewWidgets: true, upgrade: true } },\n      component: DeviceSelectorComponent\n    });\n\n    return components;\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\n\n@Component({\n  selector: 'c8y-copy-action-legacy',\n  template: `\n    <ng-template #templateCopy>\n      <li>\n        <button title=\"{{'Copy dashboard' | translate}}\" (click)=\"copyDashboard()\">\n          <i class=\"fa fw fa-clone\"></i>&nbsp;<span translate>Copy dashboard</span>\n        </button>\n      </li>\n    </ng-template>\n  `\n})\nexport class CopyActionComponent implements OnInit {\n  @ViewChild('templateCopy', { read: TemplateRef, static: true }) templateCopy;\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private dashboardBridgeService: DashboardBridgeService\n  ) {}\n\n  ngOnInit() {\n    this.vcRef.createEmbeddedView(this.templateCopy);\n  }\n\n  copyDashboard() {\n    this.dashboardBridgeService.copyDashboard();\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\n\n@Component({\n  selector: 'c8y-copy-action-legacy',\n  template: `\n    <ng-template #templatePaste>\n      <li>\n        <button title=\"{{'Paste dashboard' | translate}}\" (click)=\"pasteDashboard()\">\n          <i class=\"fa fw fa-clipboard\"></i>&nbsp;<span translate>Paste dashboard</span>&nbsp;<span\n            >\"{{ dashboardName }}\"</span\n          >\n        </button>\n      </li>\n    </ng-template>\n  `\n})\nexport class PasteActionComponent implements OnInit {\n  @ViewChild('templatePaste', { read: TemplateRef, static: true }) templatePaste;\n  dashboardName = '';\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private dashboardBridgeService: DashboardBridgeService\n  ) {}\n\n  ngOnInit() {\n    this.vcRef.createEmbeddedView(this.templatePaste);\n    this.dashboardName = this.dashboardBridgeService.dashboardClipboard.c8y_Dashboard.name;\n  }\n\n  pasteDashboard() {\n    this.dashboardBridgeService.pasteDashboard();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActionBarFactory, ActionBarItem, ViewContext } from '@c8y/ngx-components';\nimport { CopyActionComponent } from './copy-action.component';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\nimport { PasteActionComponent } from './paste-action.component';\n\n@Injectable()\nexport class Ng1DashboardActionFactoryService implements ActionBarFactory {\n  constructor(private dashboardBridgeService: DashboardBridgeService) {}\n\n  get(activeRoute?: ActivatedRoute) {\n    const actions = [];\n    const data =\n      !activeRoute.parent || activeRoute.snapshot.data.context\n        ? activeRoute.snapshot.data\n        : activeRoute.parent.snapshot.data;\n    const { contextData } = data;\n    const isDashboard = contextData && activeRoute.snapshot.data.dashboard;\n    const canPaste =\n      contextData &&\n      [ViewContext.Device, ViewContext.Group].includes(data.context) &&\n      this.dashboardBridgeService.dashboardClipboard;\n\n    if (isDashboard) {\n      actions.push({\n        priority: -20,\n        placement: 'more',\n        template: CopyActionComponent\n      } as ActionBarItem);\n    }\n\n    if (canPaste) {\n      actions.push({\n        priority: -10,\n        placement: 'more',\n        template: PasteActionComponent\n      } as ActionBarItem);\n    }\n\n    return actions;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, NgZone, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HOOK_ACTION_BAR, HOOK_COMPONENTS } from '@c8y/ngx-components';\nimport { ContextDashboardService } from '@c8y/ngx-components/context-dashboard';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng1ComponentFactoryService } from './component.factory';\nimport { CopyActionComponent } from './copy-action.component';\nimport { Ng1DashboardActionFactoryService } from './dashboard-actions.factory';\nimport { DashboardBridgeService } from './dashboard-bridge.service';\nimport { PasteActionComponent } from './paste-action.component';\nimport { WidgetComponent } from './widget.component';\nimport { DeviceSelectorComponent } from './device-selector.component';\n\n@NgModule({\n  declarations: [DeviceSelectorComponent, WidgetComponent, CopyActionComponent, PasteActionComponent],\n  entryComponents: [DeviceSelectorComponent, WidgetComponent, CopyActionComponent, PasteActionComponent],\n  imports: [CommonModule, TranslateModule],\n  providers: [\n    {\n      provide: DashboardBridgeService,\n      useFactory: dashboardBridgeFactory,\n      deps: ['$injector', NgZone, Router, [new Optional(), ContextDashboardService]]\n    },\n    { provide: HOOK_COMPONENTS, useClass: Ng1ComponentFactoryService, multi: true },\n    { provide: HOOK_ACTION_BAR, useClass: Ng1DashboardActionFactoryService, multi: true }\n  ]\n})\nexport class DashboardUpgradeModule {}\n\nexport function dashboardBridgeFactory(injector, ngZone, router, contextDashboardService) {\n  return new DashboardBridgeService(injector, ngZone, router, contextDashboardService);\n}\n","import { downgradeComponent } from '@angular/upgrade/static';\nimport {\n  BootstrapComponent,\n  DataGridComponent,\n  UserTotpRevokeComponent\n} from '@c8y/ngx-components';\nimport { AppLogsAutoRefreshComponent } from '@c8y/ngx-components/app-logs';\nimport { ImpactProviderSettingsComponent } from '@c8y/ngx-components/connectivity';\nexport const bootstrapComponent = downgradeComponent({ component: BootstrapComponent });\nexport const userTotpComponent = downgradeComponent({ component: UserTotpRevokeComponent });\nexport const appLogsAutoRefreshComponent = downgradeComponent({\n  component: AppLogsAutoRefreshComponent\n});\nexport const dataGridComponent = downgradeComponent({ component: DataGridComponent });\nexport const impactProviderSettingsComponent = downgradeComponent({\n  component: ImpactProviderSettingsComponent\n});\n","import { Injectable, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HOOK_PATTERN_MESSAGES } from '@c8y/ngx-components';\n\n@Injectable()\nexport class ServerMessagesService {\n\n  MESSAGE_PATTERNS: any;\n  constructor(\n    private translateService: TranslateService,\n    @Inject(HOOK_PATTERN_MESSAGES) patterns\n  ) {\n    this.MESSAGE_PATTERNS = patterns;\n  }\n\n  translate(s: string) {\n    return this.translateService.instant(s);\n  }\n}\n","import { downgradeInjectable } from '@angular/upgrade/static';\nimport {\n  AlertService,\n  HeaderService,\n  AppStateService,\n  PasswordService,\n  UserMenuService,\n  DocsService\n} from '@c8y/ngx-components';\nimport { BridgeService } from '../bridge.service';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ServerMessagesService } from './serverMessages.service';\n\nexport const bridgeService = downgradeInjectable(BridgeService);\nexport const appStateService = downgradeInjectable(AppStateService);\nexport const headerService = downgradeInjectable(HeaderService);\nexport const alertsService = downgradeInjectable(AlertService);\nexport const userMenuService = downgradeInjectable(UserMenuService);\nexport const apiService = downgradeInjectable(ApiService);\nexport const docsService = downgradeInjectable(DocsService);\nexport const passwordService = downgradeInjectable(PasswordService);\nexport const translateService = downgradeInjectable(TranslateService);\nexport const serverMessagesService = downgradeInjectable(ServerMessagesService);\n","function c8yNg1HttpInterceptor(\r\n  $q,\r\n  c8yLoadingIndicator,\r\n  c8yApiService\r\n) {\r\n  'ngInject';\r\n\r\n  function request(config) {\r\n    const { url, method } = config;\r\n    c8yApiService.onStart({ url, method, options: config });\r\n    return config;\r\n  }\r\n\r\n  function requestError(rejection) {\r\n    finishRequest(rejection);\r\n    return $q.reject(rejection);\r\n  }\r\n\r\n  function response(res) {\r\n    finishRequest(res);\r\n    return res;\r\n  }\r\n\r\n  function responseError(rejection) {\r\n    finishRequest(rejection);\r\n    c8yLoadingIndicator.responseError(rejection);\r\n    return $q.reject(rejection);\r\n  }\r\n\r\n  function finishRequest(res) {\r\n    const { url, method } = res.config;\r\n    c8yApiService.onFinish({\r\n      url,\r\n      method,\r\n      response: res,\r\n      options: res.config\r\n    });\r\n  }\r\n\r\n  return {\r\n    request,\r\n    requestError,\r\n    response,\r\n    responseError\r\n  };\r\n}\r\n\r\nexport { c8yNg1HttpInterceptor };\r\n","import { NavigatorNodeRoot, NavigatorNode } from '@c8y/ngx-components';\nimport { assign } from 'lodash-es';\n\nexport class NavigatorNodeRootLegacy extends NavigatorNodeRoot {\n\n  addRoot(nodeData): NavigatorNode {\n    let duplicate;\n    if (nodeData.path === '') {\n      nodeData.path = '/';\n    }\n    nodeData.label = nodeData.name;\n    if (typeof nodeData.parent === 'object') {\n      nodeData.parent.label = nodeData.parent.name;\n    }\n\n    if (nodeData.preventDuplicates) {\n      duplicate = this.find(({ path, parents, label}) => {\n        return path === nodeData.path &&\n          (label === nodeData.label) &&\n          parents.some((p) => p.label === nodeData.parent);\n      });\n      if (duplicate) {\n        duplicate.routerLinkExact = false;\n      }\n    }\n\n    return duplicate || super.addRoot(nodeData);\n  }\n\n  createNode(node) {\n    const newNode = super.createNode(node);\n    const update = newNode.update.bind(newNode);\n    const root = this;\n    return Object.defineProperties(assign(newNode, {\n      realName: (newNode as any).name || newNode.label,\n      _parent: true, // just use it to detect if it has been deleted\n      update(data) {\n        if (this._parent === undefined) {\n          // _parent was deleted somene instead to put this in root\n          root.addRoot(this);\n          // put it back so it can be deleted again\n          this._parent = true;\n        }\n        update(data);\n      },\n      addChild(nodeChild) {\n        this.add(root.createNode(nodeChild));\n      }\n    }), {\n      label: {\n        get() {\n          return this.realName || '';\n        },\n        set(name) {\n          this.realName = name;\n        }\n      },\n      name: {\n        get() {\n          return this.realName || '';\n        },\n        set(name) {\n          this.realName = name;\n        }\n      },\n      show: {\n        get() {\n          return !this.hidden;\n        },\n        set(show) {\n          this.hidden = !show;\n        }\n      }\n    });\n  }\n}\n","const rootComponent = {\n  template: `\n  <c8y-bootstrap>\n    <div id=\"c8y-legacy-view\">\n      <div ng-view ng-if=\"vm.widthSet && vm.authState.hasAuth\"></div>\n    </div>\n  </c8y-bootstrap>`,\n  controller: c8yUiRootController,\n  controllerAs: 'vm'\n};\n\nfunction c8yUiRootController(\n  $rootScope,\n  $timeout,\n  c8yBase,\n  c8yNavigator,\n  c8yApplication,\n  c8yHeaderService\n) {\n  'ngInject';\n  const vm = this;\n\n  Object.assign(vm, {\n    $onInit,\n    navOpen: false\n  });\n\n  ////////////\n\n  function $onInit() {\n    c8yHeaderService.map((states) => states.nav.open).subscribe((isOpen) => {\n      vm.navOpen = isOpen;\n    });\n    c8yHeaderService.configNavigator({canToggle: true});\n    $rootScope.$on('authStateChange', onAuthStateChange);\n    vm.rootNodes = c8yNavigator.rootNodes;\n    c8yApplication.currentAppCached().then(onAppInfo);\n    vm.navHiddenOnStartup = c8yBase.appOption('hide_navigator');\n    checkReady();\n  }\n\n  function onAuthStateChange(evt, data) {\n    vm.authState = data;\n  }\n\n  function onAppInfo() {\n    vm.tabsHorizontal = c8yBase.appOption('tabsHorizontal');\n  }\n\n  function checkReady() {\n    const element = document.querySelector('#c8y-legacy-view');\n    const hasWidth = element && element.clientWidth;\n    if (hasWidth) {\n      vm.widthSet = true;\n    } else {\n      $timeout(checkReady);\n    }\n  }\n}\nexport { rootComponent };\n","import { NgZone } from '@angular/core';\nimport { downgradeInjectable } from '@angular/upgrade/static';\nimport * as angular from 'angular';\nimport { c8yAlertDecorator } from './alert.decorator';\nimport {\n  appLogsAutoRefreshComponent,\n  bootstrapComponent,\n  dataGridComponent,\n  impactProviderSettingsComponent,\n  userTotpComponent\n} from './downgraded.components';\nimport {\n  alertsService,\n  apiService,\n  appStateService,\n  bridgeService,\n  docsService,\n  headerService,\n  passwordService,\n  serverMessagesService,\n  translateService,\n  userMenuService\n} from './downgraded.services';\nimport { gettextCatalogDecorator } from './gettextCatalog.decorator';\nimport { groupTypesHierarchyNavigatorDecorator } from './groupsHierarchyNavigator.decorator';\nimport { c8yNg1HttpInterceptor } from './http.interceptor';\nimport { c8yNavigatorProvider } from './navigator.provider';\nimport { rootComponent } from './root.component';\nimport { c8yTitleDecorator } from './title.decorator';\nimport { c8yViewsProvider } from './views.provider';\n\nconst NAME = 'c8y.upgrade';\n(window as any).preventNg1Bootstrap = true;\n\nangular\n  .module(NAME, [])\n  .config($httpProvider => {\n    'ngInject';\n\n    const ng1InterceptorIndex = $httpProvider.interceptors.indexOf('c8yLoadingIndicator');\n    if (ng1InterceptorIndex > -1) {\n      $httpProvider.interceptors.splice(ng1InterceptorIndex, 1);\n    }\n    $httpProvider.interceptors.push(c8yNg1HttpInterceptor);\n  })\n  .component('c8yUiRoot', rootComponent)\n  .directive('c8yBootstrap', bootstrapComponent)\n  .factory('c8yBridgeService', bridgeService)\n  .factory('c8yAppStateService', appStateService)\n  .factory('c8yHeaderService', headerService)\n  .factory('c8yUserMenuService', userMenuService)\n  .decorator('c8yTitle', c8yTitleDecorator)\n  .factory('c8yAlert', alertsService)\n  .decorator('c8yAlert', c8yAlertDecorator)\n  .decorator('groupTypesHierarchyNavigator', groupTypesHierarchyNavigatorDecorator) // prevents loading the groups\n  .factory('c8yApiService', apiService)\n  .factory('c8yDocs', docsService)\n  .service('c8yPasswordConfirm', passwordService);\n\nangular\n  .module('c8y.ui')\n  .provider('c8yNavigator', c8yNavigatorProvider)\n  .provider('c8yViews', c8yViewsProvider)\n  .directive('c8yUserTotpRevoke', userTotpComponent)\n  .directive('c8yAppLogsAutoRefresh', appLogsAutoRefreshComponent)\n  .directive('c8yImpactProviderSettings', impactProviderSettingsComponent)\n  .directive('c8yDataGrid', dataGridComponent)\n  .factory('c8yTranslate', translateService)\n  .decorator('gettextCatalog', gettextCatalogDecorator)\n  .factory('c8yServerMessages', serverMessagesService)\n  .factory('ngZone', downgradeInjectable(NgZone));\n\nexport const ng1Modules = ['app', NAME];\n","import * as angular from 'angular';\n\nfunction c8yTitleDecorator(\n  $q,\n  $delegate,\n  $injector,\n  $rootScope,\n  $location,\n  $templateCache,\n  $compile,\n  c8yHeaderService\n) {\n  'ngInject';\n\n  $delegate.changeTitle = changeTitle;\n  $delegate.setTitleElement = setTitleElement;\n\n  $rootScope.$on('$routeChangeStart', () => {\n    changeTitle({});\n  });\n\n  $rootScope.$on('$routeChangeSuccess', (event) => {\n    const title = $delegate.get($location.path());\n    if (title) {\n      const titleData = $q.when(title.data ? $injector.invoke(title.data) : {});\n      titleData.then((data) => {\n        const { templateUrl } = data;\n        if (templateUrl) {\n          const template = $templateCache.get(templateUrl);\n          setTitleElement($compile(template)(event.targetScope));\n        } else {\n          changeTitle(data);\n        }\n      });\n    }\n  });\n\n  function changeTitle(newTitle) {\n    $q.when(newTitle).then((title) => changeTitleInAngular(translate(title)));\n  }\n\n  function translate({title, subtitle}) {\n    const isolatedScope = $rootScope.$new(true);\n    isolatedScope.title = title;\n    isolatedScope.subtitle = subtitle;\n    return $compile(angular.element(`\n      <h1 class=\"text-truncate\">{{title | translate}}\n      <small>{{ subtitle | translate }}</small></h1>\n    `))(isolatedScope)[0];\n  }\n\n  function changeTitleInAngular(domElement) {\n    c8yHeaderService.changeTitle(domElement);\n  }\n\n  function setTitleElement($element) {\n    $element.show();\n    changeTitleInAngular($element[0]);\n  }\n\n  return $delegate;\n}\n\nexport { c8yTitleDecorator };\n","function c8yAlertDecorator(\r\n    $delegate,\r\n    $rootScope,\r\n    $injector\r\n) {\r\n  'ngInject';\r\n\r\n  $delegate.add = (alert) => {\r\n    $delegate.addAlert(transformAlert(alert));\r\n  };\r\n\r\n  $rootScope.$on('alert', (evt, alert) => {\r\n    $delegate.addAlert(transformAlert(alert));\r\n  });\r\n\r\n  $rootScope.$on('message', (evt, alert) => {\r\n    $delegate.addAlert(transformAlert(alert));\r\n  });\r\n\r\n  for (const property in $delegate) {\r\n    if (typeof $delegate[property] === 'function') {\r\n      $delegate[property] = $delegate[property].bind($delegate);\r\n    }\r\n  }\r\n\r\n  function transformAlert(alert: any) {\r\n    const newAlert: any = { ...alert };\r\n    if (alert.onClose) {\r\n      newAlert.onClose = () => {\r\n        $injector.invoke(alert.onClose);\r\n      };\r\n    }\r\n    if (alert.onDetail) {\r\n      newAlert.onDetail = () => {\r\n        $injector.invoke(alert.onDetail);\r\n      };\r\n    }\r\n    return newAlert;\r\n  }\r\n\r\n  return $delegate;\r\n}\r\n\r\nexport { c8yAlertDecorator };\r\n","function groupTypesHierarchyNavigatorDecorator(\n  $delegate,\n  $q,\n) {\n  'ngInject';\n  $delegate.loadAll = () => $q.when();\n  $delegate.addGroupNavigation = () => $q.when();\n  return $delegate;\n}\n\nexport { groupTypesHierarchyNavigatorDecorator };\n","import { NavigatorNode } from '@c8y/ngx-components';\nimport { Observable, Subject, defer, of } from 'rxjs';\nimport { merge } from 'rxjs/operators';\nimport { pick,  map, property, some, every } from 'lodash-es';\nimport { NavigatorNodeRootLegacy } from './navigator-node-root-legacy';\n\n// Just to hook into the bridge service\nexport function c8yNavigatorProvider() {\n  const root = new NavigatorNodeRootLegacy();\n  const rootNodesSubject: Subject<NavigatorNode[]> = new Subject();\n  const conditionalNodes = [];\n  const rootNodes$: Observable<NavigatorNode[]> = rootNodesSubject.pipe(\n    merge(defer(() => of(root.children))),\n  );\n\n  function addNavigation(nodes) {\n    const nodeList = (Array.isArray(nodes) ? nodes : [nodes]);\n    nodeList.forEach((node) => {\n      if (isConditional(node)) {\n        node.hidden = undefined;\n        conditionalNodes.push(node);\n      }\n      node.navNode = root.addRoot(node);\n    });\n    rootNodesSubject.next(root.children);\n  }\n\n  function removeNavigation(node) {\n    const found = root.find((n) => n === node);\n    if (found) {\n      found.parents.forEach((p) => p.remove(found));\n      rootNodesSubject.next(root.children);\n    }\n  }\n\n  function findNode(node) {\n    return root.find(node);\n  }\n\n  function isConditional(node) {\n    return node.showIf || node.showIfPermissions || node.showIfContainsVisibleViews;\n  }\n\n  function $get($q, $injector) {\n    'ngInject';\n\n    // This avoids the circular dependency\n    setTimeout(() => conditionalNodes.forEach(processShowIf));\n\n    function processShowIf(node) {\n      const c8yUiUtil = $injector.get('c8yUiUtil');\n      const visibilityPromises = [];\n      const {\n        showIf,\n        showIfPermissions,\n        showIfContainsVisibleViews\n      } = node;\n\n      if (showIf) {\n        visibilityPromises.push($injector.invoke(showIf));\n      }\n      if (showIfContainsVisibleViews) {\n        visibilityPromises.push(viewsConditionalVisibility(node));\n      }\n\n      c8yUiUtil.configureVisibility({\n        showIf: () => $q.all(visibilityPromises).then(every),\n        showIfPermissions\n      }, 'visible')\n        .then(({ visible }) => {\n          if (visible) {\n            node.navNode.update({\n              hidden: false,\n              showIf: null,\n              showIfPermission: null,\n              showIfContainsVisibleViews: null\n            });\n          } else {\n            node.navNode.update({\n              hidden: true\n            });\n          }\n        });\n    }\n\n    function viewsConditionalVisibility(node) {\n      const c8yUiUtil = $injector.get('c8yUiUtil');\n      const c8yViews = $injector.get('c8yViews');\n      const views = c8yViews.getByPath(node.path);\n      return $q.all(\n        map(views, (view) => c8yUiUtil\n          .configureVisibility(pick(view, ['showIf', 'showIfPermissions']), 'show', false)\n          .then(property('show'))\n        )\n      )\n      .then(some);\n    }\n\n    return {\n      rootNodes() {\n        return root.children;\n      },\n      findNode,\n      addNavigation,\n      removeNavigation,\n      rootNodes$\n    };\n  }\n\n  return {\n    $get,\n    addNavigation,\n    removeNavigation\n  };\n}\n","import * as angular from 'angular';\n\nfunction gettextCatalogDecorator(\n  $delegate,\n  $interpolate,\n  c8yTranslate\n) {\n  'ngInject';\n\n  const gettextCatalog = $delegate;\n  const originalGetString = angular.bind(gettextCatalog, gettextCatalog.getString);\n\n  function newGetString(input, scope, context) {\n    if (typeof input === 'string') {\n      const translatedString = originalGetString(input, scope, context);\n      const interpolatedString = scope ? $interpolate(input)(scope) : input;\n\n      let stringToReturn = translatedString;\n\n      if (translatedString && translatedString === interpolatedString) {\n        const translatedServerMessage = c8yTranslate.instant(interpolatedString);\n        stringToReturn = translatedServerMessage;\n      }\n\n      return stringToReturn;\n    }\n\n    return input;\n  }\n\n  gettextCatalog.getString = newGetString;\n\n  return gettextCatalog;\n}\n\nexport { gettextCatalogDecorator };\n","import { UpgradeModule as NgUpgradeModule } from '@angular/upgrade/static';\nimport { ng1Modules } from './ng1';\n\nexport abstract class HybridAppModule {\n  ng1Modules = ng1Modules;\n  protected upgrade: NgUpgradeModule;\n\n  ngDoBootstrap() {\n    (window as any).bootstrap();\n    this.upgrade.bootstrap(document.getElementById('app'), this.ng1Modules, { strictDi: false });\n  }\n}\n","import { EmptyComponent } from '@c8y/ngx-components';\n\nexport const UPGRADE_ROUTES = [\n  { path: '**', component: EmptyComponent}\n];\n"]}