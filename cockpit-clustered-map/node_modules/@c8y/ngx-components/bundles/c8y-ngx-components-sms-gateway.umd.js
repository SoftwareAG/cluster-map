(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@c8y/ngx-components'), require('@c8y/ngx-components/upgrade'), require('@c8y/client'), require('lodash-es')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/sms-gateway', ['exports', '@angular/core', '@angular/router', '@c8y/ngx-components', '@c8y/ngx-components/upgrade', '@c8y/client', 'lodash-es'], factory) :
    (global = global || self, factory((global.c8y = global.c8y || {}, global.c8y['ngx-components'] = global.c8y['ngx-components'] || {}, global.c8y['ngx-components']['sms-gateway'] = {}), global.ng.core, global.ng.router, global.c8y['ngx-components'], global.c8y['ngx-components'].upgrade, global.client, global.lodashEs));
}(this, (function (exports, core, router, ngxComponents, upgrade, client, lodashEs) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    var SmsGatewayService = /** @class */ (function () {
        function SmsGatewayService(client, tenantOptionsService) {
            this.client = client;
            this.tenantOptionsService = tenantOptionsService;
            this.category = 'messaging';
            this.basePath = 'service/register/messaging';
            this.providerTemplates = {
                cepConfig: {
                    'sms.senderAddress': 'cumulocity',
                    'sms.senderName': 'cumulocity'
                },
                openit: {
                    provider: 'openit',
                    'openit.baseUrl': 'https://sms.plusserver.com/put.php'
                },
                sms77: {
                    provider: 'sms77',
                    'sms77.url': 'https://gateway.sms77.io/api/sms'
                }
            };
        }
        SmsGatewayService.prototype.getProviderConfig = function () {
            return this.tenantOptionsService.detail({ category: this.category, key: '' });
        };
        SmsGatewayService.prototype.saveProviderConfig = function (newConfig) {
            return __awaiter(this, void 0, void 0, function () {
                var providerTemplate, cepConfig, config;
                return __generator(this, function (_a) {
                    providerTemplate = this.providerTemplates[newConfig.provider];
                    cepConfig = this.providerTemplates.cepConfig;
                    Object.assign(newConfig, providerTemplate, cepConfig);
                    config = {
                        method: 'PUT',
                        headers: { 'content-type': 'application/json' },
                        body: JSON.stringify(newConfig)
                    };
                    return [2 /*return*/, this.client.fetch(this.basePath, config)];
                });
            });
        };
        SmsGatewayService.prototype.deleteProviderConfig = function (config) {
            return __awaiter(this, void 0, void 0, function () {
                var providerTemplate;
                return __generator(this, function (_a) {
                    providerTemplate = this.providerTemplates[config.provider];
                    Object.assign(config, providerTemplate);
                    return [2 /*return*/, this.deleteProviderOptions(config)];
                });
            });
        };
        SmsGatewayService.prototype.deleteProviderOptions = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b, optionKey, e_1_1;
                var e_1, _c;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            _d.trys.push([0, 5, 6, 7]);
                            _a = __values(Object.keys(options)), _b = _a.next();
                            _d.label = 1;
                        case 1:
                            if (!!_b.done) return [3 /*break*/, 4];
                            optionKey = _b.value;
                            return [4 /*yield*/, this.tenantOptionsService.delete({ category: this.category, key: optionKey })];
                        case 2:
                            _d.sent();
                            _d.label = 3;
                        case 3:
                            _b = _a.next();
                            return [3 /*break*/, 1];
                        case 4: return [3 /*break*/, 7];
                        case 5:
                            e_1_1 = _d.sent();
                            e_1 = { error: e_1_1 };
                            return [3 /*break*/, 7];
                        case 6:
                            try {
                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                            }
                            finally { if (e_1) throw e_1.error; }
                            return [7 /*endfinally*/];
                        case 7: return [2 /*return*/];
                    }
                });
            });
        };
        SmsGatewayService.ctorParameters = function () { return [
            { type: client.FetchClient },
            { type: client.TenantOptionsService }
        ]; };
        SmsGatewayService = __decorate([
            core.Injectable()
        ], SmsGatewayService);
        return SmsGatewayService;
    }());

    var SmsGatewayComponent = /** @class */ (function () {
        function SmsGatewayComponent(modalService, alertService, smsGatewayService) {
            this.modalService = modalService;
            this.alertService = alertService;
            this.smsGatewayService = smsGatewayService;
            this.smsProviders = [
                { id: 'openit', name: 'OpenIT' },
                { id: 'sms77', name: 'sms77' }
            ];
            this.supportedConfigOptions = [
                'provider',
                'openit.username',
                'credentials.openit.password',
                'credentials.sms77.api.key'
            ];
            this.pageTitle = ngxComponents.gettext('SMS provider');
        }
        SmsGatewayComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var res;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.smsConfig = this.getEmptyConfig();
                            this.oldConfig = this.getEmptyConfig();
                            return [4 /*yield*/, this.smsGatewayService.getProviderConfig()];
                        case 1:
                            res = _a.sent();
                            if (this.isSupportedProvider(res.data)) {
                                this.smsConfig = this.getConfigurableProperties(res.data);
                                this.oldConfig = this.smsConfig;
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        SmsGatewayComponent.prototype.getConfigurableProperties = function (config) {
            return lodashEs.pick(config, this.supportedConfigOptions);
        };
        SmsGatewayComponent.prototype.isSupportedProvider = function (config) {
            return this.smsProviders.some(function (prov) { return prov.id === config.provider; });
        };
        SmsGatewayComponent.prototype.saveSMSGatewayConfiguration = function (form) {
            return __awaiter(this, void 0, void 0, function () {
                var res, data, _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.smsGatewayService.saveProviderConfig(this.smsConfig)];
                        case 1:
                            res = _b.sent();
                            if (!(res && res.status !== 200)) return [3 /*break*/, 5];
                            if (!res.json) return [3 /*break*/, 3];
                            return [4 /*yield*/, res.json()];
                        case 2:
                            _a = _b.sent();
                            return [3 /*break*/, 4];
                        case 3:
                            _a = undefined;
                            _b.label = 4;
                        case 4:
                            data = _a;
                            this.alertService.addServerFailure({ data: data, res: res });
                            return [3 /*break*/, 6];
                        case 5:
                            this.alertService.success(ngxComponents.gettext('Credentials updated.'));
                            Object.assign(this.oldConfig, this.smsConfig);
                            form.pristine = true;
                            _b.label = 6;
                        case 6: return [2 /*return*/];
                    }
                });
            });
        };
        SmsGatewayComponent.prototype.deleteSMSGatewayConfiguration = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.modalService.confirm(ngxComponents.gettext('Delete credentials'), ngxComponents.gettext("You are about to delete SMS provider credentials. Deleting credentials will lock out any users with\n      SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication.\n      Do you want to proceed?"), ngxComponents.Status.DANGER, { ok: ngxComponents.gettext('Delete') })];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.smsGatewayService.deleteProviderConfig(this.oldConfig)];
                        case 2:
                            _a.sent();
                            this.alertService.success(ngxComponents.gettext('Credentials deleted.'));
                            this.smsConfig = this.getEmptyConfig();
                            this.oldConfig = this.getEmptyConfig();
                            return [2 /*return*/];
                    }
                });
            });
        };
        SmsGatewayComponent.prototype.getEmptyConfig = function () {
            return {
                provider: undefined
            };
        };
        SmsGatewayComponent.ctorParameters = function () { return [
            { type: ngxComponents.ModalService },
            { type: ngxComponents.AlertService },
            { type: SmsGatewayService }
        ]; };
        SmsGatewayComponent = __decorate([
            core.Component({
                selector: 'c8y-sms-gateway',
                template: "<c8y-title>{{ pageTitle | translate }}</c8y-title>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-sm-10 col-md-8 col-lg-6\">\n    <form\n      class=\"card\"\n      #smsGatewayForm=\"ngForm\"\n      (ngSubmit)=\"smsGatewayForm.form.valid && saveSMSGatewayConfiguration(smsGatewayForm.form)\"\n    >\n      <div class=\"card-header\">\n        <h4 class=\"card-title\" translate>Credentials</h4>\n      </div>\n      <div class=\"card-block\">\n        <p class=\"bottom-m\" translate>\n          Enter your credentials from your SMS provider. This enables platform features that utilize\n          SMS services (e.g. two-factor authentication and user notifications).\n        </p>\n        <label translate>SMS provider</label>\n        <div class=\"form-group\">\n          <ul class=\"list-unstyled\">\n            <li *ngFor=\"let provider of smsProviders\">\n              <label class=\"c8y-radio\">\n                <input\n                  class=\"form-control\"\n                  type=\"radio\"\n                  name=\"providerName\"\n                  [(ngModel)]=\"smsConfig.provider\"\n                  [value]=\"provider.id\"\n                />\n                <span></span>\n                {{ provider.name | translate }}\n              </label>\n            </li>\n          </ul>\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'openit'\">\n          <label translate for=\"userName\">Username</label>\n          <input\n            id=\"userName\"\n            class=\"form-control\"\n            type=\"text\"\n            autocomplete=\"off\"\n            name=\"userName\"\n            [(ngModel)]=\"smsConfig['openit.username']\"\n            placeholder=\"{{ 'e.g. joe`LOCALIZE`' | translate }}\"\n            required\n          />\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'openit'\">\n          <label translate for=\"password\">Password</label>\n          <input\n            id=\"password\"\n            class=\"form-control\"\n            type=\"password\"\n            autocomplete=\"off\"\n            name=\"password\"\n            [(ngModel)]=\"smsConfig['credentials.openit.password']\"\n            placeholder=\"{{ 'e.g. my_password' | translate }}\"\n            required\n          />\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'sms77'\">\n          <label translate for=\"apiKey\">API key</label>\n          <input\n            id=\"apiKey\"\n            class=\"form-control\"\n            type=\"text\"\n            autocomplete=\"off\"\n            name=\"apiKey\"\n            [(ngModel)]=\"smsConfig['credentials.sms77.api.key']\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"deleteSMSGatewayConfiguration()\"\n          [disabled]=\"!(oldConfig && oldConfig.provider)\"\n          title=\"{{ 'Delete' | translate }}\"\n          translate\n        >\n          Delete\n        </button>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"!smsGatewayForm.form.valid || smsGatewayForm.form.pristine\"\n          title=\"{{ 'Save' | translate }}\"\n          translate\n        >\n          Save\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"
            })
        ], SmsGatewayComponent);
        return SmsGatewayComponent;
    }());

    var smsGatewayRoutes = [{ path: 'smsgateway', component: SmsGatewayComponent }];
    var ɵ0 = [new ngxComponents.NavigatorNode({
            label: ngxComponents.gettext('SMS provider'),
            path: 'smsgateway',
            icon: 'envelope-o',
            parent: ngxComponents.gettext('Settings'),
            priority: 1000
        })];
    var navigatorNodesProvider = {
        provide: ngxComponents.HOOK_NAVIGATOR_NODES,
        useValue: ɵ0,
        multi: true
    };
    var SmsGatewayModule = /** @class */ (function () {
        function SmsGatewayModule() {
        }
        SmsGatewayModule = __decorate([
            core.NgModule({
                declarations: [SmsGatewayComponent],
                exports: [SmsGatewayComponent],
                imports: [
                    ngxComponents.CoreModule,
                    ngxComponents.CommonModule,
                    ngxComponents.FormsModule,
                    router.RouterModule.forRoot(smsGatewayRoutes, { useHash: true }),
                    upgrade.UpgradeModule
                ],
                entryComponents: [SmsGatewayComponent],
                providers: [SmsGatewayService, navigatorNodesProvider]
            })
        ], SmsGatewayModule);
        return SmsGatewayModule;
    }());

    exports.SmsGatewayComponent = SmsGatewayComponent;
    exports.SmsGatewayModule = SmsGatewayModule;
    exports.ɵ0 = ɵ0;
    exports.ɵa = SmsGatewayService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=c8y-ngx-components-sms-gateway.umd.js.map
