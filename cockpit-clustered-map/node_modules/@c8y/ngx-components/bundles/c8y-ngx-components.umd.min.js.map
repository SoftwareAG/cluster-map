{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/core/common/extension-hooks.ts","ng://@c8y/ngx-components/core/common/state-service.abstract.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.service.ts","ng://@c8y/ngx-components/core/action/action.service.ts","ng://@c8y/ngx-components/core/i18n/gettext.ts","ng://@c8y/ngx-components/core/alert/alert.service.ts","ng://@c8y/ngx-components/core/common/status.model.ts","ng://@c8y/ngx-components/core/common/ApplicationOptions.ts","ng://@c8y/ngx-components/core/common/options.service.ts","ng://@c8y/ngx-components/core/common/ui-state.service.ts","ng://@c8y/ngx-components/core/navigator/navigator-node.ts","ng://@c8y/ngx-components/core/navigator/navigator-node-root.ts","ng://@c8y/ngx-components/core/navigator/navigator.service.ts","ng://@c8y/ngx-components/core/header/header.service.ts","ng://@c8y/ngx-components/core/tabs/tabs.service.ts","ng://@c8y/ngx-components/core/bootstrap/bootstrap.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.service.ts","ng://@c8y/ngx-components/core/common/humanize.pipe.ts","ng://@c8y/ngx-components/core/common/humanize-app-name.pipe.ts","ng://@c8y/ngx-components/core/i18n/languages.ts","ng://@c8y/ngx-components/core/i18n/locale.path.ts","ng://@c8y/ngx-components/core/i18n/patterns-message.hook.ts","ng://@c8y/ngx-components/core/i18n/pattern-messages.service.ts","ng://@c8y/ngx-components/core/i18n/missing-translation-custom.handler.ts","ng://@c8y/ngx-components/core/i18n/pattern-messages.data.ts","ng://@c8y/ngx-components/core/i18n/translate.loader.ts","ng://@c8y/ngx-components/core/i18n/translate.parser.ts","ng://@c8y/ngx-components/core/i18n/i18n.module.ts","ng://@c8y/ngx-components/core/common/icon.directive.ts","ng://@c8y/ngx-components/core/common/outlet.directive.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences-storage-local.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences-store-inventory.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences.service.ts","ng://@c8y/ngx-components/core/i18n/load-locale.ts","ng://@c8y/ngx-components/core/i18n/parse-module.ts","ng://@c8y/ngx-components/core/i18n/translate.service.ts","ng://@c8y/ngx-components/core/common/shorten-user-name.pipe.ts","ng://@c8y/ngx-components/core/common/load-more.component.ts","ng://@c8y/ngx-components/core/common/forOf.directive.ts","ng://@c8y/ngx-components/core/common/map-function.pipe.ts","ng://@c8y/ngx-components/core/common/progress-bar.component.ts","ng://@c8y/ngx-components/core/common/common.module.ts","ng://@c8y/ngx-components/core/login/login.model.ts","ng://@c8y/ngx-components/core/action-bar/action-bar-item.component.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.component.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.module.ts","ng://@c8y/ngx-components/core/action/action-outlet.component.ts","ng://@c8y/ngx-components/core/action/action.component.ts","ng://@c8y/ngx-components/core/action/action.module.ts","ng://@c8y/ngx-components/core/alert/alert-details.component.ts","ng://@c8y/ngx-components/core/alert/alert-outlet.component.ts","ng://@c8y/ngx-components/core/alert/alert-text.component.ts","ng://@c8y/ngx-components/core/alert/alert.component.ts","ng://@c8y/ngx-components/core/alert/alert.module.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb-item.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb-outlet.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.module.ts","ng://@c8y/ngx-components/core/search/search-outlet.component.ts","ng://@c8y/ngx-components/core/search/search.service.ts","ng://@c8y/ngx-components/core/search/search.component.ts","ng://@c8y/ngx-components/core/search/highlight.component.ts","ng://@c8y/ngx-components/core/search/search.module.ts","ng://@c8y/ngx-components/core/modal/modal-confirm.component.ts","ng://@c8y/ngx-components/core/modal/modal.component.ts","ng://@c8y/ngx-components/core/modal/modal.service.ts","ng://@c8y/ngx-components/core/modal/popover-confirm.component.ts","ng://@c8y/ngx-components/core/modal/modal.module.ts","ng://@c8y/ngx-components/core/user/user-menu.service.ts","ng://@c8y/ngx-components/core/user/user-menu-item.component.ts","ng://@c8y/ngx-components/core/user/user-edit-modal.component.ts","ng://@c8y/ngx-components/core/login/login.service.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.model.ts","ng://@c8y/ngx-components/core/authentication/password-confirm-modal.component.ts","ng://@c8y/ngx-components/core/authentication/password.service.ts","ng://@c8y/ngx-components/core/user/user-totp-setup.component.ts","ng://@c8y/ngx-components/core/user/user-edit.component.ts","ng://@c8y/ngx-components/core/user/user-menu-outlet.component.ts","ng://@c8y/ngx-components/core/authentication/password-check-list.component.ts","ng://@c8y/ngx-components/core/authentication/password-confirm.directive.ts","ng://@c8y/ngx-components/core/authentication/password-strength-checker.service.ts","ng://@c8y/ngx-components/core/authentication/password-strength.component.ts","ng://@c8y/ngx-components/core/authentication/new-password.component.ts","ng://@c8y/ngx-components/core/forms/phone-validation.directive.ts","ng://@c8y/ngx-components/core/forms/validation-pattern.ts","ng://@c8y/ngx-components/core/forms/default-validation.directive.ts","ng://@c8y/ngx-components/core/forms/min-validation.directive.ts","ng://@c8y/ngx-components/core/forms/max-validation.directive.ts","ng://@c8y/ngx-components/core/forms/message.directive.ts","ng://@c8y/ngx-components/core/forms/messages.component.ts","ng://@c8y/ngx-components/core/forms/form-group.component.ts","ng://@c8y/ngx-components/core/forms/input-group-list.component.ts","ng://@c8y/ngx-components/core/forms/input-group-list-container.directive.ts","ng://@c8y/ngx-components/core/forms/json-validation-prettifier.directive.ts","ng://@c8y/ngx-components/core/forms/text-area-row-height.directive.ts","ng://@c8y/ngx-components/core/forms/required-input-placeholder.directive.ts","ng://@c8y/ngx-components/core/forms/ip-range-input-list.component.ts","ng://@c8y/ngx-components/core/forms/schema-form.component.ts","ng://@c8y/ngx-components/core/forms/filter-input.component.ts","ng://@c8y/ngx-components/core/forms/forms.module.ts","ng://@c8y/ngx-components/core/authentication/totp-challenge.component.ts","ng://@c8y/ngx-components/core/authentication/sms-challenge.component.ts","ng://@c8y/ngx-components/core/authentication/totp-setup.component.ts","ng://@c8y/ngx-components/core/authentication/authentication.module.ts","ng://@c8y/ngx-components/core/user/user-totp-revoke.component.ts","ng://@c8y/ngx-components/core/user/user.module.ts","ng://@c8y/ngx-components/core/header/application/app-icon.component.ts","ng://@c8y/ngx-components/core/header/application/app-switcher.component.ts","ng://@c8y/ngx-components/core/docs/defaults.items.ts","ng://@c8y/ngx-components/core/docs/docs.models.ts","ng://@c8y/ngx-components/core/docs/docs.service.ts","ng://@c8y/ngx-components/core/header/header-bar/header-bar.component.ts","ng://@c8y/ngx-components/core/header/title/title-outlet.component.ts","ng://@c8y/ngx-components/core/header/title/title.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-entry.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-icon.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-node.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-outlet.component.ts","ng://@c8y/ngx-components/core/navigator/navigator.module.ts","ng://@c8y/ngx-components/core/header/right-drawer/right-drawer.component.ts","ng://@c8y/ngx-components/core/header/header.module.ts","ng://@c8y/ngx-components/core/login/change-password.component.ts","ng://@c8y/ngx-components/core/login/credentials.component.ts","ng://@c8y/ngx-components/core/login/login.component.ts","ng://@c8y/ngx-components/core/login/recover-password.component.ts","ng://@c8y/ngx-components/core/login/totp-auth.component.ts","ng://@c8y/ngx-components/core/login/login.module.ts","ng://@c8y/ngx-components/core/tabs/tab.component.ts","ng://@c8y/ngx-components/core/tabs/tabs-outlet.component.ts","ng://@c8y/ngx-components/core/tabs/tabs.module.ts","ng://@c8y/ngx-components/core/bootstrap/cookie-banner/cookie-banner.component.ts","ng://@c8y/ngx-components/core/bootstrap/bootstrap.module.ts","ng://@c8y/ngx-components/core/data-grid/column/cell-renderer.ts","ng://@c8y/ngx-components/core/data-grid/column/filtering-form-renderer.ts","ng://@c8y/ngx-components/core/data-grid/column/column.directive.ts","ng://@c8y/ngx-components/core/data-grid/grid-data-source.ts","ng://@c8y/ngx-components/core/device-status/device-availability.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.component.ts","ng://@c8y/ngx-components/core/data-grid/column/cell-renderer.component.ts","ng://@c8y/ngx-components/core/data-grid/column/filtering-form-renderer.component.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.module.ts","ng://@c8y/ngx-components/core/device-grid/columns/base.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/status.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/status.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/name.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/name.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/model.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/model.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/serial-number.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/serial-number.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/group.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/group.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/registration-date.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/registration-date.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/system-id.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/imei.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/alarms.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/alarms.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/device-grid.service.ts","ng://@c8y/ngx-components/core/device-grid/device-grid.component.ts","ng://@c8y/ngx-components/core/drop-area/drop-area.component.ts","ng://@c8y/ngx-components/core/device-status/device-status.component.ts","ng://@c8y/ngx-components/core/device-status/device-status.module.ts","ng://@c8y/ngx-components/core/device-grid/filtering-form.component.ts","ng://@c8y/ngx-components/core/device-grid/device-grid.module.ts","ng://@c8y/ngx-components/core/drop-area/drop-area.module.ts","ng://@c8y/ngx-components/core/select/select.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-action.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-collapse.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-footer.component.ts","ng://@c8y/ngx-components/core/list-group/list-item.component.ts","ng://@c8y/ngx-components/core/select/typeahead.component.ts","ng://@c8y/ngx-components/core/list-group/list-group.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-icon.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-body.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-checkbox.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-radio.component.ts","ng://@c8y/ngx-components/core/list-group/list-group.module.ts","ng://@c8y/ngx-components/core/select/select.module.ts","ng://@c8y/ngx-components/core/docs/guide-href.directive.ts","ng://@c8y/ngx-components/core/docs/guide-docs.component.ts","ng://@c8y/ngx-components/core/docs/docs.module.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.model.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.service.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.component.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.module.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-action.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-title.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-change.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child.component.ts","ng://@c8y/ngx-components/core/dashboard/widgets-dashboard.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard.module.ts","ng://@c8y/ngx-components/core/stepper/stepper-icon.directive.ts","ng://@c8y/ngx-components/core/stepper/stepper.component.ts","ng://@c8y/ngx-components/core/stepper/stepper-progress.component.ts","ng://@c8y/ngx-components/core/stepper/stepper-buttons.component.ts","ng://@c8y/ngx-components/core/stepper/stepper.module.ts","ng://@c8y/ngx-components/core/core.module.ts","ng://@c8y/ngx-components/core/router/router.models.ts","ng://@c8y/ngx-components/core/router/router.service.ts","ng://@c8y/ngx-components/core/router/router-tabs.resolver.ts","ng://@c8y/ngx-components/core/router/view-context.service.ts","ng://@c8y/ngx-components/core/router/context-route.component.ts","ng://@c8y/ngx-components/core/router/context-route.guard.ts","ng://@c8y/ngx-components/core/router/empty.component.ts","ng://@c8y/ngx-components/core/router/router.module.ts","ng://@c8y/ngx-components/core/quicklink/quick-link.component.ts","ng://@c8y/ngx-components/core/quicklink/quick-link.module.ts","ng://@c8y/ngx-components/core/device-grid/columns/custom.device-grid-column.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","ar","error","__spread","concat","fromTrigger","router","refresh","factories","events","pipe","filter","evt","NavigationEnd","merge","startWith","switchMap","fromFactories","withFirstEmpty","isArray","of","defer","factoryObservables","resolveInjectedFactories","map","factoryResult","observable","isObservable","forceObservable","from","withEmptyFirst","race","item","toObservable","isFunction","get","getActivatedRoute","combineLatest","results","sortByPriority","flatten","stateToFactory","componentsState","components$","componentSet","items","sortBy","routerState","root","route","firstChild","StateService","mappedProperty","state$","distinctUntilChanged","emitNewState","state","HOOK_ACTION_BAR","InjectionToken","ActionBarService","_super","injector","_this","refreshTrigger","Subject","BehaviorSubject","Set","items$","shareReplay","tslib_1.__extends","add","remove","delete","Injector","Router","Injectable","providedIn","HOOK_ACTION","ActionService","gettext","str","Status","AlertService","MAX_ALERTS","ALERT_TIMEOUT","alert","addAlert","addByText","type","txt","detailedData","text","list","changeAlerts","areSame","removeLastDanger","firstDangerAlarm","reverse","find","_a","alarm","saveSuccess","savedObject","createSuccess","createdObject","clearAll","success","danger","info","warning","addServerFailure","data","res","message","exceptionMessage","hasRelevantMessage","status","statusText","url","alert1","alert2","onClose","onDetail","newAlerts","Error","hideAutomaticallyIfNeeded","removeOldestIfMax","isSuccess","noDetails","alertTimeout","timeout","setTimeout","firstRemoved","slice","ApplicationOptions","HOOK_OPTIONS","OptionsService","options","systemOptionsService","tenantOptionService","setupOptions","optionKey","defaultValue","camelCase","set","getSupportUrl","isUndefined","supportUrl","getTenantOption","_b","getActivateSupportUser","getSystemOption","category","getOptionFromService","forEach","optionMap","keys","service","detail","parseOptionRawValue","rawValue","JSON","parse","Optional","Inject","args","SystemOptionsService","TenantOptionsService","tslib_1.__param","AppStateService","applicationService","apiService","fetchClient","app","name","contextPath","getCurrentContextPath","lang","langs","getLangs","langsDetail","languages","loginOptions","activateSupportUserAvailable","undefined","versions","backend","ui","ngx","hidePowered","isLoading","showRightDrawer","rightDrawer","loginExtraLink","newsletter","currentSupportUserName","currentUser","currentTenant","calls","test","phase","scan","count","subscribe","assignApplicationKeyToDefaultHeaders","isDevMode","defaultHeaders","X-Cumulocity-Application-Key","k","version","ng1","loadManifest","application","manifest","loadDefaultOptions","isApplicationAvailable","listByUser","pageSize","some","setUser","userInfo","supportUserName","user","match","window","location","pathname","_d","_c","showIncompatibleVersionsError","ex","uiVersion","backendVersion","uiVersionArray","replace","split","Number","beVersionArray","multiplier","Math","pow","ceil","log10","max","sumReducer","acc","cur","calculateVersionMapper","curr","idx","reduce","errorContent","console","log","ApplicationService","ApiService","FetchClient","NavigatorNode","children","parents","routerLinkExact","open","hidden","draggable","droppable","dragged","draggedHover","confirm","_priority","update","childrenPriorities","priority","openOnStart","node","indexOf","updateChildren","ix","pix","splice","updateHidden","predicate","compareLabel_1","toLocaleLowerCase","toLowerCase","matches","found","child","empty","click","drop","$event","stopPropagation","clearTimeout","expandDragTimeout","dragStart","dataTransfer","setData","dragEnd","clearData","path","dragEnter","preventDefault","expand","dragLeave","expander","traverse","callback","destroy","sort","a","NavigatorNodeRoot","addRoot","nodeData","localParent","parent","createNode","HOOK_NAVIGATOR_NODES","NavigatorService","firstUrl","rootNode","nodes","noParent","withParent","sortedNodes","openOnFirstUrl","isActive","HeaderService","navigatorService","hasItemsInNavigator$","title","nav","header$","header","navigatorOpen$","hasItems","titleReference","document","querySelector","elementRef","originalValue","innerText","hideNavigator","documentElement","clientWidth","largeWidth","navigatorHiddenOnStartup","toggleNavigator","closeNavigator","configNavigator","config","changeTitle","newTitle","changePageTitle","verifyIfNavOpen","debounceTime","shouldToggle","shouldShowBreadcrumbs","breadcrumbs","HOOK_TABS","TabsService","translateService","tabs","prepareTabs","orientation$","firstTabWithDefinedOrientation","tab","orientation","tabsHorizontal","sortTabs","template","ViewContainerRef","index","self","findIndex","priorityOrder","aTranslatedLabel","instant","bTranslatedLabel","translatedLabelOrder","localeCompare","Boolean","first","TranslateService","BootstrapComponent","navigator","actionBar","headerService","noAppsMargin$","hiddenOnStartup","tabsOrientation","localeUpdating","Component","selector","HOOK_BREADCRUMB","BreadcrumbService","sortByPreferredPath","selectPreferredByPath","preferredPath","bc","statusIcons","SUCCESS","WARNING","DANGER","INFO","statusClasses","statusAlert","operationStatusIcons","OperationStatus","PENDING","EXECUTING","SUCCESSFUL","FAILED","operationStatusClasses","_e","HumanizePipe","humanize","upperFirst","transform","HumanizePipe_1","Pipe","HumanizeAppNamePipe","internalApps","administration","cockpit","devicemanagement","appNameOrApp","appName","getAppName","isPublicApp","getFirstDefined","values","negate","LANGUAGES","LOCALE_PATH","HOOK_PATTERN_MESSAGES","PatternMessagesService","patterns","pipes","absoluteDate","date","formatDate","currentLang","translate","each","pattern","translation","translateWithPatterns","translatedMessage","patternCfg","globalMatch","globalRegExp","RegExp","exec","localMatch","placeholderValues","mapValues","placeholders","placeholder","expr","capture","replacement","translateWithParams","params","defaultLang","compiler","translations","store","defaultTranslations","originalKey","interpolateParams","noPatternMessages","pipeRegex","paramName","pipeName","compile","MissingTranslationCustomHandler","parser","patternMessagesService","cache","handle","messageKey","getFromCache","patternMessageTranslation","getPatternMessageTranslation","interpolate","addToCache","getCacheKey","stringify","TranslateParser","MESSAGES","^Access is denied$","^Alarm created$","^Alarm updated$","^API is not available with the new domain$","^Application with given name already exist$","^Application with id (.+?) is already assigned to the tenant (.+?)$","tenant","^(.+)pplication for tenant (.+) with properties \\( (.+?) \\) already exists$","valuesList","^Authentication failed! : User account is locked$","^Availability monitoring record$","^Can not activate a certificate which is either expired or not yet valid$","^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.","fingerprint","^Cannot change password. : Provided token does not exist.$","^Cannot deploy module (.*)$","errorMessage","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) \\[([\\S\\s]+?)\\]$","moduleName","expression","incorrectExpression","line","column","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$","keyword","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+), please check the where clause \\[([\\S\\s]+?)\\]$","^Cannot deploy module (.+?)! : Deployment failed in module '(.+?)' in expression '(.+?)' : Exception compiling script '(.+?)' of dialect '(.+?)': missing (.+?) before statement \\((.+?)\\) \\[([\\S\\s]+?)\\]$","scriptName","scriptDialect","missingSyntax","affectedStatement","^Cannot execute bulk operation on empty group. Group with id='(\\d+?)' doesn't have child assets.$","groupId","^Cannot execute bulk operation on empty group. DynamicGroup with id='(\\d+?)' doesn't have child assets$","^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$","failureReason","^Cannot reschedule bulk operation. All its operations are successful$","^Cannot reset user password : Cannot find user with such email.$","^Cannot update/delete application binary via this endpoint$","^Can't delete user because it is used by another managed object$","^Cep module created$","^Cep module updated$","^Cep module deleted$","^Cep module \"(.+?)\" created$","^Cep module \"(.+?)\" updated$","^Cep module \"(.+?)\" deleted$","^Command state is invalid: (.+)$","violations","(\\w+?) - may not be null","field","^Could not connect to endpoint (.+)\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\. If you expected that key, please remove the previous one from configuration to allow for connection\\.$","endpointName","keyType","host","port","^Could not login to ssh server on endpoint \"(.+)\"\\. Provided credential for user \"(.+)\" is incorrect\\.$","userName","^Could not save object remoteAccessUpdate: (.+)$","errorMessages","Could not recognize host-key format","Could not recognize key-pair format","^Could not update user. : Error persisting user (.+?)!$","username","^Creation ramp must be greater than (\\d+?)$","minSeconds","^Created container$","^Created pod: (.+)$","imageName","^CSV file contained empty dataset$","^Cycle detected for route (.+?)!$","^Data broker processing is currently overloaded and may stop forwarding your data\\. Please contact support\\.$","^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\. Please contact support\\.$","^Device id '(.+?)' contains '(.+?)' character which is not permitted.$","deviceId","invalidCharacter","^Device name: '(.+?)', alarm text: '(.+?)'$","deviceName","alarmText","^Display name$","^Domain name in uploaded certificate differs from the one in use$","^Domain name is already in use by another tenant!$","^Duplicated connector for instanceUrl (.+?)!$","targetUrl","^Duplicated connector for name (.+?)!$","^Entry is outside of the target dir: (.+)$","^Error during password validation. : Password must have at least (\\d+?) characters and no more than (\\d+?) and must contain only Latin1 characters.$","minCharactersCount","maxCharactersCount","^Error during password validation. : Your password has been used already. Choose another.$","^Error in statement (.+?):(.+?)! : Incorrect syntax near '(.+?)' near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$","statementNumber","^External id not found; external id = ID \\[type=(.+?), value=(.+?)\\]$","^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\d+)$","applicationId","^Http status code: 404\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}","^Failed to delete application.  : Cannot remove application assigned to other tenants.$","^Failed to extract certificate from PKCS12$","^Failed to update domain at the platform$","^Finding device data from database failed : No managedObject for id '(.+?)'!$","^Following mandatory fields should be included: (.+?)$","fields","^Global Role updated$","^Global Role (.+?) updated$","^Global Role (.+?) updated: (.+)$","updatesList","applications \\[([^\\]]+?)\\] added","applications \\[([^\\]]+?)\\] removed","roles \\[([^\\]]+?)\\] added","roles \\[([^\\]]+?)\\] removed","^Global Roles$","^Operation updated: (.+)$","status='(.+?)'","description='(.+?)'","description","device name='(.+?)'","failure reason='(.+?)'","^ID \\[type=(.+?), value=(.+?)\\] was already bound to different Global ID.$","^Invalid credentials! : Bad credentials$","^Invalid credentials! : No phone number provided$","^Inventory Role removed$","^Inventory Role (.+?) removed","^Inventory Role updated$","^Inventory Role (.+?) updated","^I/O error: Connection refused; nested exception is Connection refused : Connection refused","^I/O error: Read timed out; nested exception is Read timed out : Read timed out","^Log file requested$","^Managed object deleted$","^Managed object \"(.+?)\" deleted$","^Maximum file size exceeded$","^Message with ID (.+?) doesn't exist in smart rest template (.+?)$","messageId","templateId","^NewDeviceRequest for id = (.+?) already exists.$","id","^No communication with device since (.+?)$","timestamp","^No data received from device within required interval.$","^No LoRa provider settings are found. Please configure the connectivity settings.$","^Not within any context!$","^Maximum age cannot be bigger than 10 years.$","^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\d+) characters.$","maxLength","^Microservice not available.*$","^Operation created$","^Operation updated$","^Operation created: status='(.+?)'.","^Option created$","^Option \"(.+?)\" created$","option","^Option deleted$","^Option \"(.+?)\" deleted$","^Owner field error. : Cannot introduce cyclic dependency.","^Password change is temporary blocked.$","^Password cipher does not match","^Platform application cannot be added to, nor removed from any tenant.$","^Private key must be provided in KEY_PAIR credentials$","^Private key cipher does not match","^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$","protocol","credentialsType","^pulling image \"(.+)\"$","^Real-time event processing is currently overloaded and may stop processing your events\\. Please contact support\\.$","^Resource ID \\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\] for this request not found.$","^Scaled up replica set (.+) to (\\d+)$","replicaSetName","scaleNumber","^Simulator state is invalid: (.+)$","(\\w+?) - must be less than or equal to (\\d+)","maxValue","(\\w+?) - should not contain null values","^Smart rest template (.+?) doesn't exist$","^Smart rule created$","^Smart rule updated$","^Smart rule enabled$","^Smart rule disabled$","^Smart rule deleted$","^Smart rule \"(.+?)\" created$","^Smart rule \"(.+?)\" updated$","^Smart rule \"(.+?)\" enabled$","^Smart rule \"(.+?)\" disabled$","^Smart rule \"(.+?)\" deleted$","^Started container$","^Successfully assigned (.+) to (.+)$","address","^Successfully pulled image \"(.+)\"$","^Tenant creation failed. : Tenant with given id already exists.$","^Tenant id cannot be a reserved sql keyword \"(.+?)\".$","tenantId","^Tenant \"(.+?)\" activated$","^Tenant (.+?) has sub-tenants, please remove them first!$","^Tenant activated$","^Tenant \"(.+?)\" created$","^Tenant created$","^Tenant \"(.+?)\" deleted$","^Tenant deleted$","^Tenant \"(.+?)\" suspended$","^Tenant suspended$","^Tenant \"(.+?)\" updated: (.+?)$","properties","^Tenant updated$","^Too Many Requests$","^User alias equals username '(.+)'$","^User created$","^User (.+?) created$","^User deleted$","^User (.+?) deleted$","^User updated$","^User (.+?) updated: (.+)$","delegatedBy='(.+?)'","delegate","owner='(.+?)'","owner","inventory assignment \\[(.+?)\\] added","inventoryAssignment","inventory assignment \\[(.+?)\\] removed","applications \\[(.+?)\\] added$","applicationsList","applications \\[(.+?)\\] removed$","global roles \\[(.+?)\\] added$","globalRolesList","global roles \\[(.+?)\\] removed$","^User with username '(.+?)' already exists! : Duplicated: (.+?)$","^User with username or alias '(.+)' already exists! : Duplicated: (.+)$","usernameOrAlias","^User with email '(.+?)' already exists! : Duplicated: (.+?)$","email","^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$","^unable to find option with given key (.+?) : There is no system property for key (.+?)$","^Write failed with error code 16733 and error message 'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"'$","^Write failed with error code 17280 and error message 'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }'$","^You have reached devices limit. No more devices can be registered.$","^(.+) succeeded for volume \"(.+)\"","operation","volume","^Exception on tenant (.+) in statement '(.+)': Invocation exception when invoking method '(.+)' of class '(.+)' passing parameters \\[(.+)\\] for statement '(.+)': (.+) : (.+)$","methodName","classPath","parameters","statement","exceptionType","^No nodes are available that match all of the predicates: (.+).$","predicates","^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$","requestMethod","uri","^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$","^Error syncing pod$","^Failed create pod sandbox.$","^Exception on tenant (.+) in statement '(.+)': Http status code: (\\d+) \\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\}$","httpStatusCode","^User '(.+)' is managed by a remote identity management service defined by an administrator, direct update is forbidden$","^Added new child device to \"(.+)\" \\(ID: (.+)\\).$","parentDeviceName","parentDeviceId","^Updated child device of \"(.+)\" \\(ID: (.+)\\).$","^Added child device \"(.+)\" \\(ID: (.+)\\).$","^Removed child device \"(.+)\" \\(ID: (.+)\\).$","^Change value of \"(.+)\" to (.+) (.+).$","unit","^Change value of \"(.+)\" to (.+).$","^Change status of \"(.+)\" to \"(.+)\".$","^Send message \"(.+)\".$","^Close relay (.+).$","number","^Open relay (.+).$","^Change trace status to (.+).$","^Change relay status to (.+).$","^Closing relay (.+).$","^Opening relay (.+).$","^Update firmware to: (.+) \\(version: (.+)\\).$","^Execute generic command: (.+).$","command","^Failed to refresh application. : Cannot refresh non local-hosted application.$","^Failed to refresh application. : Cannot refresh application without active version id.$","^Scaled down replica set (.+) to (\\d+)$","^Deleted pod: (.+)$","^Container image \"(.+)\" already present on machine$","^Error updating tenant! Cannot insert second configuration for Password code grant internal/Bad Request$","TranslateCustomLoader","http","getTranslation","catchError","HttpClient","TranslateParserCustom","getValue","translated","TranslateDefaultParser","require","translateLoaderFactory","httpClient","localePath","localePathFactory","languagesFactory","localeId","appStateService","toString","I18nModule","providers","provide","LOCALE_ID","useFactory","deps","useValue","multi","TranslateLoader","TranslateCompiler","useClass","TranslateFakeCompiler","MissingTranslationHandler","TranslateStore","NgxTranslateService","USE_STORE","USE_DEFAULT_LANG","USE_EXTEND","DEFAULT_LANGUAGE","forRoot","ngModule","I18nModule_1","NgModule","exports","TranslateModule","imports","HttpClientModule","IconDirective","el","renderer","c8yMatch","klasses","currentClasses","icon","updateIcon","isC8y","getClasses","classes","_icon","trim","newClasses","klass","removeClass","nativeElement","addClass","ElementRef","Renderer2","tslib_1.__decorate","Input","Directive","ICONS","OutletDirective","viewContainer","resolver","_element","Element","removeChild","parentElement","clear","TemplateRef","createEmbeddedView","parent_1","parentNode","insertBefore","factory","resolveComponentFactory","component","createComponent","instance","ngOnDestroy","_parent","ComponentFactoryResolver","UserPreferencesStorageLocal","LOCAL_STORAGE_KEY","jsonStore","localStorage","getItem","saveJsonStore","setItem","UserPreferencesStorageInventory","inventory","TYPE","fragmentType","updateMo","out","UserPreferencesService","appState","storage","local","getForUser","setForUser","rawKey","getRawKey","getStorage","hasAllRoles","UserService","InventoryService","Map","loadLocale","moduleLang","has","fetch","src","module","moduleSrc","l","join","Function","fn","catch","ngxTranslate","DEFAULT_SEPARATOR","queryStringLang","saveInLocalStorage","TranslateService_1","SAVE_LANGUAGE_KEY","switchToLanguage","loadLocales","lessSpecificModuleLang","shift","e_1","use","registerLocaleData","default","firstSupportedLanguage","localStorageLang","browserLangs","language","isSupported","convertToLanguageCodePO","sep","langMain","langSpecific","getNativeLanguage","nativeName","includes","getQueryParameter","property","propertyLanguages","queryKey","search","substring","pair","ShortenUserNamePipe","firstName","lastName","parsedFirstName","substr","parsedLastName","LoadMoreComponent","element","useIntersection","class","maxIterations","onLoad","EventEmitter","counter","showNoMoreDataHint","LOAD_SAME_PAGE_THRESHOLD","hasMore","paging","totalPages","currentPage","ngAfterContentInit","intersectionObserver","IntersectionObserver","event","buttonInView","container","observe","shouldShowNoMoreDataHint","disconnect","loadMore","emit","intersectionLoading","loadUntilIntersected","getLoadingThreshold","shouldSwitchMode","noMoreDataHint","isIntersecting","Output","HostBinding","ForOfDirective","tpl","vcr","componentFactoryResolver","cachedData","loadMoreMode","dataPipe","tap","fetchData","obs$","notFoundTemplate","ngOnChanges","changes","c8yForPipe","c8yForOf","unsubscribePaging","reRender_1","hasMoreData","pagingSub","render","reRender","context","$implicit","shouldUseLoadMoreButton","createLoadMoreButtonComponent","append","loadMoreData","componentFactory","unsubscribe","MapFunctionPipe","mappingFunction","ProgressBarComponent","progress","initializeServices","userPreferences","queryStringLanguage","firstLanguage","u","LoginViews","ICON_LIST","CommonModule","DataModule","C8Y_APP","APP_INITIALIZER","CommonModule_1","NgCommonModule","declarations","entryComponents","ActionBarItemComponent","actionBarService","placement","itemClass","ngAfterViewInit","viewInitTimeout","ViewChild","static","ActionBarComponent","navigatorOpen","hasTabs","isTabsHorizontal","isPageToolbarExpanded","uiActionBar","getSortedItems","byPriority","ActionBarModule","BsDropdownModule","CollapseModule","RouterModule","forChild","ActionOutletComponent","getByPriority","invoke","action","ActionComponent","actionService","disabled","ActionModule","AlertDetailsComponent","AlertOutletComponent","position","alertService","detailDisplayedAlert","isStatic","getClass","close","showDetails","mode","setDetailsContent","isTemplateRef","contents","hasDetails","closeDetails","isDetailsShow","content","Attribute","AlertTextComponent","AlertComponent","containDetailsComponent","ContentChild","AlertModule","BreadcrumbItemComponent","BreadcrumbOutletComponent","showAll","normalizePath","BreadcrumbComponent","breadcrumbService","contentChildItems","toArray","ContentChildren","BreadcrumbModule","TooltipModule","SearchOutletComponent","openSearch","focusInputBox","closeDropdown","dropdown","hide","verifyNotEmpty","term","elementToFocus","focus","HOOK_SEARCH","SearchService","SearchComponent","searchService","onSearch","HighlightComponent","domSanitizer","elementClass","highlightedText","sanitize","SecurityContext","HTML","DomSanitizer","read","SearchModule","FormsModule","ConfirmModalComponent","modal","_labels","ok","cancel","dismiss","labels","BsModalRef","ModalComponent","onDismiss","customFooter","_dismiss","_close","onEnterKeyDown","hasOnlyOneButton","isEmpty","isCancelClickable","isOkClickable","HostListener","ModalService","modalService","modalLabels","show","initialState","acknowledge","acknowledgeLabel","BsModalService","PopoverConfirmComponent","buttons","isOpen","containerClass","outsideClick","buttonStatus","handleOutsideClick","PopoverDirective","ModalModule","BsModalModule","PopoverModule","UserMenuService","userMenuItems","UserMenuItemComponent","userService","onClick","UserEditModalComponent","auth","client","loading","onHide","take","reason","changedLang","onLanguage","updateAndClose","updateCurrent","password","updateCredentials","current","currentUserResult","persistLanguage","newCredentials","BasicAuth","FilteringActionType","LoginService","basicAuth","cookieAuth","realtime","api","tenantLoginOptionsService","rememberMe","TOKEN_KEY","TFATOKEN_KEY","OAUTH2_INTERNAL_TYPE","isFirstLogin","GREEN_MIN_LENGTH_DEFAULT","ERROR_MESSAGES","minlength","password_missmatch","maxlength","password_strength","remote_error","password_change","password_reset_token_expired","tfa_pin_invalid","pattern_phonenumber","pattern_newPassword","international_number_required","phone_number_error","pinAlreadySent","passwordConfirm","tfaExpired","SUCCESS_MESSAGES","password_changed","password_reset_requested","resend_sms","passwordStrengthSetting","enforcePasswordStrength","greenMinLength","localhostRegExp","localhostIpRegExp","showTenantRegExp","autoLogout","initLoginOptions","getTenant","isOAuth2","grantType","loginMode","oauthOptions","redirectToOauth","initRequest","fullPath","_platformLocation","href","redirectUrl","encodeURIComponent","originUriParam","errorPattern","isTfaExpired","hookResponse","response","EMPTY","apiCall","willLogout","json","clone","logout","getGreenMinLength","loginOption","getLoginOption","isNaN","getEnforcePasswordStrength","cleanMessages","addSuccessMessage","successKey","successMessage","getAuthStrategy","authStrategy","token","getStoredToken","tfa","getStoredTfaToken","setCredentials","useBasicAuth","credentials","login","setAuth","tenantRes","switchLoginMode","userRes","verifyAppAccess","getSupportUserName","storeBasicAuthToken","authFulfilled","isPasswordGrantLogin","URLSearchParams","grant_type","tfa_code","urlParams","method","headers","content-type","cleanLocalStorage","showTenant","isLocal","isShowTenant","reload","resData","reset","tslib_1.__read","redirect","cleanSessionStorage","all","saveTFAToken","tfaToken","ex_2","hostname","saveToken","sessionStorage","removeItem","getStoredCredentials","decodeToken","decodeURIComponent","escape","atob","CookieAuth","TenantService","Realtime","TenantLoginOptionsService","LocationStrategy","PasswordConfirmModalComponent","loginService","passwordConfirmedEmitter","userId","strategy","createNewClient","baseUrl","emitSuccessAndClose","Client","PasswordService","GREEN","colorName","color","passwordStrength","PasswordStrength","YELLOW","RED","confirmPassword","hasLowerCase","hasUpperCase","hasNumbers","hasSpecialChars","getStrengthColor","UserTotpSetupComponent","totpSetupVerified","activateTotp","UserEditComponent","passwordService","modalConfirmService","bsModalService","onUser","onCancel","userHasActiveTotp","userCanSetupTotp","_user","userIsExternal","customProperties","userOrigin","ngOnInit","initializeTotpSettings","setupTotp","save","saveAfterPasswordConfirmation","onNewPasswordChanged","newPassword","canUserSetupTotp","getActivityTotp","totpActivity","tfaStrategy","confirmed","UserMenuOutletComponent","tenantService","optionsService","copyIt","copied","handler","handleEvent","clipboardData","addEventListener","execCommand","removeEventListener","editUser","activateSupportAccess","companyName","successMsg","enableSupportUser","refreshCurrentUser","deactivateSupportAccess","textWithCompany","textWithoutCompany","hasRole","isTenantAdmin","disableSupportUser","PasswordCheckListComponent","passwordStrengthChecker","minGreenLength","checklist","check","contextualColor","onPasswordChange","requirement","checked","PasswordConfirm","validate","abControl","controlToCompareWith","PasswordConfirm_1","NG_VALIDATORS","useExisting","PasswordStrengthCheckerService","PasswordStrengthComponent","passwordStrengthCheckerService","strength","model","NewPasswordComponent","systemOptions","changePassword","loadEnforcePasswordStrength","newPasswordChanged","toggleChangePassword","viewProviders","ControlContainer","NgForm","PhoneValidationDirective","control","validateInternationalPhoneNumber","internationalPhoneNumber","numberValid","phoneNumber","parsePhoneNumberFromString","isValid","format","setValue","emitEvent","emitModelToViewChange","PhoneValidationDirective_1","ValidationPattern","rules","messages","domain","loginAlias","min","opcuaBrowsePath","required","urlSegment","groupName","ip","DefaultValidationDirective","c8yDefaultValidation","validation","valid","minLength","DefaultValidationDirective_1","MinValidationDirective","parsedMin","parseInt","MinValidationDirective_1","MaxValidationDirective","parsedMax","MaxValidationDirective_1","MessageDirective","MessagesComponent","defaults","messageMap","customMessages","directive","changVisibility","toMessage","FormGroupComponent","hasError","hasWarning","hasSuccess","novalidation","VALIDATION_DEBOUNCE_MS","initNgModel","subscription","valueChanges","dirty","debounce","timer","customErrorMessage","errors","NgModel","InputGroupListComponent","plus","minus","onRemove","onAdd","InputGroupListContainerDirective","listProjections","last","elements","JsonValidationPrettifierDirective","ngCtrl","invalidJSON","debounceTimeInMs","abstractCtrl","clearValidationMessage","validateInputAndPrettify","closed","validJsonObject","pretty","setErrorAndValidationMessage","setErrors","invalidBodyTemplate","NgControl","TextAreaRowHeightDirective","elem","rows","minHeightPerRow","convertedValue","heightPerRow","setHeight","setStyle","RequiredInputPlaceholderDirective","translationService","ngAfterContentChecked","requiredText","setPlaceholder","removeAttribute","parts","compact","shouldSkipRequiredHint","setAttribute","closest","IpRangeInputListComponent","ipRangeList","cidr","SchemaFormComponent","UpgradeComponent","FilterInputComponent","filterChange$","filterTerm","CARRIAGE_RETURN_KEY","CARRIAGE_RETURN_CODE","code","keyCode","complete","NgFormsModule","TotpChallengeComponent","users","verify","onSuccess","verifyCode","verifyTotpCode","SmsChallengeComponent","smsToken","resendTfa","verifyTFACode","useOAuthInternal","verifyCodeWithOauth","verifyCodeWithBasicAuth","resendTFASms","e_2","loginWithTFA","e_3","e_4","TotpSetupComponent","totpSecret","secretQrUrl","rawSecret","generateTotpSecret","ex_1","AuthenticationModule","UserTotpRevokeComponent","revokeEmitter","revoke","totpRevokeSecret","UserModule","AppIconComponent","appIcon","showIcon","iconClass","appNameAbbr","iconStyle","c8yAppIconsList","analyticsbuilder","analytics-builder","apamaepl","white","defaultIconStyle","background-repeat","background-size","height","width","iconFromAppDefinition","findStaticIcon","iconUrl","iconUrlFromAppDefinition","background-image","appContextPathNormalized","cp","iconClassProperty","iconUrlProperty","AppSwitcherComponent","applications","listAppsForUser","getHref","apps","orderApps","filterApps","filterVisible","filterCloud","filterDuplicates","visibleApplicationTypes","noAppSwitcher","hideCloudApps","filterFn","cloud","oneCloudApps","otherApp","orderBy","documentationItems","HOOK_DOCS","DocsService","getBaseUrl","getUserGuideLink","link","getLink","templateStr","toPromise","links","noDefault","excludeDefault","staticLinks","lnk","partialLink","prefixWithSlash","HeaderBarComponent","userMenuService","docs","canToggle$","appState$","drawerOpen","headerOpen","toggle","TitleOutletComponent","zone","title$","runOutsideAngular","NgZone","TitleComponent","NavigatorItemComponent","iconTemplate","NavigatorIconComponent","NavigatorNodeComponent","nodeClick","childrenNodes","expandParentIfActive","expandCollapse","routerLinkActive","recursive","forNode","updateIconTemplate","updateIconComponent","componentType","iconComponent","iconSlot","iconComponentFactory","RouterLinkActive","ViewChildren","NavigatorNodeComponent_1","NavigatorOutletComponent","collapseNavigator","trackByPathOrLabel","NavigatorModule","RightDrawerComponent","quickLinks","helpAndSupport","HeaderModule","ChangePasswordComponent","onChangeView","passwordPattern","newPasswordConfirm","emailReadOnly","TOKEN_PARAM","EMAIL_PARAM","passwordStrengthColor","resetPassword","view","Credentials","CredentialsComponent","LOGIN_VIEWS","showLoginForm","showBasicAuth","PASSWORD_RESET_HEADER_NAME","visibleOnLoginPage","handlePasswordReset","handleSmsChallenge","handleTotpChallenge","ChangePassword","TotpSetup","TotpChallenge","SmsChallenge","LoginComponent","currentView","None","displayAlerts","getResetPasswordToken","loginAutomatically","handleLoginTemplate","onkeyup","setView","RecoverPasswordComponent","sendPasswordResetMail","TotpAuthComponent","onTotpSuccess","isSetup","LoginModule","LoginModule_1","C8yFormsModule","TabComponent","TabsOutletComponent","showLeft","showRight","scrollSubscription","scrollSubscribe","navigateTo","navigate","scroll","direction","getDimensions","widthScroll","targetScroll","scrollLeft","unlisten","fromEvent","fromEventPattern","listen","updateScroll","elTabs","tabsContainer","scrollWidth","TabsModule","CookieBannerComponent","storageKey","acceptValue","settings","cookieBannerText","showBanner","acceptCookies","BootstrapModule","CellRendererDefDirective","HeaderCellRendererDefDirective","FilteringFormRendererContext","FilteringFormRendererDefDirective","ColumnDirective","ratiosByColumnTypes","numeric","text-short","text-long","GridDataSource","loadingSubject","dataSourceSubject","dataStatsSubject","size","filteredSize","currentPageSize","firstPageSize","dataSelectionSubject","filteredDataIds","loading$","asObservable","data$","stats$","selection$","connect","collectionViewer","loadData","columns","pagination","searchText","serverSideDataCallback","selectable","selectionPrimaryKey","clientSideData$","initialData","transformedData","flow","doClientSideSearch","doClientSideFiltering","doClientSideSorting","doClientSidePagination","serverSideData$","selection","enabled","primaryKey","err","finalize","resolveValue","x","resolveFunction","normalizeNil","isNil","filterPredicate","propPaths","regexSearch","createRegexSearch","itemWithResolvedValues","pick","omitBy","cellValue","actives","sortOrder","sortingState","paths","orders","chunk","filterValue","escapeRegExpPattern","PushStatusLabels","SendStatusLabels","DataGridComponent","sanitizer","hostRef","cd","loadingItemsLabel","noMatchingItemsLabel","dataSource","filteringLabelsParams","filteredItemsCount","allItemsCount","paginationLabelParams","pageFirstItemIdx","pageLastItemIdx","itemsTotal","possiblePageSizes","minPossiblePageSize","displayOptions","striped","bordered","gridHeader","rowMouseOver","rowMouseLeave","rowClick","itemsSelect","columnNames","styles","tableCursor","gridTemplateColumns","searchText$","filteringApplied","totalPagesCount","Infinity","selectedItemIds","currentPageSelectionState","allSelected","allDeselected","builtInActionType","Edit","Delete","Export","resizeHandleMouseDown$","resizeHandleContainerMouseMove$","resizeHandleContainerMouseUp$","unsubscribe$","possiblePageSize","actionControls","bulkActionControls","takeUntil","currentPageEmpty","every","isItemSelected","updateColumns","updateGridColumnsSize","thEls","thRefs","setupResizeHandle","trackByName","resolveCellValue","row","changeSortOrder","columnName","updateSorting","applyFilter","filteringModifier","updateFiltering","ApplyFilter","payload","resetFilter","ResetFilter","clearFilters","externalFilterQuery","updateFilteringApplied","isColumnFilteringApplied","filterable","updatePagination","itemsPerPage","page","getCellRendererSpec","_getCellRendererSpec","getHeaderCellRendererSpec","getFilteringFormRendererSpec","getColumnRenderer","filteringFormRendererComponent","bind","setAllItemsSelected","selected","setItemsSelected","setAllItemsInCurrentPageSelected","itemIds","union","without","onColumnDrop","previousIndex","currentIndex","updateColumnNames","bypassSecurityTrustStyle","visible","gridTrackSize","specialColumn","sortable","positionFixed","tslib_1.__spread","withColumnDefaults","dataType","headerCSSClassName","cellCSSClassName","clearMouseHighlights","mergeMap","targetColumnName","headerBeingResized","requestAnimationFrame","wrapper","horizontalOffset","getBoundingClientRect","left","clientX","offsetLeft","startsWith","_parseInt","getSelection","removeAllRanges","columnRenderer","rendererTemplate","cellRendererComponent","headerCellRendererComponent","columnRenderers","stats","updateFilteringLabelsParams","updatePaginationLabelParams","ChangeDetectorRef","CdkHeaderCell","CellRendererComponent","spec","prevSpec","rendererType","Type","rendererInjector","CellRendererContext","ngDoCheck","markForCheck","changeDetection","ChangeDetectionStrategy","OnPush","FilteringFormRendererComponent","defaultRendererFilterText","DataGridModule","CdkTableModule","DragDropModule","ReactiveFormsModule","C8YCommonModule","PaginationModule","StatusCellRendererComponent","StatusDeviceGridColumn","filteringConfig","schema","sendOnline","sendOffline","sendUnknown","sendNotMonitored","pushOnline","pushOffline","pushUnknown","maintenance","form","getFilter","ors","sendIns","pushIns","__and","__not","__has","__in","__or","sortingConfig","pathSortingConfigs","BaseDeviceGridColumn","NameCellRendererComponent","deviceGridService","DeviceGridService","forwardRef","NameDeviceGridColumn","names","notitle","ModelCellRendererComponent","ModelDeviceGridColumn","vendingModelPath","models","SerialNumberCellRendererComponent","SerialNumberDeviceGridColumn","serialNumbers","GroupCellRendererComponent","GroupDeviceGridColumn","deviceGroupId","__bygroupid","RegistrationDateCellRendererComponent","RegistrationDateDeviceGridColumn","registrationDate","after","before","maxDateKey","minDateKey","dates","__gt","__lt","dateToFormat","Date","toISOString","SystemIdDeviceGridColumn","ids","ImeiDeviceGridColumn","imeis","AlarmsCellRendererComponent","AlarmsDeviceGridColumn","critical","major","minor","none","c8y_ActiveAlarmsStatus.critical","c8y_ActiveAlarmsStatus.major","c8y_ActiveAlarmsStatus.minor","c8y_ActiveAlarmsStatus.warning","sev","zero","inventoryService","queriesUtil","QueriesUtil","getDefaultColumns","getDefaultPagination","getDefaultActionControls","getDefaultBulkActionControls","getProperName","device","getModel","hardware","getHardware","getSerialNumber","serialPropertyName","isVendme","getParentsNames","featuredParentId","assetParentsReferences","assetParents","references","sortedByName","getDeviceHref","getAlarmsHref","getDevices","filters","getDevicesFilters","withParents","getDevicesCount","getDevicesTotal","q","withTotalPages","getDeviceQueryString","buildQuery","getQueryObj","hardwarePropertyName","query","extendQueryByColumn","__filter","__orderby","queryObj","identity","obj","cs_1","pathSortingConfig","sortOrderModifier","DeviceGridComponent","onColumnsChange","onDeviceQueryStringChange","onDataSourceModifier","_index","dataSourceModifier","deviceAvailabilityIconMap","sendData","AVAILABLE","UNAVAILABLE","UNKNOWN","NOT_MONITORED","CONNECTED","DISCONNECTED","MAINTENANCE","lastMessage","tooltips","sendStatusConnected","ɵ0","sendStatusDisconnected","pushStatusConnected","pushStatusDisconnected","ReadAsType","DeviceStatusComponent","_mo","mo","requiredAvailability","availabilityStatus","pushStatus","sendStatus","getMaintenanceStatus","getSendPushStatus","maintenanceStatus","tooltip","getSendStatusTooltip","getPushStatusTooltip","availability","c8y_Availability","DeviceStatusModule","FilteringFormComponent","cloneDeep","formDefaults","ngModelOptions","canApply","schemaFormComponent","DeviceGridModule","DropAreaComponent","loadingMessage","alwaysShow","clickToOpen","dropped","isOver","fileIsEmpty","area","style","offsetHeight","onOver","showPicker","picker","onPick","onFilesSelected","files","onDrop","stopDragging","isAnyFileEmpty","compose","file","readAsJson","TEXT","readAsText","readAsArrayBuffer","ARRAY_BUFFER","readAsBinaryString","BINARY_STRING","readAsDataURL","DATA_URL","reader","FileReader","onload","readyState","DropAreaModule","SelectComponent","applyLabel","onChange","textFilter","labelText","filteredItems","sizeToShowFilter","itemsSelected","stopClicks","preventClick","isOpenChange","updateSelected","outterSelected","isSelected","applyChanges","selectAll","onChangeItem","updateFiltered","search_1","updateLabel","selectedLabel","BsDropdownDirective","ListItemActionComponent","ListItemCollapseComponent","ListItemFooterComponent","ListItemComponent","active","collapsed","showFooter","showActions","showCollapse","dropdownUp","ACTION_ITEM_HEIGHT","actions","itemActions","itemFooter","itemCollapse","showDropdownUp","rect","bottom","innerHeight","TypeaheadComponent","displayProperty","selectedChange","KEYCODE_UP","KEYCODE_DOWN","KEYCODE_TAB","KEYCODE_ENTER","KEYCODE_ESC","onShown","searchControl","handleKeyboard","blur","upOrDown","ListGroupComponent","ListItemIconComponent","ListItemBodyComponent","ListItemCheckboxComponent","onSelect","firstChange","currentValue","ListItemRadioComponent","ListGroupModule","SelectModule","GuideHrefDirective","htmlAnchor","hasAttribute","c8yGuideHref","GuideDocsComponent","guide","baseHref","descendants","DocsModule","HOOK_COMPONENTS","HOOK_COMPONENT","DynamicComponentService","getComponentsViaDeprecatedHook","cmps","cmp","componentsViaDeprecatedHook","__MODE__","warn","getById$","DynamicComponentComponent","dynamicComponentService","notFoundError","expandErrorDetails","componentId","loadComponent","dynamicComponent","configComponent","DynamicComponentModule","DashboardChildActionComponent","DashboardChildTitleComponent","DashboardComponent","gap","dashboardChange","lastRow","DEFAULT_ROW_SIZE","dashboardRect","calculateRowSize","rowSize","onResize","getLastRow","updateRectSize","widget","ele","emitChange","source","DashboardChildComponent","DashboardChildChange","childToChange","MIN_WIDTH","MIN_HEIGHT","PIXEL_SIZE_THRESHOLD","diffX","diffY","dashboard","dragSource","moved","move","getPixelSize","resizeDimension","setPixelSize","getDimensionSize","prev","dimension","setDimension","arrangePipe","getDimensionPosition","findFreeDimension","getCollided","collapseUpAll","w","ds","newPosition","collapseUp","arrangeAll","arrange","spacing","origin","dimensions","notIfColliding","columnSize","pxWidth","pxHeight","moveEvent","draggedElement","top","pointerPosition","round","pointer","resizePosition","nextElementSibling","doesCollide","currentDimension","isResize","isDragging","_pxWidth","_pxHeight","margin","isFrozen","changeStart","changeEnd","intersected","card","card-dashboard","on-resize","setDynamicDimension","intersectionObserver_1","childInView","resizeStarted","positioning","changeSubscription","resize$","dragStarted","drag$","observer","unobserve","WidgetsDashboardComponent","isDisabled","widgetMargin","translateWidgetTitle","defaultHeight","defaultWidth","allowFullscreen","canDelete","onAddWidget","onEditWidget","onDeleteWidget","onChangeDashboard","onEditDashboard","onDeleteDashboard","onFreeze","onChangeStart","onChangeEnd","toggleFullscreen","doc","fullScreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","DashboardModule","C8yStepperIcon","templateRef","C8yStepper","disableDefaultIcons","edit","onStepChange","_iconOverrides","_stepIndex","_icons","_stepIndexSubscription","getIndicatorType","_state","_getIndicatorType","STEP_STATE","EDIT","DONE","setIndex","C8yStepper_1","CdkStepper","C8yStepperProgress","onStepClicked","stepSelected","C8yStepperButtons","stepper","pending","onNext","onBack","showBtns","back","observers","steps","stepControl","invalid","statusChangeSubscription","statusChanges","previous","Host","CdkStep","displayDefaultIndicatorType","StepperModule","CdkStepperModule","STEPPER_GLOBAL_OPTIONS","ɵ0$1","ViewContext","CoreModule","CoreModule_1","c8yFormsModule","c8yStepperModule","HOOK_ONCE_ROUTE","RouterService","routes","addRoute","addRoutes","emptyRoute","resetConfig","convertRoute","initialConfig","RouterTabsResolver","snapshot","routeConfig","getGuards","guard","canActivate","routerStateSnapshot","guards","showIf","ViewContextServices","contextToService","services","Device","Group","User","Application","SubscribedApplications","Tenant","ContextRouteComponent","tabsResolver","tabsService","lastAddedTabs","routerSubscription","redirectToFirstTab","refreshObservable","updatedContext","dataSubscription","updateTabs","refreshTabs","serviceInstance","contextRegex_1","getDetailUrl","contextData","childrenRegex_1","contextChanged","childrenAffected","NEVER","needsRedirect","firstTab$","navigateByUrl","replaceUrl","parseUrl","PRIMARY_OUTLET","segments","ActivatedRoute","ContextRouteGuard","caches","paramMap","clearDetailCached","detailCached","getCache","cached","EmptyComponent","routerService","RouterModule_1","NgRouterModule","QuickLinkComponent","QuickLinkModule","CustomDeviceGridColumn","exists","equals"],"mappings":"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CA,cACA,QACA,aACA,OACA,eACA,aACA,iBACA,QACA,YACA,UACA,SACA,SACA,SACA,SACA,OACA,YACA,SACA,cACA,UACA,QACA,OACA,WACA,MACA,OACA,SACA,QACA,OACA,OACA,SACA,MACA,OACA,SACA,MACA,OACA,QACA,UACA,WACA,SACA,WACA,eACA,iBACA,QACA,UACA,UACA,SACA,OACA,OACA,SACA,OACA,WACA,cACA,MACA,WACA,SACA,WACA,MACA,OACA,eACA,gBACA,YACA,UACA,WACA,QACA,cACA,QACA,UACA,WACA,YACA,aACA,WACA,OACA,YACA,SACA,WACA,QACA,QACA,QACA,YACA,cACA,QACA,OACA,SACA,WACA,SACA,WACA,aACA,aACA,cACA,UACA,OACA,QACA,UACA,SACA,OACA,UACA,YACA,aACA,aACA,MACA,QACA,UACA,UACA,SCvITC,GAAA,WAIE,SAAAA,EACUC,EACAC,EACAxB,EACAD,GAHAj3B,KAAAy4B,cAAAA,EACAz4B,KAAA04B,SAAAA,EACA14B,KAAAk3B,SAAAA,EACAl3B,KAAAi3B,GAAAA,EAPFj3B,KAAAmvB,WAAa,GA2DvB,OA1CW3vB,OAAAgC,eAAIg3B,EAAAt4B,UAAA,YAAS,KAAb,SAAckb,GACrB,GAAKA,EASL,GANIpb,KAAK24B,oBAAoBC,SAC3B54B,KAAKk3B,SAAS2B,YAAY74B,KAAK24B,SAASG,cAAgB94B,KAAK24B,UAE/D34B,KAAKy4B,cAAcM,QAGf3d,aAAoB4d,EAAAA,YACtBh5B,KAAKy4B,cAAcQ,mBAAmB7d,QAGjC,GAAIA,aAAoBwd,QAAS,CACtC,IAAMM,EAASl5B,KAAKk3B,SAASiC,WAAWn5B,KAAKi3B,GAAGe,eAChDh4B,KAAKsX,UACLtX,KAAK24B,SAAWvd,EAChBpb,KAAKk3B,SAASkC,aAAaF,EAAQl5B,KAAK24B,SAAU34B,KAAKi3B,GAAGe,mBAGrD,CACL,IAAMqB,EAAiCr5B,KAAK04B,SAASY,wBAAwBle,GACvEme,EAAYv5B,KAAKy4B,cAAce,gBAAgBH,GACrDh5B,EA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { flatten, isFunction, sortBy } from 'lodash-es';\nimport { combineLatest, defer, from, isObservable, Observable, of, race } from 'rxjs';\nimport { filter, map, merge, startWith, switchMap } from 'rxjs/operators';\n\nexport function fromTrigger(router, refresh, factories) {\n  return router.events.pipe(\n    filter(evt => evt instanceof NavigationEnd),\n    merge(refresh),\n    startWith(1),\n    switchMap(() => fromFactories(factories, router))\n  );\n}\nexport function fromFactories<T>(\n  factories?,\n  router?: Router,\n  withFirstEmpty = true\n): Observable<T[]> {\n  return !Array.isArray(factories) || factories.length < 1\n    ? of([])\n    : defer(() => {\n        const factoryObservables = resolveInjectedFactories(factories).map(f => {\n          return toObservable(\n            Array.isArray(f) ? f : f && isFunction(f.get) ? f.get(getActivatedRoute(router)) : [f],\n            withFirstEmpty\n          );\n        });\n        return combineLatest(...factoryObservables);\n      }).pipe(map(results => sortByPriority([].concat(...results))));\n}\n\nexport function resolveInjectedFactories(factories) {\n  return flatten(factories.map(f => (isFunction(f) ? f() : [f])));\n}\n\nexport function stateToFactory<T>(componentsState): ExtensionFactory<T> {\n  const components$ = componentsState.pipe(map((componentSet: Set<T>) => Array.from(componentSet)));\n  return { get: () => components$ };\n}\n\nexport function sortByPriority(items) {\n  return sortBy(items, 'priority');\n}\n\nfunction toObservable(factoryResult, withFirstEmpty) {\n  let observable;\n  if (!factoryResult) {\n    return of([]);\n  } else if (typeof factoryResult.then === 'function' || isObservable(factoryResult)) {\n    if (withFirstEmpty) {\n      const forceObservable = from(factoryResult);\n      const withEmptyFirst = forceObservable.pipe(startWith([]));\n      observable = race(forceObservable, withEmptyFirst);\n    } else {\n      observable = from(factoryResult);\n    }\n  } else {\n    observable = of(factoryResult);\n  }\n  return observable.pipe(\n    map(result => (Array.isArray(result) ? result : [result]).filter(item => !!item))\n  );\n}\n\n/**\n * Allows to extend the existing applications from a module.\n */\nexport interface ExtensionFactory<T> {\n  /**\n   * Allows to resolve the data of an extension point.\n   * The return value can be a Promise or Observable\n   * (allowing for asynchronous data resolution).\n   *\n   * @param activatedRoute The current activated route (if possible to resolve).\n   */\n  get(activatedRoute?: ActivatedRoute): Observable<T[] | T> | Promise<T[] | T> | T[] | T;\n}\n\n/**\n * Extension points allow to extend the application from\n * any module\n */\nexport interface ExtensionPoint<T> {\n  /**\n   * Observable that emits of array of extensions active at any give time\n   */\n  readonly items$: Observable<T[]>;\n  /**\n   * Call the extension factories to refresh them.\n   */\n  refresh();\n}\n\n/**\n * Helper function to get the activated route in\n * a service (as ActivatedRoute injection only\n * works in components). Works as long as we only use\n * a tree and no child is active at the same time.\n *\n * @param router The current router\n */\nexport function getActivatedRoute(router: Router) {\n  if (router && router.routerState && router.routerState.root) {\n    let route = router.routerState.root;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    return route;\n  }\n}\n","import { Observable, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n/**\n * A abstract state which should be included in each state.\n * @abstract\n */\nexport abstract class StateService {\n  /**\n   * Saves the state. Should not be accessible directly. Use map or the getter to access\n   * the state. Use functions in the implementation to change the state.\n   */\n  protected abstract state$: BehaviorSubject<any> | any;\n\n  /**\n   * Should return the current state of this StateService\n   */\n  abstract get state();\n\n  /**\n   * Maps to a property and just returns that property.\n   * @param mappedProperty The property to map to.\n   */\n  map(mappedProperty: (stateProperty) => any): Observable<any> {\n    return this.state$.pipe(map(mappedProperty), distinctUntilChanged());\n  }\n\n  /**\n   * Emits a new state.\n   */\n  protected emitNewState() {\n    this.state$.next(this.state);\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {\n  ExtensionPoint,\n  fromTrigger,\n  sortByPriority,\n  stateToFactory\n} from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { ActionBarItem } from './action-bar.model';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ACTION_BAR = new InjectionToken('ActionBarFactory');\n\n/**\n * A service which defines action-bar items.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionBarService extends StateService implements ExtensionPoint<ActionBarItem> {\n  items$: Observable<ActionBarItem[]>;\n  readonly refreshTrigger = new Subject();\n  protected state$ = new BehaviorSubject<Set<ActionBarItem>>(new Set<ActionBarItem>());\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_ACTION_BAR, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: ActionBarItem[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<ActionBarItem> {\n    return this.state$.value;\n  }\n\n  refresh() {\n    this.refreshTrigger.next();\n  }\n\n  /**\n   * Adds a new item to the action bar in the header and emits a state change.\n   * @param item The item to add.\n   */\n  add(item: ActionBarItem) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action bar item from the header and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: ActionBarItem) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Injector, Injectable, InjectionToken } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { StateService } from '../common/state-service.abstract';\nimport { Action, ActionFactory } from './action.model';\nimport {\n  fromTrigger,\n  ExtensionPoint,\n  stateToFactory,\n  sortByPriority\n} from '../common/extension-hooks';\nimport { map, shareReplay } from 'rxjs/operators';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ACTION = new InjectionToken('ActionFactory');\n\n/**\n * A service which defines global actions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionService extends StateService implements ExtensionPoint<Action> {\n  items$: Observable<Action[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Action>>(new Set<Action>());\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_ACTION, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: Action[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<Action> {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the actions in the header and emits a state change.\n   * @param item The item to add.\n   */\n  add(item: Action) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action from the header and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: Action) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","// Just for translation annotation\n// Note: Own file because of conflicts if put in barrel directly.\nexport const _ = (str) => str;\nexport function gettext(str) {\n          return str;\n}\n","import { Alert } from './alert.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { StateService } from '../common/state-service.abstract';\nimport { gettext } from '../i18n/gettext';\n\ntype alertType =  'success' | 'warning' | 'danger' | 'info' | 'system';\n/**\n * A service which allows to display alerts.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService extends StateService {\n\n  /**\n   * Returns all alerts.\n   * @readonly\n   */\n  get state() {\n    return this.state$.value;\n  }\n  state$ = new BehaviorSubject<Alert[]>([]);\n\n  private MAX_ALERTS = 3;\n  private ALERT_TIMEOUT = 3000;\n\n  /**\n   * Adds a new alert to the current state.\n   */\n  add(alert: Alert) {\n    this.addAlert(alert);\n  }\n\n  /**\n   * Adds a alert by text.\n   */\n  addByText(type: alertType, txt: string, detailedData?: string): void {\n    this.addAlert({ text: txt, type, detailedData });\n  }\n\n  /**\n   * Returns all alerts.\n   * @deprecated Use alertService.alerts instead.\n   */\n  list(): Alert[] {\n    return this.state;\n  }\n\n  /**\n   * Remove an alert from the current state.\n   */\n  remove(alert: Alert) {\n    this.changeAlerts(this.state.filter((item) => !this.areSame(alert, item))\n    );\n  }\n\n  /**\n   * Removes last danger alert. Replacement for silentError.\n   *\n   * @example\n   * ```typescript\n   *  try {\n   *    // something that might throw a danger server msg\n   *  } catch (ex) {\n   *   this.alarmService.removeLastDanger();\n   *  }\n   * ```\n   */\n  removeLastDanger() {\n    const firstDangerAlarm = this.state.reverse().find(({ type }) => type === 'danger');\n    this.changeAlerts(this.state.filter((alarm) => alarm !== firstDangerAlarm));\n  }\n\n  /**\n   * Shorthand for a save successful alert.\n   * @param savedObject The object which was saved.\n   * @return A function that can be executed to show the msg.\n   */\n  saveSuccess(savedObject: string) {\n    return () => {\n      const text = `${savedObject} saved successfully`;\n      this.addByText('success', text);\n    };\n  }\n\n  /**\n   * Shorthand for a create successful alert.\n   * @param createdObject The object which was created.\n   * @return A function that can be executed to show the msg.\n   */\n  createSuccess(createdObject) {\n    return () => {\n      const text = `${createdObject} created successfully`;\n      this.addByText('success', text);\n    };\n  }\n\n  /**\n   * Clears all alerts.\n   */\n  clearAll() {\n    this.changeAlerts([]);\n  }\n\n  /**\n   * A shorthand to display a simple success message.\n   * @param text The success text.\n   * @param detailedData The text with additional information.\n   */\n  success(text: string, detailedData?: string) {\n    this.addByText('success', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple danger message.\n   * @param text The danger text.\n   * @param detailedData The text with additional information.\n   */\n  danger(text: string, detailedData?: string) {\n    this.addByText('danger', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple info message.\n   * @param text The info text.\n   * @param detailedData The text with additional information.\n   */\n  info(text: string, detailedData?: string) {\n    this.addByText('info', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple warning message.\n   * @param text The warning text.\n   * @param detailedData The text with additional information.\n   */\n  warning(text: string, detailedData?: string) {\n    this.addByText('warning', text, detailedData);\n  }\n\n  addServerFailure(error: any, type: alertType = 'danger') {\n    const { data, res } = error;\n    let text = data && data.message ? data.message : null;\n    let detailedData;\n    if (data) {\n      if (typeof data === 'object') {\n        detailedData = data.exceptionMessage;\n      } else if (typeof data === 'string') {\n        detailedData = data;\n      }\n    }\n    const hasRelevantMessage = !!(text || detailedData);\n    if (!text) {\n      text = gettext('A server error occurred.');\n    }\n    if (!hasRelevantMessage) {\n      detailedData = {\n        status: res.status,\n        statusText: res.statusText,\n        url: res.url,\n      };\n    }\n\n    this.addAlert({\n      type,\n      text,\n      detailedData\n    });\n  }\n\n  areSame(alert1: Alert, alert2: Alert) {\n    return alert1.text === alert2.text &&\n      alert1.type === alert2.type &&\n      alert1.detailedData === alert2.detailedData &&\n      alert1.onClose === alert2.onClose &&\n      alert1.onDetail === alert2.onDetail;\n  }\n\n  private changeAlerts(newAlerts: Alert[]) {\n    this.state$.next(newAlerts);\n  }\n\n  private addAlert(alert: Alert): void {\n    if (!alert.text && !alert.type) {\n      throw new Error('Cannot add empty alert');\n    }\n\n    const alertAlreadyAdded = this.state\n        .find((item) => this.areSame(alert, item));\n    if (alertAlreadyAdded) {\n      return;\n    }\n\n    this.changeAlerts([...this.state, alert]);\n    this.hideAutomaticallyIfNeeded(alert);\n    this.removeOldestIfMax();\n  }\n\n  private hideAutomaticallyIfNeeded(alert: Alert) {\n    const isSuccess = alert.type === 'success';\n    const noDetails = !alert.detailedData;\n    let alertTimeout = (isSuccess && noDetails) ? this.ALERT_TIMEOUT : 0;\n    if (typeof alert.timeout !== 'undefined') {\n      alertTimeout = alert.timeout;\n    }\n    if (alertTimeout) {\n      setTimeout(() => this.remove(alert), alertTimeout);\n    }\n  }\n\n  private removeOldestIfMax() {\n    if (this.state.length > this.MAX_ALERTS) {\n      const [, ...firstRemoved] = this.state;\n      this.changeAlerts(firstRemoved);\n    }\n  }\n}\n","import { OperationStatus } from '@c8y/client';\n\nexport enum Status {\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  DANGER = 'danger',\n  INFO = 'info'\n}\n\nexport type StatusType = Status | 'success' | 'warning' | 'danger' | 'info';\n\nexport const statusIcons = {\n  [Status.SUCCESS]: 'check-circle',\n  [Status.WARNING]: 'exclamation-triangle',\n  [Status.DANGER]: 'exclamation-circle',\n  [Status.INFO]: 'info-circle'\n};\n\nexport const statusClasses = {\n  [Status.SUCCESS]: `text-${Status.SUCCESS}`,\n  [Status.WARNING]: `text-${Status.WARNING}`,\n  [Status.DANGER]: `text-${Status.DANGER}`,\n  [Status.INFO]: `text-${Status.INFO}`\n};\n\nexport const statusAlert = {\n  [Status.SUCCESS]: `alert-${Status.SUCCESS}`,\n  [Status.WARNING]: `alert-${Status.WARNING}`,\n  [Status.DANGER]: `alert-${Status.DANGER}`,\n  [Status.INFO]: `alert-${Status.INFO}`\n};\n\nexport const operationStatusIcons = {\n  [OperationStatus.PENDING]: 'clock-o',\n  [OperationStatus.EXECUTING]: 'refresh',\n  [OperationStatus.SUCCESSFUL]: 'check-circle',\n  [OperationStatus.FAILED]: 'exclamation-circle'\n};\n\nexport const operationStatusClasses = {\n  [OperationStatus.PENDING]: '',\n  [OperationStatus.EXECUTING]: 'text-info',\n  [OperationStatus.SUCCESSFUL]: 'text-success',\n  [OperationStatus.FAILED]: 'text-danger'\n};\n","/*\n * -----------------------------WARNING---------------------------------\n * This file has an *exact* copy in packages/cli/src/webpack.\n * Any changes to this file must be reflected there, too.\n */\nexport class ApplicationOptions {\n  /** Application name (saved to the server). */\n  name: string;\n  /** Application context path (saved to the server). */\n  contextPath: string;\n  /** Application key (saved to the server). */\n  key: string;\n  /** Set to `true` if the application is hybrid and uses Angular and AngularJS simultaneously. */\n  upgrade?: boolean;\n  /** Path to the branding entry file. */\n  brandingEntry?: string;\n  /** Path to tsccnfig.json file if TypeScript is used (default: ./tsconfig.json). */\n  tsConfigPath?: string;\n  /** Entry module for Angular compiler (only used with lazy loaded routes), e.g. `'app.module.ts#AppModule'`. */\n  entryModule?: string;\n  /** Path to custom index.html (otherwise default one will be used). */\n  indexTemplate?: string;\n  /** URL to dynamically fetched options. */\n  dynamicOptionsUrl?: string;\n  /** URL to favicon. */\n  faviconUrl?: string;\n  /** URL to *.css file which will replace default branding. */\n  brandingUrl?: string;\n  /** Object with properties that will be converted to CSS custom variables. */\n  brandingCssVars?: {\n    [key: string]: string;\n  };\n  /**\n   * Allows for adding or overriding languages available in the application.\n   *\n   * Its keys are language codes and its values are objects with the following properties:\n   *\n   * - `name`: English name of the language,\n   * - `nativeName`: native name of the language,\n   * - `url`: full URL to JSON file with compiled translations;\n   *    if not defined, translations will be loaded from `${localePath}/${langCode}.json`.\n   *\n   * Example:\n   * ```json\n   * \"languages\": {\n   *   \"de\": {\n   *     \"name\": \"German\",\n   *     \"nativeName\": \"Deutsch\",\n   *     \"url\": \"/apps/public/ui-assets/de.json\"\n   *   }\n   * }\n   * ```\n   */\n  languages?: {\n    [langCode: string]: {\n      name: string;\n      nativeName: string;\n      url: string;\n    };\n  };\n  /** Path to the folder from which *.po files will be loaded. */\n  localePath?: string;\n  /** Array of URLs to additional *.css files to be loaded at runtime. */\n  extraCssUrls?: string[];\n  /** Documentation links settings. */\n  docs?: {\n    /** Hide default links to documentation. */\n    noDefault: boolean;\n    /** List of regex strings. Matching default docs URLs will be hidden. */\n    excludeDefault: string[];\n    /** Additional links to be displayed. */\n    links: Array<{\n      icon: string;\n      label: string;\n      url: string;\n      type: 'doc' | 'quicklink';\n    }>;\n  };\n  /** Application icon to be displayed in app switcher and header bar. */\n  icon?: {\n    class?: string;\n    url?: string;\n  };\n\n  // These are the old options\n  /** Hide application in app switcher (saved to the server). */\n  noAppSwitcher?: boolean;\n  /** HTML page title. */\n  globalTitle?: string;\n  /** Hide \"powered by\" and version info at the bottom of the navigator and in the user menu. */\n  hidePowered?: boolean;\n  /** URL to support page (set to `false` to hide the link). */\n  supportUrl?: boolean | string;\n  /**\n   * Replacement string for `user` field in audit logs for actions performed by a support user\n   * (available placeholders: `{{support_user}}`, `{{supported_user}}`).\n   */\n  supportUserString?: string;\n  /** Enable or disable the right drawer. */\n  rightDrawer?: boolean;\n  /** Enable or disable breadcrumbs in the header for groups and devices (default: false). */\n  breadcrumbs?: boolean;\n  /** Collapse navigator on initial load. */\n  hideNavigator?: boolean;\n  /** Show tabs horizontally or vertically. */\n  tabsHorizontal?: boolean;\n  /** Additional link to display on login screen. */\n  loginExtraLink?: {\n    url: string;\n    label: string;\n  };\n  /** Enable or disable storage limitation feature. */\n  storageLimitationFeatureEnabled?: boolean;\n  /** Name of company handling support requests from app users (displayed in notification message). */\n  companyName?: string;\n  /** URL template for documentation links (default: `'${docsBaseUrl}${partialUrl}'`). */\n  guideHrefTemplate?: string;\n  /** Base URL for documentation links. */\n  docsBaseUrl?: string;\n  /** CSP string to be added to `index.html`. */\n  contentSecurityPolicy?: string;\n  /** Enables cloud sensor wizard */\n  sensorPhone?: boolean;\n  /** Legacy list of imported plugins. */\n  imports?: string[];\n  /** Show or hide a newsletter subscription checkbox in edit user modal. */\n  newsletter?: boolean;\n  /** Indicates whether the entry point is traversed from legacy cumulocity*.json app manifest. */\n  legacy?: boolean;\n  /** Path to the root node_modules dir (useful when working in monorepo setup, e.g. yarn workspaces). */\n  rootNodeModulesPath?: string;\n  /** Cookie Banner configuration */\n  cookieBanner?: {\n    cookieBannerTitle?: string;\n    cookieBannerText?: string;\n    policyUrl?: string;\n  };\n}\n","import { InjectionToken, Optional, Inject, Injectable } from '@angular/core';\nimport { camelCase, isUndefined } from 'lodash-es';\nimport { ApplicationOptions } from './ApplicationOptions';\nimport { ExtensionFactory } from './extension-hooks';\nimport { SystemOptionsService, TenantOptionsService } from '@c8y/ngx-components/api';\n\nexport const HOOK_OPTIONS = new InjectionToken<ExtensionFactory<ApplicationOptions>>('App options');\n\n/**\n * A service that allows to set or get application options\n * which configure the default behavior of the UI.\n */\n@Injectable()\nexport class OptionsService extends ApplicationOptions {\n  [key: string]: any;\n  constructor(\n    @Optional() @Inject(HOOK_OPTIONS) options,\n    private systemOptionsService: SystemOptionsService,\n    private tenantOptionService: TenantOptionsService\n  ) {\n    super();\n    this.setupOptions(options);\n  }\n\n  /**\n   * Returns an application option used to configure the UI.\n   * @param optionKey The application options key.\n   * @param defaultValue A value to return if non is set.\n   */\n  get(optionKey: keyof OptionsService, defaultValue?: any) {\n    let value = this[optionKey];\n    if (typeof value === 'undefined') {\n      value = this[camelCase(optionKey)];\n    }\n    return typeof value !== 'undefined' ? value : defaultValue;\n  }\n\n  /**\n   * Sets an application option.\n   * @param key The key to set.\n   * @param value The value to set.\n   */\n  set(key: string, value: any) {\n    this[camelCase(key)] = value;\n  }\n\n  /**\n   * Gets support url from tenant options.\n   * If response returns '404 not found' it gets the support url from application options.\n   * If the support link within application options is not provided the UI will use the system options.\n   * Is the support link explicitly set to false it will be hidden.\n   * NOTE: The tenant option endpoint returns the system option setting if non is set on the tenant.\n   *\n   * @returns Returns support url or false.\n   */\n  async getSupportUrl() {\n    if (isUndefined(this.supportUrl)) {\n      this.supportUrl = await this.getTenantOption('configuration', 'system.support.url');\n    }\n    return isUndefined(this.supportUrl) ? false : this.supportUrl;\n  }\n\n  /**\n   * Returns if the tenant allows to show the activate-support user menu entry.\n   */\n  async getActivateSupportUser() {\n    const option = await this.getSystemOption('support-user', 'enabled', true);\n    return !option;\n  }\n\n  /**\n   * Gets a value from the system service and parses it.\n   *\n   * @param category The category for this option.\n   * @param key The key for that option.\n   * @param defaultValue The default if the option was not found.\n   */\n  async getSystemOption(category: string, key: string, defaultValue?: any) {\n    return this.getOptionFromService(category, key, this.systemOptionsService, defaultValue);\n  }\n\n  /**\n   * Gets a value from the tenant service and parses it.\n   *\n   * @param category The category for this option.\n   * @param key The key for that option.\n   * @param defaultValue The default if the option was not found.\n   */\n  async getTenantOption(category: string, key: string, defaultValue?: any) {\n    return this.getOptionFromService(category, key, this.tenantOptionService, defaultValue);\n  }\n\n  private setupOptions(options: any[] | null) {\n    if (options) {\n      if (!Array.isArray(options)) {\n        options = [options];\n      }\n      options.forEach(optionMap => {\n        if (optionMap) {\n          Object.keys(optionMap).forEach(key => {\n            this[camelCase(key)] = optionMap[key];\n          });\n        }\n      });\n    }\n  }\n\n  private async getOptionFromService(category, key, service, defaultValue) {\n    try {\n      const { data } = await service.detail({ category, key });\n      return this.parseOptionRawValue(data.value, defaultValue);\n    } catch (ex) {\n      return defaultValue;\n    }\n  }\n\n  private parseOptionRawValue(rawValue, defaultValue) {\n    let value;\n    try {\n      value = JSON.parse(rawValue);\n    } catch (e) {\n      value = isUndefined(rawValue) ? defaultValue : rawValue;\n    }\n    return value;\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { keys } from 'lodash-es';\nimport { BehaviorSubject } from 'rxjs';\nimport { scan, distinctUntilChanged, map, filter } from 'rxjs/operators';\nimport { StateService } from './state-service.abstract';\nimport { OptionsService } from './options.service';\nimport { FetchClient } from '@c8y/client';\n\nimport { ApplicationService, IUser, ICurrentTenant } from '@c8y/client';\nimport { ApiService } from '@c8y/ngx-components/api';\n\n@Injectable()\nexport class AppStateService extends StateService {\n  state$: BehaviorSubject<any> = new BehaviorSubject<any>({\n    app: {\n      name: this.options.name,\n      contextPath: this.getCurrentContextPath() || this.options.contextPath\n    },\n    supportUrl: this.options.supportUrl,\n    lang: this.options.get('defaultLanguage', 'en'),\n    langs: this.getLangs(),\n    langsDetail: this.options.languages,\n    loginOptions: this.options.loginOptions,\n    activateSupportUserAvailable: undefined,\n    versions: {\n      backend: undefined,\n      ui: this.options.versions || { ngx: undefined }\n    },\n    hidePowered: this.options.hidePowered,\n    isLoading: false,\n    showRightDrawer: this.options.rightDrawer,\n    loginExtraLink: this.options.get('login_extra_link'),\n    newsletter: this.options.newsletter\n  });\n  currentSupportUserName: BehaviorSubject<string | null> = new BehaviorSubject(null);\n  currentUser: BehaviorSubject<IUser | null> = new BehaviorSubject(null);\n  currentTenant: BehaviorSubject<ICurrentTenant | null> = new BehaviorSubject(null);\n\n  constructor(\n    private applicationService: ApplicationService,\n    public apiService: ApiService,\n    private options: OptionsService,\n    private fetchClient: FetchClient\n  ) {\n    super();\n    this.apiService.calls\n      .pipe(\n        filter(({ url }) => !/cep\\/realtime/.test(url)),\n        map(({ phase }) => (phase === 'start' ? 1 : -1)),\n        scan((count, item) => count + item, 0),\n        map(count => count > 0),\n        distinctUntilChanged()\n      )\n      .subscribe(isLoading => (this.state.isLoading = isLoading));\n\n    this.assignApplicationKeyToDefaultHeaders();\n  }\n\n  assignApplicationKeyToDefaultHeaders() {\n    if (!isDevMode()) {\n      this.fetchClient.defaultHeaders = {\n        ...(this.fetchClient.defaultHeaders || {}),\n        'X-Cumulocity-Application-Key': this.options.key\n      };\n    }\n  }\n\n  /**\n   * Returns the current state.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  getLangs() {\n    const { languages } = this.options;\n    return languages ? keys(languages).filter(k => languages[k]) : [];\n  }\n\n  /**\n   * Returns the correct UI version. In hybrid mode for angular and ngx.\n   */\n  get uiVersion() {\n    const version = this.state.versions.ui;\n    return version.ngx || version.ng1;\n  }\n\n  /**\n   * Loads the app manifest. If no access -> throw an error to verify app access.\n   */\n  async loadManifest() {\n    try {\n      const { application } = (await this.applicationService.detail(\n        `${this.state.app.contextPath}/manifest`\n      )).data as any;\n      this.state.app.manifest = application;\n      this.loadDefaultOptions();\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  /**\n   * Checks current users application list and matches it against given application name.\n   * Returns true if application is in the list.\n   * @param name application name\n   */\n  async isApplicationAvailable(name: string) {\n    const { data } = await this.applicationService.listByUser(undefined, { pageSize: 100 });\n    return data.some(app => app.name === name);\n  }\n\n  /**\n   * Sets current user (including support user).\n   * @param userInfo Info about current user and support user to be set.\n   */\n  setUser(userInfo: { user: IUser; supportUserName: string }) {\n    this.currentSupportUserName.next(userInfo.supportUserName || null);\n    this.currentUser.next(userInfo.user);\n  }\n\n  private getCurrentContextPath() {\n    const match = window.location.pathname.match(/\\/apps\\/(public\\/){0,1}(.+?)(\\/|\\?|#|$)/);\n    return match && match[2];\n  }\n\n  private async loadDefaultOptions() {\n    this.state.supportUrl = await this.options.getSupportUrl();\n    this.state.activateSupportUserAvailable = await this.options.getActivateSupportUser();\n    this.state.versions.backend = await this.options.getSystemOption('system', 'version');\n    try {\n      this.showIncompatibleVersionsError();\n    } catch (ex) {\n      // ignore this\n    }\n    this.emitNewState();\n  }\n\n  private showIncompatibleVersionsError() {\n    const uiVersion = this.state.versions.ui.ngx;\n    const backendVersion = this.state.versions.backend;\n    const uiVersionArray = uiVersion\n      .replace(/[^\\d.]/g, '')\n      .split('.')\n      .map(Number);\n    const beVersionArray = backendVersion\n      .replace(/[^\\d.]/g, '')\n      .split('.')\n      .map(Number);\n    const multiplier = Math.pow(\n      10,\n      Math.ceil(Math.log10(Math.max(...uiVersionArray, ...beVersionArray) + 1))\n    );\n    const sumReducer = (acc, cur) => acc + cur;\n    const calculateVersionMapper = (curr, idx) => curr * (multiplier / Math.pow(10, idx));\n    const uiVersionNumber = uiVersionArray.map(calculateVersionMapper).reduce(sumReducer);\n    const beVersionNumber = beVersionArray.map(calculateVersionMapper).reduce(sumReducer);\n    const showError = uiVersionNumber > beVersionNumber;\n    if (showError) {\n      const errorContent = `You are running version ${uiVersion} of the UI and version ${backendVersion} of backend!`;\n      console.log('%c ' + errorContent, 'font-weight: bold; font-size: 30px; color: red;');\n    }\n  }\n}\n","import { TemplateRef, Type } from '@angular/core';\nimport { matches } from 'lodash-es';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { PopoverConfirmComponent } from '../modal/popover-confirm.component';\n\nexport interface ClickOptions {\n  icon?: boolean;\n  expander?: boolean;\n  open?: boolean;\n  $event?: any; // TODO: add proper type\n}\n\nexport class NavigatorNode {\n  icon: string;\n  iconTemplate?: TemplateRef<any>;\n  iconComponent?: Type<any>;\n  children: NavigatorNode[] = [];\n  label;\n  path: string;\n  parents: NavigatorNode[] = [];\n  loading?: boolean;\n  routerLinkExact: boolean = true;\n  open: boolean = false;\n  hidden: boolean = false;\n  draggable: boolean = false;\n  droppable: boolean = false;\n  dragged = false;\n  draggedHover = false;\n  confirm: PopoverConfirmComponent = undefined;\n  private _priority: number = 0;\n  private expandDragTimeout;\n\n  get hasChildren() {\n    return this.children.length > 0;\n  }\n\n  get priority() {\n    if (this._priority) {\n      return this._priority;\n    } else {\n      const childrenPriorities = this.children.map(({ priority }) => priority || 0);\n      if (childrenPriorities.length) {\n        return childrenPriorities.length ? Math.max(...childrenPriorities) : 0;\n      }\n      return 0;\n    }\n  }\n\n  set priority(priority) {\n    this._priority = priority;\n  }\n\n  constructor(data?: NavigatorNodeData) {\n    this.update(data);\n  }\n\n  openOnStart(url: string) {\n    return false;\n  }\n\n  add(node: NavigatorNode) {\n    if ( node === this) {\n      throw new Error('Adding node to itself');\n    }\n    if (this.children.indexOf(node) === -1) {\n      this.children.push(node);\n    }\n    if (node.parents.indexOf(this) === -1) {\n      node.parents.push(this);\n    }\n    this.updateChildren();\n  }\n\n  remove(node: NavigatorNode) {\n    const ix = this.children.indexOf(node);\n    const pix = node.parents.indexOf(this);\n    if (ix > -1) {\n      this.children.splice(ix, 1);\n    }\n    if (pix > -1) {\n      node.parents.splice(pix, 1);\n    }\n    this.updateChildren();\n  }\n\n  update(data?: NavigatorNodeData) {\n    if (data) {\n      Object.assign(this, data);\n      if (data.hidden  !== undefined) {\n        this.parents.forEach((p) => {\n          p.updateHidden();\n        });\n      }\n    }\n  }\n\n  find(predicate) {\n    if (typeof predicate === 'string') {\n      const compareLabel = predicate.toLocaleLowerCase();\n      predicate = ({ label }) =>  compareLabel === label.toLowerCase();\n    }\n    if (typeof predicate === 'object') {\n      predicate = matches(predicate);\n    }\n    if (typeof predicate !== 'function') {\n      throw new Error('Invalid search predicate');\n    }\n    return this.children.reduce(\n      (found, child) => found || child.find(predicate),\n      this.children.find(predicate)\n    );\n  }\n\n  empty() {\n    this.children.length = 0;\n  }\n\n  click(options: ClickOptions = {}) {\n    // do nothing\n  }\n\n  drop($event) {\n    $event.stopPropagation();\n    clearTimeout(this.expandDragTimeout);\n  }\n\n  dragStart($event) {\n    $event.stopPropagation();\n    // we can't pass a object to setData, so we do it via service\n    // set data is still needed, to make the drag&drop work\n    $event.dataTransfer.setData('node', 'node');\n    this.dragged = true;\n  }\n\n  dragEnd($event) {\n    $event.stopPropagation();\n    this.dragged = false;\n    $event.dataTransfer.clearData();\n  }\n\n  get canDrop() {\n    return this.droppable;\n  }\n\n  get canNavigate() {\n    return typeof this.path !== 'undefined';\n  }\n\n  dragEnter($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this.draggedHover = true;\n    if (!this.open) {\n      this.expandDragTimeout = setTimeout(() => this.expand(), 1000);\n    }\n  }\n\n  dragLeave($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this.draggedHover = false;\n    clearTimeout(this.expandDragTimeout);\n  }\n\n  expand() {\n    if (!this.open) {\n      this.open = true;\n      this.click({open: true, expander: true});\n    }\n  }\n\n  traverse(callback) {\n    if (this.children) {\n      this.children.forEach((child) => {\n        callback(child);\n        child.traverse(callback);\n      });\n    }\n  }\n\n  destroy() {\n    // nothing todo here\n  }\n\n  protected updateChildren() {\n    this.sort();\n    this.updateHidden();\n  }\n\n  protected sort() {\n    this.children.sort((a, b) => {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else if ((a.label || '').toLowerCase() < (b.label || '').toLowerCase()) {\n        return -1;\n      } else if ((a.label || '').toLowerCase() > (b.label || '').toLowerCase()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  protected updateHidden() {\n    if (typeof this.path === 'undefined') {\n      this.hidden = !this.children.some(({ hidden }) => !hidden);\n    }\n  }\n}\n","import { NavigatorNode } from './navigator-node';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { assign } from 'lodash-es';\n\nexport class NavigatorNodeRoot extends NavigatorNode {\n  addRoot(nodeData: Partial<NavigatorNodeData>) {\n    const { parent } = nodeData;\n    const node = this.createNode(nodeData);\n    let localParent;\n\n    if (parent) {\n      if (typeof parent === 'object') {\n        localParent = this.find(parent.label);\n        if (localParent) {\n          localParent.update(parent);\n        }\n      } else if (typeof parent === 'string' || typeof parent === 'function') {\n        localParent = this.find(parent);\n      }\n\n      if (!localParent) {\n        localParent = this.createNode(parent);\n        if (!this.find((n) => localParent === n)) {\n          this.add(localParent);\n        }\n      }\n    }\n\n    (localParent || this).add(node);\n    return node;\n  }\n\n  createNode(nodeData) {\n    if (nodeData instanceof NavigatorNode) {\n      return nodeData;\n    }\n    if (typeof nodeData === 'string') {\n      return new NavigatorNode({ label: nodeData });\n    }\n    if (typeof nodeData === 'object') {\n      return new NavigatorNode({ ...nodeData, parent: undefined });\n    }\n    throw new Error('Wrong type of node data');\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, sortByPriority, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { NavigatorNode } from './navigator-node';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { NavigatorNodeRoot } from './navigator-node-root';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_NAVIGATOR_NODES = new InjectionToken('NavigatorNodesFactory');\n\n/**\n * A service which defines the navigator.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigatorService extends StateService implements ExtensionPoint<NavigatorNode> {\n  items$: Observable<NavigatorNode[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<NavigatorNode>>(new Set<NavigatorNode>());\n  firstUrl = true;\n\n  constructor(\n    private injector: Injector,\n    private router: Router\n  ) {\n    super();\n    const rootNode = new NavigatorNodeRoot();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_NAVIGATOR_NODES, []),\n      stateToFactory(this.state$),\n    ]).pipe(\n      map((nodes: Partial<NavigatorNodeData[]>) => {\n        const noParent = nodes.filter(node => !node.parent);\n        const withParent = nodes.filter(node => node.parent);\n\n        // Based on the sortedNodes array, the nodes are sequentially created.\n        // Nodes sorting is done in two steps to have the top-level nodes first.\n        // This way, by the time we are adding a child node, the parent node is already present.\n        const sortedNodes = sortByPriority(noParent).concat(sortByPriority(withParent));\n        rootNode.empty();\n        sortedNodes.forEach((node) => rootNode.addRoot(node));\n        return rootNode.children;\n      }),\n      shareReplay(1)\n    );\n  }\n\n  openOnFirstUrl(node: NavigatorNode) {\n    if (this.firstUrl && !!node.path) {\n      return this.router.isActive(node.path, node.routerLinkExact) || node.openOnStart(this.router.url);\n    }\n    return false;\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<NavigatorNode> {\n    return this.state$.value;\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Adds a new node to the navigator.\n   * @param nav The node to add.\n   */\n  add(item: NavigatorNode) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes a node from the navigator.\n   * @param nav The node ro remove.\n   */\n  remove(item: NavigatorNode) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, combineLatest, debounceTime } from 'rxjs/operators';\nimport { OptionsService } from '../common/options.service';\nimport { StateService } from '../common/state-service.abstract';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { Header } from './header.model';\n\n/**\n * A service which defines header functions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService extends StateService {\n  header$: Observable<Header>;\n  navigatorOpen$: Observable<boolean>;\n\n  hasItemsInNavigator$ = this.navigatorService.items$.pipe(\n    map(({ length }) => !!length),\n    distinctUntilChanged()\n  );\n\n  state$: BehaviorSubject<Header> = new BehaviorSubject<Header>({\n    title: undefined,\n    nav: {\n      open: false\n    }\n  });\n\n  title = undefined;\n\n  constructor(private navigatorService: NavigatorService, private options: OptionsService) {\n    super();\n    this.header$ = this.map((header: Header) => header);\n    this.navigatorOpen$ = this.map(({ nav }) => nav.open).pipe(\n      combineLatest(this.hasItemsInNavigator$),\n      map(([open, hasItems]) => open && hasItems)\n    );\n    const titleReference = document.querySelector('title');\n    this.title = {\n      elementRef: titleReference,\n      originalValue: titleReference && titleReference.innerText\n    };\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  get navigatorHiddenOnStartup() {\n    return this.options.hideNavigator;\n  }\n\n  get largeWidth() {\n    return document.documentElement.clientWidth > 1200;\n  }\n\n  get shouldToggle() {\n    return this.largeWidth && !this.navigatorHiddenOnStartup && !this.state.nav.open;\n  }\n\n  /**\n   * Toggles the navigator open status.\n   */\n  toggleNavigator() {\n    this.state.nav.open = !this.state.nav.open;\n    this.emitNewState();\n  }\n\n  /**\n   * Force to close the navigator.\n   */\n  closeNavigator() {\n    this.state.nav.open = false;\n    this.emitNewState();\n  }\n\n  /**\n   * Configures navigation options.\n   * @param config Object with the properties:\n   * - open: Boolean\n   */\n  configNavigator(config: any = {}) {\n    this.state.nav = Object.assign(this.state.nav, config);\n    this.emitNewState();\n  }\n\n  /**\n   * Change the application title.\n   * @param newTitle The new title of the application.\n   */\n  changeTitle(newTitle?: any) {\n    this.state.title = newTitle;\n    this.emitNewState();\n  }\n\n  /**\n   * Change the page title.\n   * @param newTitle The new title of the page.\n   */\n  changePageTitle(newTitle?: string) {\n    this.title.elementRef.innerText = newTitle\n      ? `${newTitle} / ${this.title.originalValue}`\n      : `${this.title.originalValue}`;\n  }\n\n  /**\n   * This methods checks if the navigator toggles on startup\n   * or if an item is added to the navigator node.\n   * Delay of 300ms is intended for animation purpose.\n   */\n  verifyIfNavOpen() {\n    this.hasItemsInNavigator$\n      .pipe(debounceTime(300))\n      .subscribe(hasItems => hasItems && this.shouldToggle && this.toggleNavigator());\n  }\n\n  shouldShowBreadcrumbs() {\n    return this.options.breadcrumbs;\n  }\n}\n","import { Injectable, InjectionToken, Injector, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, first, map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Tab } from './tab.model';\nimport { OptionsService } from '../common/options.service';\n\nexport const HOOK_TABS = new InjectionToken('TabsFactory');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsService extends StateService implements ExtensionPoint<Tab> {\n  items$: Observable<Tab[]>;\n  orientation$: Observable<string>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Tab>>(new Set<Tab>());\n\n  constructor(\n    private injector: Injector,\n    router: Router,\n    private translateService: TranslateService,\n    private options: OptionsService\n  ) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_TABS, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map(tabs => this.prepareTabs(tabs)),\n      shareReplay(1),\n      distinctUntilChanged()\n    );\n\n    this.orientation$ = this.items$.pipe(\n      map((tabs: Tab[]) => {\n        const firstTabWithDefinedOrientation = tabs.find(tab => tab.orientation);\n        if (firstTabWithDefinedOrientation) {\n          return firstTabWithDefinedOrientation.orientation;\n        }\n        return this.options.tabsHorizontal ? 'horizontal' : 'vertical';\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  prepareTabs(tabs) {\n    return this.sortTabs(\n      tabs\n        .map(tab => ({\n          ...tab,\n          template: tab.template instanceof ViewContainerRef ? tab.template : undefined\n        }))\n        .filter((tab, index, self) => index === self.findIndex(t => t.path === tab.path))\n    );\n  }\n\n  sortTabs(tabs) {\n    return tabs.sort((a, b) => {\n      const priorityOrder = (b.priority || 0) - (a.priority || 0);\n\n      const aTranslatedLabel = this.translateService.instant(a.label);\n      const bTranslatedLabel = this.translateService.instant(b.label);\n      const translatedLabelOrder = aTranslatedLabel.localeCompare(bTranslatedLabel);\n\n      return priorityOrder || translatedLabelOrder;\n    });\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<Tab> {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to tabs and emits state change\n   * @param item The item to add.\n   */\n  add(item: Tab) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes a tab and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: Tab) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n\n  get firstTab$() {\n    return this.items$.pipe(\n      map(tabs => tabs[0]),\n      filter(Boolean),\n      first()\n    );\n  }\n}\n","import { combineLatest, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { ActionBarService } from '../action-bar/action-bar.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { Component } from '@angular/core';\nimport { HeaderService } from '../header/header.service';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { Observable } from 'rxjs';\nimport { OptionsService } from '../common/options.service';\nimport { TabsService } from '../tabs/tabs.service';\n\n@Component({\n  selector: 'c8y-bootstrap',\n  templateUrl: './bootstrap.template.html'\n})\nexport class BootstrapComponent {\n  navigatorOpen$: Observable<boolean>;\n  noAppsMargin$: Observable<boolean>;\n  localeUpdating: boolean;\n  tabsOrientation: string;\n\n  get showPoweredBy() {\n    return !this.options.get('hidePowered');\n  }\n\n  constructor(\n    public tabs: TabsService,\n    public ui: AppStateService,\n    public navigator: NavigatorService,\n    public actionBar: ActionBarService,\n    private options: OptionsService,\n    public headerService: HeaderService\n  ) {\n      this.noAppsMargin$ = this.headerService.map(({ nav }) => !nav.open && nav.hiddenOnStartup);\n      this.tabsOrientation = this.options.tabsHorizontal ? 'horizontal' : 'vertical';\n      this.ui.map(({ lang }) => lang).pipe(\n        distinctUntilChanged(),\n      ).subscribe(() => {\n        this.actionBar.refresh();\n        this.localeUpdating = true;\n        setTimeout(() => {\n          this.localeUpdating = false;\n        }, 10);\n      });\n    }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { fromTrigger, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Breadcrumb, BreadcrumbItem } from './breadcrumb.model';\n\nexport const HOOK_BREADCRUMB = new InjectionToken('BreadcrumbFactory');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService extends StateService {\n  items$: Observable<Breadcrumb[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Breadcrumb>>(new Set<Breadcrumb>());\n  private preferredPath: string;\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_BREADCRUMB, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map(breadcrumbs => this.sortByPreferredPath(breadcrumbs)),\n      shareReplay(1)\n    );\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the action bar in the header.\n   * @param item The item to add.\n   */\n  add(item: Breadcrumb) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action bar item from the header.\n   * @param item The item to remove.\n   */\n  remove(item: Breadcrumb) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Sets the crumb that contains that path to the top.\n   * @param path The path to prefer.\n   */\n  selectPreferredByPath(path: string) {\n    this.preferredPath = path;\n    this.refresh();\n  }\n\n  sortByPreferredPath(breadcrumbs) {\n    if (this.preferredPath) {\n      return breadcrumbs.sort(bc =>\n        bc.items.find((item: BreadcrumbItem) => !!item.path.match(this.preferredPath)) ? -1 : 1\n      );\n    }\n    return breadcrumbs;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { upperFirst } from 'lodash-es';\n\n/*\n * Humanize any string\n * Usage:\n *   'something' | humanize\n*/\n@Pipe({ name: 'humanize' })\nexport class HumanizePipe implements PipeTransform {\n  static humanize(str: string = ''): string {\n    str = str\n      .replace(/\\./g, ' ')\n      .replace(/c8y[\\s,_]*/gi, '')\n      .replace(/_/g, ' ')\n      .replace(/([A-Z][a-z])/g, ' $1')\n      .replace(/^\\$\\.?/, '')\n      .replace(/^\\s*/, '')\n      .replace(/\\s*$/, '')\n      .replace(/\\s+/g, ' ');\n\n    return upperFirst(str);\n  }\n\n  transform(str: string): string {\n    return HumanizePipe.humanize(str);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { gettext } from '../i18n/gettext';\nimport { get, find, negate, isUndefined } from 'lodash';\nimport { HumanizePipe } from './humanize.pipe';\n\n/*\n * Humanize an application name and translates it.\n * Usage:\n *   appNameOrApp | humanizeAppName | async\n*/\n@Pipe({ name: 'humanizeAppName' })\nexport class HumanizeAppNamePipe implements PipeTransform {\n\n  private internalApps = {\n    administration: 'Administration',\n    cockpit: 'Cockpit',\n    devicemanagement: 'Device management'\n  };\n\n  constructor(private translateService: TranslateService) {}\n\n  transform(appNameOrApp: any = 'Cumulocity'): Observable<string> {\n    const appName = this.getAppName(appNameOrApp);\n\n    let text;\n    if (this.isPublicApp(appNameOrApp)) {\n      text = gettext('{{ appName | translate }} (public)');\n    } else {\n      text = appName;\n    }\n    return this.translateService.get(text, { appName });\n  }\n\n  private getAppName(appNameOrApp) {\n    const appName = this.getFirstDefined([\n      get(appNameOrApp, 'name'),\n      get(appNameOrApp, 'contextPath'),\n      appNameOrApp\n    ]) || '';\n    return this.internalApps[appName] || appName;\n  }\n\n  private getFirstDefined(values) {\n    return find(values, negate(isUndefined));\n  }\n\n  private isPublicApp(appNameOrApp) {\n    return Boolean(get(appNameOrApp, 'public'));\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const LANGUAGES = new InjectionToken('Languages');\n","import { InjectionToken } from '@angular/core';\n\nexport const LOCALE_PATH = new InjectionToken('Locale path');\n","import { InjectionToken } from '@angular/core';\n\nexport const HOOK_PATTERN_MESSAGES = new InjectionToken('Pattern Messages');\n","import { Injectable, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { mapValues, each } from 'lodash-es';\nimport { HOOK_PATTERN_MESSAGES } from './patterns-message.hook';\nimport { formatDate } from '@angular/common';\n\n/**\n * A service to translate messages by using regexp patterns.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatternMessagesService {\n  translateService: TranslateService;\n  patterns: any = {};\n  pipes = {\n    absoluteDate: (date: string|number|Date) =>\n      formatDate(date, 'medium', this.translateService.currentLang),\n    translate: (key) =>\n      this.translateService.instant(key)\n  };\n\n  constructor(\n    @Inject(HOOK_PATTERN_MESSAGES) patterns\n  ) {\n    each(patterns, (pattern) => {\n      Object.assign(this.patterns, pattern);\n    });\n  }\n\n  translate(message: string) {\n    const translation = this.translateWithPatterns(message);\n    return (translation !== message) ? translation : '';\n  }\n\n  private translateWithPatterns(message, patterns = this.patterns) {\n    let translatedMessage = message;\n\n    each(patterns, (patternCfg, pattern) => {\n      const globalRegExp = new RegExp(pattern, 'g');\n      let globalMatch;\n\n      if (!globalRegExp.test(translatedMessage)) {\n        return;\n      }\n      globalRegExp.test(''); // reset the regexp\n      globalMatch = globalRegExp.exec(translatedMessage);\n      while (globalMatch !== null) {\n        const [ localMatch ] = globalMatch;\n\n        const placeholderValues = mapValues(patternCfg.placeholders, (placeholder) => {\n          const expr = placeholder.capture || placeholder;\n          let replacement = localMatch.replace(new RegExp(pattern, 'g'), expr);\n\n          if (placeholder.translate) {\n            replacement = this.translateWithPatterns(replacement, placeholder.translate);\n          }\n\n          return replacement;\n        });\n        translatedMessage = translatedMessage.replace(\n          localMatch,\n          this.translateWithParams(patternCfg, placeholderValues)\n        );\n\n        globalMatch = globalRegExp.exec(translatedMessage);\n      }\n    });\n    return translatedMessage;\n  }\n\n  private translateWithParams(patternCfg: any, params: any = {}) {\n    const { defaultLang, currentLang, compiler } = this.translateService;\n    const translations = this.translateService.store.translations[currentLang];\n    const defaultTranslations = this.translateService.store.translations[defaultLang];\n    const originalKey = patternCfg.gettext;\n\n    let originalValue = originalKey;\n    if (translations) {\n      if (translations[originalKey]) {\n        originalValue = translations[originalKey];\n      } else if (defaultTranslations) {\n        if (defaultTranslations[originalKey]) {\n          originalValue = defaultTranslations[originalKey];\n        }\n      }\n    }\n\n    let key = originalKey;\n    let value = originalValue;\n    const interpolateParams = {\n      ...params,\n      noPatternMessages: true\n    };\n\n    let match;\n    const pipeRegex = RegExp('{{\\\\s*([^\\\\s]+)\\\\s*\\\\|\\\\s*([^\\\\s]+)\\\\s*}}', 'g');\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((match = pipeRegex.exec(originalKey)) !== null) {\n      const [placeholder, paramName, pipeName] = match;\n      if (this.pipes[pipeName]) {\n        key = key.replace(placeholder, `{{${paramName}}}`);\n        value = value.replace(placeholder, `{{${paramName}}}`);\n        interpolateParams[paramName] = this.pipes[pipeName](params[paramName]);\n      }\n    }\n\n    if (translations) {\n      translations[key] = compiler.compile(value, currentLang);\n    }\n    return this.translateService.instant(key, interpolateParams);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PatternMessagesService } from './pattern-messages.service';\nimport {\n  MissingTranslationHandler,\n  MissingTranslationHandlerParams,\n  TranslateParser,\n  TranslateService\n} from '@ngx-translate/core';\n\n@Injectable()\nexport class MissingTranslationCustomHandler implements MissingTranslationHandler {\n  translateService: TranslateService;\n  cache: any = {};\n\n  constructor(\n    private parser: TranslateParser,\n    private patternMessagesService: PatternMessagesService\n  ) {}\n\n  handle(params: MissingTranslationHandlerParams) {\n    const { key: messageKey, interpolateParams, translateService } = params;\n    this.translateService = translateService;\n\n    let translation = this.getFromCache(messageKey, interpolateParams);\n\n    if (!translation) {\n      const patternMessageTranslation = this.getPatternMessageTranslation(messageKey, interpolateParams);\n      if (patternMessageTranslation) {\n        translation = patternMessageTranslation;\n      } else {\n        translation = this.parser.interpolate(messageKey, interpolateParams);\n      }\n\n      this.addToCache(messageKey, interpolateParams, translation);\n    }\n\n    return translation;\n  }\n\n  private getFromCache(messageKey: string, interpolateParams: object): string {\n    const { currentLang } = this.translateService;\n    const currentCache = this.cache[currentLang] || {};\n    const cacheKey = this.getCacheKey(messageKey, interpolateParams);\n    return currentCache[cacheKey];\n  }\n\n  private addToCache(messageKey: string, interpolateParams: object, translation: string) {\n    const { currentLang } = this.translateService;\n    const currentCache = this.cache[currentLang] = this.cache[currentLang] || {};\n    const cacheKey = this.getCacheKey(messageKey, interpolateParams);\n    currentCache[cacheKey] = translation;\n  }\n\n  private getCacheKey(messageKey: string, interpolateParams: object): string {\n    return interpolateParams ? `${messageKey} ${JSON.stringify(interpolateParams)}` : messageKey;\n  }\n\n  private getPatternMessageTranslation(messageKey: string, interpolateParams: object): string {\n    const shouldTryPatternMessages = !interpolateParams || !((interpolateParams as any).noPatternMessages);\n\n    if (shouldTryPatternMessages) {\n      if (!this.patternMessagesService.translateService) {\n        this.patternMessagesService.translateService = this.translateService;\n      }\n      return this.patternMessagesService.translate(messageKey);\n    }\n\n    return undefined;\n  }\n}\n","/* tslint:disable:max-line-length */\nimport { gettext } from './gettext';\n\nexport const MESSAGES = {\n  '^Access is denied$': {\n    gettext: gettext('Access denied.')\n  },\n  '^Alarm created$': {\n    gettext: gettext('Alarm created')\n  },\n  '^Alarm updated$': {\n    gettext: gettext('Alarm updated')\n  },\n  '^API is not available with the new domain$': {\n    gettext: gettext('Could not activate custom domain. DNS setup is incorrect.')\n  },\n  '^Application with given name already exist$': {\n    gettext: gettext('Application with given name already exists.')\n  },\n  '^Application with id (.+?) is already assigned to the tenant (.+?)$': {\n    gettext: gettext('This application is already assigned to tenant \"{{tenant}}\".'),\n    placeholders: {\n      tenant: '$2'\n    }\n  },\n  '^(.+)pplication for tenant (.+) with properties \\\\( (.+?) \\\\) already exists$': {\n    gettext: gettext('Application for tenant \"{{tenant}}\" with the following values ({{valuesList}}) already exists.'),\n    placeholders: {\n      tenant: '$2',\n      valuesList: '$3'\n    }\n  },\n  '^Authentication failed! : User account is locked$': {\n    gettext: gettext('Authentication failed due to: user account is locked.')\n  },\n  '^Availability monitoring record$': {\n    gettext: gettext('Availability monitoring record')\n  },\n  '^Can not activate a certificate which is either expired or not yet valid$': {\n    gettext: gettext('Cannot activate a certificate which is either expired or not yet valid.')\n  },\n  '^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.': {\n    gettext: gettext('Could not add certificate. Certificate with {{fingerprint}} fingerprint already exists.'),\n    placeholders: {\n      fingerprint: '$1'\n    }\n  },\n  '^Cannot change password. : Provided token does not exist.$': {\n    gettext: gettext('Cannot change password: provided token is invalid.')\n  },\n  '^Cannot deploy module (.*)$': {\n    gettext: gettext('Cannot deploy module due to error: \"{{ errorMessage | translate }}\".'),\n    placeholders: {\n      errorMessage: '$1'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Compilation failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Incorrect syntax near \\'(.+?)\\' at line (\\\\d+) column (\\\\d+) \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}}.'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Compilation failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Incorrect syntax near \\'(.+?)\\' at line (\\\\d+) column (\\\\d+) near reserved keyword \\'(.+?)\\' \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}} near reserved keyword \"{{keyword}}\".'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6',\n      keyword: '$7'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Compilation failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Incorrect syntax near \\'(.+?)\\' at line (\\\\d+) column (\\\\d+), please check the where clause \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}}, check \"where\" clause.'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Deployment failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Exception compiling script \\'(.+?)\\' of dialect \\'(.+?)\\': missing (.+?) before statement \\\\((.+?)\\\\) \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": exception compiling script \"{{scriptName}}\" of dialect \"{{scriptDialect}}\": missing \"{{missingSyntax}}\" before statement \"{{affectedStatement}}\".'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      scriptName: '$4',\n      scriptDialect: '$5',\n      missingSyntax: '$6',\n      affectedStatement: '$7'\n    }\n  },\n  '^Cannot execute bulk operation on empty group. Group with id=\\'(\\\\d+?)\\' doesn\\'t have child assets.$': {\n    gettext: gettext('Could not execute bulk operation on an empty group. Group with ID \"{{groupId}}\" has no child assets.'),\n    placeholders: {\n      groupId: '$1'\n    }\n  },\n  '^Cannot execute bulk operation on empty group. DynamicGroup with id=\\'(\\\\d+?)\\' doesn\\'t have child assets$': {\n    gettext: gettext('Could not execute bulk operation on an empty group. Smart group with ID \"{{groupId}}\" has no child assets.'),\n    placeholders: {\n      groupId: '$1'\n    }\n  },\n  '^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$': {\n    gettext: gettext('Could not parse X.509 certificate: {{ failureReason | translate }}.'),\n    placeholders: {\n      failureReason: '$1'\n    }\n  },\n  '^Cannot reschedule bulk operation. All its operations are successful$': {\n    gettext: gettext('Cannot reschedule bulk operation. All its operations are already successful.')\n  },\n  '^Cannot reset user password : Cannot find user with such email.$': {\n    gettext: gettext('Cannot reset password for user with such email: email not found.')\n  },\n  '^Cannot update/delete application binary via this endpoint$': {\n    gettext: gettext('Cannot update/delete application binary via this endpoint')\n  },\n  '^Can\\'t delete user because it is used by another managed object$': {\n    gettext: gettext('Cannot delete device with associated device owner because this owner is still assigned to other device(s). Try to remove only the device.')\n  },\n  '^Cep module created$': {\n    gettext: gettext('CEP module created')\n  },\n  '^Cep module updated$': {\n    gettext: gettext('CEP module updated')\n  },\n  '^Cep module deleted$': {\n    gettext: gettext('CEP module deleted')\n  },\n  '^Cep module \"(.+?)\" created$': {\n    gettext: gettext('CEP module \"{{name}}\" created'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Cep module \"(.+?)\" updated$': {\n    gettext: gettext('CEP module \"{{name}}\" updated'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Cep module \"(.+?)\" deleted$': {\n    gettext: gettext('CEP module \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Command state is invalid: (.+)$': {\n    gettext: gettext('Command state is invalid: {{violations}}'),\n    placeholders: {\n      violations: {\n        capture: '$1',\n        translate: {\n          '(\\\\w+?) - may not be null': {\n            gettext: gettext('\"{{field}}\" must not be null'),\n            placeholders: {\n              field: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Could not connect to endpoint (.+)\\\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\\\. If you expected that key, please remove the previous one from configuration to allow for connection\\\\.$': {\n    gettext: gettext('Could not connect to endpoint \"{{endpointName}}\". Could not verify {{keyType}} host key with fingerprint {{fingerprint}} for host {{host}} on port {{port}}. If you expected this key, please remove the previous one from configuration to allow for connection.'),\n    placeholders: {\n      endpointName: '$1',\n      keyType: '$2',\n      fingerprint: '$3',\n      host: '$4',\n      port: '$5'\n    }\n  },\n  '^Could not login to ssh server on endpoint \"(.+)\"\\\\. Provided credential for user \"(.+)\" is incorrect\\\\.$': {\n    gettext: gettext('Could not access SSH server on endpoint \"{{endpointName}}\". Provided credentials for user \"{{userName}}\" are incorrect.'),\n    placeholders: {\n      endpointName: '$1',\n      userName: '$2'\n    }\n  },\n  '^Could not save object remoteAccessUpdate: (.+)$': {\n    gettext: '{{errorMessages}}',\n    placeholders: {\n      errorMessages: {\n        capture: '$1',\n        translate: {\n          'Could not recognize host-key format': {\n            gettext: gettext('Could not recognize \"Host key\" format')\n          },\n          'Could not recognize key-pair format': {\n            gettext: gettext('Could not recognize the format of \"Public key\" or \"Private key\"')\n          }\n        }\n      }\n    }\n  },\n  '^Could not update user. : Error persisting user (.+?)!$': {\n    gettext: gettext('Could not update user \"{{username}}\".'),\n    placeholders: {\n      username: '$1'\n    }\n  },\n  '^Creation ramp must be greater than (\\\\d+?)$': {\n    gettext: gettext('Bulk operation delay must be greater than {{minSeconds}} seconds.'),\n    placeholders: {\n      minSeconds: '$1'\n    }\n  },\n  '^Created container$': {\n    gettext: gettext('Container created.')\n  },\n  '^Created pod: (.+)$': {\n    gettext: gettext('Pod \"{{imageName}}\" created.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^CSV file contained empty dataset$': {\n    gettext: gettext('No entries found in uploaded CSV file.')\n  },\n  '^Cycle detected for route (.+?)!$': {\n    gettext: gettext('Cycle detected for route {{route}}.'),\n    placeholders: {\n      route: '$1'\n    }\n  },\n  '^Data broker processing is currently overloaded and may stop forwarding your data\\\\. Please contact support\\\\.$': {\n    gettext: gettext('Data broker processing is currently overloaded and may stop forwarding your data. Please contact support.')\n  },\n  '^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\\\. Please contact support\\\\.$': {\n    gettext: gettext('Data broker processing is not able to connect to destination tenant, thus data forwarding is not working. Please contact support.')\n  },\n  '^Device id \\'(.+?)\\' contains \\'(.+?)\\' character which is not permitted.$': {\n    gettext: gettext('ID \"{{deviceId}}\" contains invalid character: \"{{invalidCharacter}}\".'),\n    placeholders: {\n      deviceId: '$1',\n      invalidCharacter: '$2'\n    }\n  },\n  '^Device name: \\'(.+?)\\', alarm text: \\'(.+?)\\'$': {\n    gettext: gettext('Device name: \"{{deviceName}}\", alarm text: \"{{alarmText | translate}}\"'),\n    placeholders: {\n      deviceName: '$1',\n      alarmText: '$2'\n    }\n  },\n  '^Display name$': {\n    gettext: gettext('Login alias')\n  },\n  '^Domain name in uploaded certificate differs from the one in use$': {\n    gettext: gettext('Domain name in uploaded certificate differs from the one in use. Please deactivate the custom domain before uploading new certificate.')\n  },\n  '^Domain name is already in use by another tenant!$': {\n    gettext: gettext('Domain name is already used by another tenant.')\n  },\n  '^Duplicated connector for instanceUrl (.+?)!$': {\n    gettext: gettext('Target URL {{targetUrl}} already used by another connector.'),\n    placeholders: {\n      targetUrl: '$1'\n    }\n  },\n  '^Duplicated connector for name (.+?)!$': {\n    gettext: gettext('Connector name \"{{name}}\" already used by another connector.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Entry is outside of the target dir: (.+)$': {\n    gettext: gettext('File entry outside of the target directory: \"{{path}}\".'),\n    placeholders: {\n      path: '$1'\n    }\n  },\n  '^Error during password validation. : Password must have at least (\\\\d+?) characters and no more than (\\\\d+?) and must contain only Latin1 characters.$': {\n    gettext: gettext('Password is invalid. It must have at least {{minCharactersCount}} and no more than {{maxCharactersCount}} characters.'),\n    placeholders: {\n      minCharactersCount: '$1',\n      maxCharactersCount: '$2'\n    }\n  },\n  '^Error during password validation. : Your password has been used already. Choose another.$': {\n    gettext: gettext('This password has already been used earlier. Use a different one.')\n  },\n  '^Error in statement (.+?):(.+?)! : Incorrect syntax near \\'(.+?)\\' near reserved keyword \\'(.+?)\\' \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Error in statement {{moduleName}}:{{statementNumber}}. Incorrect syntax near expression \"{{expression}}\" near reserved keyword \"{{keyword}}\".'),\n    placeholders: {\n      moduleName: '$1',\n      statementNumber: '$2',\n      expression: '$3',\n      keyword: '$4'\n    }\n  },\n  '^External id not found; external id = ID \\\\[type=(.+?), value=(.+?)\\\\]$': {\n    gettext: gettext('External ID not found for type \"{{type}}\" and value \"{{value}}\".'),\n    placeholders: {\n      type: '$1',\n      value: '$2'\n    }\n  },\n  '^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\\\d+)$': {\n    gettext: gettext('Could not find application by ID {{applicationId}}.'),\n    placeholders: {\n      applicationId: '$2'\n    }\n  },\n  '^Http status code: 404\\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}': {\n    gettext: gettext('Unable to find option by given key: sigfox-agent/provider.token')\n  },\n  '^Failed to delete application.  : Cannot remove application assigned to other tenants.$': {\n    gettext: gettext('Could not delete application assigned to other tenants.')\n  },\n  '^Failed to extract certificate from PKCS12$': {\n    gettext: gettext('Failed to extract certificate from PKCS12.')\n  },\n  '^Failed to update domain at the platform$': {\n    gettext: gettext('Failed to update domain at the platform.')\n  },\n  '^Finding device data from database failed : No managedObject for id \\'(.+?)\\'!$': {\n    gettext: gettext('Could not find managed object with ID \"{{deviceId}}\".'),\n    placeholders: {\n      deviceId: '$1'\n    }\n  },\n  '^Following mandatory fields should be included: (.+?)$': {\n    gettext: gettext('Following mandatory fields should be included: {{fields}}'),\n    placeholders: {\n      fields: '$1'\n    }\n  },\n  '^Global Role updated$': {\n    gettext: gettext('Global role updated')\n  },\n  '^Global Role (.+?) updated$': {\n    gettext: gettext('Global role \"{{name}}\" updated'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Global Role (.+?) updated: (.+)$': {\n    gettext: gettext('Global role \"{{name}}\" updated: {{updatesList}}'),\n    placeholders: {\n      name: '$1',\n      updatesList: {\n        capture: '$2',\n        translate: {\n          'applications \\\\[([^\\\\]]+?)\\\\] added': {\n            gettext: gettext('applications {{list}} added'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'applications \\\\[([^\\\\]]+?)\\\\] removed': {\n            gettext: gettext('applications {{list}} removed'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'roles \\\\[([^\\\\]]+?)\\\\] added': {\n            gettext: gettext('roles {{list}} added'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'roles \\\\[([^\\\\]]+?)\\\\] removed': {\n            gettext: gettext('roles {{list}} removed'),\n            placeholders: {\n              list: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Global Roles$': {\n    gettext: gettext('Global roles')\n  },\n  '^Operation updated: (.+)$': {\n    gettext: gettext('Operation updated: {{updatesList}}'),\n    placeholders: {\n      updatesList: {\n        capture: '$1',\n        translate: {\n          'status=\\'(.+?)\\'': {\n            gettext: gettext('status=\"{{status | translate}}\"'),\n            placeholders: {\n              status: '$1'\n            }\n          },\n          'description=\\'(.+?)\\'': {\n            gettext: gettext('description=\"{{description | translate}}\"'),\n            placeholders: {\n              description: '$1'\n            }\n          },\n          'device name=\\'(.+?)\\'': {\n            gettext: gettext('device name=\"{{deviceName}}\"'),\n            placeholders: {\n              deviceName: '$1'\n            }\n          },\n          'failure reason=\\'(.+?)\\'': {\n            gettext: gettext('failure reason=\"{{failureReason | translate}}\"'),\n            placeholders: {\n              failureReason: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^ID \\\\[type=(.+?), value=(.+?)\\\\] was already bound to different Global ID.$': {\n    gettext: gettext('External ID \"{{value}}\" of the type \"{{type}}\" already exists.'),\n    placeholders: {\n      type: '$1',\n      value: '$2'\n    }\n  },\n  '^Invalid credentials! : Bad credentials$': {\n    gettext: gettext('Invalid credentials.')\n  },\n  '^Invalid credentials! : No phone number provided$': {\n    gettext: gettext('Log into the management tenant first and enter your phone number.')\n  },\n  '^Inventory Role removed$': {\n    gettext: gettext('Inventory role removed')\n  },\n  '^Inventory Role (.+?) removed': {\n    gettext: gettext('Inventory role \"{{name}}\" deleted.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Inventory Role updated$': {\n    gettext: gettext('Inventory role updated')\n  },\n  '^Inventory Role (.+?) updated': {\n    gettext: gettext('Inventory role \"{{name}}\" updated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^I/O error: Connection refused; nested exception is Connection refused : Connection refused': {\n    gettext: gettext('Connection refused')\n  },\n  '^I/O error: Read timed out; nested exception is Read timed out : Read timed out': {\n    gettext: gettext('Read timed out')\n  },\n  '^Log file requested$': {\n    gettext: gettext('Log file requested.')\n  },\n  '^Managed object deleted$': {\n    gettext: gettext('Managed object deleted')\n  },\n  '^Managed object \"(.+?)\" deleted$': {\n    gettext: gettext('Managed object \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Maximum file size exceeded$': {\n    gettext: gettext('Maximum file size exceeded.')\n  },\n  '^Message with ID (.+?) doesn\\'t exist in smart rest template (.+?)$': {\n    gettext: gettext('Message with ID \"{{messageId}}\" doesn\\'t exist in SmartREST template with ID \"{{templateId}}\"'),\n    placeholders: {\n      messageId: '$1',\n      templateId: '$2'\n    }\n  },\n  '^NewDeviceRequest for id = (.+?) already exists.$': {\n    gettext: gettext('Device registration request with ID {{id}} already exists.'),\n    placeholders: {\n      id: '$1'\n    }\n  },\n  '^No communication with device since (.+?)$': {\n    gettext: gettext('No communication with device since {{timestamp | absoluteDate}}.'),\n    placeholders: {\n      timestamp: '$1'\n    }\n  },\n  '^No data received from device within required interval.$': {\n    gettext: gettext('No data received from device within required interval.')\n  },\n  '^No LoRa provider settings are found. Please configure the connectivity settings.$': {\n    gettext: gettext('No LoRa provider settings are found. Please configure the connectivity settings.')\n  },\n  '^Not within any context!$': {\n    gettext: gettext('A problem occurred with microservice subscription.')\n  },\n  '^Maximum age cannot be bigger than 10 years.$': {\n    gettext: gettext('Maximum age cannot be bigger than 10 years.')\n  },\n  '^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\\\d+) characters.$': {\n    gettext: gettext('Microservice application name is incorrect: only lower case letters, digits and dashes allowed. Maximum length: {{maxLength}}.'),\n    placeholders: {\n      maxLength: '$1'\n    }\n  },\n  '^Microservice not available.*$': {\n    gettext: gettext('Microservice is not available.')\n  },\n  '^Operation created$': {\n    gettext: gettext('Operation created.')\n  },\n  '^Operation updated$': {\n    gettext: gettext('Operation updated.')\n  },\n  '^Operation created: status=\\'(.+?)\\'.': {\n    gettext: gettext('Operation created: status=\"{{status | translate}}\".'),\n    placeholders: {\n      status: '$1'\n    }\n  },\n  '^Option created$': {\n    gettext: gettext('Option created.')\n  },\n  '^Option \"(.+?)\" created$': {\n    gettext: gettext('Option \"{{option}}\" created.'),\n    placeholders: {\n      option: '$1'\n    }\n  },\n  '^Option deleted$': {\n    gettext: gettext('Option deleted.')\n  },\n  '^Option \"(.+?)\" deleted$': {\n    gettext: gettext('Option \"{{option}}\" deleted.'),\n    placeholders: {\n      option: '$1'\n    }\n  },\n  '^Owner field error. : Cannot introduce cyclic dependency.': {\n    gettext: gettext('Could not introduce cyclic ownership dependency.')\n  },\n  '^Password change is temporary blocked.$': {\n    gettext: gettext('Password change is temporarily blocked.')\n  },\n  '^Password cipher does not match': {\n    gettext: gettext('Password cipher does not match.')\n  },\n  '^Platform application cannot be added to, nor removed from any tenant.$': {\n    gettext: gettext('Platform application cannot be added to, nor removed from any tenant.')\n  },\n  '^Private key must be provided in KEY_PAIR credentials$': {\n    gettext: gettext('Private key must be provided when \"Public / private keys\" option is selected.')\n  },\n  '^Private key cipher does not match': {\n    gettext: gettext('Private key cipher does not match')\n  },\n  '^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$': {\n    gettext: gettext('Protocol \"{{protocol}}\" does not support \"{{credentialsType}}\" credentials type.'),\n    placeholders: {\n      protocol: '$1',\n      credentialsType: '$2'\n    }\n  },\n  '^pulling image \"(.+)\"$': {\n    gettext: gettext('Pulling image: \"{{imageName}}\".'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Real-time event processing is currently overloaded and may stop processing your events\\\\. Please contact support\\\\.$': {\n    gettext: gettext('Real-time event processing is currently overloaded and may stop processing your events. Please contact support.')\n  },\n  '^Resource ID \\\\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\\\] for this request not found.$': {\n    gettext: gettext('Could not find the resource with ID \"{{id}}\".'),\n    placeholders: {\n      id: '$1'\n    }\n  },\n  '^Scaled up replica set (.+) to (\\\\d+)$': {\n    gettext: gettext('Replica set \"{{replicaSetName}}\" scaled up to \"{{scaleNumber}}\".'),\n    placeholders: {\n      replicaSetName: '$1',\n      scaleNumber: '$2'\n    }\n  },\n  '^Simulator state is invalid: (.+)$': {\n    gettext: gettext('Simulator state is invalid: {{violations}}'),\n    placeholders: {\n      violations: {\n        capture: '$1',\n        translate: {\n          '(\\\\w+?) - may not be null': {\n            gettext: gettext('\"{{field}}\" should not be null'),\n            placeholders: {\n              field: '$1'\n            }\n          },\n          '(\\\\w+?) - must be less than or equal to (\\\\d+)': {\n            gettext: gettext('\"{{field}}\" must be less than or equal to {{maxValue}}'),\n            placeholders: {\n              field: '$1',\n              maxValue: '$2'\n            }\n          },\n          '(\\\\w+?) - should not contain null values': {\n            gettext: gettext('\"{{field}}\" should not contain null values'),\n            placeholders: {\n              field: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Smart rest template (.+?) doesn\\'t exist$': {\n    gettext: gettext('SmartREST template with id \"{{templateId}}\" doesn\\'t exist'),\n    placeholders: {\n      templateId: '$1'\n    }\n  },\n  '^Smart rule created$': {\n    gettext: gettext('Smart rule created.')\n  },\n  '^Smart rule updated$': {\n    gettext: gettext('Smart rule updated.')\n  },\n  '^Smart rule enabled$': {\n    gettext: gettext('Smart rule activated.')\n  },\n  '^Smart rule disabled$': {\n    gettext: gettext('Smart rule deactivated.')\n  },\n  '^Smart rule deleted$': {\n    gettext: gettext('Smart rule deleted.')\n  },\n  '^Smart rule \"(.+?)\" created$': {\n    gettext: gettext('Smart rule \"{{name}}\" created.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" updated$': {\n    gettext: gettext('Smart rule \"{{name}}\" updated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" enabled$': {\n    gettext: gettext('Smart rule \"{{name}}\" activated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" disabled$': {\n    gettext: gettext('Smart rule \"{{name}}\" deactivated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" deleted$': {\n    gettext: gettext('Smart rule \"{{name}}\" deleted.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Started container$': {\n    gettext: gettext('Container started.')\n  },\n  '^Successfully assigned (.+) to (.+)$': {\n    gettext: gettext('\"{{imageName}}\" assigned to \"{{address}}\".'),\n    placeholders: {\n      imageName: '$1',\n      address: '$2'\n    }\n  },\n  '^Successfully pulled image \"(.+)\"$': {\n    gettext: gettext('Image \"{{imageName}}\" pulled.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Tenant creation failed. : Tenant with given id already exists.$': {\n    gettext: gettext('Could not create a tenant. Tenant with given domain/URL already exists.')\n  },\n  '^Tenant id cannot be a reserved sql keyword \"(.+?)\".$': {\n    gettext: gettext('Could not use a reserved SQL keyword \"{{tenantId}}\" as a domain name.'),\n    placeholders: {\n      tenantId: '$1'\n    }\n  },\n  '^Tenant \"(.+?)\" activated$': {\n    gettext: gettext('Tenant \"{{tenant}}\" activated.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant (.+?) has sub-tenants, please remove them first!$': {\n    gettext: gettext('Could not remove tenant \"{{tenant}}\". Remove its subtenants first.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant activated$': {\n    gettext: gettext('Tenant activated')\n  },\n  '^Tenant \"(.+?)\" created$': {\n    gettext: gettext('Tenant \"{{tenant}}\" created.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant created$': {\n    gettext: gettext('Tenant created')\n  },\n  '^Tenant \"(.+?)\" deleted$': {\n    gettext: gettext('Tenant \"{{tenant}}\" deleted.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant deleted$': {\n    gettext: gettext('Tenant deleted')\n  },\n  '^Tenant \"(.+?)\" suspended$': {\n    gettext: gettext('Tenant \"{{tenant}}\" suspended.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant suspended$': {\n    gettext: gettext('Tenant suspended')\n  },\n  '^Tenant \"(.+?)\" updated: (.+?)$': {\n    gettext: gettext('Tenant \"{{tenant}}\" updated: {{properties}}.'),\n    placeholders: {\n      tenant: '$1',\n      properties: '$2'\n    }\n  },\n  '^Tenant updated$': {\n    gettext: gettext('Tenant updated')\n  },\n  '^Too Many Requests$': {\n    gettext: gettext('Too many requests. Try again later.')\n  },\n  '^User alias equals username \\'(.+)\\'$': {\n    gettext: gettext('Username and login alias must be different.')\n  },\n  '^User created$': {\n    gettext: gettext('User created')\n  },\n  '^User (.+?) created$': {\n    gettext: gettext('User \"{{name}}\" created'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^User deleted$': {\n    gettext: gettext('User deleted')\n  },\n  '^User (.+?) deleted$': {\n    gettext: gettext('User \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^User updated$': {\n    gettext: gettext('User updated')\n  },\n  '^User (.+?) updated: (.+)$': {\n    gettext: gettext('User \"{{name}}\" updated: {{updatesList}}'),\n    placeholders: {\n      name: '$1',\n      updatesList: {\n        capture: '$2',\n        translate: {\n          'delegatedBy=\\'(.+?)\\'': {\n            gettext: gettext('delegated by: \"{{delegate}}\"'),\n            placeholders: {\n              delegate: '$1'\n            }\n          },\n          'owner=\\'(.+?)\\'': {\n            gettext: gettext('owner: \"{{owner}}\"'),\n            placeholders: {\n              owner: '$1'\n            }\n          },\n          'inventory assignment \\\\[(.+?)\\\\] added': {\n            gettext: gettext('inventory assignment [{{inventoryAssignment}}] added'),\n            placeholders: {\n              inventoryAssignment: '$1'\n            }\n          },\n          'inventory assignment \\\\[(.+?)\\\\] removed': {\n            gettext: gettext('inventory assignment [{{inventoryAssignment}}] removed'),\n            placeholders: {\n              inventoryAssignment: '$1'\n            }\n          },\n          'applications \\\\[(.+?)\\\\] added$': {\n            gettext: gettext('applications [{{applicationsList}}] added'),\n            placeholders: {\n              applicationsList: '$1'\n            }\n          },\n          'applications \\\\[(.+?)\\\\] removed$': {\n            gettext: gettext('applications [{{applicationsList}}] removed'),\n            placeholders: {\n              applicationsList: '$1'\n            }\n          },\n          'global roles \\\\[(.+?)\\\\] added$': {\n            gettext: gettext('global roles [{{globalRolesList}}] added'),\n            placeholders: {\n              globalRolesList: '$1'\n            }\n          },\n          'global roles \\\\[(.+?)\\\\] removed$': {\n            gettext: gettext('global roles [{{globalRolesList}}] removed'),\n            placeholders: {\n              globalRolesList: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^User with username \\'(.+?)\\' already exists! : Duplicated: (.+?)$': {\n    gettext: gettext('User \"{{username}}\" already exists.'),\n    placeholders: {\n      username: '$1'\n    }\n  },\n  '^User with username or alias \\'(.+)\\' already exists! : Duplicated: (.+)$': {\n    gettext: gettext('User with username or login alias \"{{usernameOrAlias}}\" already exists.'),\n    placeholders: {\n      usernameOrAlias: '$1'\n    }\n  },\n  '^User with email \\'(.+?)\\' already exists! : Duplicated: (.+?)$': {\n    gettext: gettext('User with email \"{{email}}\" already exists.'),\n    placeholders: {\n      email: '$1'\n    }\n  },\n  '^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$': {\n    gettext: gettext('Unable to get tenant option: \"{{option}}\".'),\n    placeholders: {\n      option: '$2'\n    }\n  },\n  '^unable to find option with given key (.+?) : There is no system property for key (.+?)$': {\n    gettext: gettext('Unable to get system option: \"{{option}}\".'),\n    placeholders: {\n      option: '$2'\n    }\n  },\n  '^Write failed with error code 16733 and error message \\'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"\\'$': {\n    gettext: gettext('The uploaded image cannot be bigger than 4 MB. Please upload a smaller one.')\n  },\n  '^Write failed with error code 17280 and error message \\'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }\\'$': {\n    gettext: gettext('The chosen name is too long. Please try a shorter one.')\n  },\n  '^You have reached devices limit. No more devices can be registered.$': {\n    gettext: gettext('You reached devices limit. No more devices can be registered.')\n  },\n  '^(.+) succeeded for volume \"(.+)\"': {\n    gettext: gettext('Operation \"{{operation}}\" succeeded for volume \"{{volume}}\".'),\n    placeholders: {\n      operation: '$1',\n      volume: '$2'\n    }\n  },\n  '^Exception on tenant (.+) in statement \\'(.+)\\': Invocation exception when invoking method \\'(.+)\\' of class \\'(.+)\\' passing parameters \\\\[(.+)\\\\] for statement \\'(.+)\\': (.+) : (.+)$': {\n    gettext: gettext('Exception on tenant {{tenantId}} in statement \"{{moduleName}}\": Invocation exception when invoking method \"{{methodName}}\" of class \"{{classPath}}\" passing parameters [{{parameters}}] for statement \"{{statement}}\": {{exceptionType}} : {{exceptionMessage}}.'),\n    placeholders: {\n      tenantId: '$1',\n      moduleName: '$2',\n      methodName: '$3',\n      classPath: '$4',\n      parameters: '$5',\n      statement: '$6',\n      exceptionType: '$7',\n      exceptionMessage: '$8'\n    }\n  },\n  '^No nodes are available that match all of the predicates: (.+).$': {\n    gettext: gettext('No nodes are available that match all of the predicates: [{{predicates}}].'),\n    placeholders: {\n      predicates: '$1'\n    }\n  },\n  '^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n    gettext: gettext('Readiness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'),\n    placeholders: {\n      requestMethod: '$1',\n      uri: '$2',\n      protocol: '$3'\n    }\n  },\n  '^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n    gettext: gettext('Liveness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'),\n    placeholders: {\n      requestMethod: '$1',\n      uri: '$2',\n      protocol: '$3'\n    }\n  },\n  '^Error syncing pod$': {\n    gettext: gettext('Pod synchronization error.')\n  },\n  '^Failed create pod sandbox.$': {\n    gettext: gettext('Pod sandbox creation failed.')\n  },\n  '^Exception on tenant (.+) in statement \\'(.+)\\': Http status code: (\\\\d+) \\\\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\\\}$': {\n    gettext: gettext('Exception on tenant {{tenantId}} in statement \"{{statement}}\": HTTP status code: {{httpStatusCode}} : {{message | translate}}'),\n    placeholders: {\n      tenantId: '$1',\n      statement: '$2',\n      httpStatusCode: '$3',\n      message: '$4'\n    }\n  },\n  '^User \\'(.+)\\' is managed by a remote identity management service defined by an administrator, direct update is forbidden$': {\n    gettext: gettext('User \"{{userName}}\" is managed by a remote identity management service defined by an administrator, direct update is forbidden.'),\n    placeholders: {\n      userName: '$1'\n    }\n  },\n  '^Added new child device to \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Added new child device to \"{{parentDeviceName}}\" (ID: {{parentDeviceId}}).'),\n    placeholders: {\n      parentDeviceName: '$1',\n      parentDeviceId: '$2'\n    }\n  },\n  '^Updated child device of \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Updated child device of \"{{parentDeviceName}}\" (ID: {{parentDeviceId}}).'),\n    placeholders: {\n      parentDeviceName: '$1',\n      parentDeviceId: '$2'\n    }\n  },\n  '^Added child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Added child device \"{{name}}\" (ID: {{id}}).'),\n    placeholders: {\n      name: '$1',\n      id: '$2'\n    }\n  },\n  '^Removed child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Removed child device \"{{name}}\" (ID: {{id}}).'),\n    placeholders: {\n      name: '$1',\n      id: '$2'\n    }\n  },\n  '^Change value of \"(.+)\" to (.+) (.+).$': {\n    gettext: gettext('Change value of \"{{name}}\" to {{value}}{{unit}}.'),\n    placeholders: {\n      name: '$1',\n      value: '$2',\n      unit: '$3'\n    }\n  },\n  '^Change value of \"(.+)\" to (.+).$': {\n    gettext: gettext('Change value of \"{{name}}\" to {{value}}.'),\n    placeholders: {\n      name: '$1',\n      value: '$2'\n    }\n  },\n  '^Change status of \"(.+)\" to \"(.+)\".$': {\n    gettext: gettext('Change status of \"{{name}}\" to \"{{label}}\".'),\n    placeholders: {\n      name: '$1',\n      label: '$2'\n    }\n  },\n  '^Send message \"(.+)\".$': {\n    gettext: gettext('Send message \"{{str}}\".'),\n    placeholders: {\n      str: '$1'\n    }\n  },\n  '^Close relay (.+).$': {\n    gettext: gettext('Close relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Open relay (.+).$': {\n    gettext: gettext('Open relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Change trace status to (.+).$': {\n    gettext: gettext('Change trace status to {{state | translate}}.'),\n    placeholders: {\n      state: '$1'\n    }\n  },\n  '^Change relay status to (.+).$': {\n    gettext: gettext('Change relay status to {{status | translate}}.'),\n    placeholders: {\n      status: '$1'\n    }\n  },\n  '^Closing relay (.+).$': {\n    gettext: gettext('Closing relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Opening relay (.+).$': {\n    gettext: gettext('Opening relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Update firmware to: (.+) \\\\(version: (.+)\\\\).$': {\n    gettext: gettext('Update firmware to: {{name}} (version: {{version}}).'),\n    placeholders: {\n      name: '$1',\n      version: '$2'\n    }\n  },\n  '^Execute generic command: (.+).$': {\n    gettext: gettext('Execute generic command: {{command}}.'),\n    placeholders: {\n      command: '$1'\n    }\n  },\n  '^Failed to refresh application. : Cannot refresh non local-hosted application.$': {\n    gettext: gettext('Could not reactivate the application as it is not hosted locally.')\n  },\n  '^Failed to refresh application. : Cannot refresh application without active version id.$': {\n    gettext: gettext('Could not reactivate the application as it has no active version.')\n  },\n  // TODO: remove if we decide not to translate such messages:\n  // '^Killing container with id (.+):Need to kill Pod$': {\n  //   gettext: gettext('Killing container with ID \"{{containerId}}\". Need to kill Pod.'),\n  //   placeholders: {\n  //     containerId: '$1'\n  //   }\n  // },\n  '^Scaled down replica set (.+) to (\\\\d+)$': {\n    gettext: gettext('Replica set \"{{replicaSetName}}\" scaled down to \"{{scaleNumber}}\".'),\n    placeholders: {\n      replicaSetName: '$1',\n      scaleNumber: '$2'\n    }\n  },\n  '^Deleted pod: (.+)$': {\n    gettext: gettext('Pod \"{{imageName}}\" deleted.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Container image \"(.+)\" already present on machine$': {\n    gettext: gettext('Container image \"{{imageName}}\" already exists.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Error updating tenant! Cannot insert second configuration for Password code grant internal/Bad Request$': {\n    gettext: gettext('This login mode was already set by other admin, please refresh page to update data')\n  },\n};\n","import { HttpClient } from '@angular/common/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Optional, Inject, Injectable } from '@angular/core';\nimport { LOCALE_PATH } from './locale.path';\nimport { LANGUAGES } from './languages';\n\n@Injectable()\nexport class TranslateCustomLoader implements TranslateLoader {\n  constructor(\n    private http: HttpClient,\n    @Inject(LOCALE_PATH) private path: string = null,\n    @Inject(LANGUAGES) private languages: any = null\n  ) {}\n\n  getTranslation(lang: string): Observable<any> {\n    const path = this.path || '';\n    let url = `${path}${lang}.json`;\n    if (this.languages && this.languages[lang] && this.languages[lang].url) {\n      url = this.languages[lang].url;\n    }\n    return this.http.get(url).pipe(\n      map((d) => d[lang]),\n      catchError(() => of({}))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateDefaultParser } from '@ngx-translate/core';\nimport { get } from 'lodash-es';\n\nfunction isDefined(value: any): boolean {\n  return typeof value !== 'undefined' && value !== null;\n}\n\n@Injectable()\nexport class TranslateParserCustom extends TranslateDefaultParser {\n\n  getValue(target: any, key: string): any {\n    let translated = target[key];\n    if (!translated) {\n      const keys = key.split('.');\n      if (keys.length > 1) {\n        translated = get(target, key);\n      }\n    }\n    return translated;\n  }\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport {\n  MissingTranslationHandler,\n  TranslateService as NgxTranslateService,\n  TranslateCompiler,\n  TranslateFakeCompiler,\n  TranslateLoader,\n  TranslateModule,\n  TranslateParser,\n  TranslateStore,\n  USE_DEFAULT_LANG,\n  USE_STORE,\n  USE_EXTEND,\n  DEFAULT_LANGUAGE\n} from '@ngx-translate/core';\nimport { OptionsService } from '../common/public-api';\nimport { AppStateService } from '../common/ui-state.service';\nimport { LANGUAGES } from './languages';\nimport { LOCALE_PATH } from './locale.path';\nimport { MissingTranslationCustomHandler } from './missing-translation-custom.handler';\nimport { MESSAGES } from './pattern-messages.data';\nimport { HOOK_PATTERN_MESSAGES } from './patterns-message.hook';\nimport { TranslateCustomLoader } from './translate.loader';\nimport { TranslateParserCustom } from './translate.parser';\n\n// Load these as a side effect\ntry {\n  // tslint:disable:no-var-requires\n  require('@c8y/ngx-components/locales/de.po');\n  require('@c8y/ngx-components/locales/en.po');\n  require('@c8y/ngx-components/locales/es.po');\n  require('@c8y/ngx-components/locales/fr.po');\n  require('@c8y/ngx-components/locales/ja_JP.po');\n   // tslint:enable:no-var-requires\n} catch (e) {\n  // empty block\n}\n\n// AoT requires an exported function for factories\nexport function translateLoaderFactory(httpClient: HttpClient, localePath: string, languages: any) {\n  return new TranslateCustomLoader(httpClient, localePath, languages);\n}\n\nexport function localePathFactory(options: OptionsService) {\n  return options.localePath;\n}\n\nexport function languagesFactory(options: OptionsService) {\n  return options.languages;\n}\n\nexport function localeId(appStateService: AppStateService) {\n  return {\n    get lang() {\n      return appStateService.state.lang || 'en';\n    },\n    toLowerCase() {\n      return this.lang;\n    },\n    toString() {\n      return this.lang;\n    }\n  };\n}\n\n/**\n * The angular module definition for i18n (translation).\n * @exports I18nModule\n */\n@NgModule({\n  exports: [ TranslateModule ],\n  imports: [ HttpClientModule ]\n})\nexport class I18nModule {\n  static providers() {\n    return [\n      { provide: LOCALE_ID, useFactory: localeId, deps: [ AppStateService ] },\n      { provide: HOOK_PATTERN_MESSAGES, useValue: MESSAGES, multi: true },\n      { provide: LOCALE_PATH, useFactory: localePathFactory, deps: [ OptionsService ] },\n      { provide: LANGUAGES, useFactory: languagesFactory, deps: [ OptionsService ] },\n\n      // Extracted from projects/ngx-translate/core/src/public_api.ts\n      { provide: TranslateLoader, useFactory: translateLoaderFactory, deps: [HttpClient, LOCALE_PATH, LANGUAGES] },\n      { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n      { provide: TranslateParser, useClass: TranslateParserCustom },\n      { provide: MissingTranslationHandler, useClass: MissingTranslationCustomHandler },\n      TranslateStore,\n      NgxTranslateService,\n      { provide: USE_STORE, useValue: undefined },\n      { provide: USE_DEFAULT_LANG, useValue: undefined },\n      { provide: USE_EXTEND, useValue: false },\n      { provide: DEFAULT_LANGUAGE, useValue: undefined },\n    ];\n  }\n  static forRoot() {\n    return {\n      ngModule: I18nModule,\n      providers: I18nModule.providers()\n    };\n  }\n}\n","import { Directive, Renderer2, Input, ElementRef } from '@angular/core';\n\n/**\n * Allows to set a icon. Switches between c8y default icons\n * and font awesome icons\n * @example <i [c8yIcon]=\"'rocket'\">\n */\n@Directive({\n  selector: '[c8yIcon]',\n})\nexport class IconDirective {\n\n  @Input()\n  set c8yIcon(icon: string) {\n    this.updateIcon(icon);\n  }\n  private c8yMatch = /^c8y-/;\n  private klasses = [];\n  private currentClasses = '';\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  private isC8y(icon) {\n    return this.c8yMatch.test(icon);\n  }\n\n  private getClasses(icon: string = '') {\n    let classes = '';\n    if (icon) {\n      const _icon = icon.trim();\n      const isC8y = this.isC8y(_icon);\n      const iconClass = isC8y ? _icon.replace(this.c8yMatch, 'c8y-icon-') : `fa-${_icon}`;\n      classes = `${isC8y ? 'c8y-icon' : 'fa fw'} ${iconClass}`;\n    }\n    return classes;\n  }\n\n  private updateIcon(icon: string) {\n    const newClasses = this.getClasses(icon);\n    if (newClasses !== this.currentClasses) {\n      this.currentClasses.split(/\\s/).filter((c) => c).forEach((klass) => {\n        this.renderer.removeClass(this.el.nativeElement, klass);\n      });\n      newClasses.split(/\\s/).filter((c) => c).forEach((klass) => {\n        this.renderer.addClass(this.el.nativeElement, klass);\n      });\n      this.currentClasses = newClasses;\n    }\n  }\n}\n\nexport const ICONS = [\n         'home',\n         'th',\n         'bar-chart-o',\n         'tasks',\n         'tachometer',\n         'bell',\n         'puzzle-piece',\n         'map-marker',\n         'location-arrow',\n         'globe',\n         'power-off',\n         'desktop',\n         'laptop',\n         'mobile',\n         'signal',\n         'qrcode',\n         'file',\n         'file-text',\n         'folder',\n         'folder-open',\n         'archive',\n         'hdd-o',\n         'book',\n         'bookmark',\n         'tag',\n         'flag',\n         'search',\n         'heart',\n         'star',\n         'bolt',\n         'rocket',\n         'cog',\n         'cogs',\n         'wrench',\n         'ban',\n         'user',\n         'users',\n         'sign-in',\n         'sign-out',\n         'upload',\n         'download',\n         'cloud-upload',\n         'cloud-download',\n         'cloud',\n         'spinner',\n         'refresh',\n         'repeat',\n         'undo',\n         'lock',\n         'unlock',\n         'info',\n         'question',\n         'exclamation',\n         'bug',\n         'calendar',\n         'random',\n         'asterisk',\n         'key',\n         'link',\n         'chain-broken',\n         'external-link',\n         'picture-o',\n         'comment',\n         'bullhorn',\n         'phone',\n         'lightbulb-o',\n         'flask',\n         'sitemap',\n         'exchange',\n         'code-fork',\n         'keyboard-o',\n         'terminal',\n         'code',\n         'clipboard',\n         'pencil',\n         'envelope',\n         'inbox',\n         'reply',\n         'share',\n         'thumbs-up',\n         'thumbs-down',\n         'check',\n         'plus',\n         'expand',\n         'compress',\n         'arrows',\n         'arrow-up',\n         'arrow-down',\n         'arrow-left',\n         'arrow-right',\n         'th-list',\n         'bars',\n         'table',\n         'columns',\n         'filter',\n         'sort',\n         'sort-up',\n         'sort-down',\n         'ellipsis-h',\n         'ellipsis-v',\n         'rss',\n         'apple',\n         'windows',\n         'android',\n         'linux'\n       ];\n","import { assign } from 'lodash-es';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n  } from '@angular/core';\n\n/**\n * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n * @example\n * <div *c8yOutlet=\"template\"></div>\n * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n * <div *c8yOutlet=\"nodes\"></div>\n */\n@Directive({\n  selector: '[c8yOutlet]',\n})\nexport class OutletDirective {\n  private properties = {};\n  private _element;\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    private resolver: ComponentFactoryResolver,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) { }\n\n  /**\n   * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n   * @example\n   * <div *c8yOutlet=\"template\"></div>\n   * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n   * <div *c8yOutlet=\"nodes\"></div>\n   */\n  @Input() set c8yOutlet(template: TemplateRef<any> | Type<any> | Element) {\n    if (!template) {\n      return;\n    }\n    if (this._element instanceof Element) {\n      this.renderer.removeChild(this._element.parentElement,  this._element);\n    }\n    this.viewContainer.clear();\n\n    // case TemplateRef -> <div *c8yOutlet=\"template\"></div>\n    if (template instanceof TemplateRef) {\n      this.viewContainer.createEmbeddedView(template);\n\n    // case DOM Element -> <div *c8yOutlet=\"nodes\"></div>\n    } else if (template instanceof Element) {\n      const parent = this.renderer.parentNode(this.el.nativeElement);\n      this.destroy();\n      this._element = template;\n      this.renderer.insertBefore(parent, this._element, this.el.nativeElement);\n\n    // case Component -> <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n    } else {\n      const factory: ComponentFactory<any> = this.resolver.resolveComponentFactory(template);\n      const component = this.viewContainer.createComponent(factory);\n      assign(component.instance, this.properties);\n    }\n  }\n\n  @Input() set c8yOutletProperties(value) {\n    this.properties = value;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  private destroy() {\n    if (this._element) {\n      const _parent = this.renderer.parentNode(this._element);\n      this.renderer.removeChild(_parent, this._element);\n    }\n  }\n}\n","import { Observable, of } from 'rxjs';\n\nexport class UserPreferencesStorageLocal {\n  private LOCAL_STORAGE_KEY = 'userPreferences';\n  private store: any = {};\n  constructor() {\n    try {\n      const jsonStore = window.localStorage.getItem(this.LOCAL_STORAGE_KEY);\n      if (jsonStore) {\n        this.store = JSON.parse(jsonStore) || {};\n      }\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  get(key) {\n    return of(this.store[key]);\n  }\n\n  set(key, value) {\n    this.store[key] = value;\n    return this.saveJsonStore();\n  }\n\n  private saveJsonStore() {\n    return window.localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(this.store));\n  }\n}\n","import { InventoryService } from '@c8y/client';\n\nexport class UserPreferencesStorageInventory {\n  TYPE = 'c8y_UserPreference';\n\n  constructor(\n    private inventory: InventoryService\n  ) {}\n\n  async get(key) {\n    const { data } = await this.inventory.list({fragmentType: key});\n    return data.length ? data[0][key] : undefined;\n  }\n\n  async set(key, value) {\n    const { data } = await this.inventory.list({fragmentType: key});\n    const updateMo: any = {[key]: value, type: this.TYPE};\n    let out;\n\n    if (data.length) {\n      updateMo.id = data[0].id;\n      out =  this.inventory.update(updateMo);\n    } else {\n      out = this.inventory.create(updateMo);\n    }\n    return out;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InventoryService, UserService } from '@c8y/client';\nimport { IUser } from '@c8y/client';\nimport { Observable, from, never } from 'rxjs';\nimport { switchMap, first } from 'rxjs/operators';\nimport { UserPreferencesStorageLocal } from './user-preferences-storage-local';\nimport { UserPreferencesStorageInventory } from './user-preferences-store-inventory';\nimport { AppStateService } from '../ui-state.service';\n\n@Injectable()\nexport class UserPreferencesService {\n  currentUser: Observable<IUser>;\n  private LOCAL_STORAGE_KEY = 'userPreferences';\n  private storage: {\n    local: UserPreferencesStorageLocal,\n    inventory: UserPreferencesStorageInventory\n  };\n  constructor(\n    private user: UserService,\n    private inventory: InventoryService,\n    private appState: AppStateService\n  ) {\n    this.storage = {\n      local: new UserPreferencesStorageLocal(),\n      inventory: new UserPreferencesStorageInventory(this.inventory)\n    };\n    this.currentUser = this.appState.currentUser;\n  }\n\n  get(key): Observable<any> {\n    return this.currentUser.pipe(\n      first(),\n      switchMap((user) => this.getForUser(key, user))\n    );\n  }\n\n  set(key, value): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.currentUser.pipe(\n        first()\n      ).subscribe((user) => {\n        resolve(this.setForUser(key, value, user));\n      }, reject);\n    });\n  }\n\n  getForUser(key, user): Observable<any> {\n    const rawKey = this.getRawKey(key, user);\n    const storage = this.getStorage(user);\n    return from(storage.get(rawKey));\n  }\n\n  setForUser(key, value, user): Promise<any> {\n    const rawKey = this.getRawKey(key, user);\n    const storage = this.getStorage(user);\n    return Promise.resolve(storage.set(rawKey, value));\n  }\n\n  private getRawKey(key, user) {\n    const username = user.userName.replace(/\\./g, '__');\n    return `${key}${username}`;\n  }\n\n  private getStorage(user) {\n    return  this.user.hasAllRoles(user, ['ROLE_INVENTORY_READ', 'ROLE_INVENTORY_ADMIN']) ?\n      this.storage.inventory : this.storage.local;\n  }\n\n}\n","import './import-locales';\nimport { parse } from './parse-module';\nconst cache = new Map();\n/**\n * @ignore\n */\nexport function loadLocale(moduleLang) {\n  return new Promise((resolve, reject) => {\n    if (cache.has(moduleLang)) {\n      resolve(cache.get(moduleLang));\n    } else {\n      fetch(`assets/locales/angular/${moduleLang}.js`)\n        .then((res) => res.text())\n        .then((src) => {\n          const module = parse(src);\n          cache.set(moduleLang, module);\n          resolve(module);\n        })\n        .catch(reject);\n    }\n  });\n}\n","export function parse(moduleSrc) {\n  const src = moduleSrc.split(/\\n/)\n    .map((l) => l.trim())\n    .filter(Boolean)\n    .filter((l) => !l.match(/^\\/?\\*/) && !l.match(/^\\/\\//))\n    .join('\\n');\n  const fn = new Function(`var exports = {};\nvar module = { exports: exports };\n${src}\nreturn exports;`);\n  return fn();\n}\n","import { Injectable } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport { keys } from 'lodash-es';\nimport { TranslateService as NgxTranslateService } from '@ngx-translate/core';\nimport { OptionsService } from '../common/options.service';\nimport { loadLocale } from './load-locale';\nimport { AppStateService } from '../common/ui-state.service';\n\n/**\n * A service to manage the language of the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  static SAVE_LANGUAGE_KEY = 'c8y_language';\n  static defaultLang() {\n    return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);\n  }\n  langsDetail: any =  this.options.get('languages', {});\n  langs: any = keys(this.langsDetail).filter((k) => this.langsDetail[k]);\n  private DEFAULT_SEPARATOR = '_';\n  constructor(\n    private ngxTranslate: NgxTranslateService,\n    private ui: AppStateService,\n    private options: OptionsService\n  ) {\n    const queryStringLang = this.queryStringLang();\n    if (queryStringLang) {\n      this.saveInLocalStorage(queryStringLang);\n    }\n  }\n\n  /**\n   * Switches to given language.\n   * @param lang The language as two-letter code.\n   */\n  async switchToLanguage(lang: string) {\n    const moduleLang = lang.replace('_', '-');\n\n    try {\n      await this.loadLocales(moduleLang);\n    } catch (e) {\n      const lessSpecificModuleLang = moduleLang.split('-').shift();\n      if (lessSpecificModuleLang !== moduleLang) {\n        await this.loadLocales(lessSpecificModuleLang);\n      } else {\n        throw e;\n      }\n    }\n\n    this.ngxTranslate.use(lang).subscribe(() => {\n      this.ui.state$.next({ ...this.ui.state, lang });\n    });\n    // TODO: do we still need to set that lang on html?!\n    // document.querySelector('html').setAttribute('lang', lang);\n  }\n\n  async loadLocales(moduleLang) {\n    const module: any = await loadLocale(moduleLang);\n    registerLocaleData(module.default);\n  }\n\n  /**\n   * Finds the first supported language\n   */\n  firstSupportedLanguage() {\n    const languages = [\n        this.queryStringLang(),\n        this.localStorageLang()\n      ]\n      .concat([ this.options.get('defaultLanguage') ])\n      .concat(this.browserLangs())\n      .concat(['en'])\n      .filter(Boolean);\n    return languages.find((language) => this.isSupported(language));\n  }\n\n  /**\n   * Converts a iso language code to a PO language code (e.g. de-de gets de_de).\n   * @param lang The iso language code.\n   */\n  convertToLanguageCodePO(lang: string): string {\n    const sep = lang.indexOf('-') > -1 ? '-' : this.DEFAULT_SEPARATOR;\n    const [ langMain, langSpecific ] = lang.split(sep);\n    const langLast = langSpecific ? `${this.DEFAULT_SEPARATOR}${langSpecific}` : '';\n    return `${langMain}${langLast}`;\n  }\n\n  /**\n   * Returns the language in the native language.\n   * @param lang The language two-letter code.\n   * @return The native name.\n   */\n  getNativeLanguage(lang: string): string {\n    const langData = (this.langsDetail || {})[lang] || {};\n    return langData.nativeName || lang;\n  }\n\n  saveInLocalStorage(lang: string) {\n    window.localStorage.setItem(TranslateService.SAVE_LANGUAGE_KEY, lang);\n  }\n\n  isSupported(lang: string) {\n    return this.langs.includes(lang);\n  }\n\n  /**\n   * Gets the language from the query parameter.\n   * @return The language two-letter code.\n   */\n  queryStringLang() {\n    return this.getQueryParameter('lang');\n  }\n\n  /**\n   * Gets the language from local storage.\n   * @return The language two-letter code.\n   */\n  private localStorageLang() {\n    return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);\n  }\n\n  /**\n   * Determines which language is set in the browser.\n   * @return The languages the browser supports as string array.\n   */\n  private browserLangs() {\n    const { navigator } = window;\n    const browserLanguagePropertyKeys = [\n      'languages',\n      'language',\n      'browserLanguage',\n      'systemLanguage',\n      'userLanguage'\n    ];\n    return browserLanguagePropertyKeys.reduce((languages, property) => {\n      const propertyLanguages = navigator[property];\n      if (typeof propertyLanguages === 'string') {\n        languages.push(propertyLanguages);\n      } else if (Array.isArray(propertyLanguages)) {\n        languages = languages.concat(propertyLanguages);\n      }\n      return languages;\n    }, []);\n  }\n\n  private getQueryParameter(queryKey) {\n    // TODO: replace this with URLSearchParams, ie 11 still doesn't support :()\n    const query = window.location.search.substring(1);\n    let result;\n    query.split('&').find((pair) => {\n      const [key, value] = pair.split('=');\n      if (key === queryKey) {\n        result = value;\n      }\n      return result;\n    });\n    return result;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'shortenUserName' })\r\nexport class ShortenUserNamePipe implements PipeTransform {\r\n\r\n  transform({ firstName = '', lastName = '', userName = ''}: any): string {\r\n      let parsedFirstName = firstName.trim().split(/\\s+/).shift().substr(0, 1);\r\n      const parsedLastName = lastName.trim().split(/\\s+/).pop();\r\n\r\n      if (!parsedLastName) {\r\n        parsedFirstName = firstName.split(/\\s+/).shift();\r\n      } else {\r\n        parsedFirstName = parsedFirstName ? `${parsedFirstName}. ` : '';\r\n      }\r\n\r\n      return parsedFirstName || parsedLastName ? parsedFirstName + parsedLastName : userName;\r\n    }\r\n}\r\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { IIdentified, Paging } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-load-more',\n  templateUrl: './load-more.component.html'\n})\nexport class LoadMoreComponent {\n  @Input()\n  paging: Paging<any>;\n  @Input()\n  useIntersection = true;\n  @Input()\n  hidden = false;\n  @Input()\n  container: ElementRef;\n  @Input()\n  class: string = 'c8y-list__item bg-transparent';\n  @Input()\n  maxIterations = 10;\n  @Input()\n  noMoreDataHint: TemplateRef<any>;\n  @Output()\n  onLoad = new EventEmitter<IIdentified>();\n\n  isLoading = false;\n  counter = 0;\n  showNoMoreDataHint = false;\n  private loadUntilIntersected;\n  private readonly LOAD_SAME_PAGE_THRESHOLD = 50;\n  private intersectionObserver: IntersectionObserver;\n\n  @HostBinding('class')\n  get hostClass() {\n    return this.hidden || (!this.hasMore && !this.showNoMoreDataHint) ? '' : this.class;\n  }\n\n  get hasMore() {\n    return this.paging && this.paging.totalPages > this.paging.currentPage;\n  }\n\n  constructor(private element: ElementRef) {}\n\n  ngAfterContentInit(): void {\n    if (this.useIntersection && 'IntersectionObserver' in window) {\n      this.intersectionObserver = new IntersectionObserver(event => this.buttonInView(event[0]), {\n        root: this.container ? this.container.nativeElement : null\n      });\n      this.intersectionObserver.observe(this.element.nativeElement);\n    }\n    this.showNoMoreDataHint = this.shouldShowNoMoreDataHint();\n  }\n\n  ngOnDestroy(): void {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n  }\n\n  async loadMore(event?) {\n    this.isLoading = true;\n    if (event) {\n      event.stopPropagation();\n    }\n    if (this.hasMore) {\n      const result = await this.paging.next();\n      this.counter++;\n      this.paging = result.paging;\n      this.onLoad.emit(result.data);\n      this.intersectionLoading();\n      this.showNoMoreDataHint = this.shouldShowNoMoreDataHint();\n    } else {\n      this.counter = 0;\n      this.isLoading = false;\n    }\n  }\n\n  private intersectionLoading() {\n    if (this.useIntersection && this.hasMore && this.loadUntilIntersected !== null) {\n      this.loadUntilIntersected = setTimeout(() => this.loadMore(), this.getLoadingThreshold());\n      this.useIntersection = this.shouldSwitchMode();\n    } else {\n      this.isLoading = false;\n      this.loadUntilIntersected = undefined;\n    }\n  }\n\n  private getLoadingThreshold(): number {\n    return this.LOAD_SAME_PAGE_THRESHOLD * this.counter;\n  }\n\n  private shouldShowNoMoreDataHint() {\n    return (this.counter !== 0 || this.noMoreDataHint) && !this.hasMore && !this.hidden;\n  }\n\n  private shouldSwitchMode() {\n    return this.counter < this.maxIterations || this.hidden;\n  }\n\n  private buttonInView(event) {\n    if (event.isIntersecting) {\n      this.loadMore();\n    } else if (this.loadUntilIntersected) {\n      clearTimeout(this.loadUntilIntersected);\n      this.loadUntilIntersected = null;\n      this.isLoading = false;\n    } else {\n      // avoiding a race condition when timeout is faster\n      // cleared then set\n      this.loadUntilIntersected = null;\n    }\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  SimpleChanges\n} from '@angular/core';\nimport { IIdentified, IResultList, Paging } from '@c8y/client';\nimport { isObservable, Observable, of, pipe, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { LoadMoreComponent } from './load-more.component';\nimport { assign } from 'lodash-es';\n\n/**\n * A directive to iterate over IResultList<T> data from @c8y/client.\n * Depending on the [c8yForLoadMore] a load more button is:\n *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be\n *          change with maxIterations settings).\n *  - show: Shows a load more button for the user to decide\n *  - none: Doesn't perform any load more action.\n *  - hidden: Loads more data automatically but with no visible button for the user.\n *\n * Additional, any rxjs operator pipe can be applied to the [c8yForPipe] input, e.g. to\n * filter the data displayed currently as well as the data loaded by subsequent requests.\n *\n * Example:\n * ```html\n * <div *c8yFor=\"let device of devices; loadMore: 'auto'; let i = index; pipe: filterPipe;\">\n *  {{ i + 1 }}. {{device.name}}\n * </div>\n * ```\n * The above example will list all entities that are applied to `devices`:\n * ```typescript\n * this.devices = this.inventoryService.list({ pageSize: 10, fragmentType: 'c8y_IsDevice' })\n * ```\n * It will display the first 10 items, if there is more space left on the screen, and there are more\n * than 10 devices, it will automatically load up to 10 pages more. If it still can't fit the screen\n * it will stop and switch to `show` mode.\n *\n * A pipe can be applied e.g. for filtering or grouping. This pipe is attached to every follow up\n * request done by the load more component:\n * ```typescript\n * this.filterPipe = pipe(\n *    map((data: []) => {\n *     return data.filter(\n *      (mo: any) => mo.name && mo.name.toLowerCase().indexOf(value.toLowerCase()) > -1\n *    );\n *  })\n * );\n * ```\n * The pipe must be an rxjs pipe and can take any operator.\n */\n@Directive({\n  selector: '[c8yFor]'\n})\nexport class ForOfDirective {\n  private cachedData = [];\n  private paging: Paging<IIdentified>;\n  private loadMoreMode: 'auto' | 'show' | 'none' | 'hidden' = 'auto';\n  private dataPipe = pipe(tap());\n  private pagingSub: Subscription;\n  private obs$: Observable<IIdentified[]>;\n  private loadMore: LoadMoreComponent;\n  private maxIterations = 10;\n  private notFoundTemplate: TemplateRef<any>;\n\n  private get shouldUseLoadMoreButton() {\n    return (\n      this.loadMoreMode === 'auto' || this.loadMoreMode === 'show' || this.loadMoreMode === 'hidden'\n    );\n  }\n\n  private get hasMoreData() {\n    return this.loadMore && this.loadMore.hasMore;\n  }\n\n  private get length() {\n    return this.cachedData.length;\n  }\n\n  /**\n   * The data setter. Must be a response from @c8y/data or a observable.\n   */\n  @Input()\n  set c8yForOf(fetchData: IResultList<IIdentified> | Observable<IResultList<IIdentified>>) {\n    if (fetchData) {\n      this.obs$ = (isObservable(fetchData) ? fetchData : of(fetchData)).pipe(\n        map(result => {\n          const { paging, data } = result;\n          this.paging = paging;\n          return data;\n        })\n      );\n    }\n  }\n\n  /**\n   * The mode setter:\n   *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be\n   *          change with maxIterations settings).\n   *  - show: Shows a load more button for the user to decide\n   *  - none: Doesn't perform any load more action.\n   *  - hidden: Loads more data automatically but with no visible button for the user.\n   */\n  @Input()\n  set c8yForLoadMore(type: 'auto' | 'show' | 'none' | 'hidden') {\n    this.loadMoreMode = type;\n  }\n\n  /**\n   * The pipe setter to attach any rxjs pipe to the current and more loaded data.\n   */\n  @Input()\n  set c8yForPipe(dataPipe) {\n    if (dataPipe) {\n      this.dataPipe = dataPipe;\n    }\n  }\n\n  /**\n   * A template to use if no data is found at all (e.g. if you apply a filter pipe).\n   */\n  @Input()\n  set c8yForNotFound(notFoundTemplate: TemplateRef<any>) {\n    this.notFoundTemplate = notFoundTemplate;\n    if (this.loadMore) {\n      this.loadMore.noMoreDataHint = notFoundTemplate;\n    }\n  }\n\n  /**\n   * The maximum numbers of iterations to call data from the api.\n   */\n  @Input()\n  set c8yForMaxIterations(maxIterations: number) {\n    this.maxIterations = maxIterations;\n  }\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private vcr: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  private ngOnChanges(changes: SimpleChanges): void {\n    if (this.obs$ && (changes.c8yForPipe || changes.c8yForOf)) {\n      this.unsubscribePaging();\n\n      // only re-rendering  on filtering if all data is already loaded\n      // from the backend\n      const reRender = !this.hasMoreData && !!changes.c8yForPipe && !changes.c8yForOf;\n\n      if (reRender) {\n        this.obs$ = of(this.cachedData);\n      }\n      this.pagingSub = this.obs$\n        .pipe(\n          tap(data => {\n            if (!reRender) {\n              this.cachedData = data;\n            }\n          })\n        )\n        .pipe(src => this.dataPipe(src))\n        .subscribe((data: []) => {\n          this.render(data, reRender);\n        });\n    }\n  }\n\n  private ngOnDestroy(): void {\n    this.unsubscribePaging();\n  }\n\n  private render(data, reRender = false): void {\n    this.vcr.clear();\n\n    data.forEach((item, index) => {\n      const context = {\n        $implicit: item,\n        index,\n        length: this.length,\n        hasMore: this.hasMoreData\n      };\n      this.vcr.createEmbeddedView(this.tpl, context);\n    });\n\n    if (this.shouldUseLoadMoreButton) {\n      this.loadMore = this.createLoadMoreButtonComponent(reRender);\n    }\n  }\n\n  private append(data) {\n    data.forEach(item => {\n      const index = this.shouldUseLoadMoreButton ? this.vcr.length - 1 : this.vcr.length;\n      const context = {\n        $implicit: item,\n        index,\n        length: this.length,\n        hasMore: this.hasMoreData\n      };\n      this.vcr.createEmbeddedView(this.tpl, context, index);\n    });\n  }\n\n  private loadMoreData(data) {\n    if (data.length > 0) {\n      this.append(data);\n    }\n  }\n\n  private createLoadMoreButtonComponent(reRender) {\n    const componentFactory: ComponentFactory<\n      any\n    > = this.componentFactoryResolver.resolveComponentFactory(LoadMoreComponent);\n    const componentRef = this.vcr.createComponent(componentFactory);\n    const instance = componentRef.instance as LoadMoreComponent;\n    instance.paging = this.paging;\n    instance.useIntersection = this.loadMoreMode === 'auto' || this.loadMoreMode === 'hidden';\n    instance.hidden = this.loadMoreMode === 'hidden';\n    instance.maxIterations = this.maxIterations;\n    instance.noMoreDataHint = this.notFoundTemplate;\n    this.pagingSub = instance.onLoad\n      .pipe(\n        tap((data: []) => {\n          this.cachedData = this.cachedData.concat(data);\n        })\n      )\n      .pipe(src => this.dataPipe(src))\n      .subscribe(data => this.loadMoreData(data));\n    if (reRender) {\n      assign(instance, this.loadMore);\n    }\n    return instance;\n  }\n\n  private unsubscribePaging() {\n    if (this.pagingSub) {\n      this.pagingSub.unsubscribe();\n    }\n  }\n}\n","/*\n * Implementation of pure \"Mapping\" pipe based on\n * https://codeburst.io/angular-bad-practices-eab0e594ce92#389b\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'map'\n})\nexport class MapFunctionPipe implements PipeTransform {\n  /*\n   * This will be a universal pipe for array mappings. You may add more\n   * type checkings and runtime checkings to make sure it works correctly everywhere.\n   */\n  transform(value, mappingFunction: (arg: any) => any, thisArg?: any) {\n    return mappingFunction.apply(thisArg || this, Array.isArray(value) ? value : [value]);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-progress-bar',\n  templateUrl: './progress-bar.component.html'\n})\nexport class ProgressBarComponent {\n  @Input() message: string = gettext('Loading…');\n  @Input() progress: number = null;\n}\n","import { NgModule, APP_INITIALIZER, InjectionToken } from '@angular/core';\nimport { CommonModule as NgCommonModule } from '@angular/common';\nimport { DataModule } from '@c8y/ngx-components/api';\nimport { I18nModule } from '../i18n/i18n.module';\nimport { IconDirective, ICONS } from './icon.directive';\nimport { OutletDirective } from './outlet.directive';\nimport { HOOK_OPTIONS, OptionsService } from './options.service';\nimport { UserPreferencesService } from './user-preferences/user-preferences.service';\nimport { HumanizeAppNamePipe } from './humanize-app-name.pipe';\nimport { HumanizePipe } from './humanize.pipe';\nimport { AppStateService } from './ui-state.service';\nimport { TranslateService } from '../i18n/public-api';\nimport { filter, switchMap, startWith, map, distinctUntilChanged } from 'rxjs/operators';\nimport { ShortenUserNamePipe } from './shorten-user-name.pipe';\nimport { ForOfDirective } from './forOf.directive';\nimport { LoadMoreComponent } from './load-more.component';\nimport { MapFunctionPipe } from './map-function.pipe';\nimport { ProgressBarComponent } from './progress-bar.component';\n\nexport function initializeServices(\n  translateService: TranslateService,\n  state: AppStateService,\n  userPreferences: UserPreferencesService\n) {\n  const initialize = () => {\n    const queryStringLanguage = translateService.queryStringLang();\n    const firstLanguage = translateService.firstSupportedLanguage();\n\n    /*\n      The ?lang parameter will prevent the user preference language from being activated\n    */\n    if (queryStringLanguage && translateService.isSupported(queryStringLanguage)) {\n      translateService.switchToLanguage(queryStringLanguage);\n    } else {\n      state.currentUser\n        .pipe(\n          map(user => user && user.userName),\n          filter(u => !!u),\n          distinctUntilChanged(),\n          switchMap(() => userPreferences.get('language')),\n          startWith(firstLanguage),\n          filter(lang => !!lang),\n          distinctUntilChanged()\n        )\n        .subscribe(lang => {\n          translateService.switchToLanguage(lang);\n        });\n    }\n  };\n  return initialize;\n}\n\nexport const ICON_LIST = new InjectionToken('iconList');\n\n/**\n * Commonly used directives, data access and translation. This module is the shared\n * module across all core components. It should be imported by default.\n *\n * @exports IconDirective A directive to set a c8y icon with [c8yIcon]=\"'rocket'\".\n * @exports OutletDirective A directive which allows to set DOM or Angular templates (used for upgrade).\n * @exports I18nModule Translation module.\n * @exports NgCommonModule Angular common module.\n * @exports DataModule The data layer to allow DI with @c8y/client\n * @exports HumanizeAppNamePipe Humanize an application name (e.g. in the app switcher)\n * @exports HumanizePipe Humanize a word. E.g. `device management` gets `Device management`\n * @exports ShortenUserNamePipe Allows a short name. E.g. `Foo Bar` gets `F. Bar`\n * @exports ForOfDirective A forOf directive like ngFor but with load-more function\n * @exports LoadMoreComponent A component to load more data from a certain data-source\n * @exports ProgressBarComponent Displays either defined or undefined progress.\n */\n@NgModule({\n  imports: [NgCommonModule, I18nModule],\n  exports: [\n    IconDirective,\n    OutletDirective,\n    I18nModule,\n    NgCommonModule,\n    HumanizeAppNamePipe,\n    HumanizePipe,\n    ShortenUserNamePipe,\n    ForOfDirective,\n    LoadMoreComponent,\n    MapFunctionPipe,\n    ProgressBarComponent\n  ],\n  declarations: [\n    IconDirective,\n    OutletDirective,\n    HumanizePipe,\n    HumanizeAppNamePipe,\n    ShortenUserNamePipe,\n    ForOfDirective,\n    LoadMoreComponent,\n    MapFunctionPipe,\n    ProgressBarComponent\n  ],\n  entryComponents: [LoadMoreComponent]\n})\nexport class CommonModule {\n  static providers() {\n    return [\n      ...DataModule.providers(),\n      // TODO: maybe we can think of a way to remove this C8Y_APP global\n      { provide: HOOK_OPTIONS, useValue: (window as any).C8Y_APP || {}, multi: true },\n      {\n        provide: APP_INITIALIZER,\n        useFactory: initializeServices,\n        deps: [TranslateService, AppStateService, UserPreferencesService],\n        multi: true\n      },\n      { provide: ICON_LIST, useValue: ICONS, multi: false },\n      ...I18nModule.providers(),\n      UserPreferencesService,\n      OptionsService,\n      AppStateService\n    ];\n  }\n\n  static forRoot() {\n    return {\n      ngModule: CommonModule,\n      providers: CommonModule.providers()\n    };\n  }\n}\n","export interface LoginMessage {\n  message: string;\n  type: string;\n}\n\nexport enum LoginViews {\n  None,\n  Credentials,\n  RecoverPassword,\n  SmsChallenge,\n  ChangePassword,\n  TotpChallenge,\n  TotpSetup\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { ActionBarItem } from './action-bar.model';\nimport { ActionBarService } from './action-bar.service';\n\n@Component({\n  selector: 'c8y-action-bar-item',\n  templateUrl: './action-bar-item.component.html'\n})\nexport class ActionBarItemComponent implements ActionBarItem {\n  @Input() placement: ('left' | 'right' | 'more') = 'left';\n  @Input() priority: number = 0;\n  @Input() itemClass = '';\n  @ViewChild('template', {static: false}) template: any;\n  private viewInitTimeout;\n\n  constructor(private actionBarService: ActionBarService) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.actionBarService.add(this as ActionBarItem)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.actionBarService.remove(this as ActionBarItem);\n  }\n}\n","import { Component, HostBinding, Input, AfterContentInit } from '@angular/core';\nimport { filter, sortBy } from 'lodash-es';\nimport { ActionBarItem } from './action-bar.model';\n\n@Component({\n  selector: 'c8y-action-bar',\n  templateUrl: './action-bar.component.html',\n  host: { class: 'c8y-ui-action-bar' }\n})\nexport class ActionBarComponent {\n  @Input() @HostBinding('class.navigator-open') navigatorOpen = false;\n  @Input() @HostBinding('class.has-tabs') hasTabs = false;\n  @Input() @HostBinding('class.horizontal-tabs') isTabsHorizontal = false;\n  isPageToolbarExpanded = false;\n  @HostBinding('class.c8y-ui-action-bar') uiActionBar = true;\n  @Input() items: ActionBarItem[] = [];\n\n  @HostBinding() get hidden() {\n    return !(this.items && this.items.length);\n  }\n\n  getSortedItems(placement: 'left' | 'right' | 'more') {\n    return sortBy(filter(this.items, { placement }), this.byPriority);\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { ActionBarItemComponent } from './action-bar-item.component';\nimport { ActionBarComponent } from './action-bar.component';\nimport { ActionBarService } from './action-bar.service';\n\n/**\n * The angular module definition for the action bar.\n * @exports ActionBarComponent\n * @exports ActionBarItemComponent\n */\n@NgModule({\n  declarations: [\n    ActionBarComponent,\n    ActionBarItemComponent\n  ],\n  imports: [\n    BsDropdownModule,\n    CommonModule,\n    CollapseModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    ActionBarComponent,\n    ActionBarItemComponent\n  ]\n})\nexport class ActionBarModule { }\n","import { Component, Input } from '@angular/core';\nimport { Action } from './action.model';\nimport { sortBy } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-action-outlet',\n  templateUrl: './action-outlet.component.html'\n})\n\nexport class ActionOutletComponent {\n  isPageToolbarExpanded = false;\n  @Input() items: Action[] = [];\n\n  getByPriority() {\n    return sortBy(this.items, this.byPriority);\n  }\n\n  invoke(action) {\n    if (action.action) {\n      action.action.call();\n    }\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { Action } from './action.model';\nimport { ActionService } from './action.service';\n\n@Component({\n  selector: 'c8y-action',\n  templateUrl: './action.component.html'\n})\nexport class ActionComponent implements Action {\n  @Input() disabled: boolean = false;\n  @Input() label: string;\n  @Input() priority: number = 0;\n  @Input() icon: string;\n  @ViewChild('template', {static: false}) template: any;\n  action: () => void;\n  private viewInitTimeout;\n\n  constructor(private actionService: ActionService) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.actionService.add(this as Action)\n      );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.actionService.remove(this as Action);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { ActionOutletComponent } from './action-outlet.component';\nimport { ActionComponent } from './action.component';\nimport { ActionService } from './action.service';\n\n/**\n * The angular module definition for actions.\n * @exports ActionComponent\n * @exports ActionOutletComponent\n */\n@NgModule({\n  declarations: [\n    ActionOutletComponent,\n    ActionComponent\n  ],\n  imports: [\n    CommonModule,\n    BsDropdownModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    ActionOutletComponent,\n    ActionComponent\n  ]\n})\nexport class ActionModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'c8y-alert-details',\r\n  template: `<ng-content></ng-content>`\r\n})\r\n\r\nexport class AlertDetailsComponent {}\r\n","import { Component, TemplateRef, Attribute, HostBinding } from '@angular/core';\nimport { Alert } from './alert.model';\nimport { AlertService } from './alert.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'c8y-alert-outlet',\n  templateUrl: './alert-outlet.component.html'\n})\n\nexport class AlertOutletComponent {\n\n  detailDisplayedAlert: any = {};\n  @HostBinding('class.static') isStatic = false;\n  get alerts(): BehaviorSubject<Alert[]> {\n    return this.alertService.state$;\n  }\n  constructor(\n    @Attribute('position') private position: string,\n    public alertService: AlertService\n  ) {\n    this.isStatic = this.position === 'static';\n  }\n\n  getClass(alert: Alert) {\n    const classes = [];\n    if (alert.type !== 'danger') {\n      classes.push('interact');\n    }\n    classes.push(`alert-${alert.type}`);\n    return classes.join(' ');\n  }\n\n  close(alert) {\n    if (alert.onClose) {\n      alert.onClose();\n    }\n    this.alertService.remove(alert);\n  }\n\n  showDetails(alert) {\n    if (alert.onDetail) {\n      return alert.onDetail();\n    }\n    this.detailDisplayedAlert = Object.assign({}, alert);\n    this.detailDisplayedAlert.mode = 'raw';\n    this.setDetailsContent(alert);\n  }\n\n  setDetailsContent(alert) {\n    if ( this.isTemplateRef(alert.detailedData) || typeof alert.detailedData === 'string' ) {\n      this.detailDisplayedAlert.contents = alert.detailedData;\n    } else {\n      this.detailDisplayedAlert.contents = JSON.stringify(alert.detailedData, null, 2);\n    }\n  }\n\n  hasDetails(alert) {\n    return (alert.detailedData || alert.onDetail);\n  }\n\n  closeDetails() {\n    this.detailDisplayedAlert = {};\n  }\n\n  isDetailsShow(alert) {\n    return this.alertService.areSame(alert, this.detailDisplayedAlert);\n  }\n\n  isTemplateRef(value): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  template(content): any {\n    return this.isTemplateRef(content) ? content : undefined;\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'c8y-alert-text',\r\n  template: `<ng-content></ng-content>`\r\n})\r\n\r\nexport class AlertTextComponent {}\r\n","import { Component, OnDestroy, Input, ViewChild, ContentChild } from '@angular/core';\nimport { Alert } from './alert.model';\nimport { AlertService } from './alert.service';\nimport { AlertDetailsComponent } from './alert-details.component';\n\n@Component({\n  selector: 'c8y-alert',\n  templateUrl: './alert.component.html'\n})\n\nexport class AlertComponent implements OnDestroy, Alert {\n\n  @Input() type: 'success' | 'warning' | 'danger' | 'info' | 'system';\n  @Input() onDetail: () => void;\n  @Input() onClose: () => void;\n  @ViewChild('detailedData', {static: false}) detailedData;\n  @ViewChild('text', {static: false}) text;\n  @ContentChild(AlertDetailsComponent, {static: false}) containDetailsComponent: AlertDetailsComponent;\n  private viewInitTimeout;\n\n  constructor(public alertService: AlertService) {}\n\n  ngAfterViewInit() {\n    if (!this.containDetailsComponent) {\n      this.detailedData = null;\n    }\n    this.viewInitTimeout = setTimeout(() =>\n      this.alertService.add(this)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.alertService.remove(this);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { AlertDetailsComponent } from './alert-details.component';\r\nimport { AlertOutletComponent } from './alert-outlet.component';\r\nimport { AlertTextComponent } from './alert-text.component';\r\nimport { AlertComponent } from './alert.component';\r\nimport { AlertService } from './alert.service';\r\nimport { CommonModule } from '../common/common.module';\r\n\r\n/**\r\n * The angular module definition for alert.\r\n * @exports AlertComponent\r\n * @exports AlertOutletComponent\r\n * @exports AlertDetailsComponent\r\n * @exports AlertTextComponent\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    AlertOutletComponent,\r\n    AlertComponent,\r\n    AlertDetailsComponent,\r\n    AlertTextComponent\r\n  ],\r\n  declarations: [\r\n    AlertOutletComponent,\r\n    AlertComponent,\r\n    AlertDetailsComponent,\r\n    AlertTextComponent\r\n  ]\r\n})\r\nexport class AlertModule { }\r\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BreadcrumbItem } from './breadcrumb.model';\n\n@Component({\n  selector: 'c8y-breadcrumb-item',\n  templateUrl: './breadcrumb-item.component.html'\n})\nexport class BreadcrumbItemComponent implements BreadcrumbItem {\n  @Input() icon: string;\n  @Input() translate: boolean;\n  @Input() label: string;\n  @Input() path: string;\n  @ViewChild('template', {static: false}) template: any;\n}\n","import { Component, Input } from '@angular/core';\nimport { Breadcrumb } from './breadcrumb.model';\n\n@Component({\n  selector: 'c8y-breadcrumb-outlet',\n  templateUrl: './breadcrumb-outlet.component.html'\n})\nexport class BreadcrumbOutletComponent {\n  showAll = false;\n  @Input() breadcrumbs: Breadcrumb[] = [];\n\n  /**\n   * For upgrade only. Old angularjs routes start with hash, new ones not.\n   */\n  normalizePath(path) {\n    return path.replace(/^#\\/?/, '');\n  }\n}\n","import { Component, ContentChildren, QueryList } from '@angular/core';\nimport { Breadcrumb, BreadcrumbItem } from './breadcrumb.model';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { BreadcrumbItemComponent } from './breadcrumb-item.component';\n\n@Component({\n  selector: 'c8y-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements Breadcrumb {\n  items: BreadcrumbItem[];\n  @ContentChildren(BreadcrumbItemComponent) private contentChildItems: QueryList<BreadcrumbItem>;\n  private viewInitTimeout;\n\n  constructor(private breadcrumbService: BreadcrumbService) {}\n\n  ngAfterViewInit() {\n    this.items = this.contentChildItems.toArray();\n    this.viewInitTimeout = setTimeout(() =>\n      this.breadcrumbService.add(this as Breadcrumb)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.breadcrumbService.remove(this as Breadcrumb);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\nimport { BreadcrumbItemComponent } from './breadcrumb-item.component';\nimport { BreadcrumbOutletComponent } from './breadcrumb-outlet.component';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbService } from './breadcrumb.service';\n\n/**\n * The angular module definition for breadcrumbs.\n * @exports BreadcrumbComponent\n * @exports BreadcrumbItemComponent\n * @exports BreadcrumbOutletComponent\n */\n@NgModule({\n  declarations: [\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    BreadcrumbOutletComponent\n  ],\n  imports: [\n    RouterModule.forChild([]),\n    CommonModule,\n    TooltipModule.forRoot()\n  ],\n  exports: [\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    BreadcrumbOutletComponent\n  ]\n})\nexport class BreadcrumbModule { }\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Search } from './search.model';\nimport { sortBy } from 'lodash';\nimport { AlertService } from '../alert/alert.service';\nimport { Alert } from '../alert/alert.model';\n\n@Component({\n  selector: 'c8y-search-outlet',\n  templateUrl: './search-outlet.component.html'\n})\nexport class SearchOutletComponent {\n  @Input() search: Search[] = [];\n\n  constructor(private alertService: AlertService) {}\n\n  openSearch() {\n    setTimeout(() => this.focusInputBox(), 100);\n  }\n\n  getByPriority() {\n    return sortBy(this.search, this.byPriority);\n  }\n\n  closeDropdown(dropdown) {\n    dropdown.hide();\n  }\n\n  verifyNotEmpty(term) {\n    if (!term || term === '') {\n      this.alertService.add({ text: 'Type something to execute a search.', type: 'warning' });\n    }\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n\n  private focusInputBox() {\n    const elementToFocus: any = document.querySelector('#search-header-menu input');\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, sortByPriority, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Search } from './search.model';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_SEARCH = new InjectionToken('SearchFactory');\n\n/**\n * A service which defines the dearch function.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService extends StateService implements ExtensionPoint<Search> {\n  items$: Observable<Search[]>;\n  readonly refreshTrigger = new Subject();\n  protected state$ = new BehaviorSubject<Set<Search>>(new Set<Search>());\n\n  constructor(\n    private injector: Injector,\n    router: Router\n  ) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_SEARCH, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: Search[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the search in the header.\n   * @param item The item to add.\n   */\n  add(item: Search) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an search from the header.\n   * @param item The item to remove.\n   */\n  remove(item: Search) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { Search } from './search.model';\nimport { SearchService } from './search.service';\n\n@Component({\n  selector: 'c8y-search',\n  templateUrl: './search.component.html'\n})\nexport class SearchComponent implements Search {\n  @Input() name: string;\n  @Input() icon: string = 'search';\n  @Input() priority: number = 0;\n  @ViewChild('template', {static: false}) template: any;\n  @Output() search = new EventEmitter<Search>();\n  @Input() term: string = '';\n\n  private viewInitTimeout;\n\n  constructor(private searchService: SearchService) { }\n\n  onSearch() {\n    this.search.emit(this);\n  }\n\n  ngAfterViewInit() {\n    this.template = undefined;\n    this.viewInitTimeout = setTimeout(() => this.searchService.add(this as Search));\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.searchService.remove(this as Search);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  ViewChild,\n  SecurityContext\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'c8y-highlight',\n  template: '<span [innerHTML]=\"highlightedText\"></span>'\n})\nexport class HighlightComponent {\n  @ViewChild('text', { read: ElementRef, static: true })\n  container: ElementRef;\n\n  @Input()\n  pattern: string = '';\n\n  @Input()\n  text: string = '';\n\n  @Input()\n  elementClass: string = 'text-info';\n\n  highlightedText: string = '';\n\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  ngOnChanges(): void {\n    let text = this.text;\n    if (this.pattern && this.pattern !== '') {\n      text = this.text.replace(new RegExp(this.pattern, 'i'), `<strong class=\"${this.elementClass}\">$&</strong>`);\n    }\n    this.highlightedText = this.domSanitizer.sanitize(SecurityContext.HTML, text);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { SearchOutletComponent } from './search-outlet.component';\nimport { SearchComponent } from './search.component';\nimport { SearchService } from './search.service';\nimport { FormsModule } from '@angular/forms';\nimport { HighlightComponent } from './highlight.component';\n\n/**\n * The angular module definition for the search.\n * @exports SearchComponent\n * @exports SearchOutletComponent\n * @exports HighlightComponent A component to highlight search results.\n */\n@NgModule({\n  declarations: [\n    SearchOutletComponent,\n    SearchComponent,\n    HighlightComponent\n  ],\n  imports: [\n    FormsModule,\n    BsDropdownModule,\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    SearchOutletComponent,\n    SearchComponent,\n    HighlightComponent\n  ]\n})\nexport class SearchModule { }\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { StatusType, Status, statusIcons, statusAlert } from '../common/status.model';\n\nexport interface ILabels {\n  ok?: string;\n  cancel?: string;\n}\n\n@Component({\n  selector: 'c8y-confirm-modal',\n  templateUrl: './modal-confirm.component.html'\n})\nexport class ConfirmModalComponent implements OnDestroy {\n  result: Promise<boolean>;\n  dismiss: () => void;\n  close: () => void;\n  @Input() title: string;\n  @Input() body: string;\n  @Input() status: StatusType = Status.INFO;\n  @Input() set labels(labels: ILabels) {\n    const { ok = 'OK', cancel = 'Cancel' } = labels || {};\n    this._labels = { ok, cancel };\n  }\n\n  get labels(): ILabels { return this._labels; }\n\n  get classIcon() {\n    return `fa-${statusIcons[this.status]}`;\n  }\n\n  get classAlert() {\n    return statusAlert[this.status];\n  }\n\n  private _labels: ILabels;\n\n  constructor(private modal: BsModalRef) {\n    this._labels = {\n      ok: 'OK',\n      cancel: 'Cancel'\n    };\n    this.result = new Promise((resolve, reject) => {\n      this.dismiss = () => {\n        reject();\n        this.modal.hide();\n      };\n      this.close = () => {\n        resolve(true);\n        this.modal.hide();\n      };\n    });\n  }\n\n  ngOnDestroy() {\n    this.dismiss();\n  }\n}\n","import { Component, Input, Optional, Output, EventEmitter, HostListener } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { gettext } from '../i18n/gettext';\nimport { isEmpty } from 'lodash';\n\nexport interface ILabels {\n  ok?: string;\n  cancel?: string;\n}\n\n/**\n * C8y modal component.\n * ## Example:\n *\n * Creating custom modal:\n * ```typescript\n *  import { Component } from \"@angular/core\";\n *  import { Subject } from 'rxjs';\n *\n * @Component({\n *  selector: \"my-modal\",\n *  template: `\n *    <c8y-modal title=\"CustomTitle\"\n *      (onClose)=\"onClose($event)\"\n *      (onDismiss)=\"onDismiss($event)\"\n *      [labels]=\"labels\"\n *      [disabled]=\"true\" <- will disable ok button\n *      >\n *        <span>I am body of modal</span>\n *        <span>For simple string use body=\"string\"</span>\n *    </c8y-modal>`\n * })\n *\n * export class MyModalComponent {\n *\n *  closeSubject: Subject<boolean> = new Subject();\n *  labels : ILabels = {ok: \"customOK\", cancel: \"customCancel\"};\n *\n *  onDismiss(event){\n *    this.closeSubject.next(false);\n *  }\n *\n *  onClose(event) {\n *    this.closeSubject.next(true);\n *  }\n * }\n * ```\n * Showing modal:\n * ```typescript\n * import { BsModalService } from \"ngx-bootstrap/modal\";\n *\n * constructor(\n *  public bsModalService: BsModalService,\n * ) {}\n *\n * showModal() {\n *  const modalRef = this.bsModalService.show(MyModalComponent);\n *  modalRef.content.closeSubject.subscribe(result => {\n *    console.log('results:', result);\n *  });\n * }\n * ```\n */\n@Component({\n  selector: 'c8y-modal',\n  templateUrl: './modal.component.html',\n})\n\nexport class ModalComponent {\n  @Output() onDismiss: EventEmitter<boolean> = new EventEmitter();\n  @Output() onClose: EventEmitter<boolean> = new EventEmitter();\n  @Input() disabled = false;\n  @Input() close: () => void;\n  @Input() dismiss: () => void;\n  @Input() title: string;\n  @Input() body: string;\n  @Input() customFooter: boolean = false;\n  @Input() set labels({ok, cancel}: ILabels) {\n    this._labels = {ok , cancel};\n  }\n\n  get labels(): ILabels { return this._labels; }\n\n  private _labels: ILabels =  { ok: gettext('OK'), cancel: gettext('Cancel') };\n\n  constructor(@Optional() private modal: BsModalRef) {}\n\n  _dismiss() {\n    let fn = this.dismiss;\n    if (!fn && this.modal) { fn = () => this.modal.hide(); }\n    if (fn) { fn(); }\n    this.onDismiss.emit(true);\n  }\n\n  _close() {\n    let fn = this.close;\n    if (!fn && this.modal) { fn = () => this.modal.hide(); }\n    if (fn) { fn(); }\n    this.onClose.emit(true);\n  }\n\n  @HostListener('document:keydown.enter', ['$event']) onEnterKeyDown(event: KeyboardEvent) {\n    const hasOnlyOneButton = isEmpty(this.labels.ok) !== isEmpty(this.labels.cancel);\n    const isCancelClickable = !this.customFooter && this.labels.cancel;\n    const isOkClickable = !this.customFooter && !this.disabled && this.labels.ok;\n    if (hasOnlyOneButton  && isCancelClickable) {\n      this._dismiss();\n    }\n    if (hasOnlyOneButton  && isOkClickable) {\n      this._close();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmModalComponent } from './modal-confirm.component';\nimport { StatusType, Status } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\n\n/**\n * Service to shiow a modal.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(private modalService: BsModalService) {}\n\n  /**\n   * Shows a quick confirm message modal.\n   * @param title The title of that modal.\n   * @param body The text body to display.\n   * @param status The status.\n   * @param labels The labels to use. Default: { ok: 'Confirm', cancel: 'Cancel'}\n   */\n  async confirm(title: string, body: string, status: StatusType = Status.INFO,  labels: any = {}) {\n    const modalLabels = {ok: labels.ok || gettext('Confirm'), cancel: labels.cancel || gettext('Cancel')};\n    const modalRef = this.modalService.show(ConfirmModalComponent, {initialState: {title, body, labels: modalLabels, status}});\n    return await modalRef.content.result;\n  }\n\n  /**\n   * Shows a quick acknowledge message modal.\n   * @param title The title of that modal.\n   * @param body The text body to display.\n   * @param status The status.\n   * @param acknowledgeLabel The label to use.\n   */\n  async acknowledge(title: string, body: string, status: StatusType = Status.INFO, acknowledgeLabel: string = gettext('Confirm') ) {\n    const labels = {ok: acknowledgeLabel, cancel: null};\n    const modalRef = this.modalService.show(ConfirmModalComponent, {initialState: {title, body, labels, status}});\n    return await modalRef.content.result;\n  }\n}\n","import { Component, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { PopoverDirective } from 'ngx-bootstrap/popover';\nimport { StatusType } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\n\nexport interface PopoverConfirmButtons {\n  /**\n   * The label of the button\n   */\n  label: string;\n  /**\n   * Which action to perform.\n   */\n  action: () => Promise<any>;\n  /**\n   * The status class attached to the button.\n   */\n  status?: StatusType | 'primary';\n}\n\n/**\n * A component to show a popover right next to the\n * user action. Add this component where the confirm modal\n * should be shown and toggle isOpen to display it. You\n * can use `await isShow()` to wait for a result on the\n * click action.\n */\n@Component({\n  selector: 'c8y-popover-confirm',\n  templateUrl: './popover-confirm.component.html'\n})\nexport class PopoverConfirmComponent {\n  @ViewChild(PopoverDirective, {static: false}) popover: PopoverDirective;\n  @Input() buttons: PopoverConfirmButtons[] = [{ label: gettext('cancel'), action: () => Promise.reject()}];\n  @Input() message: string;\n  @Input() title: string;\n  @Input() isOpen = false;\n  @Input() containerClass = '';\n  @Input() placement = 'right';\n  @Input() outsideClick = false;\n\n  click: (action: () => Promise<any>) => void;\n\n  /**\n   * Show the popover. Wait until an action is performed on it.\n   */\n  async show(buttons?: PopoverConfirmButtons[]) {\n    this.buttons = buttons || this.buttons;\n    this.isOpen = true;\n    let result;\n    try {\n      result = await new Promise((resolve, reject) => {\n        return this.click = (action: () => Promise<any>) => action().then(resolve).catch(reject);\n      });\n    } catch (ex) {\n      throw(ex);\n    } finally {\n      this.isOpen = false;\n    }\n    return result;\n  }\n\n  buttonStatus(status) {\n    if (status) {\n      return `btn-${status}`;\n    }\n    return 'btn-link btn-clean';\n  }\n\n  handleOutsideClick() {\n    this.click(() => Promise.reject());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ModalModule as BsModalModule } from 'ngx-bootstrap/modal';\nimport { ConfirmModalComponent } from './modal-confirm.component';\nimport { ModalComponent } from './modal.component';\nimport { ModalService } from './modal.service';\nimport { CommonModule } from '../common/common.module';\nimport { PopoverConfirmComponent } from './popover-confirm.component';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\n\n/**\n * The angular module definition for modal.\n * @exports ConfirmModalComponent\n * @exports ModalComponent\n * @exports PopoverConfirmComponent\n */\n@NgModule({\n  imports: [\n    BsModalModule.forRoot(),\n    CommonModule,\n    PopoverModule.forRoot()\n  ],\n  exports: [\n    ConfirmModalComponent,\n    ModalComponent,\n    PopoverConfirmComponent\n  ],\n  declarations: [\n    ConfirmModalComponent,\n    ModalComponent,\n    PopoverConfirmComponent\n  ],\n  providers: [\n    ModalService\n  ],\n  entryComponents: [\n    ConfirmModalComponent\n  ]\n})\nexport class ModalModule { }\n","import { Injectable } from '@angular/core';\nimport { StateService } from '../common/state-service.abstract';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserMenuItem } from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserMenuService extends StateService {\n  state$: BehaviorSubject<any> = new BehaviorSubject<any>({\n    userMenuItems: new Set<UserMenuItem>()\n  });\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the search in the header.\n   * @param item The item to add.\n   */\n  add(item: UserMenuItem) {\n    this.state.userMenuItems.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an search from the header.\n   * @param item The item to remove.\n   */\n  remove(item: UserMenuItem) {\n    this.state.userMenuItems.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Component, Input, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { UserMenuItem } from './user.model';\nimport { UserMenuService } from './user-menu.service';\n\n@Component({\n  selector: 'c8y-user-menu-item',\n  templateUrl: './user-menu-item.component.html'\n})\nexport class UserMenuItemComponent implements UserMenuItem  {\n  @Input()\n  icon: string;\n  @Input()\n  label: string;\n  @Input()\n  link: string;\n  @Input()\n  target: string;\n  @Input()\n  priority = 0;\n  @ViewChild('template', {static: false}) template: any;\n\n  @Output()\n  click = new EventEmitter<UserMenuItem>();\n  private viewInitTimeout;\n\n  constructor(private userService: UserMenuService) { }\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.userService.add(this as UserMenuItem)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.userService.remove(this as UserMenuItem);\n  }\n\n  onClick() {\n    this.click.emit(this);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicAuth, FetchClient, ICredentials, IUser, UserService } from '@c8y/client';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { UserPreferencesService } from '../common/user-preferences/user-preferences.service';\nimport { gettext } from '../i18n/gettext';\nimport { TranslateService } from '../i18n/translate.service';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-user-edit-modal',\n  templateUrl: './user-edit-modal.component.html'\n})\nexport class UserEditModalComponent {\n  currentUser: IUser;\n  lang: string;\n  changedLang: string;\n  loading = false;\n\n  constructor(\n    public modal: BsModalRef,\n    public user: UserService,\n    public ui: AppStateService,\n    private auth: BasicAuth,\n    private client: FetchClient,\n    private alert: AlertService,\n    private translate: TranslateService,\n    private userPreferences: UserPreferencesService,\n    private modalService: BsModalService\n  ) {\n    this.lang = this.ui.state.lang;\n    this.modalService.onHide.pipe(take(1)).subscribe(( reason: string ) => {\n      if (reason !== null && this.changedLang !== undefined) {\n        this.translate.switchToLanguage(this.lang);\n      }\n    });\n  }\n\n  onDismiss() {\n    if (this.changedLang !== undefined) {\n      this.translate.switchToLanguage(this.lang);\n    }\n    this.modal.hide();\n  }\n\n  onLanguage(lang) {\n    this.changedLang = lang;\n    this.translate.switchToLanguage(this.changedLang);\n  }\n\n  async updateAndClose(user) {\n    this.loading = true;\n    try {\n      await this.user.updateCurrent(user);\n      if (user.password) {\n        this.updateCredentials(user.password);\n      }\n      const currentUserResult = await this.user.current();\n      this.ui.currentUser.next(currentUserResult.data);\n      if (this.changedLang && this.changedLang !== this.lang) {\n        await this.persistLanguage(this.changedLang);\n      }\n      this.modal.hide();\n      this.alert.success(gettext('User saved.'));\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  async persistLanguage(lang) {\n    this.translate.saveInLocalStorage(lang);\n    this.userPreferences.set('language', lang);\n  }\n\n  private updateCredentials(password: string) {\n    const newCredentials: ICredentials = {\n      password,\n      user: this.ui.currentUser.value.id,\n      tenant: this.client.tenant\n    };\n    this.auth.updateCredentials(newCredentials);\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n  FetchClient,\n  BasicAuth,\n  ICredentials,\n  Realtime,\n  UserService,\n  TenantService,\n  IAuthentication,\n  CookieAuth,\n  ITenantLoginOption\n} from '@c8y/client';\nimport { AppStateService } from '../common/ui-state.service';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { switchMap } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { LocationStrategy } from '@angular/common';\nimport { TenantLoginOptionsService } from '@c8y/client';\nimport { get } from 'lodash-es';\n\n/**\n * Service to manage the login.\n */\n@Injectable()\nexport class LoginService {\n  rememberMe: boolean = false;\n  TOKEN_KEY: string = '_tcy8';\n  TFATOKEN_KEY: string = 'TFAToken';\n  OAUTH2_INTERNAL_TYPE: string = 'OAUTH2_INTERNAL';\n  loginMode: any;\n  oauthOptions: any;\n  isFirstLogin = true;\n  GREEN_MIN_LENGTH_DEFAULT = 8;\n\n  // tslint:disable:max-line-length\n  ERROR_MESSAGES = {\n    minlength: gettext('Password must have at least 8 characters and no more than 32.'),\n    password_missmatch: gettext('Password confirmation does not match.'),\n    maxlength: gettext('Password must have at least 8 characters and no more than 32.'),\n    password_strength: gettext(\n      'Your password is not strong enough. Please include numbers, lower and upper case characters'\n    ),\n    remote_error: gettext('Server error occurred.'),\n    email: gettext('Invalid email address.'),\n    password_change: gettext('Your password is expired. Please set a new password.'),\n    password_reset_token_expired: gettext(\n      'Password reset link expired. Please enter your email address to receive a new one.'\n    ),\n    tfa_pin_invalid: gettext('The code you entered is invalid. Please try again.'),\n    pattern_phonenumber: gettext(\n      'Invalid phone number format. Only digits, spaces, slashes (\"/\") and dashes (\"-\") allowed.'\n    ),\n    pattern_newPassword: gettext(\n      'Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\\'\",.<>{}[]\\\\/'\n    ),\n    international_number_required: gettext(\n      'International phone number required, in the format +49 9 876 543 210.'\n    ),\n    phone_number_error: gettext('Could not update phone number.'),\n    pinAlreadySent: gettext(\n      'The verification code was already sent. For a new verification code, please click on the link above.'\n    ),\n    passwordConfirm: gettext('Password confirmation does not match.'),\n    tfaExpired: gettext('Two-factor authentication token expired.')\n  };\n  // tslint:enable:max-line-length\n\n  private SUCCESS_MESSAGES = {\n    password_changed: gettext('Password changed. You can now log in using new password.'),\n    password_reset_requested: gettext(\n      'Password reset request has been sent. Please check your email.'\n    ),\n    resend_sms: gettext('Verification code SMS resent.')\n  };\n\n  private passwordStrengthSetting = {\n    enforcePasswordStrength: false,\n    greenMinLength: this.GREEN_MIN_LENGTH_DEFAULT\n  };\n\n  private localhostRegExp = new RegExp('localhost');\n  private localhostIpRegExp = new RegExp('127.0.0.1');\n  private showTenantRegExp = new RegExp('showTenant');\n\n  constructor(\n    private client: FetchClient,\n    private basicAuth: BasicAuth,\n    private cookieAuth: CookieAuth,\n    private ui: AppStateService,\n    private user: UserService,\n    private tenant: TenantService,\n    private realtime: Realtime,\n    private alert: AlertService,\n    private api: ApiService,\n    private tenantLoginOptionsService: TenantLoginOptionsService,\n    @Optional() private location: LocationStrategy\n  ) {\n    this.autoLogout();\n    this.initLoginOptions();\n  }\n\n  /**\n   * Returns the current tenant.\n   * @return The tenant name.\n   */\n  getTenant() {\n    return this.client.tenant;\n  }\n\n  initLoginOptions() {\n    const loginOptions = this.ui.state.loginOptions || [];\n    const isOAuth2 = ({ type, grantType }) =>\n      type === 'OAUTH2' && grantType === 'AUTHORIZATION_CODE';\n    this.loginMode = loginOptions.find(({ type }) => type === 'OAUTH2_INTERNAL') ||\n      loginOptions.find(({ type }) => type === 'BASIC') ||\n      loginOptions.find(isOAuth2) || { type: 'BASIC' };\n    this.oauthOptions = loginOptions.find(isOAuth2) || {};\n  }\n\n  redirectToOauth() {\n    const { initRequest } = this.oauthOptions;\n    const fullPath = (this.location ? (this.location as any)._platformLocation : window).location\n      .href;\n    const redirectUrl = encodeURIComponent(fullPath);\n    const originUriParam = `${initRequest.includes('?') ? '&' : '?'}originUri=${redirectUrl}`;\n    window.location.href = `${initRequest}${originUriParam}`;\n  }\n\n  autoLogout() {\n    const errorPattern = /invalid\\scredentials.*pin.*generate/i;\n    const isTfaExpired = data =>\n      data && typeof data.message === 'string' && errorPattern.test(data.message);\n    this.ui.currentUser\n      .pipe(\n        switchMap(u =>\n          u ? this.api.hookResponse(({ response }) => response.status === 401) : EMPTY\n        )\n      )\n      .subscribe(async (apiCall: any) => {\n        const { response } = apiCall;\n        let willLogout = false;\n        if (isTfaExpired(response.data)) {\n          willLogout = true;\n        } else {\n          if (typeof response.json === 'function') {\n            const data = await response.clone().json();\n            if (isTfaExpired(data)) {\n              willLogout = true;\n            }\n          }\n        }\n        if (willLogout) {\n          this.logout(false);\n          setTimeout(() => this.alert.danger(this.ERROR_MESSAGES.tfaExpired), 500);\n        }\n      });\n  }\n\n  /**\n   * Gets the minimal number of characters that a password should have to be considered a “green” strong one.\n   * @return The min length for password or default value.\n   */\n  getGreenMinLength() {\n    const loginOption = this.getLoginOption();\n    const greenMinLength = Number(get(loginOption, 'greenMinLength'));\n    this.passwordStrengthSetting.greenMinLength = isNaN(greenMinLength) ? this.GREEN_MIN_LENGTH_DEFAULT : greenMinLength;\n    return this.passwordStrengthSetting.greenMinLength;\n  }\n\n  /**\n   * Checks if password strength is enforced.\n   * @return true if enforced.\n   */\n  getEnforcePasswordStrength() {\n    const loginOption = this.getLoginOption();\n    this.passwordStrengthSetting.enforcePasswordStrength = get(loginOption, 'enforceStrength', 'false') === 'true' ? true : false;\n    return this.passwordStrengthSetting.enforcePasswordStrength;\n  }\n\n  /**\n   * Clears all backend errors.\n   */\n  cleanMessages() {\n    this.alert.clearAll();\n  }\n\n  /**\n   * Adds a new success message\n   * @param successKey The key of the success message as used in SUCCESS_MESSAGES\n   */\n  addSuccessMessage(successKey: string) {\n    const successMessage = this.SUCCESS_MESSAGES[successKey];\n    if (successMessage) {\n      this.alert.add({\n        text: successMessage,\n        type: 'success',\n        timeout: 0\n      });\n    }\n  }\n\n  /**\n   * Returns the current strategy. Defaults to cookie, if a token\n   * is found in local or session storage we switch to basic auth.\n   * @returns The current auth strategy.\n   */\n  getAuthStrategy(): IAuthentication {\n    let authStrategy = this.cookieAuth as IAuthentication;\n    const token = this.getStoredToken();\n    const tfa = this.getStoredTfaToken();\n    if (token) {\n      authStrategy = this.basicAuth;\n      this.setCredentials({ token, tfa }, this.basicAuth);\n    }\n    return authStrategy;\n  }\n\n  /**\n   * Forces the use of basic auth as strategy with this credentials.\n   * @param credentials The credentials to use.\n   */\n  useBasicAuth(credentials: ICredentials) {\n    this.setCredentials(credentials, this.basicAuth);\n    return this.basicAuth;\n  }\n\n  /**\n   * Tries to login a user with the given credentials.\n   * If successful, the current tenant and user is set. If not an error\n   * is thrown. It also verifies if the user is allowed to open the\n   * current app.\n   * @param auth The authentication strategy used.\n   * @param credentials The credentials to try to login.\n   */\n  async login(auth: IAuthentication = this.getAuthStrategy(), credentials?: ICredentials) {\n    this.client.setAuth(auth);\n\n    const tenantRes = await this.tenant.current();\n    const tenant = tenantRes.data;\n\n    if (await this.switchLoginMode(credentials)) {\n      auth = this.cookieAuth;\n    }\n\n    const userRes = await this.user.current();\n    const user = userRes.data;\n    await this.verifyAppAccess();\n\n    const supportUserName = this.getSupportUserName(credentials);\n    const token = this.setCredentials(\n      {\n        tenant: tenant.name,\n        user: (supportUserName ? `${supportUserName}$` : '') + user.userName\n      },\n      auth\n    );\n\n    if (token) {\n      this.storeBasicAuthToken(token);\n    }\n\n    await this.authFulfilled(tenant, user, supportUserName);\n  }\n\n  /**\n   * Saves tenant, user and support user info to the app state.\n   * @param tenant The current tenant object.\n   * @param user The current user object.\n   * @param supportUserName The current support user name.\n   */\n  async authFulfilled(tenant?, user?, supportUserName?) {\n    if (!tenant) {\n      const { data } = await this.tenant.current();\n      tenant = data;\n      this.client.tenant = tenant.name;\n    }\n\n    if (!user) {\n      const { data } = await this.user.current();\n      user = data;\n    }\n\n    if (!supportUserName) {\n      supportUserName = null;\n    }\n\n    this.ui.setUser({ user, supportUserName });\n    this.ui.currentTenant.next(tenant);\n  }\n\n  /**\n   * Switch the login mode to CookieAuth if the\n   * user has configured to use it in loginOptions.\n   * @param credentials The credentials for that login\n   */\n  async switchLoginMode(credentials?: ICredentials) {\n    const isPasswordGrantLogin = this.isPasswordGrantLogin(credentials);\n    if (isPasswordGrantLogin && credentials) {\n      const params = new URLSearchParams({\n        grant_type: 'PASSWORD',\n        username: credentials.user,\n        password: credentials.password,\n        tfa_code: credentials.tfa\n      });\n      const urlParams = new URLSearchParams(this.loginMode.initRequest.split('?').pop());\n      credentials.tenant = urlParams.get('tenant_id');\n      const res = await this.client.fetch(`tenant/oauth?${urlParams.toString()}`, {\n        method: 'POST',\n        body: params.toString(),\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n      if (!(res as Response).ok) {\n        throw { res };\n      }\n      this.client.setAuth(this.cookieAuth);\n      this.cleanLocalStorage();\n      this.basicAuth.logout();\n    }\n    return isPasswordGrantLogin;\n  }\n\n  isPasswordGrantLogin(credentials?: ICredentials) {\n    const isSupportUser = credentials && credentials.user.includes('$');\n    return !!(\n      !isSupportUser &&\n      this.loginMode &&\n      this.loginMode.type === this.OAUTH2_INTERNAL_TYPE\n    );\n  }\n\n  /**\n   * Verifies if the tenant input field should be shown\n   * or not.\n   * @returns If true, show the tenant input.\n   */\n  showTenant(): boolean {\n    return !this.ui.state.loginOptions || this.isLocal() || this.isShowTenant();\n  }\n\n  /**\n   * Logs the user out\n   * @param reload If set to false, the page will not reload\n   */\n  async logout(reload = true) {\n    let resData = null;\n    try {\n      const [basicRes, cookieRes] = await this.reset();\n      resData = await cookieRes.json();\n    } catch (ex) {\n      this.alert.removeLastDanger();\n    } finally {\n      if (resData && resData.url) {\n        this.redirect(resData.url);\n      } else if (reload) {\n        window.location.reload();\n      }\n    }\n  }\n\n  /**\n   * Resets the stored auth-data\n   */\n  async reset() {\n    this.cleanLocalStorage();\n    this.cleanSessionStorage();\n    this.realtime.disconnect();\n    this.ui.currentUser.next(null);\n    return Promise.all([this.basicAuth.logout(), this.cookieAuth.logout()]);\n  }\n\n  /**\n   * Saves the TFA token to local or session storage.\n   * @param tfaToken The tfa token to save.\n   * @param storage The storage to use (local or session).\n   */\n  saveTFAToken(tfaToken: string, storage: Storage) {\n    storage.setItem(this.TFATOKEN_KEY, tfaToken);\n  }\n\n  /**\n   * Request the manifest -> on 401 user has no access to that application\n   * and we throw the error up to the login form.\n   */\n  async verifyAppAccess() {\n    try {\n      await this.ui.loadManifest();\n    } catch (ex) {\n      if (!(ex.res && ex.res.status === 404 && this.isLocal())) {\n        throw ex;\n      }\n    }\n  }\n\n  /**\n   * Sets the tenant to the client and updates the credentials on the\n   * auth strategy.\n   * @param credentials The name of the tenant.\n   * @param authStrategy The authentication strategy used.\n   * @return Returns the token if basic auth, otherwise undefined.\n   */\n  private setCredentials(credentials: ICredentials, authStrategy: IAuthentication) {\n    if (credentials.tenant) {\n      this.client.tenant = credentials.tenant;\n    }\n    // Check if a token is already set (case for support user login)\n    // if yes -> we just need to update the user, and reuse the token\n    // of the support user.\n    // Therefore we need to pass user and tenant, to get\n    // just the stored token and nothing else (see BasicAuth.ts:31).\n    const token = this.basicAuth.updateCredentials({\n      tenant: credentials.tenant,\n      user: credentials.user\n    });\n    const newCredentials = { token, ...credentials };\n\n    return authStrategy.updateCredentials(newCredentials);\n  }\n\n  /**\n   * Verifies if the current user is a developer or not.\n   * Running on localhost means development mode.\n   */\n  private isLocal(): boolean {\n    const hostname = window.location.hostname;\n    return this.localhostIpRegExp.test(hostname) || this.localhostRegExp.test(hostname);\n  }\n\n  /**\n   * Save the token to local or session storage.\n   * @param token The token to save.\n   * @param storage The storage to use (local or session).\n   */\n  private saveToken(token: string, storage: Storage) {\n    storage.setItem(this.TOKEN_KEY, token);\n  }\n\n  private storeBasicAuthToken(token: string) {\n    this.saveToken(token, sessionStorage);\n    if (this.rememberMe) {\n      this.saveToken(token, localStorage);\n    }\n  }\n\n  private cleanLocalStorage() {\n    localStorage.removeItem(this.TOKEN_KEY);\n    localStorage.removeItem(this.TFATOKEN_KEY);\n  }\n\n  private cleanSessionStorage() {\n    sessionStorage.removeItem(this.TOKEN_KEY);\n    sessionStorage.removeItem(this.TFATOKEN_KEY);\n  }\n\n  private isShowTenant(): boolean {\n    return this.showTenantRegExp.test(window.location.href);\n  }\n\n  private redirect(url: string) {\n    window.location.href = url;\n  }\n\n  private getLoginOption(): ITenantLoginOption {\n    const loginOptions = this.ui.state.loginOptions || [];\n    const [loginOption] = loginOptions;\n    return loginOption;\n  }\n  /**\n   * Gets support user name from credentials.\n   * @param credentials Credentials object (defaults to the stored one).\n   * @returns Support user name.\n   */\n  private getSupportUserName(credentials: ICredentials = this.getStoredCredentials()): string {\n    if (!credentials) {\n      return null;\n    }\n    const supportUserName = credentials.user.match(/^(.+\\/)?((.+)\\$)?(.+)?$/)[3];\n    return supportUserName;\n  }\n\n  /**\n   * Gets credentials object from the stored token.\n   * @returns Credentials object.\n   */\n  private getStoredCredentials(): ICredentials {\n    const token = this.getStoredToken();\n    if (!token) {\n      return null;\n    }\n    return this.decodeToken(token);\n  }\n\n  /**\n   * Gets stored token from local storage or session storage.\n   * @returns Stored token.\n   */\n  private getStoredToken(): string {\n    return localStorage.getItem(this.TOKEN_KEY) || sessionStorage.getItem(this.TOKEN_KEY);\n  }\n\n  /**\n   * Gets stored TFA token from local storage or session storage.\n   * @returns Stored TFA token.\n   */\n  private getStoredTfaToken(): string {\n    return localStorage.getItem(this.TFATOKEN_KEY) || sessionStorage.getItem(this.TFATOKEN_KEY);\n  }\n\n  /**\n   * Decodes token to credentials object.\n   * @param token Token to decode.\n   * @returns Credentials object.\n   */\n  private decodeToken(token: string): ICredentials {\n    const decoded = decodeURIComponent(escape(window.atob(token)));\n    const split = decoded.match(/(([^/]*)\\/)?([^/:]+):(.+)/);\n\n    return {\n      tenant: split[2],\n      user: split[3],\n      password: split[4]\n    };\n  }\n}\n","import { Type } from '@angular/core';\nimport { IResultList } from '@c8y/client';\n\n/*\n * For reference: the structure of current device column-related objects.\n * TODO: Can be removed when \"All devices\" is fully migrated.\n *\n * Services involved:\n * - c8yFilteringSortingColumns\n * - c8yFilteringSortingInventoryQueries\n * - c8yDeviceListColumns\n * - c8yFilteringSortingCollections?? -> for other tables in tenant/cell ID usage statistics feature\n *\n * Components involved:\n * - c8yFilteredSortedList -> this needs to be gravely adapted\n *\n * States saved in user preferences:\n * - Columns config (ALL_DEVICES_COLUMNS_CONFIG_USER_PREFERENCES_KEY)\n * - Columns meta (ALL_DEVICES_COLUMNS_META_USER_PREFERENCES_KEY_PREFIX)\n *\n * States saved in dynamic group object:\n * - Columns config (COLUMNS_CONFIG_FRAGMENT)\n * - Columns meta (COLUMNS_META_FRAGMENT)\n * - Query string (QUERY_STRING_FRAGMENT)\n *\n * TO-FUTURE-SELF note:\n * - `col.config.filtering` and `col.config.sorting` (the models) populate\n * `col.filtering` and `col.sorting` (the views).\n * - `getFilter` can return a query object (for server-side filtering) or\n * a filter function (for server-side filtering).\n */\ninterface DeviceColumn {\n  name: string;\n  header: string;\n  config: {\n    filtering: object;\n    sorting: {\n      order: number;\n    };\n    override: DeviceColumn;\n  };\n  cell: {\n    class: string;\n    innerClass: string;\n    scopeExtensions: object;\n    template: string;\n    style: object;\n  };\n  filtering: {\n    form: object[];\n    schema: {\n      type: string;\n      properties: {\n        type: string;\n        [key: string]: any;\n      };\n    };\n    getFilter(filteringModel: object): object | FilterFunction;\n  };\n  sorting: {\n    path?: string;\n    paths?: string;\n  };\n  meta: {\n    custom: boolean;\n    key: string;\n    headerName: string;\n    fragmentPath: string;\n    active: boolean;\n    filteringMode: 'EQUALITY' | 'EXISTENCE';\n  };\n}\n\ntype FilterFunction = (item: object) => boolean;\n\nexport interface DataGrid {\n  columns: Column[];\n  rows: Row[];\n  pagination: Pagination;\n  serverSideDataCallback: ServerSideDataCallback;\n  selectable: boolean;\n  selectionPrimaryKey: string;\n  displayOptions: DisplayOptions;\n  actionControls: ActionControl[];\n  bulkActionControls: BulkActionControl[];\n}\n\n/*\n * Column\n */\nexport interface Column {\n  name: string | SpecialColumnName;\n  header?: string;\n  path?: string;\n  visible?: boolean;\n  positionFixed?: boolean;\n\n  /*\n   * Cosmetics\n   */\n  dataType?: ColumnDataType;\n  gridTrackSize?: string;\n  headerCSSClassName?: string | string[];\n  cellCSSClassName?: string | string[];\n\n  /*\n   * Sorting-Filtering\n   */\n  sortable?: boolean;\n  sortOrder?: SortOrder;\n\n  filterable?: boolean;\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: any;\n\n  /*\n   * Custom renderer\n   */\n  cellRendererComponent?: Type<any>;\n  headerCellRendererComponent?: Type<any>;\n  filteringFormRendererComponent?: Type<any>;\n}\n\nexport const enum SpecialColumnName {\n  Checkbox = 'checkbox',\n  Actions = 'actions'\n}\n\nexport const enum ColumnDataType {\n  Icon = 'icon',\n  Numeric = 'numeric',\n  TextShort = 'text-short',\n  TextLong = 'text-long'\n}\n\nexport const enum ColumnDataRecordClassName {\n  Icon = 'data-record-icon',\n  Header = 'data-record-header',\n  Default = ''\n}\n\nexport const minColumnGridTrackSize = 80;\n\nexport const ratiosByColumnTypes = {\n  icon: 1,\n  numeric: 1,\n  'text-short': 1.67,\n  'text-long': 3.33\n};\n\nexport type SortOrder = 'asc' | 'desc' | '';\n\nexport type FilterPredicateFunction = (item: object, path: string) => boolean;\n\nexport enum FilteringActionType {\n  ApplyFilter = 'APPLY_FILTER',\n  ResetFilter = 'RESET_FILTER'\n}\n\nexport interface Row {\n  id: string;\n  [key: string]: any;\n}\n\nexport interface Pagination {\n  currentPage: number;\n  pageSize: number;\n}\n\nexport type ServerSideDataCallback = (\n  dataSourceModifier: DataSourceModifier\n) => ServerSideDataResult;\nexport interface DataSourceModifier {\n  columns: Column[];\n  searchText: string;\n  pagination: Pagination;\n  selection: {\n    enabled: boolean;\n    primaryKey: string;\n  };\n}\n\n/**\n * Describes result from server with data and additional statistics.\n */\nexport type ServerSideDataResult = IResultList<object> & {\n  /** The real grand total number of items (the whole dataset). */\n  size: number;\n\n  /** The number of items after filtering applied to the whole dataset (subset). */\n  filteredSize: number;\n\n  /** The list of ids of all filtered items (subset). */\n  filteredDataIds?: string[];\n};\n\nexport interface DataSourceStats {\n  /** The real grand total number of items (the whole dataset). */\n  size: number;\n\n  /** The number of items after filtering applied to the whole dataset (subset). */\n  filteredSize: number;\n\n  /** The number of the current page. */\n  currentPage: number;\n\n  /** The number of items currently shown in the list view, a.k.a. current page (what the user sees on screen). */\n  currentPageSize: number;\n\n  /** The number of items on the first page.  */\n  firstPageSize: number;\n}\n\nexport interface DisplayOptions {\n  striped: boolean;\n  bordered: boolean;\n  gridHeader: boolean;\n}\n\nexport interface ActionControl {\n  type: BuiltInActionType | string;\n  text?: string;\n  icon?: string;\n  // tslint:disable-next-line:ban-types\n  callback: ((item: Row, reload: () => void) => void) | Function;\n  [key: string]: any;\n}\n\nexport interface BulkActionControl extends ActionControl {\n  callback(selectedItemIds: string[], reload: () => void): void;\n}\n\nexport const enum BuiltInActionType {\n  Edit = 'EDIT',\n  Delete = 'DELETE',\n  Export = 'EXPORT'\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { UserService, ICredentials, FetchClient, Client, IAuthentication } from '@c8y/client';\nimport { AppStateService } from '../common/ui-state.service';\nimport { AlertService } from '../alert/alert.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { LoginService } from '../login/public-api';\nimport { clone } from 'lodash-es';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-password-confirm-modal',\n  templateUrl: './password-confirm-modal.component.html'\n})\nexport class PasswordConfirmModalComponent {\n  @Output() passwordConfirmedEmitter = new EventEmitter<boolean>();\n  loading = false;\n  password: string;\n\n  @ViewChild('modal', { static: false }) private modal: ModalComponent;\n\n  constructor(\n    public user: UserService,\n    public ui: AppStateService,\n    private client: FetchClient,\n    private alert: AlertService,\n    private loginService: LoginService\n  ) {}\n\n  async passwordConfirm() {\n    if (this.password) {\n      const supportUserName = this.ui.currentSupportUserName.value;\n      const userId = this.ui.currentUser.value.id;\n      const credentials: ICredentials = {\n        password: this.password,\n        user: `${supportUserName ? `${supportUserName}$` : ''}${userId}`,\n        tenant: this.client.tenant\n      };\n      try {\n        this.loading = true;\n        const strategy = clone(this.loginService.useBasicAuth({}));\n        delete credentials.tfa;\n        strategy.updateCredentials(credentials);\n        const newClient = this.createNewClient(strategy, this.client.baseUrl);\n        await newClient.user.current();\n        this.emitSuccessAndClose();\n      } catch (e) {\n        if (e.res && e.res.status === 401 && e.data && /pin|totp/i.test(e.data.message)) {\n          this.emitSuccessAndClose();\n        } else {\n          this.alert.danger(gettext(\"Provided password doesn't match your current one.\"));\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n\n  cancel() {\n    this.passwordConfirmedEmitter.emit(false);\n    this.modal._dismiss();\n  }\n\n  createNewClient(strategy: IAuthentication, baseUrl: string) {\n    return new Client(strategy, baseUrl);\n  }\n\n  private emitSuccessAndClose() {\n    this.passwordConfirmedEmitter.emit(true);\n    this.modal._dismiss();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PasswordStrength } from '@c8y/client';\nimport { filter } from 'lodash-es';\nimport { PasswordStrengthColor } from './password.model';\nimport { gettext } from '../i18n/gettext';\nimport { PasswordConfirmModalComponent } from './password-confirm-modal.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class PasswordService {\n\n  private GREEN: PasswordStrengthColor = {\n    colorName: 'green',\n    color: 'rgb(0, 128, 0)',\n    description: gettext('strong'),\n    passwordStrength: PasswordStrength.GREEN\n  };\n  private YELLOW: PasswordStrengthColor = {\n    colorName: 'yellow',\n    color: 'rgb(255, 204, 51)',\n    description: gettext('medium'),\n    passwordStrength: PasswordStrength.YELLOW\n  };\n  private RED: PasswordStrengthColor = {\n    colorName: 'red',\n    color: 'rgb(170, 0, 51)',\n    description: gettext('weak'),\n    passwordStrength: PasswordStrength.RED\n  };\n\n  constructor(private modalService: BsModalService) {}\n\n  confirmPassword() {\n    const modalInstance: any = this.modalService.show(PasswordConfirmModalComponent);\n    return modalInstance.content.passwordConfirmedEmitter.pipe(take(1));\n  }\n\n  hasLowerCase(password: string) {\n    return (password.search(/[a-z]/) !== -1);\n  }\n\n  hasUpperCase(password: string) {\n    return (password.search(/[A-Z]/) !== -1);\n  }\n\n  hasNumbers(password: string) {\n    return (password.search(/[0-9]/) !== -1);\n  }\n\n  hasSpecialChars(password: string) {\n    return (password.search(/[^0-9a-zA-Z]+/) !== -1);\n  }\n\n  getStrengthColor(password: string): PasswordStrengthColor {\n    const passwordStrength = filter([\n      this.hasLowerCase(password),\n      this.hasUpperCase(password),\n      this.hasNumbers(password),\n      this.hasSpecialChars(password)\n    ]).length;\n\n    if (passwordStrength > 2) {\n      return this.GREEN;\n    } else if (passwordStrength >= 2) {\n      return this.YELLOW;\n    } else {\n      return this.RED;\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { UserService } from '@c8y/client';\nimport { Status } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\nimport { ModalService } from '../modal/modal.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LoginService } from '../login/public-api';\nimport { AlertService } from '../alert/public-api';\n\n@Component({\n  selector: 'c8y-user-totp-setup',\n  templateUrl: './user-totp-setup.component.html'\n})\nexport class UserTotpSetupComponent {\n  constructor(\n    private user: UserService,\n    private modalService: ModalService,\n    private modal: BsModalRef,\n    private loginService: LoginService) { }\n\n  async totpSetupVerified(token) {\n    await this.user.activateTotp();\n    this.modal.hide();\n    try {\n      await this.modalService.acknowledge(\n        gettext('Logout required'),\n        gettext('You must log out in order to apply your changes'),\n        Status.WARNING,\n        gettext('Log out')\n      );\n      await this.loginService.logout();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  close() {\n    this.modal.hide();\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport {\n  IUser,\n  UserService,\n  TenantLoginOptionsService\n} from '@c8y/client';\nimport { clone } from 'lodash-es';\nimport { AppStateService } from '../common/ui-state.service';\nimport { TranslateService } from '../i18n/translate.service';\nimport { NewPassword } from '../authentication/password.model';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { PasswordService } from '../authentication/password.service';\nimport { UserTotpSetupComponent } from './user-totp-setup.component';\nimport { AlertService } from '../alert/alert.service';\nimport { ModalService } from '../modal/modal.service';\n\nexport interface User extends IUser {\n  phone: string;\n  sendPasswordResetEmail: boolean;\n  newsletter?: boolean;\n}\n\n@Component({\n  selector: 'c8y-user-edit',\n  templateUrl: './user-edit.component.html'\n})\nexport class UserEditComponent implements OnInit {\n  @Input() lang: string;\n  @Input() loading: boolean = false;\n  @Input() set user(u: User) {\n    this._user = clone(u);\n    this.userIsExternal = u.customProperties.userOrigin === 'OAUTH2';\n  }\n  get user() { return this._user; }\n  @Output() onUser: EventEmitter<User> = new EventEmitter();\n  @Output() onLanguage: EventEmitter<string> = new EventEmitter();\n  @Output() onCancel: EventEmitter<void> = new EventEmitter();\n  userHasActiveTotp = false;\n  userCanSetupTotp = false;\n  userIsExternal;\n  private _user: User;\n\n  constructor(\n    public state: AppStateService,\n    public translate: TranslateService,\n    public passwordService: PasswordService,\n    public modalConfirmService: ModalService,\n    private bsModalService: BsModalService,\n    private alert: AlertService,\n    private userService: UserService,\n    private tenantLoginOptionsService: TenantLoginOptionsService,\n  ) {}\n\n  async ngOnInit() {\n    await this.initializeTotpSettings();\n  }\n\n  get langs() {\n    return this.state.state.langs;\n  }\n\n  setupTotp() {\n    this.bsModalService.show(UserTotpSetupComponent, { class: 'modal-sm' });\n    this.cancel(); // to close the user edit modal and prevent console errors on logout\n  }\n\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  save() {\n    if (!this.loading) {\n      this._user.password ? this.saveAfterPasswordConfirmation() : this.onUser.emit(this._user);\n    }\n  }\n\n  onNewPasswordChanged(newPassword: NewPassword) {\n    this._user.password = newPassword.password;\n  }\n\n  private async initializeTotpSettings() {\n    try {\n      this.userCanSetupTotp = await this.canUserSetupTotp();\n      if (this.userCanSetupTotp) {\n        const { data: totpActivity } = await this.userService.getActivityTotp();\n        this.userHasActiveTotp = totpActivity.isActive;\n      }\n    } catch (ex) {\n      this.alert.removeLastDanger();\n    }\n  }\n\n  private async canUserSetupTotp() {\n    // we don't check for tenant options here due to permission restrictions on that end-point\n    const { loginOptions } = (await this.tenantLoginOptionsService.detail()).data;\n    return loginOptions.some(({ tfaStrategy = '' }) =>  tfaStrategy.toLowerCase() === 'totp');\n  }\n\n  private saveAfterPasswordConfirmation() {\n    this.passwordService.confirmPassword().subscribe((confirmed) => {\n      if (confirmed) {\n        this.onUser.emit(this._user);\n      }\n    });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { TenantService, UserService } from '@c8y/client';\n\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { LoginService } from '../login/login.service';\nimport { ModalService } from '../modal/modal.service';\nimport { Observable } from 'rxjs';\nimport { OptionsService } from '../common/options.service';\nimport { Status } from '../common/status.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserEditModalComponent } from './user-edit-modal.component';\nimport { UserMenuItem } from './user.model';\nimport { gettext } from '../i18n/gettext';\nimport { map } from 'rxjs/operators';\nimport { sortBy } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-user-menu-outlet',\n  templateUrl: './user-menu-outlet.component.html'\n})\nexport class UserMenuOutletComponent {\n  @Input()\n  items: UserMenuItem[];\n  open: boolean;\n\n  constructor(\n    public ui: AppStateService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private loginService: LoginService,\n    private translateService: TranslateService,\n    private tenantService: TenantService,\n    private alertService: AlertService,\n    private user: UserService,\n    private optionsService: OptionsService\n  ) {}\n\n  copyIt(text: string) {\n    const handler: EventListenerObject = {\n      handleEvent: (e: ClipboardEvent) => {\n        e.clipboardData.setData('text/plain', text);\n        e.preventDefault();\n      }\n    };\n    document.addEventListener('copy', handler);\n\n    let copied;\n    try {\n      copied = document.execCommand('copy');\n    } catch (e) {\n      copied = false;\n    }\n\n    if (copied) {\n      this.alertService.addByText('success', gettext('Copied to clipboard.'));\n    } else {\n      this.alertService.addByText('danger', gettext('Could not copy to clipboard.'));\n    }\n\n    document.removeEventListener('copy', handler);\n  }\n\n  async editUser() {\n    this.bsModalService.show(UserEditModalComponent);\n  }\n\n  async logout() {\n    await this.loginService.logout();\n  }\n\n  async activateSupportAccess() {\n    const title = gettext('Activate support user access');\n\n    const companyName = this.optionsService.get('companyName', 'Cumulocity');\n    const textWithCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to allow a support user from {{companyName}} to access your tenant to help you with your issue.'\n    );\n    const textWithoutCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to allow a support user to access your tenant to help you with your issue.'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const body = [\n      this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {\n        companyName\n      }),\n      this.translateService.instant(finalQuestion)\n    ].join(' ');\n\n    const labels = {\n      ok: gettext('Activate access'),\n      cancel: gettext('Cancel')\n    };\n\n    const successMsg = gettext('Support user access activated.');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.tenantService.enableSupportUser();\n      await this.refreshCurrentUser();\n      this.alertService.success(successMsg);\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async deactivateSupportAccess() {\n    const title = gettext('Deactivate support user access');\n\n    const companyName = this.optionsService.get('companyName', 'Cumulocity');\n    const textWithCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to block a support user from {{companyName}} from accessing your tenant to help you with your issue.'\n    );\n    const textWithoutCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to block a support user from accessing your tenant to help you with your issue.'\n    );\n    const { data: currentUser } = await this.user.current();\n    const isTenantAdmin = await this.user.hasRole(currentUser, 'ROLE_TENANT_ADMIN');\n    const tenantAdminNote = gettext(\n      // tslint:disable-next-line:max-line-length\n      'Deactivating support access as tenant admin will disable all other support requests on your tenant.'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const body = [\n      this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {\n        companyName\n      }),\n      isTenantAdmin ? this.translateService.instant(tenantAdminNote) : '',\n      this.translateService.instant(finalQuestion)\n    ]\n      .filter(Boolean)\n      .join(' ');\n\n    const labels = {\n      ok: gettext('Deactivate access'),\n      cancel: gettext('Cancel')\n    };\n\n    const successMsg = gettext('Support user access deactivated.');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.tenantService.disableSupportUser();\n      await this.refreshCurrentUser();\n      this.alertService.success(successMsg);\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  getSortedItems() {\n    return sortBy(Array.from(this.items), this.byPriority);\n  }\n\n  private async refreshCurrentUser() {\n    const currentUserResult = await this.user.current();\n    this.ui.currentUser.next(currentUserResult.data);\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PasswordService } from './password.service';\nimport { LoginService } from '../login/login.service';\nimport { assign, map } from 'lodash-es';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-password-check-list',\n  templateUrl: './password-check-list.component.html',\n  styles: []\n})\n\nexport class PasswordCheckListComponent implements OnInit {\n\n  @Input('password')\n  set password(password: string) {\n    if (typeof password === 'string') {\n      this.onPasswordChange(password);\n    }\n  }\n\n  minGreenLength: number = 0;\n\n  checklist = [\n    {\n      label: gettext('Include lowercase characters (e.g. abcdef)'),\n      check: this.passwordStrengthChecker.hasLowerCase,\n      icon: '',\n      contextualColor: ''\n\n    },\n    {\n      label: gettext('Include uppercase characters (e.g. ABCDEF)'),\n      check: this.passwordStrengthChecker.hasUpperCase,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Include numbers (e.g. 123456)'),\n      check: this.passwordStrengthChecker.hasNumbers,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Include symbols (e.g. !@#$%^)'),\n      check: this.passwordStrengthChecker.hasSpecialChars,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Must have at least {{length}} characters'),\n      check: (password) => password.length >= this.minGreenLength,\n      icon: '',\n      contextualColor: ''\n    }\n  ];\n\n  constructor(public loginService: LoginService,\n              private passwordStrengthChecker: PasswordService) {\n  }\n\n  ngOnInit() {\n    this.minGreenLength = this.loginService.getGreenMinLength();\n  }\n\n  get translateParams() {\n    return {\n      length: this.minGreenLength\n    };\n  }\n\n  onPasswordChange(password) {\n    this.checklist = map(this.checklist, (requirement) => {\n      const checked = requirement.check(password);\n      assign(requirement, {\n        icon: checked ? 'check' : '',\n        contextualColor: checked ? '' : 'text-muted'\n      });\n      return requirement;\n    });\n  }\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[passwordConfirm]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: PasswordConfirm,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n\r\nexport class PasswordConfirm implements Validator {\r\n\r\n  constructor(@Attribute('passwordConfirm') public passwordConfirm: string) {\r\n  }\r\n\r\n  validate(abControl: AbstractControl): { [key: string]: any } {\r\n    const value = abControl.value;\r\n    const controlToCompareWith = abControl.root.get(this.passwordConfirm);\r\n    if (controlToCompareWith && value !== controlToCompareWith.value) {\r\n      return { passwordConfirm: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PasswordStrength } from '@c8y/client';\r\nimport { filter } from 'lodash-es';\r\nimport { PasswordStrengthColor } from './password.model';\r\nimport { gettext } from '../i18n/gettext';\r\n\r\n@Injectable()\r\nexport class PasswordStrengthCheckerService {\r\n\r\n  private GREEN: PasswordStrengthColor = {\r\n    colorName: 'green',\r\n    color: 'rgb(0, 128, 0)',\r\n    description: gettext('strong'),\r\n    passwordStrength: PasswordStrength.GREEN\r\n  };\r\n  private YELLOW: PasswordStrengthColor = {\r\n    colorName: 'yellow',\r\n    color: 'rgb(255, 204, 51)',\r\n    description: gettext('medium'),\r\n    passwordStrength: PasswordStrength.YELLOW\r\n  };\r\n  private RED: PasswordStrengthColor = {\r\n    colorName: 'red',\r\n    color: 'rgb(170, 0, 51)',\r\n    description: gettext('weak'),\r\n    passwordStrength: PasswordStrength.RED\r\n  };\r\n\r\n  hasLowerCase(password: string) {\r\n    return (password.search(/[a-z]/) !== -1);\r\n  }\r\n\r\n  hasUpperCase(password: string) {\r\n    return (password.search(/[A-Z]/) !== -1);\r\n  }\r\n\r\n  hasNumbers(password: string) {\r\n    return (password.search(/[0-9]/) !== -1);\r\n  }\r\n\r\n  hasSpecialChars(password: string) {\r\n    return (password.search(/[^0-9a-zA-Z]+/) !== -1);\r\n  }\r\n\r\n  getStrengthColor(password: string): PasswordStrengthColor {\r\n    const passwordStrength = filter([\r\n      this.hasLowerCase(password),\r\n      this.hasUpperCase(password),\r\n      this.hasNumbers(password),\r\n      this.hasSpecialChars(password)\r\n    ]).length;\r\n\r\n    if (passwordStrength > 2) {\r\n      return this.GREEN;\r\n    } else if (passwordStrength >= 2) {\r\n      return this.YELLOW;\r\n    } else {\r\n      return this.RED;\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PasswordService } from './password.service';\n\n@Component({\n  selector: 'c8y-password-strength',\n  templateUrl: './password-strength.component.html'\n})\n\nexport class PasswordStrengthComponent {\n\n  @Input('password')\n  set password(password: string) {\n    if (typeof password === 'string') {\n      this.model = this.passwordStrengthCheckerService.getStrengthColor(password);\n      this.strength.emit(this.model);\n    }\n  }\n  @Output()\n  strength = new EventEmitter();\n\n  model;\n\n  constructor(private passwordStrengthCheckerService: PasswordService) {\n    this.password = '';\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NewPassword } from './password.model';\r\nimport { SystemOptionsService } from '@c8y/client';\r\nimport { ControlContainer, NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'c8y-new-password',\r\n  templateUrl: './new-password.component.html',\r\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\r\n})\r\nexport class NewPasswordComponent implements OnInit {\r\n  @Output() password = new EventEmitter<NewPassword | {}>();\r\n  model: any = {};\r\n  enforcePasswordStrength: boolean = false;\r\n  changePassword: boolean = false;\r\n\r\n  constructor(private systemOptions: SystemOptionsService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadEnforcePasswordStrength();\r\n  }\r\n\r\n  newPasswordChanged() {\r\n    this.password.emit({\r\n      password: this.model.newPassword,\r\n      passwordStrength: this.model.strength\r\n    });\r\n  }\r\n\r\n  async loadEnforcePasswordStrength() {\r\n    try {\r\n      const { data } = await this.systemOptions.detail({\r\n        category: 'password',\r\n        key: 'enforce.strength'\r\n      });\r\n      this.enforcePasswordStrength = data.value === 'true';\r\n    } catch (e) {\r\n      // do nothing;\r\n    }\r\n  }\r\n\r\n  toggleChangePassword() {\r\n    this.changePassword = !this.changePassword;\r\n    if (!this.changePassword) {\r\n      this.password.emit({});\r\n      this.model = {};\r\n    }\r\n  }\r\n}\r\n","import { NG_VALIDATORS, AbstractControl, Validator } from '@angular/forms';\nimport { Directive } from '@angular/core';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js/max';\n\n@Directive({\n  selector: '[c8yPhoneValidation]',\n  providers: [{provide: NG_VALIDATORS, useExisting: PhoneValidationDirective, multi: true}]\n})\nexport class PhoneValidationDirective implements Validator {\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const valid = this.validateInternationalPhoneNumber(control);\n    return valid ? null : {\n      internationalPhoneNumber: true\n    };\n  }\n\n  private validateInternationalPhoneNumber(control: AbstractControl) {\n    let numberValid;\n    try {\n      const phoneNumber = parsePhoneNumberFromString(control.value);\n      numberValid = phoneNumber.isValid();\n      if (numberValid && control.value !== phoneNumber.format('E.164')) {\n        control.setValue(phoneNumber.format('E.164'), { emitEvent: false, emitModelToViewChange: false });\n      }\n    } catch (e) {\n      numberValid = !control.value;\n    }\n    return numberValid;\n  }\n}\n","// tslint:disable: max-line-length\nimport { gettext } from '../i18n/gettext';\n\nexport interface ValidationRules {\n  pattern?: RegExp;\n  message?: string;\n  maxLength?: number;\n  minLength?: number;\n}\n\n// @dynamic\nexport class ValidationPattern {\n  static readonly messages = {\n    deviceId: gettext('Device ID must not contain spaces or slashes (\"/\").'),\n    domain: gettext(\n      'Only lowercase letters, digits, hyphens and underscores allowed in the first part of the URI. ' +\n        'Must start with a letter; hyphens and underscores only allowed in the middle. Must be a valid URI.'\n    ),\n    email: gettext('Invalid email address.'),\n    internationalPhoneNumber: gettext(\n      'International phone number required, in the format +49 9 876 543 210.'\n    ),\n    loginAlias: gettext(\n      'Login alias must not contain slashes (\"/\", \"\\\\\") nor (\"+\"), (\":\"), (\"$\") signs.'\n    ),\n    max : gettext('Max value: {{ value }}'),\n    min : gettext('Min value: {{ value }}'),\n    opcuaBrowsePath: gettext('Invalid OPC UA URI.'),\n    password: gettext(\n      'Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\\'\",.<>{}[]\\\\/'\n    ),\n    passwordConfirm: gettext('Passwords do not match.'),\n    phoneNumber: gettext(\n      'Invalid phone number format. Only digits, spaces, slashes (\"/\") and dashes (\"-\") allowed.'\n    ),\n    required: gettext('This field is required.'),\n    tenantId: gettext(\n      'May contain lowercase letters, digits, hyphens and underscores. ' +\n        'Must start with a letter; hyphens and underscores only allowed in the middle; minimum 2 characters.'\n    ),\n    urlSegment: gettext('Slash, single or double dots and white space not allowed'),\n    user: gettext(\n      'Username must not contain spaces nor slashes (\"/\", \"\\\\\") nor (\"+\"), (\":\"), (\"$\") signs.'\n    )\n  };\n\n  static readonly rules = {\n    deviceId: {\n      pattern: /^[^\\s/]*$/\n    },\n    domain: {\n      pattern: /^[a-z]+[a-z0-9_-]*[a-z0-9]+\\.{1}.+$/\n    },\n    groupName: {\n      maxLength: 254\n    },\n    hostname: {\n      pattern: /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/\n    },\n    ip: {\n      pattern: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    },\n    opcuaBrowsePath: {\n      pattern: /^(opc.tcp|http|https):\\/\\/[^ \"]+$/\n    },\n    password: {\n      pattern: /^[a-zA-Z0-9`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]{8,32}$/\n    },\n    phoneNumber: {\n      pattern: /^$|^(\\+|0{2})[\\d\\s/-]{1,30}$/\n    },\n    tenantId: {\n      pattern: /^[a-z]+[a-z0-9_-]*[a-z0-9]+$/\n    },\n    user: {\n      pattern: /^[^\\\\/\\s$:+]*$/\n    },\n    urlSegment: {\n      pattern: /^(([.]{1,2})|([/])+|(([/]*)([.]{1,2})([/]*))|((.*)([/]|[ ]+)(.*))|(\\s+))$/\n    },\n    loginAlias: {\n      pattern: /^[^\\\\/$:+]*$/\n    }\n  };\n\n  static get(key: string) {\n    const pattern = this.rules[key];\n    return pattern as ValidationRules;\n  }\n}\n","import { NG_VALIDATORS, AbstractControl, Validator } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\nimport { ValidationPattern } from './validation-pattern';\n\n@Directive({\n  selector: '[c8yDefaultValidation]',\n  providers: [{provide: NG_VALIDATORS, useExisting: DefaultValidationDirective, multi: true}]\n})\nexport class DefaultValidationDirective implements Validator {\n  @Input() c8yDefaultValidation: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    if (!control.value) {\n      return null;\n    }\n    const validation = ValidationPattern.get(this.c8yDefaultValidation);\n    if (!validation) {\n      throw new Error(`Pattern ${this.c8yDefaultValidation} not found.`);\n    }\n\n    let valid = true;\n    if (validation.pattern) {\n      valid = validation.pattern.test(control.value);\n    }\n    if (validation.maxLength) {\n      valid = control.value.length < validation.maxLength;\n    }\n    if (validation.minLength) {\n      valid = control.value.length >= validation.minLength;\n    }\n    return valid ? null : {[this.c8yDefaultValidation]: true };\n  }\n}\n","import { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { Directive, ElementRef, Input } from '@angular/core';\n\nimport { isUndefined } from 'lodash-es';\n\n@Directive({\n  selector: '[min]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MinValidationDirective, multi: true}]\n})\nexport class MinValidationDirective implements Validator {\n  @Input() min: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const parsedMin = parseInt(this.min, 10);\n    if (isUndefined(control.value) || !this.min) {\n      return null;\n    }\n\n    let valid = true;\n    valid = !(control.value < parsedMin);\n    return valid ? null : {min: { value: parsedMin } };\n  }\n}\n","import { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\n\nimport { isUndefined } from 'lodash-es';\n\n@Directive({\n  selector: '[max]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MaxValidationDirective, multi: true}]\n})\nexport class MaxValidationDirective implements Validator {\n  @Input() max: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const parsedMax = parseInt(this.max, 10);\n    if (isUndefined(control.value) || !this.max) {\n      return null;\n    }\n\n    let valid = true;\n    valid = !(control.value > parsedMax);\n    return valid ? null : {max: { value: parsedMax } };\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'c8y-message',\n})\nexport class MessageDirective {\n  @Input() name: string;\n  @Input() text: string;\n}\n","import { Component, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { MessageDirective } from './message.directive';\nimport { ValidationPattern } from './validation-pattern';\nimport { isFunction } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'c8y-messages',\n  templateUrl: './messages.component.html'\n})\nexport class MessagesComponent {\n  @Input() show: {} = {};\n  @Input() defaults: {} = ValidationPattern.messages;\n  @ContentChildren(MessageDirective) customMessages: QueryList<MessageDirective>;\n  messages = [];\n  messageMap: any = {};\n\n  constructor(private translateService: TranslateService) {}\n\n  ngAfterContentInit(): void {\n    this.messageMap = Object.assign({}, this.defaults, this.customMessages.reduce((messages, directive) => {\n      messages[directive.name] = directive.text;\n      return messages;\n    }, {}));\n  }\n\n  changVisibility(show: {}) {\n    this.show = show;\n    this.ngOnChanges();\n  }\n\n  ngOnChanges() {\n    if (this.show) {\n      this.messages = Object.keys(this.show)\n        .map((key) => this.toMessage(key, this.show[key]));\n    } else {\n      this.messages = [];\n    }\n  }\n\n  private toMessage(key, value) {\n    return this.translateService.instant(this.messageMap[key], value);\n  }\n}\n","import { Component, ContentChild, HostBinding, Input } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription, timer } from 'rxjs';\nimport { debounce, filter } from 'rxjs/operators';\nimport { MessagesComponent } from './messages.component';\n/**\n * A form group helps to validate an input of a form element.\n *\n * ## Example:\n *\n * ```html\n *  <c8y-form-group [hasWarning]=\"user.email.length === 0\">\n *   <label translate for=\"userEmail\">Email</label>\n *   <input\n *     id=\"userEmail\"\n *     class=\"form-control\"\n *     type=\"email\"\n *     name=\"email\"\n *     [maxlength]=\"254\"\n *     autocomplete=\"off\"\n *     placeholder=\"{{'e.g. joe.doe@example.com' | translate}}\"\n *     [(ngModel)]=\"user.email\"\n *     email\n *     required\n *   >\n *   <c8y-messages>\n *     <c8y-message *ngIf=\"user.email.length === 0\" translate></c8y-message>\n *     <c8y-message name=\"required\" text=\"The E-Mail is SUPER required\"></c8y-message>\n *   </c8y-messages>\n *  </c8y-form-group>\n * ```\n *\n * @param status The current status could be error, warning or success.\n * @param hasError Set this to true to display a error.\n * @param hasWarning Set this to true to display a warning.\n * @param hasSuccess Set this to true to display a success.\n * @param novalidation Set this to true to disable automatic validation by this component.\n */\n@Component({\n  selector: 'c8y-form-group',\n  templateUrl: './form-group.component.html',\n  host: {\n    class: 'form-group'\n  }\n})\nexport class FormGroupComponent {\n  @Input() hasError = false;\n  @Input() hasWarning = false;\n  @Input() hasSuccess = false;\n  @Input() novalidation = false;\n  @Input() status: string;\n  @HostBinding('class.has-error') get error() { return this.status === 'error' || this.hasError; }\n  @HostBinding('class.has-warning') get warning() { return this.status === 'warning'  || this.hasWarning; }\n  @HostBinding('class.has-success') get success() { return this.status === 'success' || this.hasSuccess; }\n  @ContentChild(MessagesComponent, {static: false}) customErrorMessage: MessagesComponent;\n  @ContentChild(NgModel, {static: true}) model: NgModel;\n\n  errors: {};\n  private subscription: Subscription;\n  private readonly VALIDATION_DEBOUNCE_MS = 1000;\n\n  ngAfterContentInit(): void {\n    this.initNgModel();\n  }\n\n  initNgModel() {\n    if (this.model) {\n      this.subscription = this.model.valueChanges.pipe(\n        filter(() => this.model.dirty && !this.novalidation),\n        debounce(() => this.hasError ? timer(10) : timer(this.VALIDATION_DEBOUNCE_MS)),\n      ).subscribe(() => this.update());\n    }\n  }\n\n  update() {\n    this.hasError = !this.model.valid;\n    if (this.customErrorMessage) {\n      this.customErrorMessage.changVisibility(this.model.errors);\n    } else {\n      this.errors = this.model.errors;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ContentChild,\n  EventEmitter\n} from '@angular/core';\n\n@Component({\n  selector: 'c8y-input-group-list',\n  templateUrl: 'input-group-list.component.html'\n})\nexport class InputGroupListComponent {\n  @Input() plus: boolean = true;\n  @Input() minus: boolean = true;\n  @Input() index: number;\n\n  @Output() onRemove: EventEmitter<number> = new EventEmitter<number>();\n  @Output() onAdd: EventEmitter<number> = new EventEmitter<number>();\n  add() {\n    this.onAdd.emit(this.index);\n  }\n\n  remove() {\n    this.onRemove.emit(this.index);\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  QueryList,\n  AfterContentInit,\n  ContentChildren,\n  EventEmitter\n} from '@angular/core';\nimport { map } from 'lodash-es';\nimport { InputGroupListComponent } from './input-group-list.component';\n\n@Directive({\n  selector: '[c8yInputGroupListContainer]'\n})\nexport class InputGroupListContainerDirective implements AfterContentInit {\n  @ContentChildren(InputGroupListComponent) listProjections: QueryList<InputGroupListComponent>;\n\n  ngAfterContentInit() {\n    this.listProjections.map(element => {\n      if (element !== this.listProjections.last) {\n        setTimeout(() => {\n          element.plus = false;\n        });\n      }\n    });\n\n    this.listProjections.changes.subscribe(elements => {\n      if (elements.length === 1) {\n        setTimeout(() => {\n          elements.first.plus = true;\n          elements.first.minus = false;\n        });\n\n        return;\n      }\n      elements.map(element => {\n        setTimeout(() => {\n          element.minus = true;\n        });\n\n        if (element !== elements.last) {\n          setTimeout(() => {\n            element.plus = false;\n          });\n        }\n        if (element === elements.last) {\n          setTimeout(() => {\n            element.plus = true;\n          });\n        }\n      });\n    });\n  }\n}\n","import { Directive, EventEmitter, Output, OnInit, OnDestroy } from '@angular/core';\nimport { NgControl, AbstractControl } from '@angular/forms';\n\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { gettext } from '../i18n/public-api';\n\n@Directive({\n  selector: 'textarea[prettyValidJson]'\n})\nexport class JsonValidationPrettifierDirective implements OnInit, OnDestroy {\n  @Output() invalidJSON: EventEmitter<string> = new EventEmitter();\n  private abstractCtrl: AbstractControl;\n  private message: string = gettext('Must be a valid JSON object.');\n  private debounceTimeInMs: number = 1000;\n  private subscription: Subscription;\n\n  constructor(ngCtrl: NgControl) {\n    this.abstractCtrl = ngCtrl.control;\n  }\n\n  ngOnInit() {\n    this.subscription = this.abstractCtrl.valueChanges\n      .pipe(\n        tap(() => this.clearValidationMessage()),\n        debounceTime(this.debounceTimeInMs),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        this.validateInputAndPrettify(value);\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription && !this.subscription.closed) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  validateInputAndPrettify(value) {\n    if (value) {\n      try {\n        const validJsonObject = JSON.parse(value);\n        const pretty = JSON.stringify(validJsonObject, undefined, 2);\n        this.abstractCtrl.setValue(pretty);\n      } catch (ex) {\n        this.setErrorAndValidationMessage();\n      }\n    }\n  }\n\n  private setErrorAndValidationMessage() {\n    this.abstractCtrl.setErrors({ invalidBodyTemplate: true });\n    this.invalidJSON.emit(this.message);\n  }\n\n  private clearValidationMessage() {\n    this.invalidJSON.emit(undefined);\n  }\n}\n","import { Directive, ElementRef, Input, HostBinding, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: 'textarea[heightPerRow]'\n})\nexport class TextAreaRowHeightDirective {\n  @Input()\n  @HostBinding('rows')\n  rows: number = 1;\n\n  @Input('heightPerRow')\n  heightPerRow: string;\n\n  private minHeightPerRow = 20;\n\n  constructor(private elem: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    const convertedValue = Number(this.heightPerRow);\n    if (this.heightPerRow && convertedValue && convertedValue > this.minHeightPerRow) {\n      this.setHeight(`${this.rows * convertedValue}px`);\n    } else {\n      this.setHeight(`${this.rows * this.minHeightPerRow}px`);\n    }\n  }\n\n  private setHeight(value: string) {\n    this.renderer.setStyle(this.elem.nativeElement, 'height', value);\n  }\n}\n","import { Directive, ElementRef, Renderer2, AfterContentChecked } from '@angular/core';\nimport { gettext } from '../i18n/gettext';\nimport { isUndefined, compact } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Directive({\n  selector: 'input[required]'\n})\nexport class RequiredInputPlaceholderDirective implements AfterContentChecked {\n  private placeholder: string;\n  private required: boolean;\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private translationService: TranslateService\n    ) {}\n\n  ngAfterContentChecked(): void {\n    this.required = this.el.nativeElement.required;\n    this.placeholder = this.el.nativeElement.placeholder;\n    const requiredText = `(${this.translationService.instant(gettext('required'))})`;\n    this.setPlaceholder(requiredText);\n  }\n\n  setPlaceholder(requiredText) {\n    if (isUndefined(this.placeholder) && !this.required) {\n      this.renderer.removeAttribute(this.el.nativeElement, 'placeholder');\n    } else if (this.placeholder.indexOf(requiredText) < 0) {\n      const parts = compact([\n        this.placeholder,\n        `${this.required && !this.shouldSkipRequiredHint() ? `${requiredText}` : ''}`\n      ]);\n      const placeholder = parts.includes(requiredText)\n        ? parts.join(' ').trim()\n        : parts.join('').trim();\n\n      this.renderer.setAttribute(this.el.nativeElement, 'placeholder', placeholder);\n    }\n  }\n\n  shouldSkipRequiredHint() {\n    const closestAncestor = this.el.nativeElement.closest('[placeholder-no-required-hint]');\n    return !!closestAncestor;\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { cloneDeep } from 'lodash-es';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'c8y-ip-range-input-list',\n  templateUrl: './ip-range-input-list.component.html'\n})\nexport class IpRangeInputListComponent {\n  @Input()\n  set data(list) {\n    this.ipRangeList = list;\n    if (this.ipRangeList.length === 0) {\n      this.add();\n    }\n  }\n\n  get data() {\n    return this.ipRangeList;\n  }\n\n  ipRangeList: Array<{ ip: string; cidr: number }>;\n\n  add() {\n    this.ipRangeList.push({ ip: '', cidr: undefined });\n  }\n\n  remove(index) {\n    this.ipRangeList.splice(index, 1);\n  }\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n// TODO: find replacement for schema-form ng1 library\n@Directive({\n  selector: 'c8y-schema-form'\n})\nexport class SchemaFormComponent extends UpgradeComponent {\n  @Input() schema: any;\n  @Input() model: any;\n  @Input('form') inputForm?: any;\n  @Input('options') inputOptions?: any;\n\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8ySchemaForm', elementRef, injector);\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { debounce, distinctUntilChanged, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-filter',\n  templateUrl: './filter-input.component.html'\n})\nexport class FilterInputComponent implements OnInit, OnDestroy {\n  @Input() icon: string;\n  @Output() onSearch = new EventEmitter<string>();\n  filterChange$ = new Subject();\n  filterTerm: string = '';\n  private readonly CARRIAGE_RETURN_KEY = 13;\n  private readonly CARRIAGE_RETURN_CODE = 'Enter';\n\n  ngOnInit() {\n    this.reset();\n    this.filterChange$\n      .pipe(\n        debounce((event: any) =>\n          event.code === this.CARRIAGE_RETURN_CODE || event.keyCode === this.CARRIAGE_RETURN_KEY\n            ? timer(10)\n            : timer(300)\n        ),\n        map((e: any) => e.target.value),\n        distinctUntilChanged()\n      )\n      .subscribe(filterTerm => {\n        this.filterTerm = filterTerm;\n        this.onSearch.emit(filterTerm);\n      });\n  }\n\n  reset() {\n    this.filterTerm = '';\n    this.onSearch.emit('');\n  }\n\n  ngOnDestroy(): void {\n    this.filterChange$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PhoneValidationDirective } from './phone-validation.directive';\nimport { DefaultValidationDirective } from './default-validation.directive';\nimport { MinValidationDirective } from './min-validation.directive';\nimport { MaxValidationDirective } from './max-validation.directive';\nimport { CommonModule } from '../common/common.module';\nimport { FormsModule as NgFormsModule } from '@angular/forms';\nimport { FormGroupComponent } from './form-group.component';\nimport { MessageDirective } from './message.directive';\nimport { MessagesComponent } from './messages.component';\nimport { InputGroupListComponent } from './input-group-list.component';\nimport { InputGroupListContainerDirective } from './input-group-list-container.directive';\nimport { JsonValidationPrettifierDirective } from './json-validation-prettifier.directive';\nimport { TextAreaRowHeightDirective } from './text-area-row-height.directive';\nimport { RequiredInputPlaceholderDirective } from './required-input-placeholder.directive';\nimport { IpRangeInputListComponent } from './ip-range-input-list.component';\nimport { SchemaFormComponent } from './schema-form.component';\nimport { FilterInputComponent } from './filter-input.component';\n\n/**\n * @exports FormGroupComponent A component that allows to group an input and can display warnings and errors.\n * @exports PhoneValidationDirective Allows to validate international phone numbers.\n * @exports NewsletterDirective Allows to subscribe to the newsletter.\n * @exports DefaultValidationDirective Allows to validate some predefined patterns.\n * @exports MessageDirective A directive that allows to define messages.\n * @exports MessagesComponent Allows to display error messages.\n * @exports SchemaFormComponent Allows to display forms generated from JSON Schema.\n */\n@NgModule({\n  imports: [CommonModule, NgFormsModule],\n  exports: [\n    PhoneValidationDirective,\n    DefaultValidationDirective,\n    MinValidationDirective,\n    MaxValidationDirective,\n    NgFormsModule,\n    FormGroupComponent,\n    MessageDirective,\n    MessagesComponent,\n    InputGroupListComponent,\n    InputGroupListContainerDirective,\n    JsonValidationPrettifierDirective,\n    TextAreaRowHeightDirective,\n    RequiredInputPlaceholderDirective,\n    IpRangeInputListComponent,\n    SchemaFormComponent,\n    FilterInputComponent\n  ],\n  declarations: [\n    PhoneValidationDirective,\n    DefaultValidationDirective,\n    MinValidationDirective,\n    MaxValidationDirective,\n    FormGroupComponent,\n    MessageDirective,\n    MessagesComponent,\n    InputGroupListComponent,\n    InputGroupListContainerDirective,\n    JsonValidationPrettifierDirective,\n    TextAreaRowHeightDirective,\n    RequiredInputPlaceholderDirective,\n    IpRangeInputListComponent,\n    SchemaFormComponent,\n    FilterInputComponent\n  ]\n})\nexport class FormsModule {}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { NewPassword } from './password.model';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { LoginService } from '../login/login.service';\nimport { UserService, ICredentials } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginViews } from '../login/login.model';\n\n@Component({\n  selector: 'c8y-totp-challenge',\n  templateUrl: './totp-challenge.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\n\nexport class TotpChallengeComponent {\n  /**\n   * Calls the verify endpoint if set to true (default true)\n   */\n  @Input() verify = true;\n  /**\n   * Emits the token on success.\n   */\n  @Output() onSuccess = new EventEmitter();\n\n  model = {\n    token: ''\n  };\n  @Input()\n  loading = false;\n  @Input()\n  hasError = false;\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private alert: AlertService\n  ) {}\n\n  async verifyCode() {\n    try {\n      this.loading = true;\n      this.hasError = false;\n      if (this.verify) {\n        await this.users.verifyTotpCode(this.model.token);\n      }\n      this.onSuccess.emit(this.model.token);\n    } catch (e) {\n      this.hasError = true;\n      this.alert.removeLastDanger();\n      this.loading = false;\n    }\n  }\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { UserService, ICredentials } from '@c8y/client';\nimport { LoginService } from '../login/login.service';\nimport { AlertService } from '../alert/public-api';\nimport { LoginViews } from '../login/login.model';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-sms-challenge',\n  templateUrl: './sms-challenge.component.html',\n  styles: []\n})\n\nexport class SmsChallengeComponent {\n\n  @Input() credentials: ICredentials;\n  @Output() onCancel = new EventEmitter();\n\n  model = {\n    smsToken: ''\n  };\n  isLoading = false;\n\n  private resendTfa: string = '0';\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private alert: AlertService\n  ) {}\n\n  async verifyTFACode() {\n    this.isLoading = true;\n    if (this.useOAuthInternal()) {\n      await this.verifyCodeWithOauth();\n    } else {\n      await this.verifyCodeWithBasicAuth();\n    }\n    this.isLoading = false;\n  }\n\n  async resendTFASms() {\n    try {\n      this.isLoading = true;\n      await this.users.verifyTFACode(this.resendTfa);\n    } catch (e) {\n      if (e.res.status === 403) {\n        this.loginService.cleanMessages();\n        this.loginService.addSuccessMessage('resend_sms');\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private useOAuthInternal() {\n    return this.loginService.isPasswordGrantLogin(this.credentials);\n  }\n\n  private async verifyCodeWithOauth() {\n    try {\n      const { credentials } = this;\n      await this.loginService.switchLoginMode({...credentials, tfa: this.model.smsToken});\n      await this.loginService.verifyAppAccess();\n      await this.loginService.authFulfilled();\n    } catch (e) {\n      const resStatus = e.res && e.res.status;\n      if (resStatus === 401) {\n        // it is assumed that the user and password are correct so it must be the tfa code\n        this.alert.danger(gettext('Invalid code'));\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    }\n  }\n\n  private async verifyCodeWithBasicAuth() {\n    try {\n      const { res } = await this.users.verifyTFACode(this.model.smsToken);\n      const tfaToken = res.headers.get('tfatoken');\n      this.credentials.tfa = tfaToken;\n      this.loginWithTFA(tfaToken);\n    } catch (e) {\n      const resStatus = e.res && e.res.status;\n      // BE returns 403 in case of invalid tfa code\n      if (resStatus === 403) {\n        this.alert.danger(gettext('Invalid code'));\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    }\n  }\n\n  private async loginWithTFA(tfaToken) {\n    try {\n      await this.loginService.login(this.loginService.useBasicAuth({tfa: tfaToken}), this.credentials);\n      this.loginService.saveTFAToken(tfaToken, sessionStorage);\n      if (this.loginService.rememberMe) {\n        this.loginService.saveTFAToken(tfaToken, localStorage);\n      }\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ITotp, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\n\n@Component({\n  selector: 'c8y-totp-setup',\n  templateUrl: './totp-setup.component.html'\n})\n\nexport class TotpSetupComponent implements OnInit {\n  totpSecret: ITotp;\n\n  get qrCodeImage() {\n    return this.totpSecret ? this.totpSecret.secretQrUrl : '';\n  }\n\n  get secret() {\n    return this.totpSecret ? this.totpSecret.rawSecret : '';\n  }\n\n  constructor(private user: UserService, private alert: AlertService) { }\n\n  async ngOnInit() {\n    try {\n      const { data } = await this.user.generateTotpSecret();\n      this.totpSecret = data;\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { CommonModule } from '../common/common.module';\r\nimport { PasswordCheckListComponent } from './password-check-list.component';\r\nimport { PasswordConfirm } from './password-confirm.directive';\r\nimport { PasswordStrengthCheckerService } from './password-strength-checker.service';\r\nimport { PasswordStrengthComponent } from './password-strength.component';\r\nimport { NewPasswordComponent } from './new-password.component';\r\nimport { PasswordConfirmModalComponent } from './password-confirm-modal.component';\r\nimport { ModalModule } from '../modal/modal.module';\r\nimport { FormsModule } from '../forms/forms.module';\r\nimport { TotpChallengeComponent } from './totp-challenge.component';\r\nimport { SmsChallengeComponent } from './sms-challenge.component';\r\nimport { TotpSetupComponent } from './totp-setup.component';\r\nimport { PasswordService } from './password.service';\r\n\r\n/**\r\n * The angular module definition for new password.\r\n * @exports PasswordStrengthComponent\r\n * @exports PasswordCheckListComponent\r\n * @exports PasswordConfirm\r\n * @exports NewPasswordComponent\r\n * @exports PasswordConfirmModalComponent\r\n */\r\n@NgModule({\r\n  declarations: [\r\n    TotpChallengeComponent,\r\n    PasswordConfirm,\r\n    PasswordStrengthComponent,\r\n    PasswordCheckListComponent,\r\n    NewPasswordComponent,\r\n    PasswordConfirmModalComponent,\r\n    SmsChallengeComponent,\r\n    TotpSetupComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    TooltipModule,\r\n    CommonModule,\r\n    ModalModule\r\n  ],\r\n  exports: [\r\n    TotpChallengeComponent,\r\n    PasswordStrengthComponent,\r\n    PasswordCheckListComponent,\r\n    PasswordConfirm,\r\n    NewPasswordComponent,\r\n    PasswordConfirmModalComponent,\r\n    SmsChallengeComponent,\r\n    TotpSetupComponent\r\n  ],\r\n  entryComponents: [\r\n    PasswordConfirmModalComponent\r\n  ],\r\n  providers: [\r\n    PasswordStrengthCheckerService,\r\n    PasswordService\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IUser, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/public-api';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-user-totp-revoke',\n  templateUrl: './user-totp.component.html'\n})\nexport class UserTotpRevokeComponent {\n  @Input() user: IUser;\n  @Output('revoke') revokeEmitter = new EventEmitter<undefined>();\n  constructor(\n    private users: UserService,\n    private alert: AlertService,\n  ) { }\n\n  async revoke() {\n    try {\n      await this.users.totpRevokeSecret(this.user);\n      this.alert.success(gettext('User TOTP secret revoked.'));\n      this.revokeEmitter.next();\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { ModalModule } from '../modal/modal.module';\nimport { UserMenuItemComponent } from './user-menu-item.component';\nimport { UserEditModalComponent } from './user-edit-modal.component';\nimport { UserEditComponent } from './user-edit.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { UserMenuOutletComponent } from './user-menu-outlet.component';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { UserMenuService } from './user-menu.service';\nimport { AlertModule } from '../alert/alert.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '../forms/forms.module';\nimport { UserTotpSetupComponent } from './user-totp-setup.component';\nimport { UserTotpRevokeComponent } from './user-totp-revoke.component';\n\n/**\n * The angular module definition for the user menu.\n * @exports UserMenuComponent\n * @exports UserMenuItemComponent\n * @exports UserEditComponent\n * @exports UserEditModalComponent\n */\n@NgModule({\n  declarations: [\n    UserMenuOutletComponent,\n    UserEditComponent,\n    UserEditModalComponent,\n    UserMenuItemComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    ModalModule,\n    BsDropdownModule,\n    AuthenticationModule,\n    AlertModule,\n    RouterModule,\n    TooltipModule.forRoot(),\n    PopoverModule\n  ],\n  exports: [\n    UserMenuOutletComponent,\n    UserMenuItemComponent,\n    UserEditComponent,\n    UserEditModalComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent\n  ],\n  entryComponents: [\n    UserEditModalComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent\n  ]\n})\nexport class UserModule { }\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { find, keys, get, assign, isEmpty } from 'lodash-es';\nimport { OptionsService } from '../../common/options.service';\n\n@Component({\n  selector: 'c8y-app-icon',\n  templateUrl: './app-icon.component.html',\n  host: { class: 'c8y-app-icon' }\n})\nexport class AppIconComponent implements OnChanges {\n  @Input() contextPath: string;\n  @Input() name: string = '';\n  @Input() app: any;\n\n  model = {\n    appIcon: '',\n    showIcon: true,\n    iconClass: ['c8y-icon'],\n    appNameAbbr: '',\n    iconStyle: {}\n  };\n\n  private c8yAppIconsList = {\n    analyticsbuilder: 'analytics-builder',\n    'analytics-builder': 'analytics-builder',\n    cockpit: 'cockpit',\n    devicemanagement: 'device-management',\n    administration: 'administration',\n    apamaepl: 'apama-epl'\n  };\n\n  private white: boolean = false;\n\n  private defaultIconStyle = {\n    'background-repeat': 'no-repeat',\n    'background-size': 'contain',\n    height: '36px',\n    width: '36px'\n  };\n\n  constructor(private options: OptionsService) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.model.appIcon = this.iconFromAppDefinition() || this.findStaticIcon();\n    const iconUrl = this.iconUrlFromAppDefinition();\n    if (iconUrl) {\n      this.model.iconStyle = assign(this.defaultIconStyle, {\n        'background-image': iconUrl\n      });\n    }\n    this.model.showIcon = !!this.model.appIcon || !isEmpty(this.model.iconStyle);\n    this.model.iconClass = [\n      'c8y-icon',\n      this.model.appIcon,\n      this.white ? 'c8y-icon-white' : 'c8y-icon-duocolor'\n    ].filter(c => !!c);\n    this.model.appNameAbbr = this.name.substr(0, 2);\n  }\n\n  private findStaticIcon() {\n    const contextPath = this.contextPath || this.name;\n    const appContextPathNormalized = find(keys(this.c8yAppIconsList), cp => {\n      return contextPath.indexOf(cp) > -1;\n    });\n    const appIcon = this.c8yAppIconsList[appContextPathNormalized];\n    return appIcon ? `c8y-icon-${appIcon}` : undefined;\n  }\n\n  private iconFromAppDefinition() {\n    const app = this.app || this.options;\n    const iconClassProperty = ['icon', 'class'];\n    const iconClass = get(app, iconClassProperty) || get(app, ['manifest', ...iconClassProperty]);\n    return iconClass;\n  }\n\n  private iconUrlFromAppDefinition() {\n    const app = this.app || this.options;\n    const iconUrlProperty = ['icon', 'url'];\n    const iconUrl = get(app, iconUrlProperty) || get(app, ['manifest', ...iconUrlProperty]);\n    return iconUrl;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ApplicationService, IApplication, ICurrentTenant, IUser } from '@c8y/client';\nimport { get, includes, orderBy } from 'lodash-es';\nimport { combineLatest } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AppStateService } from '../../common/ui-state.service';\n\n@Component({\n  selector: 'c8y-app-switcher',\n  templateUrl: './app-switcher.component.html'\n})\nexport class AppSwitcherComponent {\n  oneCloudApps?: Array<IApplication & {[key: string]: any}>;\n  apps: Array<IApplication & {[key: string]: any}>;\n  open: boolean;\n\n  private get hideCloudApps(): boolean {\n    return false;  // this should be configurable from outside\n  }\n  private tenant: ICurrentTenant;\n  constructor(\n    private ui: AppStateService,\n    private applications: ApplicationService) {\n      const { currentUser, currentTenant} = this.ui;\n      combineLatest(currentUser, currentTenant).pipe(\n        first()\n      ).subscribe(([ user, tenant ]) => {\n          this.tenant = tenant;\n          this.listAppsForUser(user);\n        });\n  }\n\n  isActive(app: IApplication) {\n    return app.contextPath === this.ui.state.app.contextPath;\n  }\n\n  getHref(app: IApplication) {\n    return this.applications.getHref(app);\n  }\n\n  private async listAppsForUser(user: IUser | null) {\n    if (user) {\n      const { data } = await this.applications.listByUser(user, { pageSize: 1000 });\n      this.apps = this.orderApps(this.filterApps(data));\n    }\n  }\n\n  private filterApps(apps) {\n    apps = this.filterVisible(apps);\n    apps = this.filterCloud(apps);\n    apps = this.filterDuplicates(apps);\n    return apps;\n  }\n\n  private filterVisible(apps) {\n    const visibleApplicationTypes = ['HOSTED', 'EXTERNAL'];\n    return apps.filter((app) => includes(visibleApplicationTypes, app.type) &&\n      !app.noAppSwitcher &&\n      !get(app, 'manifest.noAppSwitcher'));\n  }\n\n  private filterCloud(apps) {\n    const { hideCloudApps } = this;\n    const filterFn = (app) => !!app.cloud;\n    if (!hideCloudApps) {\n        this.oneCloudApps = this.orderApps(apps.filter(filterFn));\n    }\n    return apps.filter((app) => !filterFn(app));\n  }\n\n  private filterDuplicates(apps) {\n    // Filter out apps that have duplicate contextpaths and are not own owned but the current tenant;\n    const filterFn = (app) => !apps.some((otherApp) => (app !== otherApp) &&\n      (app.contextPath && app.contextPath === otherApp.contextPath) &&\n      (app.owner.tenant.id !== this.tenant.name));\n    return apps.filter(filterFn);\n  }\n\n  private orderApps(apps) {\n    return orderBy(apps, (({ name }) => name.toLowerCase()));\n  }\n}\n","import { gettext } from '../i18n/gettext';\n\nexport const documentationItems = [\n  {\n    icon: 'c8y-c8y-data', // double c8y- is correct!\n    label: gettext('Concepts guide`KEEP_ORIGINAL`'),\n    url: '/concepts/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-user',\n    label: gettext('User guide`KEEP_ORIGINAL`'),\n    url: '/users-guide/getting-started',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-device-management',\n    label: gettext('Device guides`KEEP_ORIGINAL`'),\n    url: '/devices/overview',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-book',\n    label: gettext('Cumulocity IoT Edge`KEEP_ORIGINAL`'),\n    url: '/edge/overview',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-tools',\n    label: gettext('Microservice SDK guide`KEEP_ORIGINAL`'),\n    url: '/microservice-sdk/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-tools',\n    label: gettext('Device SDK guide`KEEP_ORIGINAL`'),\n    url: '/device-sdk/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-smart-rest',\n    label: gettext('Web SDK guide`KEEP_ORIGINAL`'),\n    url: '/web/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-data-explorer',\n    label: gettext('Streaming analytics guide`KEEP_ORIGINAL`'),\n    url: '/apama/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-bookmark',\n    label: gettext('Reference guide`KEEP_ORIGINAL`'),\n    url: '/reference/rest-implementation',\n    type: 'doc'\n  },\n  {\n    icon: 'gavel',\n    label: gettext('Legal notices'),\n    url: 'https://documentation.softwareag.com/legal/',\n    type: 'doc'\n  }\n];\n","import { InjectionToken } from '@angular/core';\nimport { ExtensionFactory } from '../common/public-api';\n\nexport interface DocLink {\n  icon: string;\n  label: string;\n  url: string;\n  type: 'doc' | 'quicklink';\n  click?: any;\n}\n\nexport type DocLinkFactory = ExtensionFactory<DocLink>;\n\nexport const HOOK_DOCS = new InjectionToken<ExtensionFactory<DocLink>>('Hook docs');\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { OptionsService } from '../common/options.service';\nimport { documentationItems } from './defaults.items';\nimport { AppStateService } from '../common/ui-state.service';\nimport { gettext } from '../i18n/gettext';\nimport { DocLink, HOOK_DOCS, DocLinkFactory } from './docs.models';\nimport { ExtensionPoint, fromTrigger } from '../common/public-api';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { shareReplay, startWith, first, filter } from 'rxjs/operators';\nimport { isUndefined } from 'lodash-es';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocsService implements ExtensionPoint<DocLink> {\n  items$: Observable<DocLink[]>;\n  constructor(\n    private options: OptionsService,\n    private app: AppStateService,\n    @Optional() @Inject(HOOK_DOCS) factories: DocLinkFactory[] = [],\n    router: Router\n  ) {\n    if (!factories) {\n      factories = [];\n    }\n    factories.push(this);\n    const refreshTrigger = this.app.map(({ supportUrl }) => supportUrl);\n    this.items$ = fromTrigger(router, refreshTrigger, factories).pipe(\n      startWith([]),\n      shareReplay(1)\n    );\n  }\n\n  getBaseUrl(): string {\n    return this.options.get('docsBaseUrl', 'https://www.cumulocity.com/guides');\n  }\n\n  get templateStr(): string {\n    return this.options.get('guideHrefTemplate', '${docsBaseUrl}${partialUrl}');\n  }\n\n  getUserGuideLink(link) {\n    if (/^https?:/.test(link)) {\n      return link;\n    }\n    if (this.getBaseUrl === null) {\n      return null;\n    }\n    return this.getLink(this.templateStr, link);\n  }\n\n  list() {\n    return this.items$\n      .pipe(\n        filter(i => !!i.length),\n        first()\n      )\n      .toPromise();\n  }\n\n  refresh() {\n    // no op\n  }\n\n  get() {\n    // use the function as a factory\n    const { links, noDefault, excludeDefault = [] } = this.options.get('docs', {});\n    const { supportUrl } = this.app.state;\n    let staticLinks = noDefault\n      ? []\n      : documentationItems\n          .map((item: DocLink) => ({ ...item, url: this.getUserGuideLink(item.url) }))\n          .filter(({ url }) => !excludeDefault.some(e => new RegExp(e).test(url)));\n\n    if (links) {\n      // backwards compatibility\n      links.map((lnk: DocLink) => {\n        if (isUndefined(lnk.type)) {\n          lnk.type = 'doc';\n          return lnk;\n        }\n      });\n      staticLinks = staticLinks.concat(links);\n    }\n    if (supportUrl) {\n      staticLinks.push({\n        icon: 'comments',\n        label: gettext('Forum support'),\n        url: supportUrl,\n        type: 'doc'\n      });\n    }\n    return staticLinks;\n  }\n\n  private getLink(templateStr, partialLink) {\n    if (!templateStr) {\n      return undefined;\n    }\n    return templateStr\n      .replace(/\\${docsBaseUrl}/, this.getBaseUrl())\n      .replace(/\\${partialUrl}/, this.prefixWithSlash(partialLink));\n  }\n\n  private prefixWithSlash(partialLink = '') {\n    const shouldPrefix = !(partialLink && /^\\//.test(partialLink));\n    const prefix = shouldPrefix ? '/' : '';\n    return `${prefix}${partialLink}`;\n  }\n}\n","import { AfterViewInit, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ActionService } from '../../action/action.service';\nimport { BreadcrumbService } from '../../breadcrumb/breadcrumb.service';\nimport { SearchService } from '../../search/search.service';\nimport { AppStateService } from '../../common/ui-state.service';\nimport { UserMenuService } from '../../user/user-menu.service';\nimport { HeaderService } from '../header.service';\nimport { DocsService } from '../../docs/docs.service';\n\n@Component({\n  selector: 'c8y-header-bar',\n  templateUrl: './header-bar.component.html'\n})\nexport class HeaderBarComponent implements AfterViewInit {\n  canToggle$: Observable<boolean> = this.headerService.hasItemsInNavigator$;\n  appState$: Observable<any> = this.appState.state$;\n  drawerOpen = false;\n  headerOpen = false;\n\n  constructor(\n    public headerService: HeaderService,\n    public actionService: ActionService,\n    public breadcrumbService: BreadcrumbService,\n    public searchService: SearchService,\n    private appState: AppStateService,\n    public userMenuService: UserMenuService,\n    public docs: DocsService\n  ) {}\n\n  ngAfterViewInit() {\n    this.headerService.verifyIfNavOpen();\n  }\n\n  toggle() {\n    this.headerOpen = !this.headerOpen;\n  }\n}\n","import { Component, ElementRef, NgZone } from '@angular/core';\nimport { HeaderService } from '../header.service';\nimport { debounceTime, map, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-title-outlet',\n  templateUrl: './title-outlet.component.html'\n})\nexport class TitleOutletComponent {\n  title = undefined;\n\n  constructor(\n    private headerService: HeaderService,\n    private element: ElementRef,\n    private zone: NgZone\n  ) {\n    const title$ = this.headerService.map(state => state.title);\n    title$.subscribe(title => (this.title = title));\n    this.zone.runOutsideAngular(() => {\n      title$\n        .pipe(\n          debounceTime(100),\n          map(() => this.element.nativeElement.querySelector('h1')),\n          filter(el => el !== null),\n          map(el => el.innerText),\n          filter(Boolean)\n        )\n        .subscribe((title: string) => headerService.changePageTitle(title));\n    });\n  }\n}\n","import { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { HeaderService } from '../header.service';\n\n@Component({\n  selector: 'c8y-title',\n  templateUrl: './title.component.html'\n})\nexport class TitleComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('template', {static: true}) template;\n  private viewInitTimeout;\n\n  constructor(\n    private headerService: HeaderService\n  ) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.headerService.changeTitle(this.template)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.headerService.state.title === this.template) {\n      clearTimeout(this.viewInitTimeout);\n      this.headerService.changeTitle();\n    }\n  }\n}\n","import { Component, TemplateRef, ViewChild, Input} from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\nimport { NavigatorService } from './navigator.service';\n\n@Component({\n  selector: 'c8y-navigator-item',\n  template: '<ng-template #iconTpl><ng-content></ng-content></ng-template>',\n})\nexport class NavigatorItemComponent  {\n  @ViewChild('iconTpl', {static: true}) template: TemplateRef<any>;\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() path: string;\n  @Input() priority = 0;\n  nodeData: NavigatorNode;\n  constructor(\n    private service: NavigatorService\n  ) {\n    this.nodeData = new NavigatorNode();\n  }\n\n  ngOnInit(): void {\n    this.ngOnChanges();\n    setTimeout(() => this.service.add(this.nodeData));\n  }\n\n  ngOnChanges(): void {\n    this.nodeData.icon = this.icon;\n    this.nodeData.label = this.label;\n    this.nodeData.path = this.path;\n    this.nodeData.priority = this.priority;\n    this.nodeData.iconTemplate = !this.icon ? this.template : undefined;\n    this.nodeData.icon = this.icon;\n  }\n\n  ngOnDestroy(): void {\n    this.service.remove(this.nodeData);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\n\n@Component({\n  selector: 'c8y-navigator-icon',\n  template: `<i class=\"icon\" [c8yIcon]=\"icon\"></i>`\n})\nexport class NavigatorIconComponent {\n  @Input() node: NavigatorNode;\n  get icon() {\n    const DEFAULT_ICON = 'cog';\n    return this.node.icon || DEFAULT_ICON;\n  }\n\n  get iconClass() {\n    return `fa-${this.icon}`;\n  }\n}\n","// tslint:disable-next-line:max-line-length\nimport { Component, ComponentFactoryResolver, Input, QueryList, ViewChild, ViewChildren, ViewContainerRef, Output, EventEmitter, OnDestroy, HostListener } from '@angular/core';\nimport { RouterLinkActive, Router } from '@angular/router';\nimport { NavigatorIconComponent } from './navigator-icon.component';\nimport { NavigatorNode, ClickOptions } from './navigator-node';\nimport { NavigatorService } from './navigator.service';\nimport { PopoverConfirmComponent } from '../modal/popover-confirm.component';\n\n@Component({\n  selector: 'c8y-navigator-node-display',\n  templateUrl: './navigator-node.component.html'\n})\nexport class NavigatorNodeComponent implements OnDestroy {\n  @ViewChild('icon', { read: ViewContainerRef, static: false }) iconSlot: ViewContainerRef;\n  @Input() node: NavigatorNode;\n  @Input() isRoot: boolean;\n  @ViewChild(RouterLinkActive, {static: false}) routerLinkActive: RouterLinkActive;\n  @ViewChildren(NavigatorNodeComponent) childrenNodes: QueryList<NavigatorNodeComponent>;\n  @Output() nodeClick: EventEmitter<string> = new EventEmitter();\n  @ViewChild(PopoverConfirmComponent, {static: false}) confirm: PopoverConfirmComponent;\n\n  parentNode: NavigatorNodeComponent;\n\n  private viewInitTimeout;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private navigator: NavigatorService\n  ) {}\n\n  ngAfterViewInit() {\n    this.childrenNodes.forEach((n) => n.parentNode = this);\n    this.viewInitTimeout = setTimeout(() => {\n      this.updateIcon();\n      this.openOnFirstUrl();\n      this.expandParentIfActive();\n      this.node.confirm = this.confirm;\n    });\n  }\n\n  openOnFirstUrl() {\n    if (this.navigator.openOnFirstUrl(this.node) && !this.node.open) {\n      this.expandCollapse(true);\n    }\n  }\n\n  get expandTitle() {\n    return !this.node.open ? 'Expand' : 'Collapse';\n  }\n\n  click(from: 'icon' | 'expander' | 'link' = 'link', $event?) {\n    let open;\n    if (from === 'expander') {\n      if ($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n      }\n      open = !this.node.open;\n    } else {\n      open = this.routerLinkActive && this.routerLinkActive.isActive ? true : !this.node.open;\n    }\n    if (open !== this.node.open) {\n      this.expandCollapse(open, false, { [from]: true, $event });\n    }\n    this.nodeClick.emit(from);\n  }\n\n  expandCollapse(open, recursive?, forNode: ClickOptions = {}) {\n    this.node.open = open;\n    // Also close children\n    if (recursive) {\n      this.childrenNodes.forEach((n) => n.expandCollapse(open, recursive));\n    }\n    forNode.open = open;\n    this.node.click(forNode);\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.viewInitTimeout);\n    this.node.destroy();\n  }\n\n  private expandParentIfActive() {\n    if (this.routerLinkActive && this.routerLinkActive.isActive && this.parentNode) {\n      this.parentNode.expandCollapse(true);\n    }\n  }\n\n  private updateIcon() {\n    if (this.node.iconTemplate) {\n      this.updateIconTemplate();\n    } else {\n      this.updateIconComponent();\n    }\n  }\n\n  private updateIconComponent() {\n    let componentType = NavigatorIconComponent;\n    if (this.node && this.node.iconComponent) {\n      componentType = this.node.iconComponent;\n    }\n    this.iconSlot.clear();\n    const iconComponentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n    const componentRef = this.iconSlot.createComponent(iconComponentFactory);\n    componentRef.instance.node = this.node;\n  }\n\n  private updateIconTemplate() {\n    this.iconSlot.clear();\n    this.iconSlot.createEmbeddedView(this.node.iconTemplate);\n  }\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\nimport { HeaderService } from '../header/public-api';\n\n@Component({\n  selector: 'c8y-navigator-outlet, c8y-ui-navigator',\n  templateUrl: './navigator-outlet.template.html',\n})\nexport class NavigatorOutletComponent {\n  @Input() nodes: NavigatorNode[];\n  @Input() open = true;\n\n  constructor(private headerService: HeaderService) {}\n\n  /**\n   * Closes the navigator on click if the window is small.\n   */\n  collapseNavigator(from: 'icon' | 'expander' | 'link') {\n    if (from === 'link' && !this.headerService.largeWidth) {\n      this.headerService.closeNavigator();\n    }\n  }\n\n  trackByPathOrLabel(index, node) {\n    return node.path ? node.path : node.label;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { CommonModule } from '../common/common.module';\nimport { NavigatorItemComponent } from './navigator-entry.component';\nimport { NavigatorIconComponent } from './navigator-icon.component';\nimport { NavigatorNodeComponent } from './navigator-node.component';\nimport { NavigatorOutletComponent } from './navigator-outlet.component';\nimport { NavigatorService } from './navigator.service';\nimport { ModalModule } from '../modal/modal.module';\n\n/**\n * The angular module definition for the navigator.\n * @exports NavigatorOutletComponent\n * @exports NavigatorItemComponent\n */\n@NgModule({\n  declarations: [\n    NavigatorOutletComponent,\n    NavigatorNodeComponent,\n    NavigatorItemComponent,\n    NavigatorIconComponent\n  ],\n  imports: [\n    RouterModule,\n    CollapseModule.forRoot(),\n    CommonModule,\n    ModalModule\n  ],\n  exports: [\n    NavigatorOutletComponent,\n    NavigatorItemComponent\n  ],\n  entryComponents: [\n    NavigatorIconComponent\n  ]\n})\nexport class NavigatorModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-right-drawer',\n  templateUrl: './right-drawer.component.html'\n})\nexport class RightDrawerComponent {\n  @Input('quickLinks') set _quickLinks(data: any[]) {\n    if (data) {\n      this.quickLinks = data.filter(d => d.type === 'quicklink');\n    }\n  }\n  @Input('helpAndSupport') set _helpAndSupport(data: any[]) {\n    if (data) {\n      this.helpAndSupport = data.filter(d => d.type === 'doc');\n    }\n  }\n  @Input() app: any;\n  quickLinks: any[] = [];\n  helpAndSupport: any[] = [];\n}\n","import { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ActionModule } from '../action/action.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { CommonModule } from '../common/common.module';\nimport { SearchModule } from '../search/search.module';\nimport { UserModule } from '../user/user.module';\nimport { AppIconComponent } from './application/app-icon.component';\nimport { AppSwitcherComponent } from './application/app-switcher.component';\nimport { HeaderBarComponent } from './header-bar/header-bar.component';\nimport { HeaderService } from './header.service';\nimport { TitleOutletComponent } from './title/title-outlet.component';\nimport { TitleComponent } from './title/title.component';\nimport { NavigatorModule } from '../navigator/navigator.module';\nimport { RightDrawerComponent } from './right-drawer/right-drawer.component';\n\n/**\n * The angular module definition for the header of the application.\n * @exports HeaderBarComponent\n * @exports TitleComponent\n * @exports TitleOutletComponent\n * @exports AppIconComponent\n * @exports AppSwitcherComponent\n */\n@NgModule({\n  declarations: [\n    TitleComponent,\n    HeaderBarComponent,\n    TitleOutletComponent,\n    AppIconComponent,\n    AppSwitcherComponent,\n    RightDrawerComponent\n  ],\n  imports: [\n    BsDropdownModule,\n    UserModule,\n    SearchModule,\n    CommonModule,\n    ActionModule,\n    BreadcrumbModule,\n    NavigatorModule\n  ],\n  exports: [\n    HeaderBarComponent,\n    TitleComponent,\n    TitleOutletComponent,\n    AppIconComponent,\n    AppSwitcherComponent,\n    RightDrawerComponent\n  ]\n})\nexport class HeaderModule {}\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { PasswordService } from '../authentication/password.service';\nimport { IResetPassword, ICredentials, UserService } from '@c8y/client';\nimport { OptionsService } from '../common/public-api';\nimport { AlertService } from '../alert/public-api';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-change-password',\n  templateUrl: './change-password.component.html',\n  styles: []\n})\nexport class ChangePasswordComponent implements OnInit {\n  @Input() credentials: ICredentials;\n  @Output() onChangeView = new EventEmitter();\n\n  passwordPattern = /^[a-zA-Z0-9`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]{8,32}$/;\n  isLoading = false;\n  model = {\n    tenantId: '',\n    email: '',\n    newPassword: '',\n    newPasswordConfirm: ''\n  };\n  enforcePasswordStrength = false;\n  emailReadOnly = false;\n\n  private TOKEN_PARAM = 'token';\n  private EMAIL_PARAM = 'email';\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private passwordStrengthCheckerService: PasswordService,\n    private options: OptionsService,\n    private alert: AlertService\n  ) { }\n\n  async ngOnInit() {\n    this.model.tenantId = this.loginService.getTenant();\n    this.model.email = this.options.get(this.EMAIL_PARAM, '');\n    this.emailReadOnly = !!this.model.email;\n    this.enforcePasswordStrength = this.loginService.getEnforcePasswordStrength();\n  }\n\n  async changePassword() {\n    const passwordStrengthColor: any = this.passwordStrengthCheckerService.getStrengthColor(\n      this.model.newPassword\n    );\n    const resetPassword: IResetPassword = {\n      token: this.credentials.token,\n      email: this.model.email,\n      newPassword: this.model.newPassword,\n      passwordStrength: passwordStrengthColor.passwordStrength\n    };\n    try {\n      this.isLoading = true;\n      const { res } = await this.users.resetPassword(resetPassword, this.model.tenantId);\n      if (res.status === 200) {\n        this.loginService.addSuccessMessage('password_changed');\n        this.credentials.token = undefined;\n        this.options.set(this.TOKEN_PARAM, undefined);\n        this.onChangeView.emit({ view: LoginViews.Credentials });\n      }\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    } finally {\n      this.loginService.reset();\n      this.isLoading = false;\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { ICredentials } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { gettext } from '../i18n/gettext';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-credentials',\n  templateUrl: './credentials.component.html',\n  styles: []\n})\n\nexport class CredentialsComponent implements OnInit {\n\n  @Output() onChangeView = new EventEmitter();\n\n  LOGIN_VIEWS = LoginViews;\n  model: ICredentials = {};\n  isLoading: boolean = false;\n  showLoginForm: boolean = false;\n  showBasicAuth: boolean = false;\n  oauthOptions: any = {};\n\n  private readonly PASSWORD_RESET_HEADER_NAME = 'passwordresettoken';\n\n  constructor(\n    public loginService: LoginService,\n    public alert: AlertService,\n    public ui: AppStateService\n  ) {}\n\n  ngOnInit() {\n    const { oauthOptions, loginMode } = this.loginService;\n    this.model.tenant = this.loginService.getTenant();\n    this.showLoginForm = typeof loginMode.visibleOnLoginPage === 'undefined' || loginMode.visibleOnLoginPage;\n    this.showBasicAuth = loginMode.type === 'BASIC';\n    this.oauthOptions = oauthOptions;\n  }\n\n  redirectToOauth() {\n    this.loginService.redirectToOauth();\n  }\n\n  /**\n   * Allows to login into the application using basic auth.\n   * If successful logged in the client is set in shared/cumulocity.service.ts\n   */\n  async login() {\n    try {\n      this.isLoading = true;\n      const basicAuth = this.loginService.useBasicAuth(this.model);\n      await this.loginService.login(basicAuth, this.model);\n    } catch (e) {\n      if (e.res && e.res.headers && e.res.headers.get(this.PASSWORD_RESET_HEADER_NAME)) {\n        this.handlePasswordReset(e.res);\n      } else if (e.res && e.res.status === 401 && (/pin/i).test(e.data.message)) {\n        this.handleSmsChallenge(e.data.message);\n      } else if (e.res && e.res.status === 401 && (/TOTP/i).test(e.data.message)) {\n        this.handleTotpChallenge(e.data.message);\n      } else {\n        this.loginService.reset();\n        this.alert.addServerFailure(e);\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private handlePasswordReset(e: any) {\n    this.alert.removeLastDanger();\n    this.model.token = e.headers.get(this.PASSWORD_RESET_HEADER_NAME);\n    this.onChangeView.emit({ view: LoginViews.ChangePassword, credentials: this.model });\n  }\n\n  private handleTotpChallenge(message) {\n    if ((/TOTP setup required/i).test(message)) {\n      this.onChangeView.emit({ view: LoginViews.TotpSetup, credentials: this.model });\n    } else {\n      this.onChangeView.emit({ view: LoginViews.TotpChallenge, credentials: this.model });\n    }\n  }\n\n  private handleSmsChallenge(message: string) {\n    if ((/pin has already been generated/i).test(message)) {\n      this.alert.warning(\n        gettext('The verification code was already sent. For a new verification code, please click on the link above.')\n      );\n    }\n    this.alert.removeLastDanger();\n    this.onChangeView.emit({ view: LoginViews.SmsChallenge, credentials: this.model });\n  }\n}\n","import { Component, Input, OnInit, HostBinding, HostListener, ViewChild } from '@angular/core';\nimport { ICredentials } from '@c8y/client';\nimport { LoginService } from './login.service';\nimport { OptionsService } from '../common/options.service';\nimport { LoginViews } from './login.model';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  currentView: LoginViews = LoginViews.None;\n  LOGIN_VIEWS = LoginViews;\n\n  disabled = false;\n\n  @Input() name: string;\n\n  credentials: ICredentials = {};\n  displayAlerts: boolean = false;\n  private TOKEN_PARAM = 'token';\n\n  /**\n   * Just DI.\n   */\n  constructor(\n    public loginService: LoginService,\n    private options: OptionsService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    const token = this.getResetPasswordToken();\n    if (this.loginService.isFirstLogin) {\n      if (!token) {\n        this.loginAutomatically();\n      } else {\n        this.credentials.token = token;\n        this.reset();\n      }\n    }\n    this.loginService.isFirstLogin = false;\n  }\n\n  handleLoginTemplate(event) {\n    this.currentView = event.view;\n    this.credentials = event.credentials || {};\n  }\n\n  @HostListener('keyup', ['$event']) onkeyup(event: KeyboardEvent) {\n    if (event.key !== 'Enter') {\n      this.loginService.cleanMessages();\n    }\n  }\n\n  reset() {\n    this.loginService.reset();\n    this.setView();\n    this.loginService.cleanMessages();\n  }\n\n  private async loginAutomatically() {\n    try {\n      await this.loginService.login();\n    } catch (e) {\n      const loginMode = this.loginService.loginMode.type;\n      if (loginMode === 'OAUTH2') {\n        this.loginService.redirectToOauth();\n      } else {\n        this.reset();\n        if (loginMode === 'OAUTH2_INTERNAL' && window.location.protocol !== 'https:') {\n          this.alert.danger(gettext('Current login mode only supports HTTPS.'));\n        } else if (e.res && e.res.status === 403) {\n          this.alert.addServerFailure(e);\n        }\n      }\n    }\n  }\n\n  private setView() {\n    if (this.credentials && this.credentials.token) {\n      this.handleLoginTemplate({ view: LoginViews.ChangePassword, credentials: this.credentials });\n    } else {\n      this.handleLoginTemplate({ view: LoginViews.Credentials });\n    }\n  }\n\n  private getResetPasswordToken() {\n    const token = this.options.get(this.TOKEN_PARAM);\n    if (token) {\n      this.options.set(this.TOKEN_PARAM, undefined); // only use once\n    }\n    return token;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserService } from '@c8y/client';\nimport { LoginService } from './login.service';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-recover-password',\n  templateUrl: './recover-password.component.html',\n  styles: []\n})\n\nexport class RecoverPasswordComponent implements OnInit {\n\n  @Output() onChangeView = new EventEmitter();\n  LOGIN_VIEWS = LoginViews;\n  isLoading = false;\n  model = {\n    email: '',\n    tenantId: ''\n  };\n\n  constructor(\n    private users: UserService,\n    public loginService: LoginService) {\n  }\n\n  ngOnInit() {\n    this.model.tenantId = this.loginService.getTenant();\n  }\n\n  async resetPassword() {\n    try {\n      this.isLoading = true;\n      const { res } = await this.users.sendPasswordResetMail(this.model.email, this.model.tenantId);\n      if (res.status === 200) {\n        this.loginService.addSuccessMessage('password_reset_requested');\n      }\n    } finally {\n      this.loginService.reset();\n      this.isLoading = false;\n    }\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { ICredentials, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginService } from './login.service';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-totp-auth',\n  templateUrl: './totp-auth.component.html',\n})\nexport class TotpAuthComponent implements OnInit {\n  @Input() credentials: ICredentials;\n  @Input() view: LoginViews;\n  @Output() onCancel = new EventEmitter();\n  LOGIN_VIEWS = LoginViews;\n  loading = false;\n  hasError = false;\n\n  get isSetup() {\n    return this.view === LoginViews.TotpSetup;\n  }\n\n  constructor(\n    public loginService: LoginService,\n    private userService: UserService,\n    private alert: AlertService\n  ) { }\n\n  /**\n   * In case of a setup we need the user to be authorized\n   * first.\n   */\n  async ngOnInit() {\n    if (this.view === this.LOGIN_VIEWS.TotpSetup) {\n      await this.loginService.switchLoginMode(this.credentials);\n    }\n  }\n\n  async onTotpSuccess(code) {\n    try {\n      this.loading = true;\n      this.hasError = false;\n      this.credentials.tfa = code;\n      if (this.isSetup) {\n        await this.userService.activateTotp();\n      }\n      await this.loginService.switchLoginMode(this.credentials);\n      await this.loginService.verifyAppAccess();\n      await this.loginService.authFulfilled();\n    } catch (e) {\n      this.alert.removeLastDanger();\n      if (e.data && e.data.message === 'Access is denied') {\n        this.alert.addServerFailure(e);\n      } else {\n        this.hasError = true;\n      }\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FormsModule as C8yFormsModule } from '../forms/public-api';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { CredentialsComponent } from './credentials.component';\nimport { LoginComponent } from './login.component';\nimport { LoginService } from './login.service';\nimport { RecoverPasswordComponent } from './recover-password.component';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { AlertModule } from '../alert/alert.module';\nimport { TotpAuthComponent } from './totp-auth.component';\n\n/**\n * The angular module definition for the login.\n * @exports LoginComponent\n */\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RecoverPasswordComponent,\n    ChangePasswordComponent,\n    CredentialsComponent,\n    TotpAuthComponent\n  ],\n  imports: [\n    FormsModule,\n    TooltipModule,\n    CommonModule,\n    AuthenticationModule,\n    AlertModule,\n    C8yFormsModule\n  ],\n  exports: [LoginComponent]\n})\nexport class LoginModule {\n  static forRoot() {\n    return {\n      ngModule: LoginModule,\n      providers: LoginModule.providers()\n    };\n  }\n  static providers() {\n    return [LoginService];\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Input,\n  ViewContainerRef,\n  AfterContentInit,\n  OnDestroy\n} from '@angular/core';\nimport { TabsService } from './tabs.service';\nimport { Tab } from './tab.model';\n\n@Component({\n  selector: 'c8y-tab',\n  template: '<ng-template #tpl><ng-content></ng-content></ng-template>'\n})\nexport class TabComponent implements AfterContentInit, OnDestroy, Tab {\n  @ViewChild('tpl', { static: false }) template: ViewContainerRef;\n  @Input() path: string;\n  @Input() label: string = '';\n  @Input() icon: string;\n  @Input() priority: number;\n  @Input() orientation: 'horizontal' | 'vertical';\n  constructor(private tabs: TabsService) {}\n\n  ngAfterContentInit() {\n    setTimeout(() => this.tabs.add(this as Tab));\n  }\n\n  ngOnDestroy() {\n    this.tabs.remove(this as Tab);\n  }\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  ViewChild,\n  OnDestroy,\n  AfterContentInit,\n  AfterContentChecked} from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\nimport { fromEventPattern, fromEvent, merge, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Tab } from './tab.model';\n\n@Component({\n  selector: 'c8y-tabs-outlet,c8y-ui-tabs',\n  templateUrl: './tabs-outlet.component.html',\n})\nexport class TabsOutletComponent implements OnDestroy, AfterContentInit {\n  @Input() tabs: any[] = [];\n  @Input() orientation: 'vertical' | 'horizontal' = 'vertical';\n  @Input() navigatorOpen = false;\n  showLeft: boolean = false;\n  showRight: boolean = false;\n  @HostBinding('class.navigator-open') get isNavigatorOpen() {\n    return this.navigatorOpen;\n  }\n  @HostBinding('class.page-tabs') get hasTabs() {\n    return this.tabs && this.tabs.length;\n  }\n  @HostBinding('class.page-tabs-horizontal') get isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n  @HostBinding('class.page-tabs-vertical') get isVertical() {\n    return this.orientation !== 'horizontal';\n  }\n  @ViewChild('container', {read: ElementRef, static: true}) private container: ElementRef;\n  @ViewChild('left', {read: ElementRef, static: false}) private leftBtn: ElementRef;\n  @ViewChild('right', {read: ElementRef, static: false}) private rightBtn: ElementRef;\n  @ViewChild('tabsContainer', {read: ElementRef, static: false}) private tabsContainer: ElementRef;\n  private scrollSubscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnDestroy() {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.orientation === 'horizontal') {\n      this.scrollSubscribe();\n    }\n\n  }\n\n  isActive(tab: Tab) {\n    if (tab && tab.path) {\n      return this.router.isActive(tab.path, false);\n    } else {\n      return false;\n    }\n  }\n\n  navigateTo(path) {\n    this.router.navigate([path]);\n  }\n\n  scroll(direction: 'right' | 'left' = 'right') {\n    const { widthScroll, width, scrollLeft } = this.getDimensions();\n    const multiplier = direction === 'left' ? -1 : 1;\n\n    let targetScroll = scrollLeft + width * multiplier;\n    if (targetScroll < 0) {\n      targetScroll = 0;\n    }\n    if (targetScroll > widthScroll - width) {\n      targetScroll = widthScroll - width;\n    }\n    // TODO: we should animate this\n    this.container.nativeElement.scrollLeft = targetScroll;\n  }\n\n  private scrollSubscribe() {\n    let unlisten;\n    this.scrollSubscription = merge(\n      fromEvent(this.container.nativeElement, 'scroll'),\n      fromEventPattern(\n        (handler: any) => {\n          unlisten = this.renderer.listen('window', 'resize', handler);\n        },\n        () => unlisten()\n      )\n    ).pipe(\n      debounceTime(250)\n    ).subscribe(() => this.updateScroll());\n  }\n\n  private updateScroll() {\n    const { widthScroll, width, scrollLeft } = this.getDimensions();\n    this.showLeft = !!scrollLeft;\n    this.showRight = widthScroll > width + scrollLeft;\n  }\n\n  private getDimensions() {\n    const elTabs = this.tabsContainer.nativeElement;\n    const el = this.container.nativeElement;\n    const widthScroll =   elTabs.scrollWidth;\n    const width = el.clientWidth;\n    const scrollLeft = el.scrollLeft;\n    return { widthScroll, width, scrollLeft };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '../common/common.module';\nimport { TabComponent } from './tab.component';\nimport { TabsOutletComponent } from './tabs-outlet.component';\nimport { TabsService } from './tabs.service';\n\n@NgModule({\n  declarations: [\n    TabsOutletComponent,\n    TabComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    TabsOutletComponent,\n    TabComponent\n  ]\n})\nexport class TabsModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { OptionsService } from '../../common/options.service';\n\n@Component({\n  selector: 'c8y-cookie-banner',\n  templateUrl: './cookie-banner.template.html'\n})\nexport class CookieBannerComponent implements OnInit {\n  readonly storageKey: string = 'acceptCookieNotice';\n  readonly acceptValue: string = '1';\n  showBanner: boolean;\n  settings: { cookieBannerTitle?: string; cookieBannerText: string; policyUrl?: string };\n\n  constructor(private options: OptionsService) {}\n\n  ngOnInit() {\n    this.settings = this.options.get('cookieBanner');\n    if (this.settings && this.settings.cookieBannerText && !localStorage.getItem(this.storageKey)) {\n      this.showBanner = true;\n    }\n  }\n\n  acceptCookies() {\n    localStorage.setItem(this.storageKey, this.acceptValue);\n    this.showBanner = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ActionBarModule } from '../action-bar/action-bar.module';\nimport { AlertModule } from '../alert/alert.module';\nimport { HeaderModule } from '../header/header.module';\nimport { LoginModule } from '../login/login.module';\nimport { NavigatorModule } from '../navigator/navigator.module';\nimport { TabsModule } from '../tabs/tabs.module';\nimport { BootstrapComponent } from './bootstrap.component';\nimport { CommonModule } from '../common/common.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CookieBannerComponent } from './cookie-banner/cookie-banner.component';\n\n/**\n * The module which allows to bootstrap a custom application.\n * Use it as `bootstrap: []` component in your main app module\n * or as `<c8y-bootstrap>` in your main app.\n */\n@NgModule({\n  declarations: [\n    BootstrapComponent,\n    CookieBannerComponent\n  ],\n  imports: [\n    CommonModule,\n    HeaderModule,\n    LoginModule,\n    RouterModule,\n    TabsModule,\n    ActionBarModule,\n    AlertModule,\n    NavigatorModule,\n    TooltipModule\n  ],\n  exports: [\n    BootstrapComponent\n  ],\n  entryComponents: [\n    BootstrapComponent\n  ]\n})\nexport class BootstrapModule {}\n","/* tslint:disable:max-classes-per-file */\n\nimport { Directive, TemplateRef, Type } from '@angular/core';\n\nimport { Column } from '../data-grid.model';\n\nexport interface CellRendererDef {\n  template: TemplateRef<any>;\n}\n\nexport interface CellRendererSpec {\n  renderer: TemplateRef<CellRendererContext> | Type<any>;\n  context: CellRendererContext;\n}\n\nexport class CellRendererContext {\n  value: any;\n  item?: any;\n  property: Column;\n}\n\n@Directive({ selector: '[c8yCellRendererDef]' })\nexport class CellRendererDefDirective implements CellRendererDef {\n  constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({ selector: '[c8yHeaderCellRendererDef]' })\nexport class HeaderCellRendererDefDirective implements CellRendererDef {\n  constructor(public template: TemplateRef<any>) {}\n}\n","/* tslint:disable:max-classes-per-file */\n\nimport { Directive, TemplateRef, Type } from '@angular/core';\nimport { Column, FilterPredicateFunction } from '../data-grid.model';\n\nexport interface FilteringFormRendererSpec {\n  renderer: TemplateRef<FilteringFormRendererContext> | Type<any>;\n  context: FilteringFormRendererContext;\n}\n\nexport class FilteringFormRendererContext {\n  property: Column;\n  applyFilter: (filteringModifier: FilteringModifier) => void;\n  resetFilter: () => void;\n}\n\nexport interface FilteringModifier {\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: string | object;\n}\n\n@Directive({ selector: '[c8yFilteringFormRendererDef]' })\nexport class FilteringFormRendererDefDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { ContentChild, Directive, Input } from '@angular/core';\n\nimport { CellRendererDefDirective, HeaderCellRendererDefDirective } from './cell-renderer';\nimport { FilteringFormRendererDefDirective } from './filtering-form-renderer';\n\n@Directive({ selector: 'c8y-column' })\nexport class ColumnDirective {\n  @Input() name: string;\n\n  @ContentChild(CellRendererDefDirective, { static: false })\n  cellRendererDef: CellRendererDefDirective;\n\n  @ContentChild(HeaderCellRendererDefDirective, { static: false })\n  headerCellRendererDef: HeaderCellRendererDefDirective;\n\n  @ContentChild(FilteringFormRendererDefDirective, { static: false })\n  filteringFormRendererDef: FilteringFormRendererDefDirective;\n}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport {\n  chunk,\n  flow,\n  get,\n  isNaN as _isNaN,\n  isNil,\n  mapValues,\n  omitBy,\n  orderBy,\n  parseInt as _parseInt,\n  pick\n} from 'lodash-es';\nimport { BehaviorSubject, defer, from, isObservable, Observable, of, empty } from 'rxjs';\nimport { catchError, finalize, map, tap, switchMap } from 'rxjs/operators';\n\nimport { Column, DataSourceStats, ServerSideDataResult } from './data-grid.model';\n\nexport class GridDataSource implements DataSource<object> {\n  loading$: Observable<boolean>;\n  data$: Observable<object[]>;\n  stats$: Observable<DataSourceStats>;\n  selection$: Observable<any>;\n\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  private dataSourceSubject = new BehaviorSubject<object[]>([]);\n  private dataStatsSubject = new BehaviorSubject<DataSourceStats>({\n    size: 0,\n    filteredSize: 0,\n    currentPage: 0,\n    currentPageSize: 0,\n    firstPageSize: 0\n  });\n  private dataSelectionSubject = new BehaviorSubject<any>({\n    filteredDataIds: []\n  });\n\n  constructor() {\n    this.loading$ = this.loadingSubject.asObservable();\n    this.data$ = this.dataSourceSubject.asObservable();\n    this.stats$ = this.dataStatsSubject.asObservable();\n    this.selection$ = this.dataSelectionSubject.asObservable();\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<object[]> {\n    return this.data$;\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.loadingSubject.complete();\n    this.dataSourceSubject.complete();\n    this.dataStatsSubject.complete();\n    this.dataSelectionSubject.complete();\n  }\n\n  loadData({\n    rows,\n    columns,\n    pagination,\n    searchText,\n    serverSideDataCallback,\n    selectable,\n    selectionPrimaryKey\n  }) {\n    const clientSideData$ = this.toObservable(rows).pipe(\n      map(initialData => {\n        let filteredSize = 0;\n        let filteredDataIds = [];\n\n        const transformedData = flow(\n          data => this.doClientSideSearch({ data, columns, searchText }),\n          data => this.doClientSideFiltering({ data, columns }),\n          data => this.doClientSideSorting({ data, columns }),\n          data => {\n            filteredSize = data.length;\n            filteredDataIds = selectable\n              ? data.map(item => item[selectionPrimaryKey])\n              : filteredDataIds;\n\n            return data;\n          },\n          data => this.doClientSidePagination({ data, pagination })\n        )(initialData);\n\n        this.dataStatsSubject.next({\n          size: initialData.length,\n          filteredSize,\n          currentPage: pagination.currentPage,\n          currentPageSize: transformedData.length,\n          firstPageSize: pagination.pageSize\n        });\n        this.dataSelectionSubject.next({ filteredDataIds });\n\n        return transformedData;\n      })\n    );\n\n    const serverSideData$ = defer(() =>\n      this.toObservable(\n        serverSideDataCallback({\n          columns,\n          searchText,\n          pagination,\n          selection: { enabled: selectable, primaryKey: selectionPrimaryKey }\n        })\n      )\n    ).pipe(\n      map((result: ServerSideDataResult) => {\n        const { data, paging, size, filteredSize, filteredDataIds } = result;\n\n        this.dataStatsSubject.next({\n          size,\n          filteredSize,\n          currentPage: paging.currentPage,\n          currentPageSize: data.length,\n          firstPageSize: paging.pageSize\n        });\n        this.dataSelectionSubject.next({ filteredDataIds: filteredDataIds || [] });\n\n        return data;\n      })\n    );\n\n    const data$ = typeof serverSideDataCallback === 'function' ? serverSideData$ : clientSideData$;\n\n    of([])\n      .pipe(\n        tap(() => this.loadingSubject.next(true)),\n        switchMap(() => data$),\n        catchError(err => {\n          this.dataStatsSubject.next({\n            size: 0,\n            filteredSize: 0,\n            currentPage: 0,\n            currentPageSize: 0,\n            firstPageSize: 0\n          });\n          this.dataSelectionSubject.next({ filteredDataIds: [] });\n          return of([]);\n        }),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe(data => {\n        this.dataSourceSubject.next(data);\n      });\n  }\n\n  resolveValue(x, path) {\n    return get(x, path);\n  }\n\n  resolveFunction(x) {\n    return typeof x === 'function' ? x() : x;\n  }\n\n  normalizeNil(x) {\n    return isNil(x) ? '' : x;\n  }\n\n  private doClientSideFiltering({ data, columns }) {\n    return columns.reduce((result, column) => {\n      const { filterPredicate } = column;\n\n      if (typeof filterPredicate === 'string') {\n        return this.doClientSideSearch({\n          data: result,\n          columns: [column],\n          searchText: filterPredicate\n        });\n      }\n\n      if (typeof filterPredicate === 'function') {\n        return result.filter(item => filterPredicate(item, column.path));\n      }\n\n      return result;\n    }, data);\n  }\n\n  private doClientSideSearch({ data, columns, searchText }) {\n    const propPaths = columns.map(({ path }) => path).filter(column => !isNil(column));\n\n    const regexSearch = this.createRegexSearch(searchText);\n\n    return data.filter(item => {\n      const itemWithResolvedValues = flow(\n        x => pick(x, propPaths),\n        x => mapValues(x, this.resolveFunction),\n        x => omitBy(x, isNil)\n      )(item);\n\n      const cellValues = Object.values(itemWithResolvedValues);\n\n      return cellValues.some(cellValue => regexSearch.test(cellValue.toString()));\n    });\n  }\n\n  private doClientSideSorting({ data, columns }) {\n    const actives: Column[] = columns.filter(({ sortOrder }: Column) => !!sortOrder);\n\n    const sortingState = {\n      paths: actives.map(({ path }) => path),\n      orders: actives.map(({ sortOrder }) => sortOrder)\n    };\n\n    return orderBy(data, sortingState.paths, sortingState.orders);\n  }\n\n  private doClientSidePagination({ data, pagination }) {\n    return pagination\n      ? get(chunk(data, pagination.pageSize), pagination.currentPage - 1, [])\n      : data;\n  }\n\n  private createRegexSearch(filterValue) {\n    return RegExp(escapeRegExpPattern(filterValue), 'i');\n  }\n\n  private toObservable(x): Observable<any> {\n    return isObservable(x) ? x : x instanceof Promise ? from(x) : of(x);\n  }\n}\n\n/**\n *\n * @param string pattern Regex pattern.\n * @return string The escaped regex.\n * @see https://stackoverflow.com/a/3561711/2013891\n */\nfunction escapeRegExpPattern(pattern = '') {\n  return pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n","import { gettext } from '../i18n/gettext';\nimport { formatDate } from '@angular/common';\n// TODO remove  when c8y-icon will works\n\nexport const deviceAvailabilityIconMap = {\n  sendData: {\n    AVAILABLE: {\n      icon: 'long-arrow-right',\n      class: 'statusOk'\n    },\n    UNAVAILABLE: {\n      icon: 'long-arrow-right',\n      class: 'statusNok'\n    },\n    UNKNOWN: {\n      icon: 'long-arrow-right',\n      class: 'statusUnknown'\n    },\n    NOT_MONITORED: {\n      icon: 'long-arrow-right',\n      class: 'statusUnknown'\n    }\n  },\n  push: {\n    CONNECTED: {\n      icon: 'long-arrow-left',\n      class: 'statusOk'\n    },\n    DISCONNECTED: {\n      icon: 'long-arrow-left',\n      class: 'statusUnknown'\n    },\n    UNKNOWN: {\n      icon: 'long-arrow-left',\n      class: 'statusUnknown'\n    },\n    MAINTENANCE: {\n      icon: 'wrench',\n      class: 'statusAlert'\n    }\n  },\n  device: {\n    MAINTENANCE: {\n      icon: 'wrench',\n      class: 'statusAlert'\n    }\n  }\n};\n\nexport const tooltips = {\n  sendStatusConnected: (lastMessage, translateService) => {\n    const date = formatDate(new Date(lastMessage), 'medium', translateService.currentLang);\n    return translateService.instant(gettext('Device last request:\\n{{date}}'),\n      { date });\n  },\n  sendStatusDisconnected: gettext('Connection not monitored'),\n  pushStatusConnected: gettext('Connection to device established'),\n  pushStatusDisconnected: gettext('Connection to device not established (not supported by device or no connectivity)'),\n  maintenance: gettext('Under maintenance')\n};\n\nexport enum PushStatusLabels {\n  CONNECTED = gettext('Push connection: active'),\n  DISCONNECTED = gettext('Push connection: inactive'),\n  UNKNOWN = gettext('Push connection: inactive')\n}\n\nexport enum SendStatusLabels {\n  AVAILABLE = gettext('Send connection: online'),\n  NOT_MONITORED = gettext('Send connection: not monitored'),\n  UNAVAILABLE = gettext('Send connection: offline'),\n  UNKNOWN = gettext('Send connection status unknown'),\n  MAINTENANCE = gettext('Under maintenance')\n}\n","import { CdkHeaderCell } from '@angular/cdk/table';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { flow, get, parseInt as _parseInt, union, without } from 'lodash-es';\nimport { combineLatest, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  first,\n  mergeMap,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\n\nimport { ColumnDirective } from './column/column.directive';\nimport { CellRendererSpec } from './column/cell-renderer';\nimport { FilteringFormRendererSpec, FilteringModifier } from './column/filtering-form-renderer';\nimport {\n  ActionControl,\n  BuiltInActionType,\n  BulkActionControl,\n  Column,\n  ColumnDataType,\n  DataGrid,\n  DisplayOptions,\n  FilteringActionType,\n  minColumnGridTrackSize,\n  Pagination,\n  ratiosByColumnTypes,\n  Row,\n  ServerSideDataCallback,\n  SortOrder,\n  SpecialColumnName,\n  DataSourceStats\n} from './data-grid.model';\nimport { GridDataSource } from './grid-data-source';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-data-grid',\n  templateUrl: './data-grid.component.html'\n})\nexport class DataGridComponent implements DataGrid, OnChanges, AfterViewInit {\n  @Input() title: string = gettext('Items');\n  @Input() loadingItemsLabel: string = gettext('Loading items…');\n  @Input() noMatchingItemsLabel: string = gettext('No matching items.');\n\n  columns: Column[];\n  @Input('columns')\n  set _columns(columns) {\n    this.columns = columns || [];\n  }\n\n  dataSource = new GridDataSource();\n  rows: Row[];\n  @Input('rows')\n  set _rows(rows) {\n    this.rows = rows || [];\n  }\n\n  filteringLabelsParams = {\n    filteredItemsCount: 0,\n    allItemsCount: 0\n  };\n\n  pagination: Pagination;\n  paginationLabelParams = {\n    pageFirstItemIdx: 0,\n    pageLastItemIdx: 0,\n    itemsTotal: 0\n  };\n  readonly possiblePageSizes: number[] = [10, 15, 20, 30, 50];\n  readonly minPossiblePageSize = Math.min(...this.possiblePageSizes);\n  @Input('pagination')\n  set _pagination(pagination) {\n    this.pagination = pagination;\n    const pageSize = get(this.pagination, 'pageSize');\n\n    if (\n      pageSize &&\n      !this.possiblePageSizes.find(possiblePageSize => possiblePageSize === pageSize)\n    ) {\n      this.pagination = { ...this.pagination, pageSize: 10 };\n    }\n  }\n\n  serverSideDataCallback: ServerSideDataCallback;\n  @Input('serverSideDataCallback')\n  set _serverSideDataCallback(serverSideDataCallback) {\n    this.serverSideDataCallback = serverSideDataCallback;\n  }\n\n  selectable = false;\n  @Input('selectable')\n  set _selectable(selectable) {\n    this.selectable = selectable;\n  }\n\n  selectionPrimaryKey = 'id';\n  @Input('selectionPrimaryKey')\n  set _selectionPrimaryKey(selectionPrimaryKey) {\n    this.selectionPrimaryKey = selectionPrimaryKey;\n  }\n\n  displayOptions: DisplayOptions = {\n    striped: true,\n    bordered: false,\n    gridHeader: true\n  };\n  @Input('displayOptions')\n  set _displayOptions(displayOptions) {\n    this.displayOptions = { ...this.displayOptions, ...displayOptions };\n  }\n\n  actionControls: ActionControl[];\n  @Input('actionControls')\n  set _actionControls(actionControls) {\n    this.actionControls = actionControls || [];\n  }\n\n  bulkActionControls: BulkActionControl[];\n  @Input('bulkActionControls')\n  set _bulkActionControls(bulkActionControls) {\n    this.bulkActionControls = bulkActionControls || [];\n  }\n\n  @Output() rowMouseOver = new EventEmitter<object>();\n  @Output() rowMouseLeave = new EventEmitter<object>();\n  @Output() rowClick = new EventEmitter<object>();\n\n  @Output() itemsSelect = new EventEmitter<string[]>();\n\n  @ContentChildren(ColumnDirective) columnRenderers: QueryList<ColumnDirective>;\n\n  columnNames = [];\n\n  styles = {\n    tableCursor: 'auto',\n    gridTemplateColumns: undefined\n  };\n\n  searchText$ = new EventEmitter<string>();\n  searchText = '';\n  filteringApplied = false;\n  totalPagesCount = Infinity;\n\n  selectedItemIds: string[] = [];\n  currentPageSelectionState = {\n    allSelected: false,\n    allDeselected: true\n  };\n\n  builtInActionType = {\n    Edit: BuiltInActionType.Edit,\n    Delete: BuiltInActionType.Delete,\n    Export: BuiltInActionType.Export\n  };\n\n  resizeHandleMouseDown$ = new EventEmitter<any>();\n  resizeHandleContainerMouseMove$ = new EventEmitter<any>();\n  resizeHandleContainerMouseUp$ = new EventEmitter<any>();\n  private headerBeingResized: {\n    columnName: string;\n    el: HTMLElement;\n  };\n  @ViewChildren(CdkHeaderCell, { read: ElementRef }) private thRefs: QueryList<ElementRef>;\n  private thEls;\n\n  private unsubscribe$ = new Subject<any>();\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private hostRef: ElementRef,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.searchText$\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        debounceTime(300),\n        distinctUntilChanged(),\n        tap(searchText => {\n          this.searchText = searchText;\n        })\n      )\n      .subscribe(() => {\n        this.reload();\n      });\n\n    if (this.selectable) {\n      combineLatest(this.dataSource.data$, this.itemsSelect.asObservable())\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(([data]) => {\n          const currentPageEmpty = data.length === 0;\n\n          this.currentPageSelectionState = {\n            allSelected: currentPageEmpty ? false : data.every(item => this.isItemSelected(item)),\n            allDeselected: currentPageEmpty ? true : data.every(item => !this.isItemSelected(item))\n          };\n        });\n    }\n  }\n\n  ngOnChanges() {\n    this.updateColumns();\n    this.loadData();\n  }\n\n  ngAfterViewInit() {\n    this.updateGridColumnsSize();\n    this.thEls = this.thRefs.toArray().map(({ nativeElement }) => nativeElement);\n    this.setupResizeHandle();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  trackByName(index, item) {\n    return item.name;\n  }\n\n  resolveCellValue(row, path) {\n    return flow([\n      x => this.dataSource.resolveValue(x, path),\n      this.dataSource.resolveFunction,\n      this.dataSource.normalizeNil\n    ])(row);\n  }\n\n  changeSortOrder(columnName) {\n    const column = this.columns.find(({ name }) => name === columnName);\n\n    if (column) {\n      const { sortOrder } = column;\n\n      if (!sortOrder) {\n        this.updateSorting([columnName], 'asc');\n      } else if (sortOrder === 'asc') {\n        this.updateSorting([columnName], 'desc');\n      } else {\n        this.updateSorting([columnName], '');\n      }\n    }\n  }\n\n  updateSorting(columnNames: string[], sortOrder: SortOrder) {\n    this.columns = this.columns.map(\n      (column): Column => {\n        if (columnNames.includes(column.name)) {\n          return { ...column, sortOrder };\n        }\n\n        return column;\n      }\n    );\n\n    this.reload();\n  }\n\n  applyFilter(columnName, dropdown, filteringModifier) {\n    this.updateFiltering([columnName], {\n      type: FilteringActionType.ApplyFilter,\n      payload: { filteringModifier }\n    });\n    dropdown.hide();\n  }\n\n  resetFilter(columnName, dropdown) {\n    this.updateFiltering([columnName], { type: FilteringActionType.ResetFilter });\n    dropdown.hide();\n  }\n\n  clearFilters() {\n    this.updateFiltering(this.columns.map(({ name }) => name), {\n      type: FilteringActionType.ResetFilter\n    });\n  }\n\n  updateFiltering(\n    columnNames: string[],\n    action: {\n      type: FilteringActionType;\n      payload?: { filteringModifier: FilteringModifier };\n    }\n  ) {\n    this.columns = this.columns.map(column => {\n      if (columnNames.includes(column.name)) {\n        return {\n          ...column,\n          ...(action.type === FilteringActionType.ApplyFilter\n            ? action.payload.filteringModifier\n            : { filterPredicate: undefined, externalFilterQuery: undefined })\n        };\n      }\n\n      return column;\n    });\n\n    this.updateFilteringApplied();\n    this.reload();\n  }\n\n  updateFilteringApplied() {\n    this.filteringApplied = this.columns.some(this.isColumnFilteringApplied);\n  }\n\n  isColumnFilteringApplied(column: Column): boolean {\n    const { filterable, filterPredicate, externalFilterQuery } = column;\n\n    return !!(filterable && (filterPredicate || externalFilterQuery));\n  }\n\n  updatePagination({ itemsPerPage, page }) {\n    this.pagination = { ...this.pagination, pageSize: itemsPerPage, currentPage: page };\n    this.loadData();\n  }\n\n  reload() {\n    this.pagination = { ...this.pagination, currentPage: 1 };\n    this.loadData();\n  }\n\n  getCellRendererSpec({ value, row, columnName }): CellRendererSpec {\n    return this._getCellRendererSpec({ type: 'CELL', value, row, columnName });\n  }\n\n  getHeaderCellRendererSpec({ value, columnName }): CellRendererSpec {\n    return this._getCellRendererSpec({ type: 'HEADER', value, row: undefined, columnName });\n  }\n\n  getFilteringFormRendererSpec({ column, dropdown }): FilteringFormRendererSpec {\n    return {\n      renderer:\n        get(this.getColumnRenderer(column), 'filteringFormRendererDef.template') ||\n        column.filteringFormRendererComponent,\n      context: {\n        property: column,\n        applyFilter: this.applyFilter.bind(this, column.name, dropdown),\n        resetFilter: this.resetFilter.bind(this, column.name, dropdown)\n      }\n    };\n  }\n\n  setAllItemsSelected(selected) {\n    this.dataSource.selection$\n      .pipe(first())\n      .subscribe(({ filteredDataIds }) => this.setItemsSelected(filteredDataIds, selected));\n  }\n\n  setAllItemsInCurrentPageSelected(selected) {\n    this.dataSource.data$.pipe(first()).subscribe(data => this.setItemsSelected(data, selected));\n  }\n\n  setItemsSelected(items: any[], selected) {\n    const itemIds = items.map((item: object | string) =>\n      typeof item === 'object' ? item[this.selectionPrimaryKey] : item\n    );\n\n    this.selectedItemIds = selected\n      ? union(this.selectedItemIds, itemIds)\n      : without(this.selectedItemIds, ...itemIds);\n\n    this.itemsSelect.emit(this.selectedItemIds);\n  }\n\n  isItemSelected(item) {\n    return this.selectedItemIds.includes(item[this.selectionPrimaryKey]);\n  }\n\n  onColumnDrop({ previousIndex, currentIndex }) {\n    const differentIndex = previousIndex !== currentIndex;\n\n    if (differentIndex) {\n      const column = this.columns.splice(previousIndex, 1);\n      this.columns.splice(currentIndex, 0, column[0]);\n    }\n\n    this.updateColumnNames();\n    this.updateGridColumnsSize();\n  }\n\n  updateGridColumnsSize() {\n    this.styles = {\n      ...this.styles,\n      gridTemplateColumns: this.sanitizer.bypassSecurityTrustStyle(\n        this.columns\n          .filter(column => column.visible)\n          .map(({ gridTrackSize }) => gridTrackSize)\n          .join(' ')\n      )\n    };\n  }\n\n  private updateColumns() {\n    const specialColumn = {\n      gridTrackSize: '42px',\n      sortable: false,\n      positionFixed: true\n    };\n\n    this.columns = [\n      this.selectable ? { ...specialColumn, name: SpecialColumnName.Checkbox } : undefined,\n      ...this.columns,\n      this.actionControls.length > 0\n        ? { ...specialColumn, name: SpecialColumnName.Actions }\n        : undefined\n    ]\n      .filter(Boolean)\n      .map(this.withColumnDefaults);\n\n    this.updateColumnNames();\n    this.updateGridColumnsSize();\n    this.updateFilteringApplied();\n  }\n\n  private withColumnDefaults(column): Column {\n    const dataType = column.dataType || ColumnDataType.TextShort;\n    const { headerCSSClassName, cellCSSClassName } = column;\n\n    return {\n      visible: true,\n      positionFixed: false,\n      sortable: true,\n      sortOrder: '',\n      filterable: false,\n      ...column,\n      dataType,\n      gridTrackSize:\n        column.gridTrackSize ||\n        `minmax(${minColumnGridTrackSize}px, ${ratiosByColumnTypes[dataType]}fr)`,\n      headerCSSClassName:\n        (typeof headerCSSClassName === 'string'\n          ? headerCSSClassName.split(' ')\n          : headerCSSClassName) || [],\n      cellCSSClassName:\n        (typeof cellCSSClassName === 'string' ? cellCSSClassName.split(' ') : cellCSSClassName) ||\n        []\n    };\n  }\n\n  private updateColumnNames() {\n    this.columnNames = this.columns.map(({ name }) => name);\n  }\n\n  private setupResizeHandle() {\n    const resizeHandleDrag$ = this.resizeHandleMouseDown$.pipe(\n      takeUntil(this.unsubscribe$),\n      tap(() => this.clearMouseHighlights()),\n      mergeMap(({ event, targetColumnName }) => {\n        this.columns = this.columns.map(column => {\n          if (column.name === targetColumnName) {\n            return {\n              ...column,\n              headerCSSClassName: union(column.headerCSSClassName, ['header--being-resized'])\n            };\n          }\n\n          return column;\n        });\n\n        this.headerBeingResized = {\n          columnName: targetColumnName,\n          el: event.target.parentNode\n        };\n\n        this.styles = {\n          ...this.styles,\n          tableCursor: 'col-resize'\n        };\n\n        return this.resizeHandleContainerMouseMove$.pipe(\n          tap(() => this.clearMouseHighlights()),\n          takeUntil(this.resizeHandleContainerMouseUp$)\n        );\n      })\n    );\n\n    resizeHandleDrag$.subscribe(event => {\n      requestAnimationFrame(() => {\n        this.columns = this.columns.map((column, i) => {\n          if (column.name === this.headerBeingResized.columnName) {\n            const wrapper = this.hostRef.nativeElement;\n\n            // Read wrapper's offset left relative to the document.\n            const horizontalOffset = wrapper.getBoundingClientRect().left;\n\n            // Adjust with the wrapper horizontal scroll position.\n            const horizontalScrollOffset = wrapper.scrollLeft - horizontalOffset;\n\n            // Calculate the desired width.\n            const width =\n              horizontalScrollOffset + event.clientX - (this.headerBeingResized.el.offsetLeft || 0);\n\n            return {\n              ...column,\n              // Update the column object with the new size value, enforce our minimum size.\n              gridTrackSize: `${Math.max(minColumnGridTrackSize, width)}px`\n            };\n          }\n\n          // For the other headers which don't have a set width, fix it to their computed width.\n          if (column.gridTrackSize.startsWith('minmax')) {\n            return {\n              ...column,\n              // isn't fixed yet (it would be a px value)\n              gridTrackSize: `${_parseInt(this.thEls[i].clientWidth)}px`\n            };\n          }\n\n          return column;\n        });\n\n        /*\n         * Update the column sizes.\n         * Note: grid-template-columns sets the width for all columns in one value.\n         */\n        this.updateGridColumnsSize();\n      });\n    });\n\n    this.resizeHandleContainerMouseUp$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      if (this.headerBeingResized) {\n        this.columns = this.columns.map(column => {\n          if (column.name === this.headerBeingResized.columnName) {\n            return {\n              ...column,\n              headerCSSClassName: without(column.headerCSSClassName, 'header--being-resized')\n            };\n          }\n\n          return column;\n        });\n        this.headerBeingResized = undefined;\n\n        this.styles = {\n          ...this.styles,\n          tableCursor: 'auto'\n        };\n      }\n    });\n  }\n\n  private clearMouseHighlights() {\n    if (window.getSelection) {\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  private _getCellRendererSpec({ type, value, row, columnName }): CellRendererSpec {\n    const column = this.columns.find(({ name }) => name === columnName);\n    const columnRenderer = this.getColumnRenderer(column);\n    const rendererTemplate = get(\n      columnRenderer,\n      `${type === 'HEADER' ? 'headerCellRendererDef' : 'cellRendererDef'}.template`\n    );\n\n    const { cellRendererComponent, headerCellRendererComponent } = column;\n    const rendererComponent =\n      type === 'HEADER' ? headerCellRendererComponent : cellRendererComponent;\n\n    return {\n      renderer: rendererTemplate || rendererComponent,\n      context: {\n        value,\n        item: row,\n        property: column\n      }\n    };\n  }\n\n  private getColumnRenderer(column): ColumnDirective {\n    return this.columnRenderers.toArray().find(({ name }) => name === column.name);\n  }\n\n  private loadData() {\n    const {\n      rows,\n      columns,\n      pagination,\n      searchText,\n      serverSideDataCallback,\n      selectable,\n      selectionPrimaryKey\n    } = this;\n\n    this.dataSource.loadData({\n      rows,\n      columns,\n      pagination,\n      searchText,\n      serverSideDataCallback,\n      selectable,\n      selectionPrimaryKey\n    });\n\n    this.dataSource.stats$.subscribe(stats => {\n      this.updateFilteringLabelsParams(stats);\n      this.updatePaginationLabelParams(stats);\n    });\n  }\n\n  private updateFilteringLabelsParams(stats: DataSourceStats) {\n    this.filteringLabelsParams = {\n      filteredItemsCount: stats.filteredSize,\n      allItemsCount: stats.size\n    };\n  }\n\n  private updatePaginationLabelParams(stats: DataSourceStats) {\n    const pageFirstItemIdx = (stats.currentPage - 1) * stats.firstPageSize + 1;\n    this.paginationLabelParams = {\n      pageFirstItemIdx,\n      pageLastItemIdx: pageFirstItemIdx + (stats.currentPageSize - 1),\n      itemsTotal: stats.filteredSize\n    };\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  Injector,\n  Input,\n  OnChanges,\n  TemplateRef,\n  Type\n} from '@angular/core';\n\nimport { CellRendererContext, CellRendererSpec } from './cell-renderer';\n\n@Component({\n  selector: 'c8y-cell-renderer',\n  templateUrl: './cell-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CellRendererComponent implements OnChanges, DoCheck {\n  spec: CellRendererSpec;\n  @Input('spec')\n  set _spec(spec: CellRendererSpec) {\n    this.spec = spec;\n  }\n  prevSpec: CellRendererSpec;\n\n  rendererType: 'TEMPLATE' | 'COMPONENT';\n  rendererInjector: Injector;\n\n  constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    if (!this.prevSpec) {\n      this.prevSpec = this.spec;\n    }\n\n    const { renderer } = this.spec;\n\n    if (renderer instanceof TemplateRef) {\n      this.rendererType = 'TEMPLATE';\n    } else if (renderer instanceof Type) {\n      this.rendererType = 'COMPONENT';\n\n      this.rendererInjector = Injector.create({\n        providers: [{ provide: CellRendererContext, useValue: this.spec.context }],\n        parent: this.injector\n      });\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.spec.context.value === this.prevSpec.context.value) {\n      this.prevSpec = this.spec;\n      this.cd.markForCheck();\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  Injector,\n  Input,\n  OnChanges,\n  TemplateRef,\n  Type\n} from '@angular/core';\nimport { isEqual } from 'lodash-es';\n\nimport { FilteringFormRendererContext, FilteringFormRendererSpec } from './filtering-form-renderer';\n\n@Component({\n  selector: 'c8y-filtering-form-renderer',\n  templateUrl: './filtering-form-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilteringFormRendererComponent implements OnChanges {\n  spec: FilteringFormRendererSpec;\n  @Input('spec')\n  set _spec(spec: FilteringFormRendererSpec) {\n    this.spec = spec;\n  }\n\n  rendererType: 'TEMPLATE' | 'COMPONENT';\n  rendererInjector: Injector;\n  defaultRendererFilterText = '';\n\n  constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    const { renderer, context } = this.spec;\n\n    if (renderer instanceof TemplateRef) {\n      this.rendererType = 'TEMPLATE';\n    } else if (renderer instanceof Type) {\n      this.rendererType = 'COMPONENT';\n\n      this.rendererInjector = Injector.create({\n        providers: [{ provide: FilteringFormRendererContext, useValue: this.spec.context }],\n        parent: this.injector\n      });\n    }\n\n    const { filterPredicate } = context.property;\n    if (typeof filterPredicate === 'string') {\n      this.defaultRendererFilterText = filterPredicate;\n    }\n  }\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { CommonModule as C8YCommonModule } from '../common/common.module';\nimport { DataGridComponent } from './data-grid.component';\nimport { ColumnDirective } from './column/column.directive';\nimport { CellRendererDefDirective, HeaderCellRendererDefDirective } from './column/cell-renderer';\nimport { CellRendererComponent } from './column/cell-renderer.component';\nimport { FilteringFormRendererDefDirective } from './column/filtering-form-renderer';\nimport { FilteringFormRendererComponent } from './column/filtering-form-renderer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    C8YCommonModule,\n    BsDropdownModule.forRoot(),\n    PopoverModule.forRoot(),\n    PaginationModule.forRoot()\n  ],\n  declarations: [\n    CellRendererDefDirective,\n    HeaderCellRendererDefDirective,\n    CellRendererComponent,\n    FilteringFormRendererDefDirective,\n    FilteringFormRendererComponent,\n    ColumnDirective,\n    DataGridComponent\n  ],\n  exports: [\n    CellRendererDefDirective,\n    HeaderCellRendererDefDirective,\n    FilteringFormRendererDefDirective,\n    ColumnDirective,\n    DataGridComponent\n  ],\n  entryComponents: [DataGridComponent]\n})\nexport class DataGridModule {}\n","import { Type } from '@angular/core';\nimport {\n  DeviceGridColumn,\n  DeviceGridColumnFilteringConfig,\n  DeviceGridColumnSortingConfig\n} from '../device-grid.models';\nimport {\n  ColumnDataType,\n  SortOrder,\n  FilterPredicateFunction\n} from '../../data-grid/data-grid.model';\n\nexport class BaseDeviceGridColumn implements DeviceGridColumn {\n  name: string;\n  path?: string;\n  header?: string;\n  dataType?: ColumnDataType;\n\n  visible?: boolean;\n  positionFixed?: boolean;\n  gridTrackSize?: string;\n\n  headerCSSClassName?: string | string[];\n  headerCellRendererComponent?: Type<any>;\n\n  cellCSSClassName?: string | string[];\n  cellRendererComponent?: Type<any>;\n\n  sortable?: boolean;\n  sortingConfig?: DeviceGridColumnSortingConfig;\n  sortOrder?: SortOrder;\n\n  filterable?: boolean;\n  filteringConfig?: DeviceGridColumnFilteringConfig;\n  filteringFormRendererComponent?: Type<any>;\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: string | object;\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\n\n@Component({\n  template: `\n    <device-status [mo]=\"context.item\"></device-status>\n  `\n})\nexport class StatusCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { StatusCellRendererComponent } from './status.cell-renderer.component';\nimport { ColumnDataType } from '../../data-grid/data-grid.model';\nimport { gettext } from '../../i18n/gettext';\n\nexport class StatusDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const availabilityStatusPath = 'c8y_Availability.status';\n    const requiredAvailabilityPath = 'c8y_RequiredAvailability';\n    const connectionStatusPath = 'c8y_Connection.status';\n\n    this.name = 'status';\n    this.header = gettext('Status');\n    this.dataType = ColumnDataType.Icon;\n    this.cellRendererComponent = StatusCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          sendOnline: {\n            type: 'boolean'\n          },\n          sendOffline: {\n            type: 'boolean'\n          },\n          sendUnknown: {\n            type: 'boolean'\n          },\n          sendNotMonitored: {\n            type: 'boolean'\n          },\n          pushOnline: {\n            type: 'boolean'\n          },\n          pushOffline: {\n            type: 'boolean'\n          },\n          pushUnknown: {\n            type: 'boolean'\n          },\n          maintenance: {\n            type: 'boolean'\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext(\n            'Show devices with send status'\n          )}</span>:</label>`\n        },\n        {\n          key: 'sendOnline',\n          title: gettext('Online')\n        },\n        {\n          key: 'sendOffline',\n          title: gettext('Offline')\n        },\n        {\n          key: 'sendUnknown',\n          title: gettext('Unknown')\n        },\n        {\n          key: 'sendNotMonitored',\n          title: gettext('Not monitored')\n        },\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext(\n            'Show devices with push status'\n          )}</span>:</label>`\n        },\n        {\n          key: 'pushOnline',\n          title: gettext('Online')\n        },\n        {\n          key: 'pushOffline',\n          title: gettext('Offline')\n        },\n        {\n          key: 'pushUnknown',\n          title: gettext('Not monitored')\n        },\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext(\n            'Show devices with maintenance status'\n          )}</span>:</label>`\n        },\n        {\n          key: 'maintenance',\n          title: gettext('Under maintenance')\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        const ors = [];\n        const sendIns = [];\n        const pushIns = [];\n        if (model) {\n          if (model.sendOnline) {\n            sendIns.push('AVAILABLE');\n          }\n          if (model.maintenance) {\n            sendIns.push('MAINTENANCE');\n          }\n          if (model.sendOffline) {\n            sendIns.push('UNAVAILABLE');\n          }\n          if (model.sendUnknown) {\n            ors.push({\n              __and: [\n                { __not: { __has: availabilityStatusPath } },\n                { __has: requiredAvailabilityPath }\n              ]\n            });\n          }\n          if (model.sendNotMonitored) {\n            ors.push({\n              __and: [\n                { __not: { __has: availabilityStatusPath } },\n                { __not: { __has: requiredAvailabilityPath } }\n              ]\n            });\n          }\n\n          if (model.pushOnline) {\n            pushIns.push('CONNECTED');\n          }\n          if (model.pushOffline) {\n            pushIns.push('DISCONNECTED');\n          }\n          if (model.pushUnknown) {\n            ors.push({\n              __not: { __has: connectionStatusPath }\n            });\n          }\n          if (sendIns.length) {\n            ors.push({ [availabilityStatusPath]: { __in: sendIns } });\n          }\n          if (pushIns.length) {\n            ors.push({ [connectionStatusPath]: { __in: pushIns } });\n          }\n          if (ors.length) {\n            filter.__or = ors;\n          }\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: availabilityStatusPath }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  template: `\n    <a\n      [href]=\"deviceGridService.getDeviceHref(context.item)\"\n      title=\"{{ deviceGridService.getProperName(context.item) }}\"\n      class=\"interact\"\n    >\n      {{ deviceGridService.getProperName(context.item) }}\n    </a>\n  `\n})\nexport class NameCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { NameCellRendererComponent } from './name.cell-renderer.component';\nimport { ColumnDataRecordClassName } from '../../data-grid/data-grid.model';\nimport { gettext } from '../../i18n/gettext';\n\nexport class NameDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    this.name = 'name';\n    this.path = 'name';\n    this.header = gettext('Name');\n    this.cellCSSClassName = ColumnDataRecordClassName.Header;\n    this.cellRendererComponent = NameCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          names: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'names',\n          title: gettext('Show devices with name'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'names[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. My Device, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.names.length) {\n          filter.name = { __in: model.names };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  template: `\n    {{ deviceGridService.getModel(context.item) }}\n  `\n})\nexport class ModelCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { ModelCellRendererComponent } from './model.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class ModelDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const hardwareModelPath = 'c8y_Hardware.model';\n    const vendingModelPath = 'com_nsn_startups_vendme_fragments_VendingMachineTypeInfo.model';\n\n    this.name = 'model';\n    this.header = gettext('Model');\n    this.cellRendererComponent = ModelCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          models: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'models',\n          title: gettext('Show devices with model'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'models[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. ModelName, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.models.length) {\n          filter.__or = {\n            [hardwareModelPath]: { __in: model.models },\n            [vendingModelPath]: { __in: model.models }\n          };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: hardwareModelPath }, { path: vendingModelPath }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  template: `\n    {{ deviceGridService.getSerialNumber(context.item) }}\n  `\n})\nexport class SerialNumberCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { SerialNumberCellRendererComponent } from './serial-number.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class SerialNumberDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const hardwareSerialNumberPath = 'c8y_Hardware.serialNumber';\n    const vendingSerialNumberPath =\n      'com_nsn_startups_vendme_fragments_VendingMachineTypeInfo.serial';\n\n    this.name = 'serialNumber';\n    this.header = gettext('Serial number');\n    this.cellRendererComponent = SerialNumberCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          serialNumbers: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'serialNumbers',\n          title: gettext('Show devices with serial number'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'serialNumbers[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. 54321-123, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.serialNumbers.length) {\n          filter.__or = {\n            [hardwareSerialNumberPath]: { __in: model.serialNumbers },\n            [vendingSerialNumberPath]: { __in: model.serialNumbers }\n          };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: hardwareSerialNumberPath }, { path: vendingSerialNumberPath }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  templateUrl: './group.cell-renderer.component.html'\n})\nexport class GroupCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { GroupCellRendererComponent } from './group.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class GroupDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    this.name = 'group';\n    this.header = gettext('Group');\n    this.cellRendererComponent = GroupCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          deviceGroupId: {\n            type: 'integer',\n            format: 'deviceGroupId'\n          }\n        }\n      },\n      form: [\n        {\n          key: 'deviceGroupId',\n          title: gettext('Show devices in group')\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        if (model.deviceGroupId) {\n          filter.__bygroupid = model.deviceGroupId;\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = false;\n  }\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\n\n@Component({\n  template: `\n    {{ context.value | date: 'medium' }}\n  `\n})\nexport class RegistrationDateCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { RegistrationDateCellRendererComponent } from './registration-date.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class RegistrationDateDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.path = 'creationTime';\n    this.name = 'registrationDate';\n    this.header = gettext('Registration date');\n    this.cellRendererComponent = RegistrationDateCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          registrationDate: {\n            type: 'object',\n            properties: {\n              after: {\n                type: 'string',\n                format: 'datetime'\n              },\n              before: {\n                type: 'string',\n                format: 'datetime'\n              }\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'registrationDate.after',\n          title: gettext('Show devices registered after'),\n          maxDateKey: 'registrationDate.before'\n        },\n        {\n          key: 'registrationDate.before',\n          title: gettext('And before`date`'),\n          minDateKey: 'registrationDate.after'\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        const dates = model && model.registrationDate;\n        if (dates && (dates.after || dates.before)) {\n          filter.__and = [];\n          if (dates.after) {\n            const after = self.formatDate(dates.after);\n            filter.__and.push({\n              __or: {\n                [self.path]: { __gt: after },\n                [`${self.path}.date`]: { __gt: after }\n              }\n            });\n          }\n          if (dates.before) {\n            const before = self.formatDate(dates.before);\n            filter.__and.push({\n              __or: {\n                [self.path]: { __lt: before },\n                [`${self.path}.date`]: { __lt: before }\n              }\n            });\n          }\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: `${this.path}.date` }, { path: this.path }]\n    };\n  }\n\n  protected formatDate(dateToFormat: string): string {\n    return new Date(dateToFormat).toISOString();\n  }\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { gettext } from '../../i18n/gettext';\n\nexport class SystemIdDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.path = 'id';\n    this.name = 'systemId';\n    this.header = gettext('System ID');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          ids: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'ids',\n          title: gettext('Show devices with system ID'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'ids[]',\n              notitle: true,\n              placeholder: gettext('e.g. 10300, you can use an asterisk (*) as wildcard character')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.ids.length) {\n          filter[self.path] = { __in: model.ids };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { gettext } from '../../i18n/gettext';\n\nexport class ImeiDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.path = 'c8y_Mobile.imei';\n    this.name = 'imei';\n    this.header = gettext('IMEI');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          imeis: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'imeis',\n          title: gettext('Show devices with IMEI'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'imeis[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. 46543432321, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.imeis.length) {\n          filter[self.path] = { __in: model.imeis };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  templateUrl: './alarms.cell-renderer.component.html'\n})\nexport class AlarmsCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { AlarmsCellRendererComponent } from './alarms.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\nimport { map } from 'lodash-es';\n\nexport class AlarmsDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    this.name = 'alarms';\n    this.header = gettext('Alarms');\n    this.cellRendererComponent = AlarmsCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          critical: {\n            type: 'boolean'\n          },\n          major: {\n            type: 'boolean'\n          },\n          minor: {\n            type: 'boolean'\n          },\n          warning: {\n            type: 'boolean'\n          },\n          none: {\n            type: 'boolean'\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext('Show devices with active')}</span>:</label>`\n        },\n        {\n          key: 'critical',\n          title: gettext('Critical alarms')\n        },\n        {\n          key: 'major',\n          title: gettext('Major alarms')\n        },\n        {\n          key: 'minor',\n          title: gettext('Minor alarms')\n        },\n        {\n          key: 'warning',\n          title: gettext('Warnings')\n        },\n        {\n          key: 'none',\n          title: gettext('No alarms')\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        const ors = [];\n        if (model.critical) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.critical': { __gt: 0 } });\n        }\n        if (model.major) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.major': { __gt: 0 } });\n        }\n        if (model.minor) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.minor': { __gt: 0 } });\n        }\n        if (model.warning) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.warning': { __gt: 0 } });\n        }\n        if (model.none) {\n          ors.push({ __not: { __has: 'c8y_ActiveAlarmsStatus' } });\n          ors.push({\n            __and: map(['critical', 'major', 'minor', 'warning'], sev => {\n              const zero = {};\n              const has = { __not: { __has: undefined } };\n              const key = `c8y_ActiveAlarmsStatus.${sev}`;\n              zero[key] = 0;\n              has.__not.__has = key;\n              return { __or: [zero, has] };\n            })\n          });\n        }\n        if (ors.length) {\n          filter.__or = ors;\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [\n        { path: 'c8y_ActiveAlarmsStatus.critical' },\n        { path: 'c8y_ActiveAlarmsStatus.major' },\n        { path: 'c8y_ActiveAlarmsStatus.minor' },\n        { path: 'c8y_ActiveAlarmsStatus.warning' }\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DeviceGridColumn, DeviceGridActionType } from './device-grid.models';\nimport { IManagedObject, InventoryService, QueriesUtil } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Pagination, ActionControl, BulkActionControl, Row } from '../data-grid/data-grid.model';\nimport { StatusDeviceGridColumn } from './columns/status.device-grid-column';\nimport { NameDeviceGridColumn } from './columns/name.device-grid-column';\nimport { ModelDeviceGridColumn } from './columns/model.device-grid-column';\nimport { SerialNumberDeviceGridColumn } from './columns/serial-number.device-grid-column';\nimport { GroupDeviceGridColumn } from './columns/group.device-grid-column';\nimport { RegistrationDateDeviceGridColumn } from './columns/registration-date.device-grid-column';\nimport { SystemIdDeviceGridColumn } from './columns/system-id.device-grid-column';\nimport { ImeiDeviceGridColumn } from './columns/imei.device-grid-column';\nimport { AlarmsDeviceGridColumn } from './columns/alarms.device-grid-column';\nimport { map, sortBy, get, identity, remove, transform, assign, forEach } from 'lodash-es';\n\n@Injectable()\nexport class DeviceGridService {\n  queriesUtil: QueriesUtil;\n\n  constructor(\n    private inventoryService: InventoryService,\n    private translateService: TranslateService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  getDefaultColumns(): DeviceGridColumn[] {\n    return [\n      new StatusDeviceGridColumn(),\n      new NameDeviceGridColumn(),\n      new ModelDeviceGridColumn(),\n      new SerialNumberDeviceGridColumn(),\n      new GroupDeviceGridColumn(),\n      new RegistrationDateDeviceGridColumn(),\n      new SystemIdDeviceGridColumn(),\n      new ImeiDeviceGridColumn(),\n      new AlarmsDeviceGridColumn()\n    ];\n  }\n\n  getDefaultPagination(): Pagination {\n    return {\n      pageSize: 10,\n      currentPage: 1\n    };\n  }\n\n  getDefaultActionControls(): ActionControl[] {\n    return [\n      {\n        type: DeviceGridActionType.Delete,\n        callback: (item: Row) => this.delete(item as IManagedObject)\n      }\n    ];\n  }\n\n  getDefaultBulkActionControls(): BulkActionControl[] {\n    return [];\n  }\n\n  getProperName(device: IManagedObject): string {\n    const { id, name } = device;\n    return name ? name : this.translateService.instant('Device {{id}}', { id });\n  }\n\n  getModel(device: IManagedObject): string {\n    const hardware = this.getHardware(device);\n    return hardware && hardware.model;\n  }\n\n  getSerialNumber(device: IManagedObject): string {\n    const hardware = this.getHardware(device);\n    const serialPropertyName = this.isVendme(device) ? 'serial' : 'serialNumber';\n    return hardware && hardware[serialPropertyName];\n  }\n\n  getParentsNames(device: IManagedObject, featuredParentId?: string | number): string {\n    const assetParentsReferences = device.assetParents.references;\n    const assetParents = map(assetParentsReferences, 'managedObject');\n    const sortedByName = sortBy(assetParents, ['name']);\n    const featuredItems = remove(sortedByName, { id: featuredParentId });\n    const items = featuredItems.concat(sortedByName);\n    const names = map(items, 'name');\n    return names.join(', ');\n  }\n\n  getDeviceHref(device: IManagedObject): string {\n    return `#/device/${device.id}`;\n  }\n\n  getAlarmsHref(device: IManagedObject): string {\n    return `${this.getDeviceHref(device)}/alarms`;\n  }\n\n  delete(device: IManagedObject) {\n    console.log('should delete', device);\n  }\n\n  async getDevices(columns: DeviceGridColumn[], pagination: Pagination) {\n    const filters = {\n      ...this.getDevicesFilters(columns, pagination),\n      withParents: true\n    };\n    return this.inventoryService.list(filters);\n  }\n\n  async getDevicesCount(columns: DeviceGridColumn[], pagination: Pagination) {\n    const filters = {\n      ...this.getDevicesFilters(columns, pagination),\n      pageSize: 1,\n      currentPage: 1\n    };\n    return (await this.inventoryService.list(filters)).paging.totalPages;\n  }\n\n  async getDevicesTotal(): Promise<number> {\n    const filters = {\n      q: '',\n      pageSize: 1,\n      withTotalPages: true\n    };\n    return (await this.inventoryService.list(filters)).paging.totalPages;\n  }\n\n  getDeviceQueryString(columns: DeviceGridColumn[]): string {\n    return this.queriesUtil.buildQuery(this.getQueryObj(columns));\n  }\n\n  private getHardware(device: IManagedObject): any {\n    const hardwarePropertyName = this.isVendme(device)\n      ? 'com_nsn_startups_vendme_fragments_VendingMachineTypeInfo'\n      : 'c8y_Hardware';\n    return device && device[hardwarePropertyName];\n  }\n\n  private isVendme(device: IManagedObject) {\n    return device.type === 'com_nsn_startups_vendme_VendingMachine';\n  }\n\n  private getDevicesFilters(columns: DeviceGridColumn[], pagination: Pagination) {\n    return {\n      q: this.getDeviceQueryString(columns),\n      pageSize: pagination.pageSize,\n      currentPage: pagination.currentPage,\n      withTotalPages: true\n    };\n  }\n\n  private getQueryObj(columns: DeviceGridColumn[]): any {\n    return transform(columns, (query, column) => this.extendQueryByColumn(query, column), {\n      __filter: {},\n      __orderby: []\n    });\n  }\n\n  private extendQueryByColumn(query: any, column: DeviceGridColumn): void {\n    if (column.filterable && column.externalFilterQuery) {\n      const getFilter = column.filteringConfig.getFilter || identity;\n      const queryObj = getFilter(column.externalFilterQuery);\n\n      if (queryObj.__or) {\n        query.__filter.__and = query.__filter.__and || [];\n        query.__filter.__and.push(queryObj);\n      } else if (queryObj.__and && get(query, '__filter.__and')) {\n        queryObj.__and.map(obj => query.__filter.__and.push(obj));\n      } else {\n        assign(query.__filter, queryObj);\n      }\n    }\n\n    if (column.sortable && column.sortOrder) {\n      const cs = {};\n      forEach(column.sortingConfig.pathSortingConfigs, pathSortingConfig => {\n        cs[pathSortingConfig.path] =\n          (column.sortOrder === 'asc' ? 1 : -1) * (pathSortingConfig.sortOrderModifier || 1);\n      });\n      query.__orderby.push(cs);\n    }\n    return query;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport {\n  ActionControl,\n  BulkActionControl,\n  DataSourceModifier,\n  Pagination,\n  ServerSideDataResult\n} from '../data-grid/data-grid.model';\nimport { DeviceGridService } from './device-grid.service';\nimport { DeviceGridColumn } from './device-grid.models';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-device-grid',\n  templateUrl: './device-grid.component.html'\n})\nexport class DeviceGridComponent {\n  @Input() title: string = gettext('Devices');\n  @Input() loadingItemsLabel: string = gettext('Loading devices…');\n  @Input() noMatchingItemsLabel: string = gettext('No matching devices.');\n  @Input('columns') set _columns(value: DeviceGridColumn[]) {\n    if (value) {\n      this.columns = value;\n    } else {\n      this.columns = this.deviceGridService.getDefaultColumns();\n    }\n  }\n  @Input('pagination') set _pagination(value: Pagination) {\n    if (value) {\n      this.pagination = value;\n    } else {\n      this.pagination = this.deviceGridService.getDefaultPagination();\n    }\n  }\n  @Input('actionControls') set _actionControls(value: ActionControl[]) {\n    if (value) {\n      this.actionControls = value;\n    } else {\n      this.actionControls = this.deviceGridService.getDefaultActionControls();\n    }\n  }\n  @Input() selectable: boolean = false;\n  @Input('bulkActionControls') set _bulkActionControls(value: BulkActionControl[]) {\n    if (value) {\n      this.bulkActionControls = value;\n    } else {\n      this.bulkActionControls = this.deviceGridService.getDefaultBulkActionControls();\n    }\n  }\n  @Output() onColumnsChange: EventEmitter<DeviceGridColumn[]> = new EventEmitter<\n    DeviceGridColumn[]\n  >();\n  @Output() onDeviceQueryStringChange: EventEmitter<string> = new EventEmitter<string>();\n\n  columns: DeviceGridColumn[] = this.deviceGridService.getDefaultColumns();\n  pagination: Pagination = this.deviceGridService.getDefaultPagination();\n  actionControls: ActionControl[] = this.deviceGridService.getDefaultActionControls();\n  bulkActionControls: BulkActionControl[] = this.deviceGridService.getDefaultBulkActionControls();\n  serverSideDataCallback: any;\n\n  constructor(public deviceGridService: DeviceGridService) {\n    this.serverSideDataCallback = this.onDataSourceModifier.bind(this);\n  }\n\n  trackByName(_index, column: DeviceGridColumn): string {\n    return column.name;\n  }\n\n  async onDataSourceModifier(\n    dataSourceModifier: DataSourceModifier\n  ): Promise<ServerSideDataResult> {\n    const { res, data, paging } = await this.deviceGridService.getDevices(\n      dataSourceModifier.columns,\n      dataSourceModifier.pagination\n    );\n    const filteredSize: number = await this.deviceGridService.getDevicesCount(\n      dataSourceModifier.columns,\n      dataSourceModifier.pagination\n    );\n    const size: number = await this.deviceGridService.getDevicesTotal();\n\n    this.onColumnsChange.emit(dataSourceModifier.columns);\n    this.onDeviceQueryStringChange.emit(\n      this.deviceGridService.getDeviceQueryString(dataSourceModifier.columns)\n    );\n\n    return {\n      res,\n      data,\n      paging,\n      filteredSize,\n      size\n    };\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { some } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-drop-area',\n  templateUrl: './drop-area.component.html'\n})\nexport class DropAreaComponent implements OnInit {\n  @Input() title = 'Upload file';\n  @Input() message = 'Drop file here';\n  @Input() icon = 'plus-square';\n  @Input() loadingMessage = 'Uploading ...';\n  @Input() alwaysShow = false;\n  @Input() clickToOpen = true;\n  @Input() loading = false;\n  @Input() progress = -1; // -1 = spinner\n  @Output() dropped: EventEmitter<DroppedFile[]> = new EventEmitter();\n  isOver = false;\n\n  fileIsEmpty = false;\n  @ViewChild('area', { static: true }) area: ElementRef;\n  @ViewChild('zone', { static: false }) zone: ElementRef;\n  @ViewChild('picker', { static: false }) picker: ElementRef;\n\n  ngOnInit() {\n    this.alwaysShow = this.alwaysShow || this.area.nativeElement.children.length === 0;\n  }\n\n  toggle($event?) {\n    this.zone.nativeElement.style.height = this.area.nativeElement.offsetHeight + 'px';\n    this.onOver();\n  }\n\n  showPicker($event?) {\n    this.preventDefault($event);\n    this.picker.nativeElement.value = '';\n    this.picker.nativeElement.click();\n  }\n\n  onOver() {\n    if (!this.isOver) {\n      this.isOver = true;\n      document.addEventListener('dragover', this.preventDefault);\n      document.addEventListener('drop', this.preventDefault);\n    }\n  }\n\n  onPick($event) {\n    this.fileIsEmpty = false;\n    this.preventDefault($event);\n    this.onFilesSelected($event.target.files);\n  }\n\n  onDrop($event) {\n    this.preventDefault($event);\n    this.onFilesSelected($event.dataTransfer.files);\n    this.stopDragging();\n  }\n\n  onFilesSelected(files) {\n    this.fileIsEmpty = false;\n    if (files && files.length > 0) {\n      if (this.isAnyFileEmpty(files)) {\n        this.fileIsEmpty = true;\n        this.dropped.emit([]);\n      } else {\n        this.dropped.emit(this.compose(files));\n      }\n    }\n  }\n\n  isAnyFileEmpty(files) {\n    return some(Array.from(files), ['size', 0]);\n  }\n\n  stopDragging() {\n    document.removeEventListener('dragover', this.preventDefault);\n    document.removeEventListener('drop', this.preventDefault);\n    this.isOver = false;\n  }\n\n  private preventDefault($event?) {\n    if ($event) {\n      $event.preventDefault();\n    }\n  }\n\n  private compose(files: FileList) {\n    return Array.from(files).map(file => ({\n      file,\n      readAsJson: async () => JSON.parse(await this.read(file, ReadAsType.TEXT)),\n      readAsText: async () => this.read(file, ReadAsType.TEXT),\n      readAsArrayBuffer: async () => this.read(file, ReadAsType.ARRAY_BUFFER),\n      readAsBinaryString: async () => this.read(file, ReadAsType.BINARY_STRING),\n      readAsDataURL: async () => this.read(file, ReadAsType.DATA_URL)\n    }));\n  }\n\n  private async read(file, type: ReadAsType): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      const reader = new FileReader();\n      switch (type) {\n        case ReadAsType.TEXT: {\n          reader.readAsText(file);\n          break;\n        }\n        case ReadAsType.ARRAY_BUFFER: {\n          reader.readAsArrayBuffer(file);\n          break;\n        }\n        case ReadAsType.BINARY_STRING: {\n          reader.readAsBinaryString(file);\n          break;\n        }\n        case ReadAsType.DATA_URL: {\n          reader.readAsDataURL(file);\n          break;\n        }\n      }\n      reader.onload = () => this.onLoad(reader, resolve, reject);\n    });\n  }\n\n  private onLoad(reader, resolve, reject) {\n    if (reader.readyState !== 2) {\n      return;\n    }\n    if (reader.error) {\n      reject(reader.error);\n    }\n    resolve(reader.result);\n  }\n}\n\nexport interface DroppedFile {\n  file: File;\n  readAsText();\n  readAsArrayBuffer();\n  readAsBinaryString();\n  readAsDataURL();\n  readAsJson();\n}\n\nenum ReadAsType {\n  TEXT,\n  DATA_URL,\n  ARRAY_BUFFER,\n  BINARY_STRING\n}\n","import { Component, Input } from '@angular/core';\nimport { deviceAvailabilityIconMap, PushStatusLabels, SendStatusLabels, tooltips } from './device-availability';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get } from 'lodash-es';\n\n@Component({\n  selector: 'device-status',\n  templateUrl: './device-status.component.html'\n})\nexport class DeviceStatusComponent {\n  @Input('mo') set node(value) {\n    this._mo = value.mo || value;\n  }\n\n  private _mo;\n  private requiredAvailability;\n  private availabilityStatus;\n  private pushStatus;\n  private sendStatus;\n\n  constructor(\n    private translateService: TranslateService\n  ) {}\n\n  get() {\n    return this._mo;\n  }\n\n  ngAfterContentInit() {\n    this.requiredAvailability = get(this._mo, 'c8y_RequiredAvailability');\n    this.availabilityStatus = get(this._mo, 'c8y_Availability.status');\n\n    this.pushStatus = get(this._mo, 'c8y_Connection.status') || 'UNKNOWN';\n    this.sendStatus = this.availabilityStatus || (this.requiredAvailability ? ('UNKNOWN') : ('NOT_MONITORED'));\n  }\n\n  status() {\n    let statuses;\n\n    if (this.availabilityStatus === 'MAINTENANCE' || this.pushStatus === 'MAINTENANCE') {\n      statuses = this.getMaintenanceStatus();\n    } else {\n      statuses = this.getSendPushStatus();\n    }\n\n    return statuses;\n  }\n\n  getMaintenanceStatus() {\n    return ({\n      sendStatus: false,\n      pushStatus: false,\n      maintenanceStatus: {\n        icon: deviceAvailabilityIconMap.device.MAINTENANCE.icon,\n        class: deviceAvailabilityIconMap.device.MAINTENANCE.class,\n        tooltip: tooltips.maintenance\n      }\n    });\n  }\n\n  private getSendPushStatus() {\n    return ({\n      sendStatus: {\n        icon: deviceAvailabilityIconMap.sendData[this.sendStatus].icon,\n        class: deviceAvailabilityIconMap.sendData[this.sendStatus].class,\n        status: this.sendStatus,\n        label: SendStatusLabels[this.sendStatus],\n        tooltip: this.getSendStatusTooltip(this._mo)\n      },\n      pushStatus: {\n        icon: deviceAvailabilityIconMap.push[this.pushStatus].icon,\n        class: deviceAvailabilityIconMap.push[this.pushStatus].class,\n        status: this.pushStatus,\n        label: PushStatusLabels[this.pushStatus],\n        tooltip: this.getPushStatusTooltip(this.pushStatus === 'CONNECTED')\n      },\n      maintenanceStatus: false\n    });\n  }\n\n  private getSendStatusTooltip(device) {\n    const availability = device && device.c8y_Availability;\n    const lastMessage = availability && availability.lastMessage;\n    if (lastMessage) {\n      return tooltips.sendStatusConnected(lastMessage, this.translateService);\n    }\n    return tooltips.sendStatusDisconnected;\n  }\n\n  private getPushStatusTooltip(isActive) {\n    return isActive ? tooltips.pushStatusConnected : tooltips.pushStatusDisconnected;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DeviceStatusComponent } from './device-status.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\n/**\n * The angular module definition for a device-status.\n * @exports DeviceStatusComponent\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        TooltipModule\n    ],\n    exports: [\n        DeviceStatusComponent\n    ],\n    declarations: [\n        DeviceStatusComponent\n    ]\n})\nexport class DeviceStatusModule { }\n","import { Component, forwardRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { get, cloneDeep } from 'lodash-es';\nimport { SchemaFormComponent } from '../forms/schema-form.component';\nimport { FilteringFormRendererContext } from '../data-grid/column/filtering-form-renderer';\nimport { DeviceGridColumn } from './device-grid.models';\n\n@Component({\n  selector: 'c8y-filtering-form',\n  templateUrl: './filtering-form.component.html'\n})\nexport class FilteringFormComponent implements OnInit {\n  @Input() context: FilteringFormRendererContext;\n  @ViewChild(forwardRef(() => SchemaFormComponent), { static: false }) schemaFormComponent: any;\n\n  schema;\n  form;\n  model;\n  options;\n\n  ngOnInit() {\n    const column: DeviceGridColumn = this.context.property;\n    this.schema = cloneDeep(column.filteringConfig.schema);\n    this.form = cloneDeep(column.filteringConfig.form);\n    this.model = cloneDeep(column.externalFilterQuery || {});\n    this.options = { formDefaults: { ngModelOptions: { debounce: 100 } } };\n  }\n\n  canApply() {\n    return get(this.schemaFormComponent, '$componentScope.vm.ngForm.$invalid');\n  }\n\n  applyFilter() {\n    this.context.applyFilter({\n      externalFilterQuery: this.model\n    });\n  }\n\n  resetFilter() {\n    this.context.resetFilter();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { DeviceGridComponent } from './device-grid.component';\nimport { DataGridModule } from '../data-grid/data-grid.module';\nimport { DeviceGridService } from './device-grid.service';\nimport { DeviceStatusModule } from '../device-status/device-status.module';\nimport { FilteringFormComponent } from './filtering-form.component';\nimport { FormsModule } from '../forms/forms.module';\n\nimport { StatusCellRendererComponent } from './columns/status.cell-renderer.component';\nimport { NameCellRendererComponent } from './columns/name.cell-renderer.component';\nimport { ModelCellRendererComponent } from './columns/model.cell-renderer.component';\nimport { SerialNumberCellRendererComponent } from './columns/serial-number.cell-renderer.component';\nimport { GroupCellRendererComponent } from './columns/group.cell-renderer.component';\nimport { RegistrationDateCellRendererComponent } from './columns/registration-date.cell-renderer.component';\nimport { AlarmsCellRendererComponent } from './columns/alarms.cell-renderer.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DeviceStatusModule, DataGridModule],\n  declarations: [\n    DeviceGridComponent,\n    FilteringFormComponent,\n    StatusCellRendererComponent,\n    NameCellRendererComponent,\n    ModelCellRendererComponent,\n    SerialNumberCellRendererComponent,\n    GroupCellRendererComponent,\n    RegistrationDateCellRendererComponent,\n    AlarmsCellRendererComponent\n  ],\n  exports: [\n    DeviceGridComponent,\n    FilteringFormComponent,\n    StatusCellRendererComponent,\n    NameCellRendererComponent,\n    ModelCellRendererComponent,\n    SerialNumberCellRendererComponent,\n    GroupCellRendererComponent,\n    RegistrationDateCellRendererComponent,\n    AlarmsCellRendererComponent\n  ],\n  entryComponents: [\n    DeviceGridComponent,\n    FilteringFormComponent,\n    StatusCellRendererComponent,\n    NameCellRendererComponent,\n    ModelCellRendererComponent,\n    SerialNumberCellRendererComponent,\n    GroupCellRendererComponent,\n    RegistrationDateCellRendererComponent,\n    AlarmsCellRendererComponent\n  ],\n  providers: [DeviceGridService]\n})\nexport class DeviceGridModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { DropAreaComponent } from './drop-area.component';\n\n/**\n * The angular module definition for a drop-area.\n * @exports DropAreaComponent\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    DropAreaComponent,\n  ],\n  declarations: [\n    DropAreaComponent,\n  ]\n})\nexport class DropAreaModule { }\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface Item {\n  name: string;\n  _selected?: boolean;\n  [key: string]: any;\n}\n\nexport type selectedFunction = (item: Item) => boolean;\nexport type selectedLabelFunction = (items: Item[]) => string;\n\n@Component({\n  selector: 'c8y-select',\n  templateUrl: './select.component.html'\n})\nexport class SelectComponent implements OnChanges {\n  @Input() placeholder: string = 'Select item';\n  @Input() selectedLabel: string | selectedLabelFunction;\n  @Input() applyLabel: string = 'Apply';\n  @Input() items: Item[];\n  @Input() selected: Item[] | selectedFunction;\n  @Output() onChange: EventEmitter<Item[]> = new EventEmitter();\n  @ViewChild(BsDropdownDirective, { static: false }) dropdown: BsDropdownDirective;\n  textFilter = '';\n  labelText = '';\n  isOpen = false;\n  filteredItems: Item[] = [];\n  readonly sizeToShowFilter: number = 5;\n  private itemsSelected: Set<Item> = new Set();\n  private stopClicks = false;\n\n  @HostListener('click', ['$event'])\n  preventClick(evt) {\n    if (this.stopClicks) {\n      evt.stopPropagation();\n    }\n    this.stopClicks = this.isOpen;\n  }\n\n  isOpenChange(isOpen: boolean) {\n    this.isOpen = isOpen;\n    if (isOpen) {\n      this.updateSelected();\n    } else {\n      this.stopClicks = false;\n    }\n  }\n\n  outterSelected(item: Item) {\n    const { selected, itemsSelected, items } = this;\n    let isSelected: any = () => false;\n    if (typeof selected === 'function') {\n      isSelected = selected;\n    } else if (Array.isArray(selected)) {\n      isSelected = (i: Item) => selected.indexOf(i) > -1;\n    }\n    return isSelected(item);\n  }\n\n  isSelected(item: Item) {\n    return this.itemsSelected.has(item);\n  }\n\n  applyChanges() {\n    const selected = Array.from(this.itemsSelected.values());\n    this.onChange.emit(selected);\n    this.dropdown.hide();\n  }\n\n  selectAll(checked: boolean) {\n    this.filteredItems.forEach(item => this.onChangeItem(checked, item));\n  }\n\n  allSelected() {\n    return this.filteredItems.length === this.itemsSelected.size;\n  }\n\n  onChangeItem(checked: boolean, item: Item) {\n    if (checked) {\n      this.itemsSelected.add(item);\n    } else {\n      this.itemsSelected.delete(item);\n    }\n  }\n\n  updateFiltered(term: string) {\n    if (term) {\n      const search = new RegExp(term, 'i');\n      this.filteredItems = this.items.filter(({ name }) => search.test(name));\n    } else {\n      this.filteredItems = this.items;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isOpen) {\n      return;\n    }\n    if (changes.items || changes.selected || changes.applyLabel) {\n      this.updateSelected();\n      this.updateLabel();\n    }\n  }\n\n  private updateLabel() {\n    const outterSelected = this.items.filter(i => this.outterSelected(i));\n    if (typeof this.selectedLabel === 'string') {\n      this.labelText = this.selectedLabel;\n    } else if (typeof this.selectedLabel === 'function') {\n      this.labelText = this.selectedLabel(outterSelected);\n    } else {\n      this.labelText = outterSelected.map(({ name }) => name).join(', ');\n    }\n  }\n\n  private updateSelected() {\n    const { itemsSelected, items } = this;\n    itemsSelected.clear();\n    items.forEach(item => {\n      if (this.outterSelected(item)) {\n        itemsSelected.add(item);\n      }\n    });\n    this.filteredItems = items;\n  }\n}\n","import { Component, Output, Input, ViewChild, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-action, c8y-li-action',\n  templateUrl: './list-item-action.component.html'\n})\nexport class ListItemActionComponent {\n  @ViewChild('template', { static: false })\n  template: any;\n  @Input()\n  label: string;\n  @Input()\n  icon: string;\n  @Output()\n  click = new EventEmitter<any>();\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-collapse, c8y-li-collapse',\n  templateUrl: './list-item-collapse.component.html'\n})\nexport class ListItemCollapseComponent {\n\n  @Input()\n  item: any;\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-footer, c8y-li-footer',\n  templateUrl: './list-item-footer.component.html'\n})\nexport class ListItemFooterComponent {\n\n  @Input()\n  footer: string;\n\n}\n","import {\n  Component,\n  ContentChild,\n  ElementRef,\n  ContentChildren,\n  HostBinding,\n  Input,\n  QueryList\n} from '@angular/core';\nimport { ListItemActionComponent } from './list-item-action.component';\nimport { ListItemCollapseComponent } from './list-item-collapse.component';\nimport { ListItemFooterComponent } from './list-item-footer.component';\n\n@Component({\n  selector: 'c8y-list-item, c8y-li',\n  templateUrl: './list-item.component.html',\n  host: {\n    class: 'c8y-list__item'\n  }\n})\nexport class ListItemComponent {\n  @Input()\n  @HostBinding('class.active')\n  active: boolean = false;\n  @Input()\n  collapsed: boolean = true;\n  @ContentChild(ListItemFooterComponent, { static: false })\n  itemFooter: ListItemFooterComponent;\n  @ContentChildren(ListItemActionComponent)\n  itemActions: QueryList<ListItemActionComponent>;\n  @ContentChild(ListItemCollapseComponent, { static: false })\n  itemCollapse: ListItemCollapseComponent;\n\n  showFooter: boolean = false;\n  showActions: boolean = false;\n  showCollapse: boolean = false;\n  actions: ListItemActionComponent[];\n  dropdownUp: boolean = false;\n\n  private readonly ACTION_ITEM_HEIGHT = 40;\n\n  constructor(public element: ElementRef) {}\n\n  ngAfterContentChecked(): void {\n    this.actions = this.itemActions.toArray();\n    this.showFooter = this.itemFooter != null;\n    this.showActions = this.itemActions.length > 0;\n    this.showCollapse = this.itemCollapse != null;\n  }\n\n  /**\n   * A helper function which helps to determine if the dropdown\n   * should toggle up.\n   * @param dropdown The dropdown instance.\n   */\n  showDropdownUp() {\n    const rect = this.element.nativeElement.getBoundingClientRect();\n    this.dropdownUp =\n      rect.bottom + this.itemActions.length * this.ACTION_ITEM_HEIGHT > window.innerHeight;\n  }\n}\n","import {\n  ContentChildren,\n  Input,\n  Output,\n  EventEmitter,\n  Component,\n  ViewChild,\n  ElementRef,\n  QueryList\n} from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { IIdentified } from '@c8y/client';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { ListItemComponent } from '../list-group/list-item.component';\nimport { findIndex } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-typeahead',\n  templateUrl: './typeahead.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class TypeaheadComponent {\n  @ViewChild('searchControl', { static: false }) searchControl: ElementRef;\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ContentChildren(ListItemComponent) list: QueryList<ListItemComponent>;\n\n  @Input()\n  required: boolean = false;\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  displayProperty: string = 'name';\n\n  @Input()\n  name: string = this.displayProperty;\n\n  @Input()\n  selected: IIdentified = {\n    id: null,\n    [this.displayProperty]: ''\n  };\n\n  @Output()\n  selectedChange = new EventEmitter<IIdentified>();\n\n  @Output()\n  onSearch = new EventEmitter<string>();\n\n  private subscription: Subscription;\n  private readonly KEYCODE_UP = 38;\n  private readonly KEYCODE_DOWN = 40;\n  private readonly KEYCODE_TAB = 9;\n  private readonly KEYCODE_ENTER = 13;\n  private readonly KEYCODE_ESC = 27;\n\n  onShown() {\n    this.searchControl.nativeElement.focus();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = fromEvent(this.searchControl.nativeElement, 'keydown')\n      .pipe(\n        map((e: any) => this.handleKeyboard(e)),\n        filter((e: any) => e),\n        debounceTime(200),\n        map((e: any) => e.target.value),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        this.selectedChange.emit({\n          id: null,\n          [this.displayProperty]: value\n        });\n        this.onSearch.emit(value);\n      });\n  }\n\n  handleKeyboard(event): void {\n    const keyCode = event.keyCode;\n    if (\n      [this.KEYCODE_ENTER, this.KEYCODE_DOWN, this.KEYCODE_TAB, this.KEYCODE_UP].includes(keyCode)\n    ) {\n      const items = this.list.toArray();\n      const index = findIndex(items, item => item.active);\n      if (keyCode === this.KEYCODE_ENTER || keyCode === this.KEYCODE_TAB) {\n        if (index > -1) {\n          event.preventDefault();\n          items[index].element.nativeElement.click();\n        }\n        this.dropdown.hide();\n        this.searchControl.nativeElement.blur();\n      } else {\n        this.dropdown.show();\n        const upOrDown = keyCode === this.KEYCODE_DOWN ? 1 : -1;\n        if (index > -1) {\n          items[index].active = false;\n        }\n        if (items[index + upOrDown]) {\n          items[index + upOrDown].active = true;\n        }\n      }\n      return;\n    } else if (keyCode === this.KEYCODE_ESC) {\n      event.stopPropagation();\n      this.dropdown.hide();\n      this.searchControl.nativeElement.blur();\n      return;\n    } else {\n      this.dropdown.show();\n    }\n    return event;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-group',\n  templateUrl: './list-group.component.html',\n  host: {\n    class: 'c8y-list__group'\n  }\n})\nexport class ListGroupComponent {\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-icon, c8y-li-icon',\n  templateUrl: './list-item-icon.component.html',\n  host: {\n    class: 'c8y-list__item__icon'\n  }\n})\nexport class ListItemIconComponent {\n  @Input()\n  icon: string;\n\n  @Input()\n  status?: 'statusOk' | 'statusUnknown' | 'statusAlert' | 'statusNok' | 'status critical' | 'status warning' | 'status minor' | 'status major';\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-body, c8y-li-body',\n  templateUrl: './list-item-body.component.html'\n})\nexport class ListItemBodyComponent {\n\n  @Input()\n  body: string;\n\n}\n","import { Output, EventEmitter, Component, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-checkbox, c8y-li-checkbox',\n  templateUrl: './list-item-checkbox.component.html',\n  host: {\n    class: 'c8y-list__item__check'\n  }\n})\nexport class ListItemCheckboxComponent {\n  @Input()\n  selected = false;\n  @Output()\n  onSelect = new EventEmitter<boolean>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected && !changes.selected.firstChange) {\n      this.onSelect.emit(changes.selected.currentValue);\n    }\n  }\n}\n","import { Output, EventEmitter, Component, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-radio, c8y-li-radio',\n  templateUrl: './list-item-radio.component.html',\n  host: {\n    class: 'c8y-list__item__radio'\n  }\n})\nexport class ListItemRadioComponent {\n  @Input()\n  selected = false;\n  @Input()\n  name = 'list_item_radio';\n  @Output()\n  onSelect = new EventEmitter<boolean>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected && !changes.selected.firstChange) {\n      this.onSelect.emit(changes.selected.currentValue);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ListGroupComponent } from './list-group.component';\nimport { ListItemComponent } from './list-item.component';\nimport { CommonModule } from '../common/common.module';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { ListItemIconComponent } from './list-item-icon.component';\nimport { ListItemBodyComponent } from './list-item-body.component';\nimport { ListItemFooterComponent } from './list-item-footer.component';\nimport { ListItemActionComponent } from './list-item-action.component';\nimport { ListItemCollapseComponent } from './list-item-collapse.component';\nimport { ListItemCheckboxComponent } from './list-item-checkbox.component';\nimport { ListItemRadioComponent } from './list-item-radio.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CollapseModule.forRoot(),\n    BsDropdownModule\n  ],\n  declarations: [\n    ListGroupComponent,\n    ListItemComponent,\n    ListItemIconComponent,\n    ListItemBodyComponent,\n    ListItemFooterComponent,\n    ListItemActionComponent,\n    ListItemCollapseComponent,\n    ListItemCheckboxComponent,\n    ListItemRadioComponent\n  ],\n  exports: [\n    ListGroupComponent,\n    ListItemComponent,\n    ListItemIconComponent,\n    ListItemBodyComponent,\n    ListItemFooterComponent,\n    ListItemActionComponent,\n    ListItemCollapseComponent,\n    ListItemCheckboxComponent,\n    ListItemRadioComponent\n  ]\n})\nexport class ListGroupModule {}\n","import { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '../common/common.module';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { ListGroupModule } from '../list-group/list-group.module';\nimport { FormsModule } from '../forms/forms.module';\n\n/**\n * The angular module definition for a select.\n * @exports SelectComponent\n */\n@NgModule({\n  imports: [\n    BsDropdownModule.forRoot(),\n    CommonModule,\n    ListGroupModule,\n    FormsModule\n  ],\n  exports: [\n    SelectComponent,\n    TypeaheadComponent\n  ],\n  declarations: [\n    SelectComponent,\n    TypeaheadComponent\n  ]\n})\nexport class SelectModule { }\n","import { Directive, Input, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[c8y-guide-href]'\n})\nexport class GuideHrefDirective {\n  @Input('c8y-guide-href')\n  c8yGuideHref;\n\n  private htmlAnchor: HTMLAnchorElement;\n\n  set baseHref(href) {\n    this.htmlAnchor.href = `${href}/${this.c8yGuideHref}`;\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.htmlAnchor = this.elementRef.nativeElement as HTMLAnchorElement;\n    if (!this.htmlAnchor.hasAttribute('target')) {\n      this.htmlAnchor.setAttribute('target', '_blank');\n    }\n  }\n}\n","import { Component, OnInit, ContentChildren, QueryList } from '@angular/core';\nimport { GuideHrefDirective } from './guide-href.directive';\nimport { DocsService } from './docs.service';\n\n@Component({\n  selector: '[c8y-guide-docs]',\n  templateUrl: './guide-docs.component.html'\n})\nexport class GuideDocsComponent implements OnInit {\n  baseUrl: string;\n  @ContentChildren(GuideHrefDirective, { descendants: true }) links: QueryList<GuideHrefDirective>;\n\n  constructor(private docs: DocsService) {}\n\n  ngOnInit(): void {\n    this.baseUrl = this.docs.getBaseUrl();\n  }\n\n  ngAfterViewInit(): void {\n    this.links.forEach(guide => {\n      guide.baseHref = this.baseUrl;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocsService } from './docs.service';\nimport { GuideHrefDirective } from './guide-href.directive';\nimport { GuideDocsComponent } from './guide-docs.component';\n\n@NgModule({\n  declarations: [\n    GuideHrefDirective,\n    GuideDocsComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    GuideHrefDirective,\n    GuideDocsComponent\n  ],\n  providers: [DocsService],\n})\nexport class DocsModule {}\n","import { Component, InjectionToken, Type } from '@angular/core';\n\n/**\n * A hook to add dynamic components to the UI (e.g. widgets).\n */\nexport const HOOK_COMPONENTS = new InjectionToken('Hook Dynamic Component');\n\n/**\n * A hook to add dynamic components to the UI (e.g. widgets).\n * @deprecated: Use HOOK_COMPONENTS\n */\nexport const HOOK_COMPONENT = new InjectionToken('Hook Dynamic Component @deprecated');\n\n/**\n * A dynamic component can be defined in a the HOOK_COMPONENTS to display any kind\n * of component dynamically just by referencing it's id. The most common use case is on dashboards,\n * where the `configComponent` is used to define what is displayed on the `component`\n * on the dashboard.\n *\n * To use the component you can use the c8y-dynamic-component.\n *\n * ```\n *   <c8y-dynamic-component\n *     componentId=\"angular.widget.demo\"\n *     [config]=\"{ text: 'Hello world' }\"\n *     [mode]=\"editComponent ? 'config' : 'component'\"\n *   ></c8y-dynamic-component>\n *   ```\n */\nexport interface DynamicComponentDefinition {\n  /**\n   * Unique serializable id\n   */\n  id: string;\n  /**\n   * The component which is used when the component should be displayed (e.g. on a dashboard)\n   */\n  component: Type<Component>;\n  /**\n   * The configuration component used when a widget is added or edited.\n   */\n  configComponent?: Type<Component>;\n  /**\n   * The label shown for this dynamic component on add widgets\n   */\n  label: string;\n  /**\n   * The description shown on add widget\n   */\n  description: string;\n  /**\n   * Add any random data, specially to angular.js dashboards.\n   * Should be searilzabled to allow to save it to the API.\n   */\n  data?: any;\n  /**\n   * An url to an preview image.\n   */\n  previewImage?: string;\n}\n\n/**\n * Use this interface on any component to define the interchange between\n * config and display component.\n */\nexport interface DynamicComponent {\n  /**\n   * The configuration which is shared between configuration component and display component.\n   * Should be searilzabled to allow to save it to the API.\n   */\n  config: any;\n  /**\n   * A reference to the ng1Form on angularjs dashboards to disable/enable the save button.\n   * @deprecated: Will not work on Angular-Dashboards (1.6.1.0). Use `ContextServiceDashboard.formDisabled` instead.\n   */\n  ng1FormRef?: any;\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { filter, mergeMap, take } from 'rxjs/operators';\nimport { ExtensionPoint, fromFactories } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport {\n  DynamicComponentDefinition,\n  HOOK_COMPONENT,\n  HOOK_COMPONENTS\n} from './dynamic-component.model';\n\ndeclare const __MODE__: string;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicComponentService extends StateService\n  implements ExtensionPoint<DynamicComponentDefinition> {\n  items$: Observable<DynamicComponentDefinition[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<DynamicComponentDefinition>>(\n    new Set<DynamicComponentDefinition>()\n  );\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n\n    this.items$ = fromFactories(\n      [() => this.injector.get(HOOK_COMPONENTS, []), () => this.getComponentsViaDeprecatedHook()],\n      router,\n      false\n    );\n    this.items$.subscribe(cmps => {\n      cmps.forEach(cmp => {\n        this.state.add(cmp);\n      });\n      this.emitNewState();\n    });\n  }\n\n  getComponentsViaDeprecatedHook() {\n    const componentsViaDeprecatedHook: DynamicComponentDefinition[] = this.injector.get(\n      HOOK_COMPONENT,\n      []\n    ) as DynamicComponentDefinition[];\n    if (\n      componentsViaDeprecatedHook &&\n      componentsViaDeprecatedHook.length &&\n      __MODE__ !== 'production'\n    ) {\n      console.warn('HOOK_COMPONENT is now deprecated. Use HOOK_COMPONENTS instead.');\n    }\n\n    return componentsViaDeprecatedHook;\n  }\n\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Returns a component by it's id as an observable.\n   * @param id The id of the component.\n   */\n  getById$(id) {\n    return this.state$.pipe(\n      filter((cmps: Set<DynamicComponentDefinition>) => cmps.size > 0),\n      mergeMap((cmps: Set<DynamicComponentDefinition>) =>\n        of(Array.from(cmps).find(cmp => cmp.id === id))\n      ),\n      take(1)\n    );\n  }\n\n  add(component: DynamicComponentDefinition) {\n    this.state.add(component);\n    this.emitNewState();\n  }\n\n  remove(component: DynamicComponentDefinition) {\n    this.state.delete(component);\n    this.emitNewState();\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ComponentFactoryResolver,\n  ViewContainerRef\n} from '@angular/core';\nimport { DynamicComponent } from './dynamic-component.model';\nimport { DynamicComponentService } from './dynamic-component.service';\n\n/**\n * C8y dynamic component.\n * ## Example:\n *\n * register component in HOOK in module:\n * ```typescript\n *  import { HOOK_COMPONENT } from '@c8y/ngx-components';\n *\n * @NgModule({\n *  ...,\n *  providers: [{\n *      provide: HOOK_COMPONENT,\n *      multi: true,\n *      useValue: [{\n *          id: 'test-component',\n *          label: 'My test component',\n *          description: 'this is test component',\n *          component: TestComponent\n *      }],\n *  ...\n *  }]\n *\n * ```\n * Showing dynamic component:\n * ```html\n * <c8y-dynamic-component [componentId]=\"'test-component'\" [config]=\"config\"></c8y-dynamic-component>\n * ```\n */\n@Component({\n  selector: 'c8y-dynamic-component',\n  templateUrl: './dynamic-component.component.html'\n})\nexport class DynamicComponentComponent {\n  @Input() componentId: string;\n  @Input() config: any;\n  @Input() mode: 'config' | 'component' = 'component';\n  @Input() notFoundError = true;\n  @ViewChild('host', { read: ViewContainerRef, static: true }) host: ViewContainerRef;\n  error: any;\n  expandErrorDetails = false;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private dynamicComponentService: DynamicComponentService\n  ) {}\n\n  ngOnChanges(): void {\n    this.dynamicComponentService\n      .getById$(this.componentId)\n      .subscribe(cmp => this.loadComponent(cmp));\n  }\n\n  loadComponent(dynamicComponent) {\n    try {\n      this.error = undefined;\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n        this.mode === 'component' ? dynamicComponent.component : dynamicComponent.configComponent\n      );\n      this.host.clear();\n      const componentRef = this.host.createComponent(componentFactory);\n      (componentRef.instance as DynamicComponent).config = this.config;\n    } catch (ex) {\n      this.error = ex;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { DynamicComponentComponent } from './dynamic-component.component';\nimport { DynamicComponentService } from './dynamic-component.service';\nimport { I18nModule } from '../i18n/i18n.module';\n\n@NgModule({\n  declarations: [DynamicComponentComponent],\n  imports: [CommonModule, CollapseModule, RouterModule.forChild([]), I18nModule],\n  exports: [DynamicComponentComponent],\n  providers: [DynamicComponentService]\n})\nexport class DynamicComponentModule {}\n","import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'c8y-dashboard-child-action',\n  templateUrl: './dashboard-child-action.component.html'\n})\nexport class DashboardChildActionComponent {\n  @ViewChild('template', { static: false }) template: any;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'c8y-dashboard-child-title',\n  templateUrl: './dashboard-child-title.component.html'\n})\nexport class DashboardChildTitleComponent {}\n","import {\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  AfterContentInit,\n  QueryList,\n  forwardRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DashboardChildComponent } from './dashboard-child.component';\nimport { DashboardChange } from './dashboard.model';\n\n/**\n * Displays a CSS grid which is customizable by the customer. You can set\n * `c8y-dashboard-child`-components on it or position any element on it by\n * setting the grid CSS properties. On change (resize, or rearrange) the\n * component emits an change event.\n *\n * ## Example:\n *\n * ```html\n * <c8y-title>Hello from outlet</c8y-title>\n *\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"addRandom()\"><i class=\"fa fa-plus\"></i> Add random</button>\n * </c8y-action-bar-item>\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"isFrozen = !isFrozen\">\n *     <i [c8yIcon]=\"isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *   </button>\n * </c8y-action-bar-item>\n *\n * <c8y-dashboard (dashboardChange)=\"dashboardChange($event)\">\n *   <c8y-dashboard-child\n *     [isFrozen]=\"isFrozen\"\n *     title=\"dynamic\"\n *     *ngFor=\"let widget of widgets\"\n *     #current\n *   >\n *     x: {{ current.x }}<br />\n *     y: {{ current.y }}<br />\n *     width: {{ current.width }}<br />\n *     height: {{ current.height }}<br />\n *   </c8y-dashboard-child>\n *   <c8y-dashboard-child\n *     #cpWidget\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"1\"\n *     [width]=\"3\"\n *     [height]=\"2\"\n *     [data]=\"widget\"\n *     [class]=\"'card card-dashboard panel-title-regular panel-content-branded panel-title-overlay'\"\n *   >\n *     <c8y-dashboard-child-title>\n *       <span>World!</span>\n *     </c8y-dashboard-child-title>\n *     x: {{ cpWidget.x }}<br />\n *     y: {{ cpWidget.y }}<br />\n *     width: {{ cpWidget.width }}<br />\n *     height: {{ cpWidget.height }}<br />\n *   </c8y-dashboard-child>\n *   <c8y-dashboard-child\n *     #cpWidget2\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"8\"\n *     [y]=\"1\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card card-dashboard panel-content-dark'\"\n *   >\n *     <c8y-dashboard-child-title>\n *       <span>Hello!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget2.isFrozen = !cpWidget2.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget2.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget2.x }}<br />\n *     y: {{ cpWidget2.y }}<br />\n *     width: {{ cpWidget2.width }}<br />\n *     height: {{ cpWidget2.height }}<br />\n *   </c8y-dashboard-child>\n *\n *   <c8y-dashboard-child\n *     #cpWidget3\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"3\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card-dashboard panel-content-transparent'\"\n *   >\n *     <c8y-dashboard-child-title *ngIf=\"showTitle\">\n *       <span>Transparent!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"showTitle = !showTitle; (false)\">\n *         <i [c8yIcon]=\"'heading'\"></i> Hide/show title\n *       </a>\n *     </c8y-dashboard-child-action>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget3.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget3.x }}<br />\n *     y: {{ cpWidget3.y }}<br />\n *     width: {{ cpWidget3.width }}<br />\n *     height: {{ cpWidget3.height }}<br />\n *   </c8y-dashboard-child>\n * </c8y-dashboard>\n * ```\n */\n@Component({\n  selector: 'c8y-dashboard',\n  templateUrl: './dashboard.component.html',\n  host: {\n    class: 'c8y-grid-dashboard dashboard-grid'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements AfterContentInit {\n  /**\n   * All children in that dashboard.\n   */\n  @ContentChildren(forwardRef(() => DashboardChildComponent)) children: QueryList<\n    DashboardChildComponent\n  >;\n\n  /**\n   * The amount of columns on that dashboard.\n   */\n  @Input() columns = 12;\n\n  /**\n   * The spacing between each children in pixel.\n   */\n  @Input() gap = 12;\n\n  /**\n   * The amount of rows to dusplay. Set to auto to\n   * auto extend the rows.\n   */\n  @Input() rows: number | 'auto' = 'auto';\n\n  /**\n   * An event fired if the dashboard was changed.\n   */\n  @Output() dashboardChange = new EventEmitter<DashboardChange>();\n\n  dashboardRect;\n  private lastRow = 1;\n  private readonly DEFAULT_ROW_SIZE = 68;\n\n  /**\n   * The current column size.\n   */\n  get columnSize() {\n    return this.dashboardRect.width / this.columns;\n  }\n\n  /**\n   * The current row size.\n   */\n  get rowSize() {\n    return this.rows === 'auto' ? this.DEFAULT_ROW_SIZE : this.calculateRowSize();\n  }\n\n  /**\n   * Returns all positioning styles. Nasty workaround for that issue:\n   * https://github.com/angular/angular/issues/9343\n   */\n  @HostBinding('attr.style')\n  get inlineStyle() {\n    return this.sanitizer.bypassSecurityTrustStyle(\n      `\n        -ms-grid-columns: (1fr)[${this.columns}];\n        grid-template-columns: repeat(${this.columns}, 1fr);\n        ${this.rows !== 'auto' ? `grid-template-rows: repeat(${this.rows}, 1fr);` : ''}\n        grid-auto-rows: ${this.rowSize + this.gap}px;\n        -ms-grid-rows: (${this.rowSize + this.gap}px)[${\n        this.rows === 'auto' ? this.lastRow : this.rows\n      }];\n        margin: -${this.gap}px;\n      `\n    );\n  }\n\n  constructor(private element: ElementRef, private sanitizer: DomSanitizer) {}\n\n  ngAfterContentInit(): void {\n    this.onResize();\n    this.getLastRow();\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.updateRectSize();\n  }\n\n  /**\n   * Gets the last row\n   * (mainly for IE11 which doesn't support grid-auto-rows CSS property)\n   */\n  getLastRow() {\n    let lastRow = 1;\n    this.children.forEach(widget => {\n      if (lastRow < widget.y + widget.width) {\n        lastRow = widget.y + widget.width;\n      }\n    });\n    this.lastRow = lastRow + 1;\n  }\n\n  /**\n   * Updates the current rect size of the dashboard.\n   */\n  updateRectSize() {\n    const ele = this.element.nativeElement as HTMLElement;\n    this.dashboardRect =  ele.getBoundingClientRect();\n  }\n\n  emitChange(widget: DashboardChildComponent) {\n    this.dashboardChange.emit({ source: widget, children: this.children.toArray() });\n  }\n\n  private calculateRowSize() {\n    return this.dashboardRect.height / (this.rows as number);\n  }\n}\n","import { CdkDragMove } from '@angular/cdk/drag-drop';\nimport { sortBy } from 'lodash-es';\nimport { pipe } from 'rxjs';\nimport { distinctUntilChanged, expand, filter, map, tap } from 'rxjs/operators';\nimport { DashboardComponent } from './dashboard.component';\nimport {\n  DashboardChildDimension,\n  DashboardChildResizeDimension,\n  DashboardChildArrangement\n} from './dashboard.model';\nimport { DashboardChildComponent } from './dashboard-child.component';\n\nexport class DashboardChildChange {\n  child: DashboardChildComponent;\n  children: DashboardChildComponent[];\n  private dashboard: DashboardComponent;\n\n  private readonly MIN_WIDTH = 2;\n  private MIN_HEIGHT = 1;\n  private readonly PIXEL_SIZE_THRESHOLD = 10;\n\n  private diffX = 0;\n  private diffY = 0;\n\n  constructor(childToChange: DashboardChildComponent) {\n    this.dashboard = childToChange.dashboard;\n    this.children = childToChange.dashboard.children\n      ? childToChange.dashboard.children.filter(child => childToChange !== child)\n      : [];\n    this.child = childToChange;\n  }\n\n  get resize$() {\n    return this.child.dragSource.moved.pipe(\n      map(move => this.getPixelSize(move)),\n      tap(resizeDimension => this.setPixelSize(resizeDimension)),\n      map(resizeDimension => this.getDimensionSize(resizeDimension)),\n      distinctUntilChanged(\n        (prev, next) => prev.width === next.width && prev.height === next.height\n      ),\n      map(dimension => this.setDimension(dimension)),\n      this.arrangePipe()\n    );\n  }\n\n  get drag$() {\n    return this.child.dragSource.moved.pipe(\n      map(move => this.getDimensionPosition(move)),\n      filter(\n        dimension =>\n          dimension.x >= 0 &&\n          dimension.x <= this.dashboard.columns - this.child.width &&\n          dimension.y >= 0\n      ),\n      distinctUntilChanged((prev, next) => prev.x === next.x && prev.y === next.y),\n      this.arrangePipe()\n    );\n  }\n\n  findFreeDimension() {\n    let y = -1;\n    let x = 0;\n    let found = false;\n    const { width, height } = this.child;\n    if (width > this.dashboard.columns) {\n      throw new Error('The child does not fit on the current dashboard.');\n    }\n    do {\n      x = 0;\n      y++;\n      while (x + width <= this.dashboard.columns) {\n        if (this.getCollided({ x, y, width, height }).length === 0) {\n          found = true;\n          break;\n        }\n        x++;\n      }\n    } while (!found);\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  collapseUpAll(): void {\n    return sortBy([this.child, ...this.children], ['y']).forEach(w => {\n      const ds = new DashboardChildChange(w);\n      const newPosition = ds.collapseUp(w);\n      ds.setDimension(newPosition);\n    });\n  }\n\n  arrangeAll(arrange: DashboardChildArrangement) {\n    const { current, scan, spacing, origin } = arrange;\n    const collided = this.getCollided(current, sortBy(scan, ['y']));\n    return collided.map(child => {\n      const ds = new DashboardChildChange(child);\n      ds.setDimension({ ...child, y: spacing });\n      return {\n        current: child,\n        scan: scan.filter(w => w !== child),\n        spacing: child.y + child.height,\n        origin\n      };\n    });\n  }\n\n  private arrangePipe() {\n    return pipe(\n      map(\n        (dimension: DashboardChildDimension) =>\n          ({\n            current: dimension,\n            scan: this.children,\n            spacing: dimension.y + dimension.height,\n            origin: { ...dimension }\n          } as DashboardChildArrangement)\n      ),\n      expand((dimensions: DashboardChildArrangement) => this.arrangeAll(dimensions)),\n      map(({ origin }) => origin),\n      map(dimension => this.setDimension(dimension, true)),\n      tap(() => this.collapseUpAll()),\n      tap(() => this.dashboard.getLastRow())\n    );\n  }\n\n  private collapseUp(dimension: DashboardChildDimension) {\n    let { y } = dimension;\n    while (y > 0) {\n      if (this.getCollided({ ...dimension, y: y - 1 }).length !== 0) {\n        break;\n      }\n      y--;\n    }\n    return { ...dimension, y };\n  }\n\n  private setDimension(dimension: DashboardChildDimension, notIfColliding = false) {\n    if (notIfColliding && this.getCollided(dimension).length > 0) {\n      return;\n    }\n\n    this.child.x = dimension.x;\n    this.child.y = dimension.y;\n    if (\n      dimension.width >= this.MIN_WIDTH &&\n      dimension.x + dimension.width <= this.dashboard.columns\n    ) {\n      this.child.width = dimension.width;\n    } else if (dimension.width < this.MIN_WIDTH) {\n      dimension.width = this.MIN_WIDTH;\n    } else {\n      dimension.width = this.dashboard.columns - dimension.x;\n    }\n    if (dimension.height >= this.MIN_HEIGHT) {\n      this.child.height = dimension.height;\n    } else {\n      dimension.height = this.MIN_WIDTH;\n    }\n    return dimension;\n  }\n\n  private setPixelSize({ width, height }) {\n    if (width >= this.dashboard.columnSize * this.MIN_WIDTH - this.dashboard.gap) {\n      this.child.pxWidth = width + this.PIXEL_SIZE_THRESHOLD;\n    }\n    if (height >= this.dashboard.rowSize * this.MIN_HEIGHT - this.dashboard.gap) {\n      this.child.pxHeight = height + this.PIXEL_SIZE_THRESHOLD;\n    }\n  }\n\n  private getPixelSize(moveEvent: CdkDragMove) {\n    const draggedElement = moveEvent.source.element.nativeElement.parentNode as HTMLElement;\n    if (!this.diffX) {\n      const rect = draggedElement.getBoundingClientRect();\n      this.diffX =  rect.left;\n      this.diffY =  rect.top;\n    }\n    const { x, y } = moveEvent.pointerPosition;\n    const width = Math.round(x - this.diffX);\n    const height = Math.round(y - this.diffY);\n    return { width, height, pointer: { x, y } } as DashboardChildResizeDimension;\n  }\n\n  private getDimensionSize(resizePosition: DashboardChildResizeDimension) {\n    const { x, y } = this.child;\n    const ds = this.dashboard.dashboardRect;\n    const column = this.dashboard.columnSize;\n    const row = this.dashboard.rowSize + this.dashboard.gap;\n    const width =\n      Math.round((resizePosition.pointer.x - ds.left + this.dashboard.gap) / column) - x;\n    const height = Math.round((resizePosition.pointer.y - ds.top + this.dashboard.gap) / row) - y;\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  private getDimensionPosition(moveEvent: CdkDragMove) {\n    const draggedElement = moveEvent.source.element.nativeElement.nextElementSibling;\n    if (!this.diffX) {\n      const rect = draggedElement.getBoundingClientRect();\n      this.diffX =  moveEvent.pointerPosition.x - rect.left;\n      this.diffY =  moveEvent.pointerPosition.y - rect.top;\n    }\n\n    const left = moveEvent.pointerPosition.x - this.diffX;\n    const top = moveEvent.pointerPosition.y - this.diffY;\n    const { width, height } = this.child;\n    const ds = this.dashboard.dashboardRect;\n    const column = this.dashboard.columnSize;\n    const row = this.dashboard.rowSize + this.dashboard.gap / 2;\n    const x = Math.round((left - ds.left) / column);\n    const y = Math.round((top - ds.top) / row);\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  private doesCollide(a: DashboardChildDimension, b: DashboardChildDimension) {\n    if (b.x === undefined) {\n      return false;\n    }\n    return !(\n      a.y + a.height - 1 < b.y ||\n      a.y > b.y + b.height - 1 ||\n      a.x + a.width - 1 < b.x ||\n      a.x > b.x + b.width - 1\n    );\n  }\n\n  private getCollided(currentDimension: DashboardChildDimension, dimensions = this.children) {\n    const collided = dimensions.filter(dimension => this.doesCollide(currentDimension, dimension));\n    return collided;\n  }\n}\n","import { CdkDrag, CdkDragEnd, CdkDragStart } from '@angular/cdk/drag-drop';\nimport {\n  Component,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  ContentChildren,\n  Output,\n  EventEmitter,\n  ElementRef\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardChildDimension, Widget } from './dashboard.model';\nimport { DashboardChildChange } from './dashboard-child-change';\nimport { DashboardChildActionComponent } from './dashboard-child-action.component';\n\n/**\n * A dashboard child allows to position elements\n * correctly on a grid. The user can then resize and\n * rearrange the elements, as long as they are not `frozen`.\n *\n * By setting `c8y-dashboard-child-actions` and\n * `c8y-dashboard-child-title` on the element you can add\n * custom actions or a custom title to the current child.\n *\n * By adding the correct branded classes, you can define\n * the look and feel of the child. By default it is displayed\n * as a card.\n *\n * Example:\n *\n * ```html\n *   <c8y-dashboard-child\n *     #cpWidget3\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"3\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card-dashboard panel-content-transparent'\"\n *   >\n *     <c8y-dashboard-child-title *ngIf=\"showTitle\">\n *       <span>Transparent!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"showTitle = !showTitle; (false)\">\n *         <i [c8yIcon]=\"'heading'\"></i> Hide/show title\n *       </a>\n *     </c8y-dashboard-child-action>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget3.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget3.x }}<br />\n *     y: {{ cpWidget3.y }}<br />\n *     width: {{ cpWidget3.width }}<br />\n *     height: {{ cpWidget3.height }}<br />\n *   </c8y-dashboard-child>\n * ```\n */\n@Component({\n  selector: 'c8y-dashboard-child',\n  templateUrl: './dashboard-child.component.html',\n  host: {\n    class: 'dashboard-grid-child'\n  }\n})\nexport class DashboardChildComponent implements DashboardChildDimension {\n  @ContentChildren(DashboardChildActionComponent) actions = [];\n  dragSource: CdkDrag;\n  isResize = false;\n  isDragging = false;\n  klasses = {};\n\n  _pxWidth = '100%';\n  _pxHeight = '100%';\n\n  /**\n   * The x position of the child.\n   */\n  @Input() x;\n\n  /**\n   * The y position of the child.\n   */\n  @Input() y;\n\n  /**\n   * The width of the component in grid-columns.\n   */\n  @Input() width = 1;\n\n  /**\n   * The height of the component in grid-rows.\n   */\n  @Input() height = 1;\n\n  /**\n   * The data object can be used as a dataTransfer object for events of the child.\n   */\n  @Input() data: Widget | any;\n\n  /**\n   * The margin of the child in pixel.\n   */\n  @Input() margin = 12;\n\n  /**\n   * If a dashboard is frozen, all children cannot be moved\n   * or resized.\n   */\n  @Input() isFrozen = false;\n\n  /**\n   * The child content is initialized, as soon it is scrolled into viewport\n   */\n  @Input() useIntersection = false;\n\n  /**\n   * An event fired if a child change is started (dragging or resizing)\n   */\n  @Output() changeStart = new EventEmitter<DashboardChildComponent>();\n\n  /**\n   * An event fired if a child change is ended\n   */\n  @Output() changeEnd = new EventEmitter<DashboardChildComponent>();\n\n  /**\n   * All classes added to this child\n   */\n  @Input()\n  class: string[] | { [key: string]: boolean } = {};\n\n  /**\n   * Updates the pixel width of the child (used for resizing)\n   */\n  set pxWidth(value) {\n    this._pxWidth = `${value}px`;\n  }\n\n  /**\n   * Updates the pixel height of the child (used for resizing)\n   */\n  set pxHeight(value) {\n    this._pxHeight = `${value}px`;\n  }\n\n  /**\n   * An indicator if the child is intersected (that mean visible for the user)\n   */\n  intersected = false;\n\n  /**\n   * nasty workaround for that issue:\n   * https://github.com/angular/angular/issues/9343\n   */\n  @HostBinding('attr.style')\n  get inlineStyle() {\n    return this.sanitizer.bypassSecurityTrustStyle(`\n    grid-column-start: ${this.x + 1};\n    -ms-grid-column: ${this.x + 1};\n    grid-row-start: ${this.y + 1};\n    -ms-grid-row: ${this.y + 1};\n    grid-column-end: span ${this.width};\n    -ms-grid-column-span: ${this.width};\n    grid-row-end: span ${this.height};\n    -ms-grid-row-span: ${this.height};\n    display: block;\n    margin: ${this.margin || 12}px;\n    `);\n  }\n\n  /**\n   * The observable subscription which is listen to\n   * on changes (drag or resize).\n   */\n  changeSubscription: Subscription;\n\n  constructor(\n    @Inject(forwardRef(() => DashboardComponent)) public dashboard: DashboardComponent,\n    private sanitizer: DomSanitizer,\n    private element: ElementRef\n  ) {}\n\n  ngOnChanges(): void {\n    this.klasses = {\n      card: true,\n      'card-dashboard': true,\n      disabled: this.isFrozen,\n      'on-resize': this.isResize,\n      ...this.class\n    };\n  }\n\n  ngOnInit(): void {\n    if (this.x === undefined || this.y === undefined) {\n      setTimeout(() => this.setDynamicDimension());\n    }\n    if (this.useIntersection && 'IntersectionObserver' in window) {\n      const intersectionObserver = new IntersectionObserver(\n        event => (this.intersected = this.childInView(event[0], intersectionObserver))\n      );\n      intersectionObserver.observe(this.element.nativeElement);\n    } else {\n      this.intersected = true;\n    }\n  }\n\n  setDynamicDimension() {\n    const ds = new DashboardChildChange(this);\n    const { x, y } = ds.findFreeDimension();\n    this.x = x;\n    this.y = y;\n  }\n\n  resizeStarted($event: CdkDragStart) {\n    this.isResize = true;\n    this.dashboard.updateRectSize();\n    this.dragSource = $event.source;\n    const positioning = new DashboardChildChange(this);\n    this.changeSubscription = positioning.resize$.subscribe();\n    this.changeStart.emit(this);\n    this.ngOnChanges();\n  }\n\n  dragStarted($event: CdkDragStart) {\n    this.isDragging = true;\n    this.dashboard.updateRectSize();\n    this.dragSource = $event.source;\n    const positioning = new DashboardChildChange(this);\n    this.changeSubscription = positioning.drag$.subscribe();\n    this.changeStart.emit(this);\n  }\n\n  reset($event?: CdkDragEnd) {\n    this.isResize = false;\n    this.isDragging = false;\n    this._pxWidth = '100%';\n    this._pxHeight = '100%';\n    this.ngOnChanges();\n    if ($event) {\n      $event.source.reset();\n    }\n    if (this.changeSubscription) {\n      this.changeSubscription.unsubscribe();\n      this.dashboard.emitChange(this);\n      this.changeEnd.emit(this);\n    }\n  }\n\n  private childInView(event, observer) {\n    if (event.isIntersecting) {\n      observer.unobserve(event.target);\n      return true;\n    }\n    return false;\n  }\n}\n","import { Component, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { DashboardSettings, Widget, WidgetChange, DashboardChange } from './dashboard.model';\nimport { DashboardComponent } from './dashboard.component';\n\n@Component({\n  selector: 'c8y-widgets-dashboard',\n  templateUrl: './widgets-dashboard.component.html',\n  host: {\n    style: `\n      display: block;\n    `,\n    class: 'dashboard c8y-grid-dashboard'\n  }\n})\nexport class WidgetsDashboardComponent {\n  @Input()\n  widgets: Widget[];\n\n  @Input()\n  context: any;\n\n  @Input()\n  contextDashboard: any;\n\n  @Input('settings')\n  set _settings(settings: Partial<DashboardSettings>) {\n    this.settings = { ...this.settings, ...settings };\n  }\n  settings: DashboardSettings = {\n    isFrozen: false,\n    isDisabled: false,\n    widgetMargin: 12,\n    translateWidgetTitle: false,\n    defaultHeight: 4,\n    defaultWidth: 4,\n    allowFullscreen: false,\n    canDelete: true,\n    isLoading: false,\n  };\n\n  @Output()\n  onAddWidget: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onEditWidget: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onDeleteWidget: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onChangeDashboard: EventEmitter<DashboardChange> = new EventEmitter();\n\n  @Output()\n  onEditDashboard: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onDeleteDashboard: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onFreeze: EventEmitter<DashboardSettings> = new EventEmitter();\n\n  @Output()\n  onChangeStart: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onChangeEnd: EventEmitter<WidgetChange> = new EventEmitter();\n\n  toggleFullscreen() {\n    const elem = document.body as any;\n    const doc = document as any;\n    if (!this.fullScreen()) {\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen((Element as any).ALLOW_KEYBOARD_INPUT);\n      }\n    } else if (doc.exitFullscreen) {\n      doc.exitFullscreen();\n    } else if (doc.msExitFullscreen) {\n      doc.msExitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen();\n    }\n  }\n\n  fullScreen() {\n    const doc: any = document;\n    return !!(\n      doc.fullscreenElement ||\n      doc.mozFullScreenElement ||\n      doc.webkitFullscreenElement ||\n      doc.msFullscreenElement\n    );\n  }\n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ActionBarModule } from '../action-bar/action-bar.module';\nimport { CommonModule } from '../common/common.module';\nimport { DynamicComponentModule } from '../dynamic-component/dynamic-component.module';\nimport { DashboardChildActionComponent } from './dashboard-child-action.component';\nimport { DashboardChildTitleComponent } from './dashboard-child-title.component';\nimport { DashboardChildComponent } from './dashboard-child.component';\nimport { DashboardComponent } from './dashboard.component';\nimport { WidgetsDashboardComponent } from './widgets-dashboard.component';\nimport { HeaderModule } from '../header/header.module';\nimport { DocsModule } from '../docs/docs.module';\n\n@NgModule({\n  declarations: [\n    DashboardChildComponent,\n    DashboardComponent,\n    DashboardChildTitleComponent,\n    DashboardChildActionComponent,\n    WidgetsDashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    ActionBarModule,\n    DynamicComponentModule,\n    DragDropModule,\n    BsDropdownModule.forRoot(),\n    HeaderModule,\n    DocsModule\n  ],\n  exports: [\n    DashboardComponent,\n    DashboardChildComponent,\n    DashboardChildTitleComponent,\n    DashboardChildActionComponent,\n    WidgetsDashboardComponent\n  ]\n})\nexport class DashboardModule {}\n","import { Directive, Input, TemplateRef } from '@angular/core';\nimport { StepState } from '@angular/cdk/stepper';\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[c8yStepperIcon]'\n})\nexport class C8yStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('c8yStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  Component,\n  TemplateRef,\n  Input,\n  Output,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  OnDestroy,\n  EventEmitter\n} from '@angular/core';\nimport { CdkStepper, StepState, STEP_STATE } from '@angular/cdk/stepper';\nimport { C8yStepperIcon } from './stepper-icon.directive';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * C8yStepper extends the CdkStepper. You can use cdk based functionality and inputs.\n * Additional to that you are able to modify the behavior and also the look and feel when\n * using the C8yStepper.\n *\n * The C8yStepper is used to present any step-based process to the user.\n * A stepper, C8yStepper and/or CdkStepper is the parent of cdk-steps.\n * Each cdk-step represents one step in the whole process that you want to provide to the user.\n *\n * The C8yStepper will create, based on the given cdk-steps, a kind of stepper-progress which looks like this:\n * (1)---(2)---(3)---(n)\n * The stepper will handle the state of each step and provides styles for active steps, done-steps or in edit-mode.\n * You are able to override icons for each step in the stepper-progress with a template. You are also able to activate\n * default-icons for states like 'edit' and 'done'.\n *\n * To force users through every provided step, set the stepper to 'linear'.\n * This will disable the possibility to move for example from step one to step three.\n *\n * Whenever it comes to validation try to use formGroups. It is possible to\n * assign a formGroup to a cdk-step input called [stepControl], which automatically respects the\n * validation-rules that you created for this formGroup. If fields are required but not filled or\n * any other validation, like a pattern, is not matched the formGroup will be invalid. In this case\n * stepping in a linear stepper to the next step gets impossible.\n *\n * If there is the need to execute asynchronous code you have at least two possibilities.\n * First: As you learned, a cdk-step works with formGroups and Validators, so you are able to use\n * asyncValidators as well.\n * Second: The C8yStepper provides an event-emitter onStepChange which is called whenever a step-button (1)--(2)--(n)\n * in the stepper-progress is clicked. The event of this emitter holds the index of the step as number. You can\n * use this EventEmitter to call for example a custom navigate-method which performs first any async-call and then moves\n * on to the given step.\n *\n * @example\n * ```\n * <c8y-stepper\n * (onStepChange)=\"navigate($event)\"\n * [disableDefaultIcons]=\"{ edit: true, done: false }\"\n * [customClasses]=\"['m-l-40', 'm-r-40', 'm-t-32']\"\n * linear\n * >\n * <!-- override icons -->\n * <ng-template c8yStepperIcon=\"final\">\n *   <span [c8yIcon]=\"'hand-peace-o'\"></span>\n * </ng-template>\n *\n * <cdk-step [stepControl]=\"formGroupStepOne\" label=\"Name of the hero\">\n *   <div class=\"m-l-40 m-r-40 m-t-32\">\n *     <h4 class=\"p-b-8\" translate>What is the name of your hero?</h4>\n *     <c8y-form-group>\n *      <div [formGroup]=\"formGroupStepOne\">\n *       <input\n *         class=\"form-control\"\n *         type=\"text\"\n *         formControlName=\"name\"\n *         placeholder=\"Mister X\"\n *         #nameRef\n *         required\n *       />\n *       <c8y-messages>\n *         <c8y-message *ngIf=\"!formGroupStepOne.untouched && !nameRef.value\" translate\n *           >Enter the name of the Superhero</c8y-message\n *         >\n *       </c8y-messages>\n *      </div>\n *     </c8y-form-group>\n *   </div>\n *   <c8y-stepper-buttons></c8y-stepper-buttons>\n * </cdk-step>\n * <cdk-step>\n *  ...\n * </cdk-step state=\"final\">\n * </c8y-stepper>\n * ```\n */\n@Component({\n  selector: 'c8y-stepper',\n  templateUrl: './stepper.component.html',\n  providers: [{ provide: CdkStepper, useExisting: C8yStepper }]\n})\nexport class C8yStepper extends CdkStepper implements AfterContentInit, OnDestroy {\n  /**\n   * Optional\n   * Indicator if icons for edit and done state should be shown in step-header buttons\n   */\n  @Input() disableDefaultIcons?: { edit: boolean; done: boolean } = { edit: true, done: true };\n  /**\n   * Optional\n   * Possibility to add any kind of custom css classes to the step-header\n   */\n  @Input() customClasses?: [string];\n  /**\n   * Will emit the step index number whenever a step-header button was clicked\n   * It listens to the stepIndex Subject.\n   */\n  @Output() onStepChange = new EventEmitter<number>();\n\n  /**\n   * Holding a QueryList of C8yStepperIcons\n   * These are templateRefs which overrides any step-header button icon with matching state of cdk-step\n   *\n   * @example:\n   * ```\n   * <!-- override icons -->\n   *  <ng-template c8yStepperIcon=\"final\">\n   *   <span [c8yIcon]=\"'hand-peace-o'\"></span>\n   *  </ng-template>\n   *\n   * <cdk-step state=\"final\" label=\"Job done!\">\n   *  <div class=\"m-l-40 m-r-40 m-t-32\">\n   *    <h4 class=\"p-b-32\" style=\"text-align: center;\" translate>\n   *     Your Superhero is now ready to save the world!\n   *   </h4>\n   *  </div>\n   *  <c8y-stepper-buttons\n   *    [hidden]=\"!isModal\"\n   *    (onBack)=\"close()\"\n   *    [labels]=\"{ back: 'Got it!' }\"\n   *  ></c8y-stepper-buttons>\n   *  <c8y-stepper-buttons [hidden]=\"isModal\"></c8y-stepper-buttons>\n   * </cdk-step>\n   * ```\n   */\n  @ContentChildren(C8yStepperIcon, { descendants: true }) _icons: QueryList<C8yStepperIcon>;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: { [key: string]: TemplateRef<any> } = {};\n\n  private _stepIndex: Subject<number> = new Subject();\n  private _stepIndexSubscription: Subscription;\n\n  ngAfterContentInit() {\n    this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n    this._stepIndexSubscription = this._stepIndex.subscribe(index => this.onStepChange.emit(index));\n  }\n\n  ngOnDestroy() {\n    if (this._stepIndexSubscription && !this._stepIndexSubscription.closed) {\n      this._stepIndexSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Manipulates the state based on the disabledDefaultIcons Input()\n   * Changing edit or done to false will change the icons within step-header buttons\n   * @param index step index\n   * @param state step state, like 'done', 'edit', 'error'\n   */\n  getIndicatorType(index: number, state: StepState) {\n    const stepState = this._getIndicatorType(index, state);\n    let _state = state;\n    switch (stepState) {\n      case STEP_STATE.EDIT:\n        if (!this.disableDefaultIcons.edit) {\n          _state = STEP_STATE.EDIT;\n        }\n        break;\n\n      case STEP_STATE.DONE:\n        if (!this.disableDefaultIcons.done) {\n          _state = STEP_STATE.DONE;\n        } else {\n          _state = '_done';\n        }\n        break;\n    }\n    return _state;\n  }\n\n  /**\n   * Pushs the step index to the subject\n   * @param index step index\n   */\n  setIndex(index: number) {\n    this._stepIndex.next(index);\n  }\n}\n","import { Component, Input, Output, TemplateRef, EventEmitter } from '@angular/core';\nimport { StepState } from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'c8y-stepper-progress',\n  templateUrl: './stepper-progress.component.html'\n})\nexport class C8yStepperProgress {\n  /** List of overriden icons as TemplateRef. Also default icons could be overriden.\n   *  The given overriden icons will replace an icon with matching state: StepState\n   *\n   * <ng-container\n   * *ngSwitchCase=\"true\"\n   * [ngTemplateOutlet]=\"iconOverrides[state]\"\n   * ></ng-container>\n   *\n   */\n  @Input() iconOverrides: { [key: string]: TemplateRef<any> };\n  /** The index of the current step */\n  @Input() index: number;\n  /** Whether the step is cuurently selected or not  */\n  @Input() selected: boolean;\n  /** The current state of the step */\n  @Input() state: StepState;\n\n  /** Emits the index: number of the step which was clicked */\n  @Output() onStepClicked = new EventEmitter<number>();\n\n  /** Called on click and emits the step index */\n  stepSelected() {\n    this.onStepClicked.emit(this.index);\n  }\n}\n","import {\n  Host,\n  Component,\n  OnDestroy,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  AfterContentInit,\n  SimpleChanges\n} from '@angular/core';\nimport { C8yStepper } from './stepper.component';\nimport { CdkStep } from '@angular/cdk/stepper';\nimport { Subscription } from 'rxjs';\n\n/**\n * C8yStepperButtons provides a convinient way to have, according to\n * the C8yStepper and each cdk-step, buttons to navigate between steps or to cancel the whole\n * step-process. Buttons rendered with the help of this component will use the branding css.\n *\n * By default all steps with this component in use will render a next button, expect the last step.\n * The other way around, every step using this component will render a back button, expect the first step.\n * To get a cancel button rendered you need to handle the onCancel event.\n * For next and back button you don't need to handle the available events onNext and onBack because default behavior\n * is implemented. The default will just call, according to the button, the stepper.next() or stepper.previous()\n * methods and moves the stepper forth or back. Using the EventEmitter onNext and onBack will emit for you the following\n * object: {stepper: C8yStepper, step: CdkStep}. This is useful if you need to implement custom logic before moving\n * to the next step or sending data to a backend. In this case you need to tell the stepper to move forward or back\n * on your own.\n *\n * With the component input [labels] you can change the label of each button in each step. It takes an object like this:\n * {next?: string, back?: string, cancel?: string}\n *\n * The [pending] input is of type boolean and will enable css animation for the next button when true.\n *\n * If the cdk-step provides a stepControl the component will set the next button disabled when the formGroup\n * behind it is invalid. As long as the [pending] input is true the back and next button is also disabled.\n * This will prevent multiple clicks while running a request or stepping back while a request is ongoing.\n *\n * @example\n * ```\n * <c8y-stepper>\n *  <cdk-step>\n *    <!--\n *      your html code\n *          ...\n *          ...    -->\n *    <c8y-stepper-buttons\n *     (onNext)=\"save()\"\n *     [labels]=\"{ next: 'Save' }\"\n *     [pending]=\"pendingStatus\"\n *     ></c8y-stepper-buttons>\n *  </cdk-step>\n * </c8y-stepper>\n *\n * // in your component:\n * async save() {\n *   this.pendingStatus = true;\n *   // your async request goes here ...\n *   // await something();\n *   this.pendingStatus = false;\n *   this.stepper.next();\n * }\n * ```\n */\n@Component({\n  selector: 'c8y-stepper-buttons',\n  templateUrl: './stepper-buttons.component.html'\n})\nexport class C8yStepperButtons implements AfterContentInit, OnDestroy, OnChanges {\n  /**\n   * Optional\n   * Specify custom labels for each button (cancel, back or next)\n   */\n  @Input() labels?: { cancel?: string; back?: string; next?: string };\n  /**\n   * Optional\n   * Indicates if a request is pending and sets the next button\n   * to disabled when true\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * EventEmitter which emits when cancel button is clicked\n   */\n  @Output() onCancel = new EventEmitter();\n  /**\n   * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when next button is clicked.\n   */\n  @Output() onNext = new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>();\n\n  /**\n   * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when back button is clicked.\n   */\n  @Output() onBack = new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>();\n\n  /**\n   * Indicator which button should be shown.\n   * Based on the cdk-steps within the c8y-stepper\n   * next and back buttons are rendered.\n   */\n  showBtns = {\n    cancel: false,\n    back: false,\n    next: false\n  };\n\n  /**\n   * Disabled state of a button\n   */\n  disabled: boolean = false;\n\n  private statusChangeSubscription: Subscription;\n\n  constructor(@Host() private stepper: C8yStepper, @Host() private step: CdkStep) {}\n\n  ngAfterContentInit() {\n    this.showBtns.cancel = this.onCancel.observers.length > 0;\n\n    if (this.stepper && this.stepper.steps && this.step) {\n      this.showBtns.back = this.stepper.steps.first !== this.step;\n      this.showBtns.next = this.stepper.steps.last !== this.step;\n    }\n\n    if (this.step && this.step.stepControl) {\n      this.disabled = this.step.stepControl.invalid;\n\n      this.statusChangeSubscription = this.step.stepControl.statusChanges.subscribe(status => {\n        this.disabled = this.step.stepControl.invalid;\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    /**\n     * Disable save/next button while the status is pending\n     * This will prevent multiple clicks and therefore multiple requests\n     */\n    if (changes && changes.pending) {\n      this.disabled = changes.pending.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.statusChangeSubscription && !this.statusChangeSubscription.closed) {\n      this.statusChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Gets called when cancel button is clicked.\n   * It will emit immediate.\n   */\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  /**\n   * Gets called when next button is clicked. When onNext EventEmitter has an observer registered\n   * it will emit the following object {stepper: C8yStepper; step: CdkStep}.\n   * Otherwise it will call stepper.next() as default.\n   */\n  next() {\n    if (this.onNext.observers.length > 0) {\n      this.onNext.emit({ stepper: this.stepper, step: this.step });\n    } else {\n      this.stepper.next();\n    }\n  }\n\n  /**\n   * Gets called when back button is clicked. When onBack EventEmitter has an observer registered\n   * it will emit the following object {stepper: C8yStepper; step: CdkStep}.\n   * Otherwise it will call stepper.previous() as default.\n   */\n  back() {\n    if (this.onBack.observers.length > 0) {\n      this.onBack.emit({ stepper: this.stepper, step: this.step });\n    } else {\n      this.stepper.previous();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CdkStepperModule, CdkStep, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { C8yStepper } from './stepper.component';\nimport { CommonModule } from '../common/common.module';\nimport { C8yStepperIcon } from './stepper-icon.directive';\nimport { C8yStepperProgress } from './stepper-progress.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { C8yStepperButtons } from './stepper-buttons.component';\n\n/**\n * The angular module definition for c8y-stepper (Wizard).\n * @exports C8yStepper\n * @exports C8yStepperIcon\n * @exports C8yStepperButtons\n * @exports CdkStep\n */\n@NgModule({\n  imports: [CommonModule, CdkStepperModule, TooltipModule],\n  declarations: [C8yStepper, C8yStepperIcon, C8yStepperProgress, C8yStepperButtons],\n  exports: [C8yStepper, CdkStep, C8yStepperIcon, C8yStepperButtons],\n  providers: [\n    {\n      /**\n       * This emables additional states, like: edit, done and error\n       * These states are used to display custom icons, if needed.\n       * Any change in here will most probably result in not showing custom icons anymore\n       */\n      provide: STEPPER_GLOBAL_OPTIONS,\n      useValue: { displayDefaultIndicatorType: false }\n    }\n  ]\n})\nexport class StepperModule {}\n","import { NgModule } from '@angular/core';\nimport { ActionBarModule } from './action-bar/action-bar.module';\nimport { ActionModule } from './action/action.module';\nimport { AlertModule } from './alert/alert.module';\nimport { BootstrapModule } from './bootstrap/bootstrap.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { CommonModule } from './common/common.module';\nimport { DataGridModule } from './data-grid/data-grid.module';\nimport { DeviceGridModule } from './device-grid/device-grid.module';\nimport { DropAreaModule } from './drop-area/drop-area.module';\nimport { HeaderModule } from './header/header.module';\nimport { LoginModule } from './login/login.module';\nimport { ModalModule } from './modal/modal.module';\nimport { NavigatorModule } from './navigator/navigator.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { SearchModule } from './search/search.module';\nimport { SelectModule } from './select/select.module';\nimport { TabsModule } from './tabs/tabs.module';\nimport { UserModule } from './user/user.module';\nimport { FormsModule as c8yFormsModule } from './forms/forms.module';\nimport { DeviceStatusModule } from './device-status/device-status.module';\nimport { DocsModule } from './docs/docs.module';\nimport { DynamicComponentModule } from './dynamic-component/dynamic-component.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { StepperModule as c8yStepperModule } from './stepper/stepper.module';\nimport { ListGroupModule } from './list-group/list-group.module';\n\ntry {\n  // Levarage webpack to load ngx-bootstrap style\n  // it's here and not in @c8y/styles because it's not a dependency of styles\n  // @ts-ignore\n  // tslint:disable-next-line:no-var-requires\n  require('ngx-bootstrap/datepicker/bs-datepicker.css');\n} catch (e) {\n  // empty block\n}\n\n@NgModule({\n  exports: [\n    ActionBarModule,\n    ActionModule,\n    AlertModule,\n    BootstrapModule,\n    BreadcrumbModule,\n    CommonModule,\n    DataGridModule,\n    DeviceGridModule,\n    DropAreaModule,\n    HeaderModule,\n    LoginModule,\n    ModalModule,\n    NavigatorModule,\n    AuthenticationModule,\n    SearchModule,\n    SelectModule,\n    TabsModule,\n    UserModule,\n    c8yFormsModule,\n    DeviceStatusModule,\n    DocsModule,\n    c8yStepperModule,\n    DynamicComponentModule,\n    DashboardModule,\n    ListGroupModule\n  ]\n})\nexport class CoreModule {\n  static forRoot() {\n    return {\n      ngModule: CoreModule,\n      providers: [...CommonModule.providers(), ...LoginModule.providers()]\n    };\n  }\n}\n","import { Route as ngRoute } from '@angular/router';\nimport { ExtensionFactory } from '../common/extension-hooks';\nimport { Tab } from '../tabs/tab.model';\n\nexport enum ViewContext {\n  Device = 'device/:id',\n  Group = 'group/:id',\n  User = 'users/:id',\n  Application = 'applications/:id',\n  SubscribedApplications = 'subscribedApplications/:id',\n  Tenant = 'tenants/:id'\n}\n\nexport type Route = Partial<ngRoute> & {\n  path: string;\n  label?: string;\n  icon?: string;\n  context?: ViewContext;\n  priority?: number;\n\n  /**\n   * Allow to emit multiple tabs on one context route.\n   */\n  tabs?: Tab[];\n};\n\nexport type RouteFactory = ExtensionFactory<Route>;\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { fromFactories } from '../common/extension-hooks';\nimport { RouteFactory, Route } from './router.models';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ONCE_ROUTE = new InjectionToken('RouteFactory');\n\n/**\n * A service which defines routes\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterService {\n  constructor(\n    @Optional() @Inject(HOOK_ONCE_ROUTE) factories: RouteFactory[],\n    private router: Router\n  ) {\n    fromFactories(factories).subscribe((routes: Route[]) => {\n      this.addRoute(routes);\n    });\n  }\n\n  /**\n   * Add a new route to the router configuration or a context.\n   * @param route The route to add\n   */\n  addRoute(route: Route | Route[]) {\n    this.addRoutes(Array.isArray(route) ? route : [route]);\n  }\n\n  private addRoutes(routes) {\n    const emptyRoute = this.router.config.find(r => r.path === '**');\n    this.router.resetConfig(\n      [\n        ...this.router.config.filter(r => r.path !== '**'),\n        ...routes\n          .map((r: Route) => this.convertRoute(this.router.config, r)),\n        emptyRoute\n      ].filter(Boolean)\n    );\n  }\n\n  private convertRoute(initialConfig, route: Route) {\n    if (route.context) {\n      initialConfig.forEach((r: Route) => {\n        if (r.data && r.data.context === route.context) {\n          r.children = [route, ...(r.children || [])];\n        }\n      });\n      return;\n    }\n    return route;\n  }\n}\n","import { Injector, Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { from, isObservable, of, iif } from 'rxjs';\nimport { every, filter, map, mergeMap, toArray, tap, switchMap } from 'rxjs/operators';\nimport { Tab } from '../tabs/tab.model';\nimport { Route } from './router.models';\n\n@Injectable()\nexport class RouterTabsResolver {\n  constructor(private injector: Injector, private router: Router) {}\n\n  get routerStateSnapshot() {\n    return this.router.routerState.snapshot;\n  }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return from(route.routeConfig.children || []).pipe(\n      mergeMap((child: Route) =>\n        from(this.getGuards(child)).pipe(\n          map((guard: CanActivate) => guard.canActivate(route, this.routerStateSnapshot)),\n          mergeMap((result: any) => {\n            if (isObservable(result)) {\n              return result;\n            }\n            if (result && typeof result.then === 'function') {\n              return from(result);\n            }\n            return of(result);\n          }),\n          tap(result => {\n            if (Array.isArray(result)) {\n              child.tabs = result;\n            }\n          }),\n          every(result => !!result),\n          filter(result => result),\n          mergeMap(() => Array.isArray(child.tabs) ? from(child.tabs) : of(child as Tab)),\n          map((result) =>  result.label\n              ? ({\n                  label: result.label,\n                  icon: result.icon,\n                  path: `${route.url.join('/')}/${result.path}`,\n                  priority: result.priority\n                } as Tab)\n              : undefined\n          )\n        )\n      ),\n      filter(tabs => !!tabs),\n      toArray()\n    );\n  }\n\n  private getGuards(child: Route) {\n    const guards = (child.canActivate || []).map(guard => {\n      return this.injector.get(guard);\n    });\n    if (child.data && child.data.showIf) {\n      guards.push({ canActivate: child.data.showIf });\n    }\n    return guards;\n  }\n}\n","import {\n  InventoryService,\n  UserService,\n  ApplicationService,\n  TenantService,\n} from '@c8y/client';\nimport { ViewContext } from './router.models';\n\nexport class ViewContextServices {\n  static services = new Map<ViewContext, any>([\n    [ViewContext.Device, InventoryService],\n    [ViewContext.Group, InventoryService],\n    [ViewContext.User, UserService],\n    [ViewContext.Application, ApplicationService],\n    [ViewContext.SubscribedApplications, ApplicationService],\n    [ViewContext.Tenant, TenantService],\n  ]);\n\n  static contextToService(context: ViewContext) {\n    return ViewContextServices.services.get(context);\n  }\n}\n","import { Component, Injector } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, PRIMARY_OUTLET, Router, UrlSegmentGroup, UrlTree } from '@angular/router';\nimport { ApiService, ApiCall } from '@c8y/ngx-components/api';\nimport { NEVER, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, map, merge, switchMap } from 'rxjs/operators';\nimport { Tab } from '../tabs/tab.model';\nimport { TabsService } from '../tabs/tabs.service';\nimport { RouterTabsResolver } from './router-tabs.resolver';\nimport { ViewContextServices } from './view-context.service';\n\n@Component({\n  selector: 'c8y-context-route',\n  templateUrl: './context-route.component.html'\n})\nexport class ContextRouteComponent {\n  private dataSubscription: Subscription;\n  private routerSubscription: Subscription;\n  private lastAddedTabs = [];\n  private refreshTrigger = new Subject();\n\n  constructor(\n    private tabsResolver: RouterTabsResolver,\n    private tabsService: TabsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiService: ApiService,\n    private injector: Injector\n  ) {}\n\n  ngOnInit(): void {\n    this.routerSubscription = this.router.events\n      .pipe(filter(e => e instanceof NavigationEnd))\n      .subscribe(() => this.redirectToFirstTab());\n    const refreshObservable = this.refreshTrigger.pipe(\n      merge(this.updatedContext()),\n      switchMap(() => this.tabsResolver.resolve(this.route.snapshot))\n    );\n    this.dataSubscription = this.route.data.pipe(\n      map(({ tabs }) => tabs),\n      merge(refreshObservable)\n    ).subscribe((tabs) => this.updateTabs(tabs));\n  }\n\n  ngOnDestroy(): void {\n    this.dataSubscription.unsubscribe();\n    this.routerSubscription.unsubscribe();\n    this.lastAddedTabs.forEach(t => this.tabsService.remove(t));\n  }\n\n  refreshTabs() {\n    this.refreshTrigger.next();\n  }\n\n  updatedContext(): Observable<ApiCall> {\n    const { data } = this.route.snapshot;\n    const serviceInstance = ViewContextServices.contextToService(data.context);\n    if (serviceInstance) {\n      const service = this.injector.get(serviceInstance);\n      const contextRegex = new RegExp(service.getDetailUrl(data.contextData), 'i');\n      const childrenRegex = new RegExp(`${service.getDetailUrl(data.contextData)}/child`, 'i');\n      const filterResponse = ({ url, method }) => {\n        const contextChanged = contextRegex.test(url) && method === 'PUT';\n        const childrenAffected = childrenRegex.test(url) && ['POST', 'DELETE'].includes(method);\n        return contextChanged || childrenAffected;\n      };\n      return this.apiService.hookResponse(filterResponse);\n    }\n    return NEVER;\n  }\n\n  private updateTabs(tabs = []) {\n    this.lastAddedTabs.forEach(t => this.tabsService.remove(t));\n    this.lastAddedTabs = tabs;\n    tabs.forEach(t => this.tabsService.add(t));\n    this.redirectToFirstTab();\n  }\n\n  private redirectToFirstTab() {\n    if (this.needsRedirect()) {\n      this.tabsService.firstTab$.subscribe((tab: Tab) => {\n        if (tab) {\n          this.router.navigateByUrl(tab.path, { replaceUrl: true });\n        }\n      });\n    }\n  }\n\n  private needsRedirect() {\n    const tree: UrlTree = this.router.parseUrl(this.router.url);\n    const groups: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n    const isContextRoute = groups.segments.length === 2;\n    return isContextRoute;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { from, of } from 'rxjs';\nimport { catchError, map, shareReplay, tap } from 'rxjs/operators';\nimport { ViewContextServices } from './view-context.service';\n\n@Injectable()\nexport class ContextRouteGuard implements CanActivate {\n  private caches = new Map();\n  constructor(\n    private injector: Injector\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const id = route.paramMap.get('id');\n    const service = this.service(route);\n    this.clearDetailCached(service, id);\n    return this.detailCached(service, id).pipe(\n      tap((contextData) => route.data = { ...route.data, contextData }),\n      map(() => true),\n      catchError((ex) => of(false))\n    );\n  }\n\n  private service(route) {\n    const serviceInstance = ViewContextServices.contextToService(route.data.context);\n    return this.injector.get(serviceInstance);\n  }\n\n  private detailCached(service, id) {\n    const cache = this.getCache(service);\n    let cached = cache[id];\n    if (!cached) {\n      cached = from(service.detail(id)).pipe(\n        map(({ data }) => data),\n        shareReplay(1)\n      );\n      cache[id] = cached;\n    }\n    return cached;\n  }\n\n  private clearDetailCached(service, id) {\n    const cache: Map<any, any> = this.getCache(service);\n    delete cache[id];\n  }\n\n  private getCache(service) {\n    let cache = this.caches.get(service);\n    if (!cache) {\n      cache = {};\n      this.caches.set(service, cache);\n    }\n    return cache;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({selector: 'empty', template: ''})\nexport class EmptyComponent {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule as NgRouterModule } from '@angular/router';\nimport { RouterService } from './router.service';\nimport { ContextRouteComponent } from './context-route.component';\nimport { HeaderModule } from '../header/header.module';\nimport { CommonModule } from '../common/common.module';\nimport { ContextRouteGuard } from './context-route.guard';\nimport { ViewContext, Route } from './router.models';\nimport { RouterTabsResolver } from './router-tabs.resolver';\nimport { EmptyComponent } from './empty.component';\n\nexport const routes: Route[] = [{\n  path: 'users/new',\n  component: EmptyComponent\n},\n{\n  path: 'tenants/new',\n  component: EmptyComponent\n}];\n// tslint:disable-next-line: forin\nfor (const key in ViewContext) {\n  const context = ViewContext[key];\n  routes.push({\n    path: context,\n    component: ContextRouteComponent,\n    canActivate: [ ContextRouteGuard ],\n    data: { context, contextData: {} },\n    resolve: {\n      tabs: RouterTabsResolver,\n    }\n  });\n}\n\n@NgModule({\n  declarations: [ ContextRouteComponent, EmptyComponent],\n  imports: [\n    NgRouterModule.forRoot(routes),\n    HeaderModule,\n    CommonModule\n  ],\n  entryComponents: [ContextRouteComponent, EmptyComponent]\n})\nexport class RouterModule {\n  static providers() {\n    return [\n      ContextRouteGuard,\n      RouterTabsResolver,\n      RouterService\n    ];\n  }\n\n  static forRoot() {\n    return {\n      ngModule: RouterModule,\n      providers: RouterModule.providers()\n    };\n  }\n\n  constructor(routerService: RouterService) {\n    // Declared but never used is intended: to always have a instance of RouterService.\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'c8y-quick-link',\r\n  templateUrl: './quick-link.component.html'\r\n})\r\nexport class QuickLinkComponent {\r\n  @Input() icon;\r\n  @Input() label;\r\n}\r\n","import { CoreModule } from '../core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { QuickLinkComponent } from './quick-link.component';\r\n\r\n@NgModule({\r\n  declarations: [QuickLinkComponent],\r\n  imports: [CoreModule],\r\n  exports: [QuickLinkComponent],\r\n  providers: []\r\n})\r\nexport class QuickLinkModule {}\r\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { gettext } from '../../i18n/gettext';\n\nexport class CustomDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.name = 'custom';\n    this.header = gettext('Custom');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          exists: {\n            type: 'boolean',\n            default: false,\n            title: gettext('Only rows where value is defined')\n          },\n          equals: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'exists'\n        },\n        {\n          key: 'equals',\n          title: gettext('Only rows where value equals to:'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'equals[]',\n              notitle: true,\n              placeholder: gettext('e.g. value, you can use an asterisk (*) as wildcard character')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.exists) {\n          filter.__has = self.path;\n        }\n        if (model.equals) {\n          filter[self.path] = { __in: model.equals };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n  }\n\n  get sortingConfig() {\n    return {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n"]}