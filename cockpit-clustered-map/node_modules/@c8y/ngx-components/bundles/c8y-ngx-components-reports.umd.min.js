!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@c8y/ngx-components"),require("lodash-es"),require("@c8y/client"),require("@ngx-translate/core"),require("@angular/common"),require("ngx-bootstrap/modal"),require("lodash"),require("ngx-bootstrap/dropdown"),require("ngx-bootstrap/tooltip"),require("angular"),require("@c8y/ng1-modules/core/bootstrap"),require("@angular/upgrade/static")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/reports",["exports","@angular/core","@c8y/ngx-components","lodash-es","@c8y/client","@ngx-translate/core","@angular/common","ngx-bootstrap/modal","lodash","ngx-bootstrap/dropdown","ngx-bootstrap/tooltip","angular","@c8y/ng1-modules/core/bootstrap","@angular/upgrade/static"],n):n(((e=e||self).c8y=e.c8y||{},e.c8y["ngx-components"]=e.c8y["ngx-components"]||{},e.c8y["ngx-components"].reports={}),e.ng.core,e.c8y["ngx-components"],e.lodashEs,e.client,e.core$1,e.ng.common,e.modal,e.lodash,e.dropdown,e.tooltip,e.angular,e.bootstrap,e.ng.upgrade.static)}(this,(function(e,n,t,a,o,s,r,i,l,c,u,d,h,p){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function m(e,n,t,a){var o,s=arguments.length,r=s<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,n,t,a);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(r=(s<3?o(r):s>3?o(n,t,r):o(n,t))||r);return s>3&&r&&Object.defineProperty(n,t,r),r}function v(e,n,t,a){return new(t||(t=Promise))((function(o,s){function r(e){try{l(a.next(e))}catch(e){s(e)}}function i(e){try{l(a.throw(e))}catch(e){s(e)}}function l(e){e.done?o(e.value):new t((function(n){n(e.value)})).then(r,i)}l((a=a.apply(e,n||[])).next())}))}function g(e,n){var t,a,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(t)throw new TypeError("Generator is already executing.");for(;r;)try{if(t=1,a&&(o=2&s[0]?a.return:s[0]?a.throw||((o=a.return)&&o.call(a),0):a.next)&&!(o=o.call(a,s[1])).done)return o;switch(a=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,a=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(o=(o=r.trys).length>0&&o[o.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){r.label=s[1];break}if(6===s[0]&&r.label<o[1]){r.label=o[1],o=s;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(s);break}o[2]&&r.ops.pop(),r.trys.pop();continue}s=n.call(e,r)}catch(e){s=[6,e],a=0}finally{t=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}var f,y,b=function(){function e(e,n,a){this.alertService=e,this.inventoryService=n,this.client=a,this.ERROR_MESSAGES={pattern_multiEmail:t.gettext("Invalid email addresses."),pattern_singleEmail:t.gettext("Invalid email address.")},this.microserviceUrl="/service/reporting/schedule",this.headers={"Content-Type":"application/json"}}return e.prototype.getExport=function(e){return v(this,void 0,void 0,(function(){var n,t,a,o;return g(this,(function(s){switch(s.label){case 0:return[4,this.inventoryService.detail(e)];case 1:return t=s.sent(),a=t.data,200!==(o=t.res).status?this.alertService.addServerFailure({data:a,res:o}):n=a||{},[2,n]}}))}))},e.prototype.getScheduleList=function(e){return v(this,void 0,void 0,(function(){var n;return g(this,(function(t){switch(t.label){case 0:return[4,this.getExport(e)];case 1:return n=t.sent(),[2,this.extractScheduleListFromExport(n)]}}))}))},e.prototype.extractScheduleListFromExport=function(e){var n;return e&&(n=e.c8y_ScheduleConfiguration?e.c8y_ScheduleConfiguration:[]),a.orderBy(n,["timestamp"],["desc"])},e.prototype.addSchedule=function(e,n){return v(this,void 0,void 0,(function(){return g(this,(function(t){switch(t.label){case 0:return[4,this.updateSchedules(n,[],[e])];case 1:return[2,t.sent()]}}))}))},e.prototype.updateSchedule=function(e,n,t){return v(this,void 0,void 0,(function(){return g(this,(function(a){switch(a.label){case 0:return[4,this.updateSchedules(t,[e],[n])];case 1:return[2,a.sent()]}}))}))},e.prototype.updateSchedules=function(e,n,t){return void 0===n&&(n=[]),void 0===t&&(t=[]),v(this,void 0,void 0,(function(){var o,s,r,i,l,c;return g(this,(function(u){switch(u.label){case 0:return o=!1,[4,this.getExport(e)];case 1:return s=u.sent(),r=this.extractScheduleListFromExport(s),a.remove(r,(function(e){return a.some(n,(function(n){return a.isEqual(e,n)}))})),r.push.apply(r,t),s.c8y_ScheduleConfiguration=r,[4,this.inventoryService.update(s)];case 2:return i=u.sent(),l=i.data,200!==(c=i.res).status?[3,4]:[4,this.reschedule(e)];case 3:return o=u.sent(),[3,5];case 4:this.alertService.addServerFailure({data:l,res:c}),u.label=5;case 5:return[2,o]}}))}))},e.prototype.reschedule=function(e){return v(this,void 0,void 0,(function(){var n;return g(this,(function(t){switch(t.label){case 0:return n={method:"PUT",headers:this.headers},[4,this.client.fetch(this.microserviceUrl+"/"+e,n)];case 1:return[2,200===t.sent().status]}}))}))},e.prototype.deleteSchedule=function(e,n){return v(this,void 0,void 0,(function(){return g(this,(function(t){switch(t.label){case 0:return[4,this.updateSchedules(n,[e],[])];case 1:return[2,t.sent()]}}))}))},e.ctorParameters=function(){return[{type:t.AlertService},{type:o.InventoryService},{type:o.FetchClient}]},e=m([n.Injectable()],e)}();!function(e){e.CREATE="create",e.EDIT="edit",e.DUPLICATE="duplicate"}(f||(f={})),function(e){e[e.Initial=1]="Initial",e[e.Hour=2]="Hour",e[e.Day=3]="Day",e[e.Week=4]="Week",e[e.Month=5]="Month",e[e.Year=6]="Year"}(y||(y={}));var S=function(){function e(e){this.translateService=e,this.daysOfWeekPosix=[],this.daysOfMonth=[{value:"1",label:"1."},{value:"2",label:"2."},{value:"3",label:"3."},{value:"4",label:"4."},{value:"5",label:"5."},{value:"6",label:"6."},{value:"7",label:"7."},{value:"8",label:"8."},{value:"9",label:"9."},{value:"10",label:"10."},{value:"11",label:"11."},{value:"12",label:"12."},{value:"13",label:"13."},{value:"14",label:"14."},{value:"15",label:"15."},{value:"16",label:"16."},{value:"17",label:"17."},{value:"18",label:"18."},{value:"19",label:"19."},{value:"20",label:"20."},{value:"21",label:"21."},{value:"22",label:"22."},{value:"23",label:"23."},{value:"24",label:"24."},{value:"25",label:"25."},{value:"26",label:"26."},{value:"27",label:"27."},{value:"28",label:"28."},{value:"29",label:"29."},{value:"30",label:"30."},{value:"31",label:"31."}],this.months=[],this.hours=[],this.minutes=[],this.intervals=[{value:2,label:t.gettext("Hour")},{value:3,label:t.gettext("Day")},{value:4,label:t.gettext("Week")},{value:5,label:t.gettext("Month")},{value:6,label:t.gettext("Year")}];for(var n=0;n<24;n++)this.hours.push({value:n.toString(),label:""+n});for(n=0;n<60;n+=5)this.minutes.push({value:n.toString(),label:""+n});for(n=0;n<7;n++)this.daysOfWeekPosix.push({value:n.toString(),label:this.getWeekDayName({weekday:n})});for(n=1;n<13;n++)this.months.push({value:n.toString(),label:this.getMonthName({month:n})})}return e.prototype.generateCron=function(e){var n="";return n=e.minute?""+e.minute:"*",n+=e.hour?" "+e.hour:" *",n+=e.day?" "+e.day:" *",n+=e.month?" "+e.month:" *",n+=e.weekday?" "+e.weekday:" *"},e.prototype.generateCronConfig=function(e){var n=e.split(/\s+/);return{minute:n[0],hour:n[1],day:n[2],month:n[3],weekday:n[4]}},e.prototype.getBase=function(e){var n=y.Initial;return"*"!==e.minute&&"*"===e.hour&&"*"===e.day&&"*"===e.month&&"*"===e.weekday?n=y.Hour:"*"!==e.minute&&"*"!==e.hour&&"*"===e.day&&"*"===e.month&&"*"===e.weekday?n=y.Day:"*"!==e.minute&&"*"!==e.hour&&"*"===e.day&&"*"===e.month&&"*"!==e.weekday?n=y.Week:"*"!==e.minute&&"*"!==e.hour&&"*"!==e.day&&"*"===e.month&&"*"===e.weekday?n=y.Month:"*"!==e.minute&&"*"!==e.hour&&"*"!==e.day&&"*"!==e.month&&"*"===e.weekday&&(n=y.Year),n},e.prototype.validateModels=function(e,n){var t;switch(e){case y.Initial:t=!1;break;case y.Hour:t="*"!==n.minute;break;case y.Day:t="*"!==n.minute&&"*"!==n.hour;break;case y.Week:t="*"!==n.minute&&"*"!==n.hour&&"*"!==n.weekday;break;case y.Month:t="*"!==n.minute&&"*"!==n.hour&&"*"!==n.day;break;case y.Year:t="*"!==n.minute&&"*"!==n.hour&&"*"!==n.day&&"*"!==n.month;break;default:t=!1}return t},e.prototype.clearNextModels=function(e,n){e===y.Initial?(n.weekday="*",n.day="*",n.month="*",n.hour="*",n.minute="*"):e===y.Hour?(n.weekday="*",n.day="*",n.month="*",n.hour="*"):e===y.Day?(n.weekday="*",n.day="*",n.month="*"):e===y.Week?(n.day="*",n.month="*"):e===y.Month?(n.weekday="*",n.month="*"):e===y.Year&&(n.weekday="*")},e.prototype.getWeekDayName=function(e){var n=new Date(0),t=n.getDate()+3;return n.setDate(t+parseInt(e.weekday,10)),r.formatDate(n,"EEEE",this.translateService.currentLang)},e.prototype.getMonthDayName=function(e){var n="";return this.daysOfMonth.forEach((function(t){t.value===e.day&&(n=t.label)})),n},e.prototype.getMonthName=function(e){var n=new Date(0);return n.setMonth(parseInt(e.month,10)-1),r.formatDate(n,"LLLL",this.translateService.currentLang)},e.ctorParameters=function(){return[{type:s.TranslateService}]},e=m([n.Injectable()],e)}(),x=function(){function e(e,a,o){this.modalRef=e,this.reportsService=a,this.cronService=o,this.emitter=new n.EventEmitter,this.ActionType=f,this.multiEmailPattern=/^([a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\.[a-z0-9-]+)*,?)*$/i,this.singleEmailPattern=/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/,this.cronExpression="* * * * *",this.validCron=!1,this.emitterPayload={success:!1,message:""},this.placeholdersInfo=t.gettext("Available placeholders: {tenant-domain}, {host}, {binaryId}. Whole link to downloadable file is: {tenant-domain}/inventory/binaries/{binaryId}."),this.savingStatus={inProgress:!1,done:!1,error:!1}}return e.prototype.ngOnInit=function(){this.oldSchedule=l.cloneDeep(this.schedule),this.populateEmailFieldsFromSchedule(this.schedule),this.cronExpression=this.cronService.generateCron(this.schedule.cronConfig),this.validCron=this.cronService.validateModels(this.cronService.getBase(this.schedule.cronConfig),this.schedule.cronConfig)},e.prototype.populateEmailFieldsFromSchedule=function(e){e.emailConfig.to&&e.emailConfig.to.length&&(this.emailTo=e.emailConfig.to.toString()),e.emailConfig.cc&&e.emailConfig.cc.length&&(this.emailCc=e.emailConfig.cc.toString()),e.emailConfig.bcc&&e.emailConfig.bcc.length&&(this.emailBcc=e.emailConfig.bcc.toString()),e.emailConfig.replyTo&&(this.emailReplyTo=e.emailConfig.replyTo),e.emailConfig.subject&&(this.emailSubject=e.emailConfig.subject),e.emailConfig.text&&(this.emailText=e.emailConfig.text)},e.prototype.save=function(){return v(this,void 0,void 0,(function(){var e,n,t;return g(this,(function(a){switch(a.label){case 0:return this.populateScheduleFromCronExpression(),this.populateScheduleFromEmailFields(),this.savingStatus.inProgress=!0,e=!1,this.actionType!==f.EDIT?[3,2]:[4,this.reportsService.updateSchedule(this.oldSchedule,this.schedule,this.exportId)];case 1:return e=a.sent(),[3,4];case 2:return n=new Date,t=n.getTime(),this.schedule.timestamp=t,[4,this.reportsService.addSchedule(this.schedule,this.exportId)];case 3:e=a.sent(),a.label=4;case 4:return e&&(this.modalRef.hide(),this.emitterPayload.success=!0,this.emitter.emit(this.emitterPayload)),this.savingStatus.inProgress=!1,[2]}}))}))},e.prototype.cancel=function(){this.modalRef.hide()},e.prototype.getCron=function(e){this.validCron=e.valid,e.valid&&(this.cronExpression=e.cron)},e.prototype.populateScheduleFromCronExpression=function(){this.schedule.cronConfig=this.cronService.generateCronConfig(this.cronExpression)},e.prototype.convertStringOfEmailsToArray=function(e){var n=[];e&&e.split(",").forEach((function(e){e&&n.push(e)}));return n},e.prototype.populateScheduleFromEmailFields=function(){this.schedule.emailConfig.to=this.emailTo?this.convertStringOfEmailsToArray(this.emailTo):null,this.schedule.emailConfig.cc=this.emailCc?this.convertStringOfEmailsToArray(this.emailCc):null,this.schedule.emailConfig.bcc=this.emailBcc?this.convertStringOfEmailsToArray(this.emailBcc):null,this.schedule.emailConfig.replyTo=this.emailReplyTo,this.schedule.emailConfig.subject=this.emailSubject,this.schedule.emailConfig.text=this.emailText},e.ctorParameters=function(){return[{type:i.BsModalRef},{type:b},{type:S}]},m([n.Output()],e.prototype,"emitter",void 0),e=m([n.Component({selector:"schedule-modal",template:'<div class="modal-header text-center bg-primary">\n  <header class="text-white">\n    <div style="font-size: 62px;">\n      <span c8yIcon="c8y-report"></span>\n    </div>\n    <h4 class="text-uppercase" style="margin:0; letter-spacing: 0.15em;">\n      <span *ngIf="actionType === ActionType.CREATE" translate>New export schedule</span>\n      <span *ngIf="actionType === ActionType.EDIT" translate>Edit export schedule</span>\n      <span *ngIf="actionType === ActionType.DUPLICATE" translate>Duplicate export schedule</span>\n    </h4>\n  </header>\n</div>\n\n<div class="modal-body">\n  <p class="lead text-center p-t-24" style="margin-bottom: 0;" translate>\n    On schedule send export via email\n  </p>\n</div>\n<div class="modal-inner-scroll smart-rule-control">\n  <form #scheduleForm="ngForm" class="edit-smart-rule-details">\n    <div class="list-group">\n      <div class="list-group-item bg-gray-white">\n        <div class="smart-list-icon-label">\n          <span class="dot bg-primary-light">1</span\n          ><strong class="p-l-4" translate>Frequency</strong>\n        </div>\n        <div class="p-t-4">\n          <div class="form-group">\n            <cron [cronIn]="cronExpression" (emitter)="getCron($event)" name="cron"></cron>\n          </div>\n        </div>\n      </div>\n      <div class="list-group-item">\n        <div class="smart-list-icon-label">\n          <span class="dot bg-primary-light">2</span>&nbsp;<strong translate>Send email</strong>\n        </div>\n        <div class="form-horizontal p-t-16">\n          <div class="form-group">\n            <div class="text-muted col-sm-12 p-b-4" style="display: flex; align-items: baseline;">\n              <i [c8yIcon]="\'info-circle\'" class="text-info m-r-8"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class="control-label col-sm-3" translate>Send to</label>\n            <div class="col-sm-9">\n              <c8y-form-group>\n                <input\n                  type="text"\n                  class="form-control"\n                  name="to"\n                  [(ngModel)]="emailTo"\n                  placeholder="{{ \'e.g. joe.doe@example.com`LOCALIZE`\' | translate }}"\n                  required\n                  [pattern]="multiEmailPattern"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name="pattern"\n                    [text]="reportsService.ERROR_MESSAGES.pattern_multiEmail"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <div class="text-muted col-sm-12 p-b-4" style="display: flex; align-items: baseline;">\n              <i [c8yIcon]="\'info-circle\'" class="text-info m-r-8"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class="control-label col-sm-3" translate>CC</label>\n            <div class="col-sm-9">\n              <c8y-form-group>\n                <input\n                  type="text"\n                  class="form-control span"\n                  name="cc"\n                  placeholder="{{ \'e.g. joe.doe@example.com`LOCALIZE`\' | translate }}"\n                  [(ngModel)]="emailCc"\n                  [pattern]="multiEmailPattern"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name="pattern"\n                    [text]="reportsService.ERROR_MESSAGES.pattern_multiEmail"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <div class="text-muted col-sm-12 p-b-4" style="display: flex; align-items: baseline;">\n              <i [c8yIcon]="\'info-circle\'" class="text-info m-r-8"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class="control-label col-sm-3" translate>BCC</label>\n            <div class="col-sm-9">\n              <c8y-form-group>\n                <input\n                  type="text"\n                  class="form-control span"\n                  name="bcc"\n                  placeholder="{{ \'e.g. joe.doe@example.com`LOCALIZE`\' | translate }}"\n                  [(ngModel)]="emailBcc"\n                  [pattern]="multiEmailPattern"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name="pattern"\n                    [text]="reportsService.ERROR_MESSAGES.pattern_multiEmail"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class="control-label col-sm-3" translate>Reply to</label>\n            <div class="col-sm-9">\n              <c8y-form-group>\n                <input\n                  type="text"\n                  class="form-control span"\n                  name="replyTo"\n                  placeholder="{{ \'e.g. joe.doe@example.com`LOCALIZE`\' | translate }}"\n                  [(ngModel)]="emailReplyTo"\n                  [pattern]="singleEmailPattern"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name="pattern"\n                    [text]="reportsService.ERROR_MESSAGES.pattern_singleEmail"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class="control-label col-sm-3" translate>Subject</label>\n            <div class="col-sm-9">\n              <c8y-form-group>\n                <input\n                  type="text"\n                  class="form-control span"\n                  name="subject"\n                  [(ngModel)]="emailSubject"\n                  placeholder="{{ \'e.g. Daily report\' | translate }}"\n                  required\n                />\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <div class="text-muted col-sm-12 p-b-4" style="display: flex; align-items: baseline;">\n              <i [c8yIcon]="\'info-circle\'" class="text-info m-r-8"></i>\n              <em>{{ placeholdersInfo | translate }}</em>\n            </div>\n            <label class="col-sm-3 control-label" translate>Message</label>\n            <div class="col-sm-9">\n              <c8y-form-group>\n                <textarea\n                  class="form-control"\n                  name="text"\n                  [(ngModel)]="emailText"\n                  placeholder="{{ \'Message\' | translate }}"\n                  required\n                ></textarea>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default" (click)="cancel()" title="{{ \'Cancel\' | translate }}" translate>\n    Cancel\n  </button>\n  <button\n    class="btn btn-primary"\n    (click)="save()"\n    [ngClass]="{ \' btn-pending \': savingStatus.inProgress }"\n    [disabled]="!validCron || !scheduleForm.form.valid"\n  >\n    <span *ngIf="!savingStatus.inProgress">\n      <span *ngIf="actionType === ActionType.CREATE" title="{{ \'Create\' | translate }}" translate\n        >Create</span\n      >\n      <span *ngIf="actionType === ActionType.EDIT" title="{{ \'Save\' | translate }}" translate\n        >Save</span\n      >\n      <span\n        *ngIf="actionType === ActionType.DUPLICATE"\n        title="{{ \'Duplicate\' | translate }}"\n        translate\n        >Duplicate</span\n      >\n    </span>\n    <span *ngIf="savingStatus.inProgress" title="{{ \'Saving\' | translate }}…"\n      >{{ \'Saving\' | translate }}…</span\n    >\n  </button>\n</div>\n'})],e)}(),C=function(){function e(e,n,a,o,s){this.reportsService=e,this.bsModalService=n,this.cronService=a,this.translateService=o,this.userService=s,this.scheduleList=[],this.initialSchedule={timestamp:null,emailConfig:{to:[],cc:[],bcc:[],replyTo:"",text:this.translateService.instant(t.gettext("File with exported data can be downloaded from {tenant-domain}/inventory/binaries/{binaryId}.")),subject:""},cronConfig:{minute:"0",hour:"0",day:"1",month:"1",weekday:"?"}},this.listClass="interact-list",this.sortReverse=!1,this.isOpen={},this.isEditMenuOpen=!1,this.currentUserEmail="",this.loadingStatus={inProgress:!1,done:!1,error:!1}}return Object.defineProperty(e.prototype,"exportId",{set:function(e){this._exportId=e},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){return v(this,void 0,void 0,(function(){var e,n;return g(this,(function(a){switch(a.label){case 0:return this.getScheduleList(!0),[4,this.getCurrentUserEmail()];case 1:return e=a.sent(),this.initialSchedule.emailConfig.to=e,n=this,[4,this.reportsService.getExport(this._exportId)];case 2:return n.exp=a.sent(),this.initialSchedule.emailConfig.subject=this.translateService.instant(t.gettext('Export of "{{expName}}"'),{expName:this.exp.name}),[2]}}))}))},e.prototype.getCurrentUserEmail=function(){return v(this,void 0,void 0,(function(){var e;return g(this,(function(n){switch(n.label){case 0:return[4,this.userService.current()];case 1:return[2,(e=n.sent().data)&&e.email?[e.email]:[]]}}))}))},e.prototype.getScheduleList=function(e){return v(this,void 0,void 0,(function(){var n;return g(this,(function(t){switch(t.label){case 0:return e&&(this.loadingStatus.inProgress=!0),n=this,[4,this.reportsService.getScheduleList(this._exportId)];case 1:return n.scheduleList=t.sent(),e&&(this.loadingStatus.inProgress=!1),[2]}}))}))},e.prototype.addSchedule=function(){this.openAddEditModal(this._exportId,this.initialSchedule,f.CREATE)},e.prototype.editSchedule=function(e,n){n.preventDefault(),this.openAddEditModal(this._exportId,e,f.EDIT)},e.prototype.duplicateSchedule=function(e,n){n.preventDefault(),this.openAddEditModal(this._exportId,e,f.DUPLICATE)},e.prototype.openAddEditModal=function(e,n,t){var o=this,s={class:"modal-sm",initialState:{actionType:t,exportId:e,schedule:a.cloneDeep(n)}};this.modalRef=this.bsModalService.show(x,s),this.modalRef.content.emitter.subscribe((function(e){return o.getMessageFromModal(e)}))},e.prototype.getMessageFromModal=function(e){e.success&&this.getScheduleList(!1)},e.prototype.removeSchedule=function(e,n){return v(this,void 0,void 0,(function(){var a,o,s;return g(this,(function(r){switch(r.label){case 0:return n.preventDefault(),a=e.emailConfig.subject,o={status:t.Status.DANGER,title:t.gettext("Delete schedule"),labels:{ok:t.gettext("Delete")},body:this.translateService.instant(t.gettext('You are about to delete the schedule "{{subject}}". Do you want to proceed?'),{subject:a})},s={initialState:o},this.modalRef=this.bsModalService.show(t.ConfirmModalComponent,s),[4,this.modalRef.content.result];case 1:return r.sent()?[4,this.reportsService.deleteSchedule(e,this._exportId)]:[3,3];case 2:r.sent()&&this.getScheduleList(!1),r.label=3;case 3:return[2]}}))}))},e.ctorParameters=function(){return[{type:b},{type:i.BsModalService},{type:S},{type:s.TranslateService},{type:o.UserService}]},m([n.Input()],e.prototype,"exportId",null),e=m([n.Component({selector:"export-schedules",template:'<div>\n  <div *ngIf="loadingStatus.inProgress" class="flex-row">\n    <div style="position: relative; min-height: 40px;min-width: 55px;">\n      <div class="spinner">\n        <div class="rect1"></div>\n        <div class="rect2"></div>\n        <div class="rect3"></div>\n        <div class="rect4"></div>\n        <div class="rect5"></div>\n      </div>\n    </div>\n    <span translate>Retrieving schedules…</span>\n  </div>\n\n  <div *ngIf="!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error">\n    <div class="alert alert-warning" translate>\n      Could not load schedules list.\n    </div>\n  </div>\n\n  <div *ngIf="!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error">\n    <div class="c8y-empty-state text-center" *ngIf="!scheduleList.length">\n      <h1 c8yIcon="c8y-report" class="c8y-icon-duocolor"></h1>\n      <h3 translate>No export schedules defined.</h3>\n    </div>\n\n    <div class="list-group" *ngIf="scheduleList.length">\n      <div\n        class="list-group-item flex-row pointer"\n        *ngFor="let schedule of scheduleList"\n        (click)="editSchedule(schedule, $event)"\n      >\n        <div class="list-item-actions" (click)="$event.stopPropagation()">\n          <div class="settings dropdown" dropdown>\n            <button\n              class="dropdown-toggle c8y-dropdown"\n              dropdownToggle\n              aria-haspopup="true"\n              aria-expanded="false"\n              title="{{ \'Actions\' | translate }}"\n            >\n              <i [c8yIcon]="\'ellipsis-v\'"></i>\n            </button>\n            <ul class="dropdown-menu dropdown-menu-right" *dropdownMenu>\n              <li role="menuitem">\n                <a\n                  href=""\n                  title="{{ \'Edit schedule\' | translate }}"\n                  (click)="editSchedule(schedule, $event)"\n                >\n                  <i [c8yIcon]="\'pencil\'"></i> {{ \'Edit\' | translate }}\n                </a>\n              </li>\n              <li role="menuitem">\n                <a\n                  href=""\n                  title="{{ \'Duplicate schedule\' | translate }}"\n                  (click)="duplicateSchedule(schedule, $event)"\n                >\n                  <i [c8yIcon]="\'copy\'"></i> {{ \'Duplicate\' | translate }}\n                </a>\n              </li>\n              <li role="menuitem">\n                <a\n                  href=""\n                  title="{{ \'Delete schedule\' | translate }}"\n                  (click)="removeSchedule(schedule, $event)"\n                >\n                  <i [c8yIcon]="\'trash\'"></i> {{ \'Delete\' | translate }}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class="list-item-icon">\n          <i c8yIcon="c8y-report" class="c8y-icon-duocolor"></i>\n        </div>\n        <div class="list-item-body flex-row">\n          <div class="col-sm-6">\n            <div class="text-truncate" title="{{ schedule.emailConfig.subject }}">\n              {{ schedule.emailConfig.subject }}\n            </div>\n          </div>\n          <div class="col-sm-6">\n            <div class="flex-row" style="align-items: baseline;">\n              <i c8yIcon="calendar" class="text-muted m-r-4"></i>\n              <small class="smart-rule-information text-muted">\n                <span *ngIf="cronService.getBase(schedule.cronConfig) === 2" translate>\n                  Hourly: {{ schedule.cronConfig.minute | number: \'2.0-0\' }} minute(s) past the\n                  hour.\n                </span>\n                <span *ngIf="cronService.getBase(schedule.cronConfig) === 3" translate>\n                  Daily: at {{ schedule.cronConfig.hour | number: \'2.0-0\' }}:{{\n                    schedule.cronConfig.minute | number: \'2.0-0\'\n                  }}.\n                </span>\n                <span *ngIf="cronService.getBase(schedule.cronConfig) === 4" translate>\n                  Weekly: {{ cronService.getWeekDayName(schedule.cronConfig) }}, at\n                  {{ schedule.cronConfig.hour | number: \'2.0-0\' }}:{{\n                    schedule.cronConfig.minute | number: \'2.0-0\'\n                  }}.\n                </span>\n                <span *ngIf="cronService.getBase(schedule.cronConfig) === 5" translate>\n                  Monthly: {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the month,\n                  at {{ schedule.cronConfig.hour | number: \'2.0-0\' }}:{{\n                    schedule.cronConfig.minute | number: \'2.0-0\'\n                  }}.\n                </span>\n                <span *ngIf="cronService.getBase(schedule.cronConfig) === 6" translate>\n                  Yearly: {{ cronService.getMonthName(schedule.cronConfig) }},\n                  {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the month, at\n                  {{ schedule.cronConfig.hour | number: \'2.0-0\' }}:{{\n                    schedule.cronConfig.minute | number: \'2.0-0\'\n                  }}.\n                </span>\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button\n    type="button"\n    class="btn-add-block m-t-16"\n    title="{{ \'Add schedule\' | translate }}"\n    (click)="addSchedule()"\n  >\n    <i [c8yIcon]="\'plus-square\'"></i> {{ \'Add schedule\' | translate }}\n  </button>\n</div>\n'})],e)}(),E=function(){function e(e){this.cronService=e,this.emitter=new n.EventEmitter,this.emittedCron={valid:!1,cron:""},this.base=y.Initial}return e.prototype.ngOnInit=function(){this.daysOfWeekPosix=this.cronService.daysOfWeekPosix,this.daysOfMonth=this.cronService.daysOfMonth,this.months=this.cronService.months,this.hours=this.cronService.hours,this.minutes=this.cronService.minutes,this.intervals=this.cronService.intervals,this.cronConfig=this.cronService.generateCronConfig(this.cronIn),this.base=this.cronService.getBase(this.cronConfig)},e.prototype.onChangeSelect=function(){this.cronService.clearNextModels(this.base,this.cronConfig),this.emittedCron.valid=this.cronService.validateModels(this.base,this.cronConfig),this.emittedCron.cron=this.cronService.generateCron(this.cronConfig),this.emitter.emit(this.emittedCron)},e.ctorParameters=function(){return[{type:S}]},m([n.Input()],e.prototype,"cronIn",void 0),m([n.Output()],e.prototype,"emitter",void 0),e=m([n.Component({selector:"cron",template:'<div class="cron-wrap form-horizontal">\n  <div class="form-group smart-cron-job-every">\n    <label for="smart-cron-job-every" \n      class="col-sm-3 control-label"\n      translate>\n      Interval\n    </label>\n    <div class="col-sm-9">\n      <div class="c8y-select-wrapper">\n        <select\n          id="smart-cron-job-every"\n          class="cron-select form-control"\n          [(ngModel)]="base"\n          required="true"\n          (change)="onChangeSelect()"\n        >\n          <option *ngIf="base === 1" value="1" translate>Select...</option>\n          <option *ngFor="let baseInterval of intervals" [ngValue]="baseInterval.value">\n            {{ baseInterval.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class="form-group smart-cron-job-on" *ngIf="base == 4">\n    <label for="smart-cron-job-on" class="col-sm-3 control-label" translate>\n      Day\n    </label>\n    <div class="col-sm-9">\n      <div class="c8y-select-wrapper">\n        <select\n          id="smart-cron-job-on"\n          class="cron-select form-control day-value"\n          [(ngModel)]="cronConfig.weekday"\n          (change)="onChangeSelect()"\n        >\n          <option *ngFor="let dayOfWeek of daysOfWeekPosix" [ngValue]="dayOfWeek.value">\n            {{ dayOfWeek.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class="form-group smart-cron-job-of" *ngIf="base == 6">\n    <label for="smart-cron-job-of" class="col-sm-3 control-label" translate>\n      Month\n    </label>\n    <div class="col-sm-9">\n      <div class="c8y-select-wrapper">\n        <select\n          id="smart-cron-job-of"\n          class="cron-select form-control month-value"\n          [(ngModel)]="cronConfig.month"\n          (change)="onChangeSelect()"\n        >\n          <option *ngFor="let month of months" [ngValue]="month.value">\n            {{ month.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class="form-group smart-cron-job-on-the" *ngIf="base >= 5">\n    <label for="smart-cron-job-on-the" class="col-sm-3 control-label" translate>\n      Day\n    </label>\n    <div class="col-sm-9">\n      <div class="c8y-select-wrapper">\n        <select\n          id="smart-cron-job-on-the"\n          class="cron-select form-control day-of-month-value"\n          [(ngModel)]="cronConfig.day"\n          (change)="onChangeSelect()"\n        >\n          <option *ngFor="let dayOfMonth of daysOfMonth" [ngValue]="dayOfMonth.value">\n            {{ dayOfMonth.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n\n  <div class="form-group smart-cron-job-at" *ngIf="base >= 2">\n    <label for="smart-cron-job-at-hour" class="col-sm-3 control-label">\n      <span *ngIf="base >= 3" translate>Time</span>\n      <span *ngIf="base < 3" translate>Minutes</span>\n    </label>\n    <div class="col-sm-9">\n      <div class="form-inline">\n        <div class="c8y-select-wrapper" *ngIf="base >= 3">\n          <select\n            id="smart-cron-job-at-hour"\n            class="cron-select form-control hour-value"\n            [(ngModel)]="cronConfig.hour"\n            (change)="onChangeSelect()"\n          >\n            <option *ngFor="let hour of hours" [ngValue]="hour.value">\n              {{ hour.value | number: \'2.0-0\'  }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n        <span *ngIf="base >= 3"> : </span>\n        <div class="c8y-select-wrapper">\n          <select\n            id="smart-cron-job-at-minute"\n            class="cron-select form-control minute-value"\n            [(ngModel)]="cronConfig.minute"\n            (change)="onChangeSelect()"\n          >\n            <option *ngFor="let minute of minutes" [ngValue]="minute.value">\n              {{ minute.value | number: \'2.0-0\' }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'})],e)}(),I=function(){function e(){}return e=m([n.NgModule({declarations:[C,x,E],imports:[t.CoreModule,t.FormsModule,c.BsDropdownModule,u.TooltipModule],entryComponents:[C,x,E],providers:[b,S],exports:[C,x,E]})],e)}(),w=p.downgradeComponent({component:C}),M="c8y.upgrade.reports",k=(d.module(M,[]).directive("c8yExportSchedules",w),[M]);h.registerNgModule(k),e.ExportSchedulesComponent=C,e.ReportsModule=I,e.ng1Modules=k,e.ɵa=b,e.ɵb=S,e.ɵc=x,e.ɵd=E,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-reports.umd.min.js.map