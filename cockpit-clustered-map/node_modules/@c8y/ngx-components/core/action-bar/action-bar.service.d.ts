import { InjectionToken, Injector } from '@angular/core';
import { Router } from '@angular/router';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { ExtensionPoint } from '../common/extension-hooks';
import { StateService } from '../common/state-service.abstract';
import { ActionBarItem } from './action-bar.model';
/**
 * A hook to use for Multi Provider extension.
 */
export declare const HOOK_ACTION_BAR: InjectionToken<unknown>;
/**
 * A service which defines action-bar items.
 */
export declare class ActionBarService extends StateService implements ExtensionPoint<ActionBarItem> {
    private injector;
    items$: Observable<ActionBarItem[]>;
    readonly refreshTrigger: Subject<unknown>;
    protected state$: BehaviorSubject<Set<ActionBarItem>>;
    constructor(injector: Injector, router: Router);
    /**
     * Returns the current state.
     * @readonly
     * @returns The current set of actions.
     */
    readonly state: Set<ActionBarItem>;
    refresh(): void;
    /**
     * Adds a new item to the action bar in the header and emits a state change.
     * @param item The item to add.
     */
    add(item: ActionBarItem): void;
    /**
     * Removes an action bar item from the header and emits a state change.
     * @param item The item to remove.
     */
    remove(item: ActionBarItem): void;
}
