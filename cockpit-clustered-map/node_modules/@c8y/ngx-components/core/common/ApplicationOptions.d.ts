export declare class ApplicationOptions {
    /** Application name (saved to the server). */
    name: string;
    /** Application context path (saved to the server). */
    contextPath: string;
    /** Application key (saved to the server). */
    key: string;
    /** Set to `true` if the application is hybrid and uses Angular and AngularJS simultaneously. */
    upgrade?: boolean;
    /** Path to the branding entry file. */
    brandingEntry?: string;
    /** Path to tsccnfig.json file if TypeScript is used (default: ./tsconfig.json). */
    tsConfigPath?: string;
    /** Entry module for Angular compiler (only used with lazy loaded routes), e.g. `'app.module.ts#AppModule'`. */
    entryModule?: string;
    /** Path to custom index.html (otherwise default one will be used). */
    indexTemplate?: string;
    /** URL to dynamically fetched options. */
    dynamicOptionsUrl?: string;
    /** URL to favicon. */
    faviconUrl?: string;
    /** URL to *.css file which will replace default branding. */
    brandingUrl?: string;
    /** Object with properties that will be converted to CSS custom variables. */
    brandingCssVars?: {
        [key: string]: string;
    };
    /**
     * Allows for adding or overriding languages available in the application.
     *
     * Its keys are language codes and its values are objects with the following properties:
     *
     * - `name`: English name of the language,
     * - `nativeName`: native name of the language,
     * - `url`: full URL to JSON file with compiled translations;
     *    if not defined, translations will be loaded from `${localePath}/${langCode}.json`.
     *
     * Example:
     * ```json
     * "languages": {
     *   "de": {
     *     "name": "German",
     *     "nativeName": "Deutsch",
     *     "url": "/apps/public/ui-assets/de.json"
     *   }
     * }
     * ```
     */
    languages?: {
        [langCode: string]: {
            name: string;
            nativeName: string;
            url: string;
        };
    };
    /** Path to the folder from which *.po files will be loaded. */
    localePath?: string;
    /** Array of URLs to additional *.css files to be loaded at runtime. */
    extraCssUrls?: string[];
    /** Documentation links settings. */
    docs?: {
        /** Hide default links to documentation. */
        noDefault: boolean;
        /** List of regex strings. Matching default docs URLs will be hidden. */
        excludeDefault: string[];
        /** Additional links to be displayed. */
        links: Array<{
            icon: string;
            label: string;
            url: string;
            type: 'doc' | 'quicklink';
        }>;
    };
    /** Application icon to be displayed in app switcher and header bar. */
    icon?: {
        class?: string;
        url?: string;
    };
    /** Hide application in app switcher (saved to the server). */
    noAppSwitcher?: boolean;
    /** HTML page title. */
    globalTitle?: string;
    /** Hide "powered by" and version info at the bottom of the navigator and in the user menu. */
    hidePowered?: boolean;
    /** URL to support page (set to `false` to hide the link). */
    supportUrl?: boolean | string;
    /**
     * Replacement string for `user` field in audit logs for actions performed by a support user
     * (available placeholders: `{{support_user}}`, `{{supported_user}}`).
     */
    supportUserString?: string;
    /** Enable or disable the right drawer. */
    rightDrawer?: boolean;
    /** Enable or disable breadcrumbs in the header for groups and devices (default: false). */
    breadcrumbs?: boolean;
    /** Collapse navigator on initial load. */
    hideNavigator?: boolean;
    /** Show tabs horizontally or vertically. */
    tabsHorizontal?: boolean;
    /** Additional link to display on login screen. */
    loginExtraLink?: {
        url: string;
        label: string;
    };
    /** Enable or disable storage limitation feature. */
    storageLimitationFeatureEnabled?: boolean;
    /** Name of company handling support requests from app users (displayed in notification message). */
    companyName?: string;
    /** URL template for documentation links (default: `'${docsBaseUrl}${partialUrl}'`). */
    guideHrefTemplate?: string;
    /** Base URL for documentation links. */
    docsBaseUrl?: string;
    /** CSP string to be added to `index.html`. */
    contentSecurityPolicy?: string;
    /** Enables cloud sensor wizard */
    sensorPhone?: boolean;
    /** Legacy list of imported plugins. */
    imports?: string[];
    /** Show or hide a newsletter subscription checkbox in edit user modal. */
    newsletter?: boolean;
    /** Indicates whether the entry point is traversed from legacy cumulocity*.json app manifest. */
    legacy?: boolean;
    /** Path to the root node_modules dir (useful when working in monorepo setup, e.g. yarn workspaces). */
    rootNodeModulesPath?: string;
    /** Cookie Banner configuration */
    cookieBanner?: {
        cookieBannerTitle?: string;
        cookieBannerText?: string;
        policyUrl?: string;
    };
}
