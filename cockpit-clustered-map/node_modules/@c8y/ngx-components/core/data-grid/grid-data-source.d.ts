import { CollectionViewer, DataSource } from '@angular/cdk/collections';
import { Observable } from 'rxjs';
import { DataSourceStats } from './data-grid.model';
export declare class GridDataSource implements DataSource<object> {
    loading$: Observable<boolean>;
    data$: Observable<object[]>;
    stats$: Observable<DataSourceStats>;
    selection$: Observable<any>;
    private loadingSubject;
    private dataSourceSubject;
    private dataStatsSubject;
    private dataSelectionSubject;
    constructor();
    connect(collectionViewer: CollectionViewer): Observable<object[]>;
    disconnect(collectionViewer: CollectionViewer): void;
    loadData({ rows, columns, pagination, searchText, serverSideDataCallback, selectable, selectionPrimaryKey }: {
        rows: any;
        columns: any;
        pagination: any;
        searchText: any;
        serverSideDataCallback: any;
        selectable: any;
        selectionPrimaryKey: any;
    }): void;
    resolveValue(x: any, path: any): any;
    resolveFunction(x: any): any;
    normalizeNil(x: any): any;
    private doClientSideFiltering;
    private doClientSideSearch;
    private doClientSideSorting;
    private doClientSidePagination;
    private createRegexSearch;
    private toObservable;
}
