import { IManagedObject } from '@c8y/client';
export declare enum RepositoryType {
    FIRMWARE = "c8y_Firmware",
    SOFTWARE = "c8y_Software",
    CONFIGURATION = "c8y_ConfigurationDump"
}
export declare const REPOSITORY_BINARY_TYPE: {
    [RepositoryType.SOFTWARE]: string;
    [RepositoryType.FIRMWARE]: string;
    [RepositoryType.CONFIGURATION]: string;
};
export interface RepositoryModal {
    selected: {
        id: string;
        name?: string;
        [key: string]: any;
    };
    versionOrName: string;
    description: string;
    deviceType?: string;
    binary: {
        file?: File;
        url?: string;
    };
}
export interface RepositoryCategory extends Partial<IManagedObject> {
    type: string;
    description: string;
    c8y_Filter: {
        type: string;
    };
}
export interface FirmwareBinary extends Partial<IManagedObject> {
    type: string;
    c8y_Firmware: {
        version: string;
        url: string;
        childAssets: any[];
    };
}
export interface FirmwarePatchBinary extends FirmwareBinary {
    c8y_Patch: {
        dependency: string;
    };
}
export interface SoftwareBinary extends Partial<IManagedObject> {
    type: string;
    c8y_Software: {
        version: string;
        url: string;
        childAssets: any[];
    };
}
