import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { IManagedObject, InventoryService } from '@c8y/client';
import { gettext } from '@c8y/ngx-components';
var OpcuaAutoApplySettingsComponent = /** @class */ (function () {
    function OpcuaAutoApplySettingsComponent(inventoryService) {
        this.inventoryService = inventoryService;
        this.opcuaServers = [];
        this.selected = [];
        this.constraints = {
            browsePathMatchesRegex: '',
            matchesNodeIds: [],
            serverObjectHasFragment: '',
            matchesServerIds: []
        };
        this.placeholderSelectServerIds = gettext('Select server IDs from list');
    }
    OpcuaAutoApplySettingsComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data, matchesServerIds;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.inventoryService.list({
                            pageSize: 1000,
                            withTotalPages: true,
                            type: 'c8y_OpcuaServer'
                        })];
                    case 1:
                        data = (_a.sent()).data;
                        this.opcuaServers = data;
                        this.selected = [];
                        matchesServerIds = this.constraints.matchesServerIds;
                        data.forEach(function (server) {
                            if (matchesServerIds &&
                                matchesServerIds.length > 0 &&
                                matchesServerIds.find(function (itemId) { return itemId === server.id; })) {
                                _this.selected.push(server);
                            }
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(OpcuaAutoApplySettingsComponent.prototype, "model", {
        get: function () {
            return this._model;
        },
        set: function (model) {
            if (model && model.applyConstraints) {
                this.constraints = model.applyConstraints;
            }
            this._model = model;
        },
        enumerable: true,
        configurable: true
    });
    OpcuaAutoApplySettingsComponent.prototype.serverIdsSelected = function (items) {
        if (this.constraints) {
            this.constraints.matchesServerIds = items.map(function (item) { return item.id; });
        }
        this.selected = items;
    };
    OpcuaAutoApplySettingsComponent.prototype.onChangeNodeId = function (event) {
        if (event.target.checked) {
            this.showRootNodes = true;
            this.add();
        }
        else {
            this.showRootNodes = false;
            this.constraints.matchesNodeIds = [];
        }
    };
    OpcuaAutoApplySettingsComponent.prototype.add = function () {
        this.constraints.matchesNodeIds.push('');
    };
    OpcuaAutoApplySettingsComponent.prototype.remove = function (index) {
        this.constraints.matchesNodeIds.splice(index, 1);
    };
    OpcuaAutoApplySettingsComponent.prototype.trackByFn = function (index, item) {
        return index;
    };
    OpcuaAutoApplySettingsComponent.ctorParameters = function () { return [
        { type: InventoryService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], OpcuaAutoApplySettingsComponent.prototype, "model", null);
    OpcuaAutoApplySettingsComponent = tslib_1.__decorate([
        Component({
            selector: 'opcua-auto-apply',
            template: "<div class=\"row\">\n  <div class=\"col-md-4\">\n    <p translate>\n      Specifying auto-apply constraints allows you to limit the scope where the device types are\n      applied, for example by specifying a set of possible servers or node IDs.\n    </p>\n    <p translate>\n      If no constraints are set, device types are applied at any fitting location on the OPC UA\n      server.\n    </p>\n  </div>\n\n  <div class=\"col-md-6\">\n    <ul class=\"list-group\" style=\"box-shadow: none;\">\n      <!-- Limit device type to a set of servers -->\n      <li class=\"list-group-item\">\n        <label class=\"c8y-checkbox\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"constraints.matchesServerIds.length > 0\"\n            (change)=\"$event.target.checked ? (showServerIds = true) : (showServerIds = false)\"\n          />\n          <span></span>\n          <strong class=\"m-l-8\" translate>Limit device type to a set of servers</strong>\n        </label>\n        <div\n          class=\"collapse\"\n          [collapse]=\"!showServerIds && constraints.matchesServerIds.length < 1\"\n        >\n          <c8y-form-group class=\"m-t-8 m-b-8\">\n            <c8y-select\n              [items]=\"opcuaServers\"\n              [selected]=\"selected\"\n              [placeholder]=\"placeholderSelectServerIds\"\n              (onChange)=\"serverIdsSelected($event)\"\n            >\n            </c8y-select>\n          </c8y-form-group>\n        </div>\n      </li>\n      <!-- Limit device type scope in the address space -->\n      <li class=\"list-group-item\">\n        <label class=\"c8y-checkbox\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"constraints.browsePathMatchesRegex.length > 0\"\n            (change)=\"$event.target.checked ? (showBrowsePath = true) : (showBrowsePath = false)\"\n          />\n          <span></span>\n          <strong class=\"m-l-8\" translate>Limit device type scope in the address space</strong>\n        </label>\n        <div\n          class=\"collapse\"\n          [isAnimated]=\"true\"\n          [collapse]=\"!showBrowsePath && constraints.browsePathMatchesRegex.length < 1\"\n        >\n          <c8y-form-group class=\"m-t-8 m-b-8\">\n            <input\n              name=\"browsePath\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g.' | translate }} /objects/devices/.*\"\n              [(ngModel)]=\"constraints.browsePathMatchesRegex\"\n              ngDefaultControl\n            />\n          </c8y-form-group>\n        </div>\n      </li>\n      <!-- Limit device type to servers with a certain fragment-->\n      <li class=\"list-group-item\">\n        <label class=\"c8y-checkbox\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"constraints.serverObjectHasFragment.length > 0\"\n            (change)=\"\n              $event.target.checked ? (showServerFragment = true) : (showServerFragment = false)\n            \"\n          />\n          <span></span>\n          <strong class=\"m-l-8\" translate\n            >Limit device type to servers with a certain fragment</strong\n          >\n        </label>\n        <div\n          class=\"collapse\"\n          [isAnimated]=\"true\"\n          [collapse]=\"!showServerFragment && constraints.serverObjectHasFragment.length < 1\"\n        >\n          <c8y-form-group class=\"m-t-8 m-b-8\">\n            <input\n              name=\"serverFragment\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'e.g.' | translate }} c8y_SomeServerMarker\"\n              [(ngModel)]=\"constraints.serverObjectHasFragment\"\n              ngDefaultControl\n            />\n          </c8y-form-group>\n        </div>\n      </li>\n      <!-- Limit device type to a specific root node ID -->\n      <li class=\"list-group-item\">\n        <label class=\"c8y-checkbox\">\n          <input\n            type=\"checkbox\"\n            [checked]=\"constraints.matchesNodeIds.length > 0\"\n            (change)=\"onChangeNodeId($event)\"\n          />\n          <span></span>\n          <strong class=\"m-l-8\" translate>Limit device type to specific root nodes ID</strong>\n        </label>\n        <div\n          class=\"collapse\"\n          [isAnimated]=\"true\"\n          [collapse]=\"!showRootNodes && constraints.matchesNodeIds.length < 1\"\n        >\n          <c8y-form-group class=\"m-t-8 m-b-8\">\n            <ul c8yInputGroupListContainer class=\"list-unstyled\">\n              <li\n                class=\"m-b-8\"\n                *ngFor=\"let item of constraints.matchesNodeIds; let i = index; trackBy: trackByFn\"\n              >\n                <c8y-input-group-list [index]=\"i\" (onAdd)=\"add()\" (onRemove)=\"remove($event)\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'e.g.' | translate }} nodeId\"\n                    [(ngModel)]=\"constraints.matchesNodeIds[i]\"\n                    [required]=\"true\"\n                  />\n                </c8y-input-group-list>\n              </li>\n            </ul>\n          </c8y-form-group>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n"
        })
    ], OpcuaAutoApplySettingsComponent);
    return OpcuaAutoApplySettingsComponent;
}());
export { OpcuaAutoApplySettingsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BjdWEtYXV0by1hcHBseS1zZXR0aW5ncy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3Byb3RvY29sLW9wY3VhLyIsInNvdXJjZXMiOlsib3BjdWEtYXV0by1hcHBseS1zZXR0aW5ncy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRXpELE9BQU8sRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0QsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBTTlDO0lBZ0JFLHlDQUFvQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQWZ0RCxpQkFBWSxHQUFxQixFQUFFLENBQUM7UUFDcEMsYUFBUSxHQUFxQixFQUFFLENBQUM7UUFDaEMsZ0JBQVcsR0FBeUI7WUFDbEMsc0JBQXNCLEVBQUUsRUFBRTtZQUMxQixjQUFjLEVBQUUsRUFBRTtZQUNsQix1QkFBdUIsRUFBRSxFQUFFO1lBQzNCLGdCQUFnQixFQUFFLEVBQUU7U0FDckIsQ0FBQztRQUNGLCtCQUEwQixHQUFXLE9BQU8sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0lBT25CLENBQUM7SUFFcEQsa0RBQVEsR0FBZDs7Ozs7OzRCQUNtQixxQkFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDOzRCQUNoRCxRQUFRLEVBQUUsSUFBSTs0QkFDZCxjQUFjLEVBQUUsSUFBSTs0QkFDcEIsSUFBSSxFQUFFLGlCQUFpQjt5QkFDeEIsQ0FBQyxFQUFBOzt3QkFKTSxJQUFJLEdBQUssQ0FBQSxTQUlmLENBQUEsS0FKVTt3QkFNWixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQzt3QkFDekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7d0JBRVgsZ0JBQWdCLEdBQUssSUFBSSxDQUFDLFdBQVcsaUJBQXJCLENBQXNCO3dCQUU5QyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQUEsTUFBTTs0QkFDakIsSUFDRSxnQkFBZ0I7Z0NBQ2hCLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDO2dDQUMzQixnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxNQUFNLEtBQUssTUFBTSxDQUFDLEVBQUUsRUFBcEIsQ0FBb0IsQ0FBQyxFQUNyRDtnQ0FDQSxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzs2QkFDNUI7d0JBQ0gsQ0FBQyxDQUFDLENBQUM7Ozs7O0tBQ0o7SUFFUSxzQkFBSSxrREFBSzthQU9sQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDO2FBVFEsVUFBVSxLQUFLO1lBQ3RCLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUMsZ0JBQXdDLENBQUM7YUFDbkU7WUFDRCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUN0QixDQUFDOzs7T0FBQTtJQU1ELDJEQUFpQixHQUFqQixVQUFrQixLQUF1QjtRQUN2QyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBb0IsSUFBSyxPQUFBLElBQUksQ0FBQyxFQUFFLEVBQVAsQ0FBTyxDQUFDLENBQUM7U0FDbEY7UUFDRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0lBRUQsd0RBQWMsR0FBZCxVQUFlLEtBQUs7UUFDbEIsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtZQUN4QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztZQUMxQixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDWjthQUFNO1lBQ0wsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7WUFDM0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQztJQUVELDZDQUFHLEdBQUg7UUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELGdEQUFNLEdBQU4sVUFBTyxLQUFLO1FBQ1YsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsbURBQVMsR0FBVCxVQUFVLEtBQVUsRUFBRSxJQUFTO1FBQzdCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7Z0JBL0RxQyxnQkFBZ0I7O0lBeUI3QztRQUFSLEtBQUssRUFBRTtnRUFLUDtJQTlDVSwrQkFBK0I7UUFKM0MsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtZQUM1QixrdEtBQXlEO1NBQzFELENBQUM7T0FDVywrQkFBK0IsQ0FnRjNDO0lBQUQsc0NBQUM7Q0FBQSxBQWhGRCxJQWdGQztTQWhGWSwrQkFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF1dG9BcHBseUNvbnN0cmFpbnRzIH0gZnJvbSAnLi9vcGN1YS1wcm90b2NvbC1kZXZpY2UtdHlwZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QsIEludmVudG9yeVNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ29wY3VhLWF1dG8tYXBwbHknLFxuICB0ZW1wbGF0ZVVybDogJy4vb3BjdWEtYXV0by1hcHBseS1zZXR0aW5ncy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgT3BjdWFBdXRvQXBwbHlTZXR0aW5nc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIG9wY3VhU2VydmVyczogSU1hbmFnZWRPYmplY3RbXSA9IFtdO1xuICBzZWxlY3RlZDogSU1hbmFnZWRPYmplY3RbXSA9IFtdO1xuICBjb25zdHJhaW50czogQXV0b0FwcGx5Q29uc3RyYWludHMgPSB7XG4gICAgYnJvd3NlUGF0aE1hdGNoZXNSZWdleDogJycsXG4gICAgbWF0Y2hlc05vZGVJZHM6IFtdLFxuICAgIHNlcnZlck9iamVjdEhhc0ZyYWdtZW50OiAnJyxcbiAgICBtYXRjaGVzU2VydmVySWRzOiBbXVxuICB9O1xuICBwbGFjZWhvbGRlclNlbGVjdFNlcnZlcklkczogc3RyaW5nID0gZ2V0dGV4dCgnU2VsZWN0IHNlcnZlciBJRHMgZnJvbSBsaXN0Jyk7XG4gIHNob3dTZXJ2ZXJJZHM6IGJvb2xlYW47XG4gIHNob3dCcm93c2VQYXRoOiBib29sZWFuO1xuICBzaG93U2VydmVyRnJhZ21lbnQ6IGJvb2xlYW47XG4gIHNob3dSb290Tm9kZXM6IGJvb2xlYW47XG4gIHByaXZhdGUgX21vZGVsOiBJTWFuYWdlZE9iamVjdDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGludmVudG9yeVNlcnZpY2U6IEludmVudG9yeVNlcnZpY2UpIHt9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCB0aGlzLmludmVudG9yeVNlcnZpY2UubGlzdCh7XG4gICAgICBwYWdlU2l6ZTogMTAwMCxcbiAgICAgIHdpdGhUb3RhbFBhZ2VzOiB0cnVlLFxuICAgICAgdHlwZTogJ2M4eV9PcGN1YVNlcnZlcidcbiAgICB9KTtcblxuICAgIHRoaXMub3BjdWFTZXJ2ZXJzID0gZGF0YTtcbiAgICB0aGlzLnNlbGVjdGVkID0gW107XG5cbiAgICBjb25zdCB7IG1hdGNoZXNTZXJ2ZXJJZHMgfSA9IHRoaXMuY29uc3RyYWludHM7XG5cbiAgICBkYXRhLmZvckVhY2goc2VydmVyID0+IHtcbiAgICAgIGlmIChcbiAgICAgICAgbWF0Y2hlc1NlcnZlcklkcyAmJlxuICAgICAgICBtYXRjaGVzU2VydmVySWRzLmxlbmd0aCA+IDAgJiZcbiAgICAgICAgbWF0Y2hlc1NlcnZlcklkcy5maW5kKGl0ZW1JZCA9PiBpdGVtSWQgPT09IHNlcnZlci5pZClcbiAgICAgICkge1xuICAgICAgICB0aGlzLnNlbGVjdGVkLnB1c2goc2VydmVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBtb2RlbChtb2RlbCkge1xuICAgIGlmIChtb2RlbCAmJiBtb2RlbC5hcHBseUNvbnN0cmFpbnRzKSB7XG4gICAgICB0aGlzLmNvbnN0cmFpbnRzID0gbW9kZWwuYXBwbHlDb25zdHJhaW50cyBhcyBBdXRvQXBwbHlDb25zdHJhaW50cztcbiAgICB9XG4gICAgdGhpcy5fbW9kZWwgPSBtb2RlbDtcbiAgfVxuXG4gIGdldCBtb2RlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbW9kZWw7XG4gIH1cblxuICBzZXJ2ZXJJZHNTZWxlY3RlZChpdGVtczogSU1hbmFnZWRPYmplY3RbXSkge1xuICAgIGlmICh0aGlzLmNvbnN0cmFpbnRzKSB7XG4gICAgICB0aGlzLmNvbnN0cmFpbnRzLm1hdGNoZXNTZXJ2ZXJJZHMgPSBpdGVtcy5tYXAoKGl0ZW06IElNYW5hZ2VkT2JqZWN0KSA9PiBpdGVtLmlkKTtcbiAgICB9XG4gICAgdGhpcy5zZWxlY3RlZCA9IGl0ZW1zO1xuICB9XG5cbiAgb25DaGFuZ2VOb2RlSWQoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQudGFyZ2V0LmNoZWNrZWQpIHtcbiAgICAgIHRoaXMuc2hvd1Jvb3ROb2RlcyA9IHRydWU7XG4gICAgICB0aGlzLmFkZCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNob3dSb290Tm9kZXMgPSBmYWxzZTtcbiAgICAgIHRoaXMuY29uc3RyYWludHMubWF0Y2hlc05vZGVJZHMgPSBbXTtcbiAgICB9XG4gIH1cblxuICBhZGQoKSB7XG4gICAgdGhpcy5jb25zdHJhaW50cy5tYXRjaGVzTm9kZUlkcy5wdXNoKCcnKTtcbiAgfVxuXG4gIHJlbW92ZShpbmRleCkge1xuICAgIHRoaXMuY29uc3RyYWludHMubWF0Y2hlc05vZGVJZHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgfVxuXG4gIHRyYWNrQnlGbihpbmRleDogYW55LCBpdGVtOiBhbnkpIHtcbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cbn1cbiJdfQ==