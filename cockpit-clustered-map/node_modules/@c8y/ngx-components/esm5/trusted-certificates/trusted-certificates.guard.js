import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { OptionsService } from '@c8y/ngx-components';
var TrustedCertificatesGuard = /** @class */ (function () {
    function TrustedCertificatesGuard(optionsService) {
        this.optionsService = optionsService;
    }
    TrustedCertificatesGuard.prototype.canActivate = function (route, state) {
        return this.isFeatureEnabled();
    };
    TrustedCertificatesGuard.prototype.isFeatureEnabled = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!(this.isFeatureEnabledCache === undefined)) return [3 /*break*/, 2];
                        _a = this;
                        return [4 /*yield*/, this.optionsService.getTenantOption('oauth.internal.token', 'trusted-certificates.enabled', false)];
                    case 1:
                        _a.isFeatureEnabledCache = (_b.sent());
                        _b.label = 2;
                    case 2: return [2 /*return*/, this.isFeatureEnabledCache];
                }
            });
        });
    };
    TrustedCertificatesGuard.ctorParameters = function () { return [
        { type: OptionsService }
    ]; };
    TrustedCertificatesGuard = tslib_1.__decorate([
        Injectable()
    ], TrustedCertificatesGuard);
    return TrustedCertificatesGuard;
}());
export { TrustedCertificatesGuard };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1c3RlZC1jZXJ0aWZpY2F0ZXMuZ3VhcmQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3RydXN0ZWQtY2VydGlmaWNhdGVzLyIsInNvdXJjZXMiOlsidHJ1c3RlZC1jZXJ0aWZpY2F0ZXMuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR3JEO0lBRUUsa0NBQW9CLGNBQThCO1FBQTlCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtJQUFHLENBQUM7SUFFdEQsOENBQVcsR0FBWCxVQUFZLEtBQTZCLEVBQUUsS0FBMEI7UUFDbkUsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBRUssbURBQWdCLEdBQXRCOzs7Ozs7NkJBQ00sQ0FBQSxJQUFJLENBQUMscUJBQXFCLEtBQUssU0FBUyxDQUFBLEVBQXhDLHdCQUF3Qzt3QkFDMUMsS0FBQSxJQUFJLENBQUE7d0JBQTBCLHFCQUFNLElBQUksQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUNyRSxzQkFBc0IsRUFDdEIsOEJBQThCLEVBQzlCLEtBQUssQ0FDTixFQUFBOzt3QkFKRCxHQUFLLHFCQUFxQixHQUFHLENBQUMsU0FJN0IsQ0FBWSxDQUFDOzs0QkFFaEIsc0JBQU8sSUFBSSxDQUFDLHFCQUFxQixFQUFDOzs7O0tBQ25DOztnQkFmbUMsY0FBYzs7SUFGdkMsd0JBQXdCO1FBRHBDLFVBQVUsRUFBRTtPQUNBLHdCQUF3QixDQWtCcEM7SUFBRCwrQkFBQztDQUFBLEFBbEJELElBa0JDO1NBbEJZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsIENhbkFjdGl2YXRlLCBSb3V0ZXJTdGF0ZVNuYXBzaG90IH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE9wdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUcnVzdGVkQ2VydGlmaWNhdGVzR3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XG4gIHByaXZhdGUgaXNGZWF0dXJlRW5hYmxlZENhY2hlOiBib29sZWFuO1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnNTZXJ2aWNlOiBPcHRpb25zU2VydmljZSkge31cblxuICBjYW5BY3RpdmF0ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3QpIHtcbiAgICByZXR1cm4gdGhpcy5pc0ZlYXR1cmVFbmFibGVkKCk7XG4gIH1cblxuICBhc3luYyBpc0ZlYXR1cmVFbmFibGVkKCkge1xuICAgIGlmICh0aGlzLmlzRmVhdHVyZUVuYWJsZWRDYWNoZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLmlzRmVhdHVyZUVuYWJsZWRDYWNoZSA9IChhd2FpdCB0aGlzLm9wdGlvbnNTZXJ2aWNlLmdldFRlbmFudE9wdGlvbihcbiAgICAgICAgJ29hdXRoLmludGVybmFsLnRva2VuJyxcbiAgICAgICAgJ3RydXN0ZWQtY2VydGlmaWNhdGVzLmVuYWJsZWQnLFxuICAgICAgICBmYWxzZVxuICAgICAgKSkgYXMgYm9vbGVhbjtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuaXNGZWF0dXJlRW5hYmxlZENhY2hlO1xuICB9XG59XG4iXX0=