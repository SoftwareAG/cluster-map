import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { TenantOptionsService } from '@c8y/client';
import { TrustedCertificatesGuard } from './trusted-certificates.guard';
var TrustedCertificatesNavigationFactory = /** @class */ (function () {
    function TrustedCertificatesNavigationFactory(tenantOptionsService, trustedCertificatesGuard) {
        this.tenantOptionsService = tenantOptionsService;
        this.trustedCertificatesGuard = trustedCertificatesGuard;
        this.nav = [];
    }
    TrustedCertificatesNavigationFactory.prototype.get = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var isFeatureEnabled;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.trustedCertificatesGuard.isFeatureEnabled()];
                    case 1:
                        isFeatureEnabled = _a.sent();
                        if (isFeatureEnabled && this.nav.length === 0) {
                            this.nav.push(new NavigatorNode({
                                label: gettext('Trusted certificates'),
                                icon: 'certificate',
                                path: '/trusted-certificates',
                                parent: gettext('Management'),
                                priority: 100
                            }));
                        }
                        return [2 /*return*/, this.nav];
                }
            });
        });
    };
    TrustedCertificatesNavigationFactory.ctorParameters = function () { return [
        { type: TenantOptionsService },
        { type: TrustedCertificatesGuard }
    ]; };
    TrustedCertificatesNavigationFactory = tslib_1.__decorate([
        Injectable()
    ], TrustedCertificatesNavigationFactory);
    return TrustedCertificatesNavigationFactory;
}());
export { TrustedCertificatesNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1c3RlZC1jZXJ0aWZpY2F0ZXMtbmF2aWdhdGlvbi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy90cnVzdGVkLWNlcnRpZmljYXRlcy8iLCJzb3VyY2VzIjpbInRydXN0ZWQtY2VydGlmaWNhdGVzLW5hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDbkQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFHeEU7SUFHRSw4Q0FDVSxvQkFBMEMsRUFDMUMsd0JBQWtEO1FBRGxELHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUFDMUMsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUEwQjtRQUo1RCxRQUFHLEdBQW9CLEVBQUUsQ0FBQztJQUt2QixDQUFDO0lBQ0Usa0RBQUcsR0FBVDs7Ozs7NEJBQzJCLHFCQUFNLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFBOzt3QkFBekUsZ0JBQWdCLEdBQUcsU0FBc0Q7d0JBQy9FLElBQUksZ0JBQWdCLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFOzRCQUM3QyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FDWCxJQUFJLGFBQWEsQ0FBQztnQ0FDaEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQztnQ0FDdEMsSUFBSSxFQUFFLGFBQWE7Z0NBQ25CLElBQUksRUFBRSx1QkFBdUI7Z0NBQzdCLE1BQU0sRUFBRSxPQUFPLENBQUMsWUFBWSxDQUFDO2dDQUM3QixRQUFRLEVBQUUsR0FBRzs2QkFDZCxDQUFDLENBQ0gsQ0FBQzt5QkFDSDt3QkFDRCxzQkFBTyxJQUFJLENBQUMsR0FBRyxFQUFDOzs7O0tBQ2pCOztnQkFqQitCLG9CQUFvQjtnQkFDaEIsd0JBQXdCOztJQUxqRCxvQ0FBb0M7UUFEaEQsVUFBVSxFQUFFO09BQ0Esb0NBQW9DLENBc0JoRDtJQUFELDJDQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0F0Qlksb0NBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFRlbmFudE9wdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgVHJ1c3RlZENlcnRpZmljYXRlc0d1YXJkIH0gZnJvbSAnLi90cnVzdGVkLWNlcnRpZmljYXRlcy5ndWFyZCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUcnVzdGVkQ2VydGlmaWNhdGVzTmF2aWdhdGlvbkZhY3RvcnkgaW1wbGVtZW50cyBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB7XG4gIG5hdjogTmF2aWdhdG9yTm9kZVtdID0gW107XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB0ZW5hbnRPcHRpb25zU2VydmljZTogVGVuYW50T3B0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSB0cnVzdGVkQ2VydGlmaWNhdGVzR3VhcmQ6IFRydXN0ZWRDZXJ0aWZpY2F0ZXNHdWFyZFxuICApIHt9XG4gIGFzeW5jIGdldCgpIHtcbiAgICBjb25zdCBpc0ZlYXR1cmVFbmFibGVkID0gYXdhaXQgdGhpcy50cnVzdGVkQ2VydGlmaWNhdGVzR3VhcmQuaXNGZWF0dXJlRW5hYmxlZCgpO1xuICAgIGlmIChpc0ZlYXR1cmVFbmFibGVkICYmIHRoaXMubmF2Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5uYXYucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdUcnVzdGVkIGNlcnRpZmljYXRlcycpLFxuICAgICAgICAgIGljb246ICdjZXJ0aWZpY2F0ZScsXG4gICAgICAgICAgcGF0aDogJy90cnVzdGVkLWNlcnRpZmljYXRlcycsXG4gICAgICAgICAgcGFyZW50OiBnZXR0ZXh0KCdNYW5hZ2VtZW50JyksXG4gICAgICAgICAgcHJpb3JpdHk6IDEwMFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmF2O1xuICB9XG59XG4iXX0=