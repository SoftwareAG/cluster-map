import * as tslib_1 from "tslib";
import { Component, OnInit, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';
import { DashboardBridgeService } from './dashboard-bridge.service';
var PasteActionComponent = /** @class */ (function () {
    function PasteActionComponent(vcRef, dashboardBridgeService) {
        this.vcRef = vcRef;
        this.dashboardBridgeService = dashboardBridgeService;
        this.dashboardName = '';
    }
    PasteActionComponent.prototype.ngOnInit = function () {
        this.vcRef.createEmbeddedView(this.templatePaste);
        this.dashboardName = this.dashboardBridgeService.dashboardClipboard.c8y_Dashboard.name;
    };
    PasteActionComponent.prototype.pasteDashboard = function () {
        this.dashboardBridgeService.pasteDashboard();
    };
    PasteActionComponent.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: DashboardBridgeService }
    ]; };
    tslib_1.__decorate([
        ViewChild('templatePaste', { read: TemplateRef, static: true })
    ], PasteActionComponent.prototype, "templatePaste", void 0);
    PasteActionComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-copy-action-legacy',
            template: "\n    <ng-template #templatePaste>\n      <li>\n        <button title=\"{{'Paste dashboard' | translate}}\" (click)=\"pasteDashboard()\">\n          <i class=\"fa fw fa-clipboard\"></i>&nbsp;<span translate>Paste dashboard</span>&nbsp;<span\n            >\"{{ dashboardName }}\"</span\n          >\n        </button>\n      </li>\n    </ng-template>\n  "
        })
    ], PasteActionComponent);
    return PasteActionComponent;
}());
export { PasteActionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzdGUtYWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvdXBncmFkZS8iLCJzb3VyY2VzIjpbImRhc2hib2FyZC9wYXN0ZS1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBZ0JwRTtJQUlFLDhCQUNVLEtBQXVCLEVBQ3ZCLHNCQUE4QztRQUQ5QyxVQUFLLEdBQUwsS0FBSyxDQUFrQjtRQUN2QiwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBSnhELGtCQUFhLEdBQUcsRUFBRSxDQUFDO0lBS2hCLENBQUM7SUFFSix1Q0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsa0JBQWtCLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztJQUN6RixDQUFDO0lBRUQsNkNBQWMsR0FBZDtRQUNFLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMvQyxDQUFDOztnQkFYZ0IsZ0JBQWdCO2dCQUNDLHNCQUFzQjs7SUFMUztRQUFoRSxTQUFTLENBQUMsZUFBZSxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7K0RBQWU7SUFEcEUsb0JBQW9CO1FBZGhDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsUUFBUSxFQUFFLG1XQVVUO1NBQ0YsQ0FBQztPQUNXLG9CQUFvQixDQWlCaEM7SUFBRCwyQkFBQztDQUFBLEFBakJELElBaUJDO1NBakJZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlIH0gZnJvbSAnLi9kYXNoYm9hcmQtYnJpZGdlLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY29weS1hY3Rpb24tbGVnYWN5JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctdGVtcGxhdGUgI3RlbXBsYXRlUGFzdGU+XG4gICAgICA8bGk+XG4gICAgICAgIDxidXR0b24gdGl0bGU9XCJ7eydQYXN0ZSBkYXNoYm9hcmQnIHwgdHJhbnNsYXRlfX1cIiAoY2xpY2spPVwicGFzdGVEYXNoYm9hcmQoKVwiPlxuICAgICAgICAgIDxpIGNsYXNzPVwiZmEgZncgZmEtY2xpcGJvYXJkXCI+PC9pPiZuYnNwOzxzcGFuIHRyYW5zbGF0ZT5QYXN0ZSBkYXNoYm9hcmQ8L3NwYW4+Jm5ic3A7PHNwYW5cbiAgICAgICAgICAgID5cInt7IGRhc2hib2FyZE5hbWUgfX1cIjwvc3BhblxuICAgICAgICAgID5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2xpPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgUGFzdGVBY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKCd0ZW1wbGF0ZVBhc3RlJywgeyByZWFkOiBUZW1wbGF0ZVJlZiwgc3RhdGljOiB0cnVlIH0pIHRlbXBsYXRlUGFzdGU7XG4gIGRhc2hib2FyZE5hbWUgPSAnJztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHZjUmVmOiBWaWV3Q29udGFpbmVyUmVmLFxuICAgIHByaXZhdGUgZGFzaGJvYXJkQnJpZGdlU2VydmljZTogRGFzaGJvYXJkQnJpZGdlU2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy52Y1JlZi5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZVBhc3RlKTtcbiAgICB0aGlzLmRhc2hib2FyZE5hbWUgPSB0aGlzLmRhc2hib2FyZEJyaWRnZVNlcnZpY2UuZGFzaGJvYXJkQ2xpcGJvYXJkLmM4eV9EYXNoYm9hcmQubmFtZTtcbiAgfVxuXG4gIHBhc3RlRGFzaGJvYXJkKCkge1xuICAgIHRoaXMuZGFzaGJvYXJkQnJpZGdlU2VydmljZS5wYXN0ZURhc2hib2FyZCgpO1xuICB9XG59XG4iXX0=