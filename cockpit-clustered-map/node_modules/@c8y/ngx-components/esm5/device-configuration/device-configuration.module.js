import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CoreModule, gettext, HOOK_ONCE_ROUTE, ViewContext } from '@c8y/ngx-components';
import { DeviceConfigurationComponent } from './device-configuration.component';
import { ConfigurationListComponent } from './configuration-list.component';
import { ConfigurationOperationComponent } from './configuration-operation.component';
import { DeviceConfigurationService } from './device-configuration.service';
import { SourceCodePreviewComponent } from './source-code-preview.component';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { DeviceConfigurationGuard } from './device-configuration.guard';
import { ConfigurationPreviewComponent } from './configuration-preview.component';
import { ConfigurationFilterPipe } from './configuration-filter.pipe';
import { SaveToRepositoryComponent } from './save-to-repository.component';
var routes = [
    {
        context: ViewContext.Device,
        path: 'device-configuration',
        component: DeviceConfigurationComponent,
        label: gettext('Configuration'),
        icon: 'gears',
        canActivate: [DeviceConfigurationGuard]
    }
];
var ɵ0 = routes;
var DeviceConfigurationModule = /** @class */ (function () {
    function DeviceConfigurationModule() {
    }
    DeviceConfigurationModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                DeviceConfigurationComponent,
                ConfigurationListComponent,
                ConfigurationOperationComponent,
                SourceCodePreviewComponent,
                ConfigurationPreviewComponent,
                ConfigurationFilterPipe,
                SaveToRepositoryComponent
            ],
            exports: [],
            imports: [CoreModule, TooltipModule],
            entryComponents: [DeviceConfigurationComponent, SaveToRepositoryComponent],
            providers: [
                DeviceConfigurationService,
                DeviceConfigurationGuard,
                {
                    provide: HOOK_ONCE_ROUTE,
                    useValue: ɵ0,
                    multi: true
                }
            ]
        })
    ], DeviceConfigurationModule);
    return DeviceConfigurationModule;
}());
export { DeviceConfigurationModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWNvbmZpZ3VyYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtY29uZmlndXJhdGlvbi8iLCJzb3VyY2VzIjpbImRldmljZS1jb25maWd1cmF0aW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQVMsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0YsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDaEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDdEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRTNFLElBQU0sTUFBTSxHQUFZO0lBQ3RCO1FBQ0UsT0FBTyxFQUFFLFdBQVcsQ0FBQyxNQUFNO1FBQzNCLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsU0FBUyxFQUFFLDRCQUE0QjtRQUN2QyxLQUFLLEVBQUUsT0FBTyxDQUFDLGVBQWUsQ0FBQztRQUMvQixJQUFJLEVBQUUsT0FBTztRQUNiLFdBQVcsRUFBRSxDQUFDLHdCQUF3QixDQUFDO0tBQ3hDO0NBQ0YsQ0FBQztTQW9CYyxNQUFNO0FBS3RCO0lBQUE7SUFBd0MsQ0FBQztJQUE1Qix5QkFBeUI7UUF2QnJDLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWiw0QkFBNEI7Z0JBQzVCLDBCQUEwQjtnQkFDMUIsK0JBQStCO2dCQUMvQiwwQkFBMEI7Z0JBQzFCLDZCQUE2QjtnQkFDN0IsdUJBQXVCO2dCQUN2Qix5QkFBeUI7YUFDMUI7WUFDRCxPQUFPLEVBQUUsRUFBRTtZQUNYLE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUM7WUFDcEMsZUFBZSxFQUFFLENBQUMsNEJBQTRCLEVBQUUseUJBQXlCLENBQUM7WUFDMUUsU0FBUyxFQUFFO2dCQUNULDBCQUEwQjtnQkFDMUIsd0JBQXdCO2dCQUN4QjtvQkFDRSxPQUFPLEVBQUUsZUFBZTtvQkFDeEIsUUFBUSxJQUFRO29CQUNoQixLQUFLLEVBQUUsSUFBSTtpQkFDWjthQUNGO1NBQ0YsQ0FBQztPQUNXLHlCQUF5QixDQUFHO0lBQUQsZ0NBQUM7Q0FBQSxBQUF6QyxJQUF5QztTQUE1Qix5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgZ2V0dGV4dCwgSE9PS19PTkNFX1JPVVRFLCBSb3V0ZSwgVmlld0NvbnRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IERldmljZUNvbmZpZ3VyYXRpb25Db21wb25lbnQgfSBmcm9tICcuL2RldmljZS1jb25maWd1cmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uTGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29uZmlndXJhdGlvbi1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uT3BlcmF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb25maWd1cmF0aW9uLW9wZXJhdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlQ29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2RldmljZS1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgU291cmNlQ29kZVByZXZpZXdDb21wb25lbnQgfSBmcm9tICcuL3NvdXJjZS1jb2RlLXByZXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IFRvb2x0aXBNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3Rvb2x0aXAnO1xuaW1wb3J0IHsgRGV2aWNlQ29uZmlndXJhdGlvbkd1YXJkIH0gZnJvbSAnLi9kZXZpY2UtY29uZmlndXJhdGlvbi5ndWFyZCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uUHJldmlld0NvbXBvbmVudCB9IGZyb20gJy4vY29uZmlndXJhdGlvbi1wcmV2aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uRmlsdGVyUGlwZSB9IGZyb20gJy4vY29uZmlndXJhdGlvbi1maWx0ZXIucGlwZSc7XG5pbXBvcnQgeyBTYXZlVG9SZXBvc2l0b3J5Q29tcG9uZW50IH0gZnJvbSAnLi9zYXZlLXRvLXJlcG9zaXRvcnkuY29tcG9uZW50JztcblxuY29uc3Qgcm91dGVzOiBSb3V0ZVtdID0gW1xuICB7XG4gICAgY29udGV4dDogVmlld0NvbnRleHQuRGV2aWNlLFxuICAgIHBhdGg6ICdkZXZpY2UtY29uZmlndXJhdGlvbicsXG4gICAgY29tcG9uZW50OiBEZXZpY2VDb25maWd1cmF0aW9uQ29tcG9uZW50LFxuICAgIGxhYmVsOiBnZXR0ZXh0KCdDb25maWd1cmF0aW9uJyksXG4gICAgaWNvbjogJ2dlYXJzJyxcbiAgICBjYW5BY3RpdmF0ZTogW0RldmljZUNvbmZpZ3VyYXRpb25HdWFyZF1cbiAgfVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRGV2aWNlQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICBDb25maWd1cmF0aW9uTGlzdENvbXBvbmVudCxcbiAgICBDb25maWd1cmF0aW9uT3BlcmF0aW9uQ29tcG9uZW50LFxuICAgIFNvdXJjZUNvZGVQcmV2aWV3Q29tcG9uZW50LFxuICAgIENvbmZpZ3VyYXRpb25QcmV2aWV3Q29tcG9uZW50LFxuICAgIENvbmZpZ3VyYXRpb25GaWx0ZXJQaXBlLFxuICAgIFNhdmVUb1JlcG9zaXRvcnlDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW10sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBUb29sdGlwTW9kdWxlXSxcbiAgZW50cnlDb21wb25lbnRzOiBbRGV2aWNlQ29uZmlndXJhdGlvbkNvbXBvbmVudCwgU2F2ZVRvUmVwb3NpdG9yeUNvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIERldmljZUNvbmZpZ3VyYXRpb25TZXJ2aWNlLFxuICAgIERldmljZUNvbmZpZ3VyYXRpb25HdWFyZCxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX09OQ0VfUk9VVEUsXG4gICAgICB1c2VWYWx1ZTogcm91dGVzLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlQ29uZmlndXJhdGlvbk1vZHVsZSB7fVxuIl19