import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { DeviceConfigurationOperation } from './device-configuration.model';
import { IManagedObject, IOperation, OperationStatus, Realtime, UserService } from '@c8y/client';
import { DeviceConfigurationService } from './device-configuration.service';
import { saveAs } from 'file-saver/FileSaver';
import { BsModalService } from 'ngx-bootstrap/modal';
import { SaveToRepositoryComponent } from './save-to-repository.component';
import { cloneDeep } from 'lodash-es';
import { AppStateService } from '@c8y/ngx-components';
var ConfigurationPreviewComponent = /** @class */ (function () {
    function ConfigurationPreviewComponent(deviceConfigurationService, realtime, bsModal, user, appState) {
        this.deviceConfigurationService = deviceConfigurationService;
        this.realtime = realtime;
        this.bsModal = bsModal;
        this.user = user;
        this.appState = appState;
    }
    ConfigurationPreviewComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var configOperation, operationsChannel;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.getOperation()];
                    case 1:
                        configOperation = _a.sent();
                        this.updateOperation(configOperation);
                        _a.label = 2;
                    case 2:
                        operationsChannel = "/operations/" + this.device.id;
                        this.operationsSubscription = this.realtime
                            .observable(operationsChannel)
                            .subscribe(function (_a) {
                            var data = _a.data;
                            _this.updateOperation(data);
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationPreviewComponent.prototype.createDeviceOperation = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!(this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG)) return [3 /*break*/, 2];
                        _a = this;
                        return [4 /*yield*/, this.deviceConfigurationService.createDownloadConfigFileOperation(this.device, this.configurationType, this.configSnapshot.binaryUrl)];
                    case 1:
                        _a.operation = _c.sent();
                        _c.label = 2;
                    case 2:
                        if (!(this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG)) return [3 /*break*/, 4];
                        _b = this;
                        return [4 /*yield*/, this.deviceConfigurationService.createUploadConfigFileOperation(this.device, this.configurationType)];
                    case 3:
                        _b.operation = _c.sent();
                        _c.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationPreviewComponent.prototype.showOperation = function () {
        if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {
            return !!this.operation;
        }
        return (this.operation &&
            [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(this.operation.status));
    };
    ConfigurationPreviewComponent.prototype.showBinary = function () {
        if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {
            return true;
        }
        return !this.showOperation();
    };
    ConfigurationPreviewComponent.prototype.isCreateOperationDisabled = function () {
        return (this.operation &&
            [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status));
    };
    ConfigurationPreviewComponent.prototype.updateOperation = function (operation) {
        if (operation &&
            operation[this.operationToTrigger] &&
            operation[this.operationToTrigger].type &&
            operation[this.operationToTrigger].type === this.configurationType) {
            this.operation = operation;
        }
    };
    ConfigurationPreviewComponent.prototype.getOperation = function () {
        return this.deviceConfigurationService.getLatestConfigFileOperation(this.device.id, this.configurationType, this.operationToTrigger);
    };
    ConfigurationPreviewComponent.prototype.download = function () {
        var blob = new Blob([this.configSnapshot.binary]);
        var fileName = this.configSnapshot.name;
        saveAs(blob, fileName);
    };
    ConfigurationPreviewComponent.prototype.saveToRepository = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var initialState, modal, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        initialState = {
                            configSnapshot: cloneDeep(this.configSnapshot)
                        };
                        modal = this.bsModal.show(SaveToRepositoryComponent, {
                            class: 'modal-sm',
                            initialState: initialState,
                            ignoreBackdropClick: true
                        }).content;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, modal.result];
                    case 2:
                        _a.sent();
                        this.deviceConfigurationService.updateRepositoryConfigList();
                        modal.close();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _a.sent();
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationPreviewComponent.prototype.hasPermission = function () {
        return this.user.hasAnyRole(this.appState.currentUser.value, [
            'ROLE_INVENTORY_ADMIN',
            'ROLE_INVENTORY_CREATE'
        ]);
    };
    ConfigurationPreviewComponent.prototype.ngOnDestroy = function () {
        this.operationsSubscription.unsubscribe();
    };
    ConfigurationPreviewComponent.ctorParameters = function () { return [
        { type: DeviceConfigurationService },
        { type: Realtime },
        { type: BsModalService },
        { type: UserService },
        { type: AppStateService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "device", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "configurationType", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "configSnapshot", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "canSaveSnapshot", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "actionButtonText", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "actionButtonIcon", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "operationToTrigger", void 0);
    ConfigurationPreviewComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-configuration-preview',
            template: "<div *ngIf=\"configSnapshot\">\n  <div class=\"content-flex-55 p-b-16\">\n    <div class=\"col-5 p-t-4\">\n      <span class=\"text-label-small text-uppercase m-r-4\" translate>Configuration</span>\n      <span *ngIf=\"configSnapshot.name; else emptyText\">\n        <strong>{{ configSnapshot.name }}</strong>\n      </span>\n      <ng-template #emptyText> --- </ng-template>\n    </div>\n    <div class=\"col-4 p-t-4\">\n      <span class=\"text-label-small text-uppercase m-r-4\" translate>Last updated</span>\n      <small *ngIf=\"configSnapshot.time; else emptyDate\">\n        {{ configSnapshot.time | date: 'medium' }}\n      </small>\n      <ng-template #emptyDate> --- </ng-template>\n    </div>\n    <div class=\"col-3\">\n      <button\n        class=\"btn btn-default btn-sm pull-right\"\n        type=\"button\"\n        title=\"{{ actionButtonText | translate }}\"\n        (click)=\"createDeviceOperation()\"\n        [disabled]=\"isCreateOperationDisabled()\"\n      >\n        <i [c8yIcon]=\"actionButtonIcon\"></i> {{ actionButtonText | translate }}\n      </button>\n    </div>\n  </div>\n  <div class=\"c8y-empty-state text-left\" *ngIf=\"!configSnapshot.binary && showBinary()\">\n    <h1 [c8yIcon]=\"'file-image-o'\"></h1>\n    <p>\n      <strong translate>No preview available.</strong><br />\n      <small translate>Could not fetch the file.</small>\n    </p>\n  </div>\n  <div *ngIf=\"configSnapshot.binary && showBinary()\">\n    <c8y-source-code-preview\n      [text]=\"configSnapshot.binary\"\n      [isDisabled]=\"true\"\n    ></c8y-source-code-preview>\n    <div *ngIf=\"canSaveSnapshot\" class=\"top-p-md\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary btn-sm pull-right left-m-sm\"\n        (click)=\"download()\"\n        translate\n      >\n        Download\n      </button>\n      <button\n        *ngIf=\"hasPermission()\"\n        type=\"button\"\n        class=\"btn btn-default btn-sm pull-right\"\n        (click)=\"saveToRepository()\"\n        translate\n      >\n        Save to repository\n      </button>\n    </div>\n  </div>\n  <div *ngIf=\"showOperation()\">\n    <c8y-device-configuration-operation\n      [operation]=\"operation\"\n    ></c8y-device-configuration-operation>\n  </div>\n</div>\n"
        })
    ], ConfigurationPreviewComponent);
    return ConfigurationPreviewComponent;
}());
export { ConfigurationPreviewComponent };
//# sourceMappingURL=data:application/json;base64,