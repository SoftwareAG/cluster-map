import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { IEvent, IManagedObject, Realtime } from '@c8y/client';
import { DeviceConfigurationService } from './device-configuration.service';
import { gettext } from '@c8y/ngx-components';
var DeviceConfigurationComponent = /** @class */ (function () {
    function DeviceConfigurationComponent(route, deviceConfigurationService, realtime) {
        var _this = this;
        this.route = route;
        this.deviceConfigurationService = deviceConfigurationService;
        this.realtime = realtime;
        this.configSnapshot = {};
        this.deviceConfigurationService.repositoryConfigListUpdated.subscribe(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.repositorySnapshot = undefined;
                        _a = this;
                        return [4 /*yield*/, this.getSnapshotsFromRepository(this.device.type, this.configurationType)];
                    case 1:
                        _a.repositorySnapshots = _b.sent();
                        return [2 /*return*/];
                }
            });
        }); });
    }
    DeviceConfigurationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.device = this.route.snapshot.parent.data.contextData;
        this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(function (item) { return ({
            name: item
        }); });
        this.repositorySnapshotsEmptyState = {
            icon: 'gears',
            title: gettext('No configurations available.'),
            text: gettext('Add configuration to configuration repository')
        };
        var eventsChannel = '/eventsWithChildren/' + this.device.id;
        this.eventsSubscription = this.realtime.observable(eventsChannel).subscribe(function (_a) {
            var data = _a.data;
            _this.updateConfigSnapshotOnEvent(data);
        });
    };
    DeviceConfigurationComponent.prototype.onConfigTypeSelected = function (config) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var configEvent, _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.configurationType = undefined;
                        this.repositorySnapshot = undefined;
                        this.configSnapshot = {};
                        return [4 /*yield*/, this.deviceConfigurationService.getLatestConfigurationEvent(this.device.id, config.name)];
                    case 1:
                        configEvent = _b.sent();
                        this.updateConfigSnapshotOnEvent(configEvent, config.name);
                        this.configurationType = config.name;
                        _a = this;
                        return [4 /*yield*/, this.getSnapshotsFromRepository(this.device.type, config.name)];
                    case 2:
                        _a.repositorySnapshots = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DeviceConfigurationComponent.prototype.getSnapshotsFromRepository = function (deviceType, configurationType) {
        return this.deviceConfigurationService.getSnapshotsFromRepository(deviceType, configurationType);
    };
    DeviceConfigurationComponent.prototype.updateConfigSnapshotOnEvent = function (event, configurationType) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var type, _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        type = configurationType || this.configurationType;
                        if (!(event && event.type === type)) return [3 /*break*/, 2];
                        this.configSnapshot = {
                            time: event.time,
                            name: event.text,
                            deviceType: this.device.deviceType,
                            configurationType: type
                        };
                        _a = this.configSnapshot;
                        return [4 /*yield*/, this.deviceConfigurationService.getEventConfigurationBinary(event)];
                    case 1:
                        _a.binary = _b.sent();
                        _b.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    DeviceConfigurationComponent.prototype.onRepositoryConfigSelected = function (config) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.repositorySnapshot = {
                            time: config.creationTime,
                            name: config.name,
                            binaryUrl: config.url,
                            deviceType: config.deviceType,
                            configurationType: config.configurationType
                        };
                        if (!config.url) return [3 /*break*/, 2];
                        _a = this.repositorySnapshot;
                        return [4 /*yield*/, this.deviceConfigurationService.getConfigurationBinaryFile(config.url)];
                    case 1:
                        _a.binary = _b.sent();
                        _b.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    DeviceConfigurationComponent.prototype.ngOnDestroy = function () {
        this.eventsSubscription.unsubscribe();
    };
    DeviceConfigurationComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: DeviceConfigurationService },
        { type: Realtime }
    ]; };
    DeviceConfigurationComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-configuration',
            template: "<div class=\"card card--grid card--grid--fullpage grid__col--4-8 grid__row--6-6\">\n  <!-- DEVICE SUPPORTED CONFIGURATIONS -->\n  <div class=\"card--grid__inner-scroll\">\n    <div class=\"card-header separator\">\n      <h4 class=\"card-title\" translate>Configurations</h4>\n    </div>\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\"><span translate>Device-supported configurations</span></h5>\n    </div>\n    <div class=\"p-r-16\">\n      <c8y-device-configuration-list\n        [items]=\"supportedConfigurations\"\n        [itemIcon]=\"'gears'\"\n        (configSelected)=\"onConfigTypeSelected($event)\"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  <!-- CONFIGURATION PREVIEW -->\n  <div class=\"card--grid__inner-scroll bg-gray-lighter\">\n    <div class=\"card-header separator bg-gray-lighter hidden-xs hidden-sm\">\n      <h4>&nbsp;</h4>\n    </div>\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\"><span translate>Preview</span></h5>\n\n      <!-- EMPTY STATE -->\n      <div class=\"c8y-empty-state text-left\" *ngIf=\"!configurationType\">\n        <h1 [c8yIcon]=\"'file-text'\"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small translate>Select a configuration to preview</small>\n        </p>\n      </div>\n\n      <!-- PREVIEW AVAILABLE STATE -->\n      <c8y-device-configuration-preview\n        *ngIf=\"configurationType\"\n        [device]=\"device\"\n        [configurationType]=\"configurationType\"\n        [configSnapshot]=\"configSnapshot\"\n        [canSaveSnapshot]=\"true\"\n        [operationToTrigger]=\"'c8y_UploadConfigFile'\"\n        [actionButtonText]=\"'Get snapshot from device' | translate\"\n        [actionButtonIcon]=\"'download'\"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n\n  <!-- AVAILABLE SUPPORTED CONFIGURATIONS -->\n  <div class=\"card--grid__inner-scroll\">\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\" translate>Available supported configurations</h5>\n    </div>\n\n    <!-- EMPTY STATE -->\n    <div class=\"c8y-empty-state text-left\" *ngIf=\"!configurationType\">\n      <h1 [c8yIcon]=\"'gears'\"></h1>\n      <p>\n        <strong translate>No selection</strong><br />\n        <small translate>Select a configuration from the device-supported configuration list</small>\n      </p>\n    </div>\n    <div class=\"p-r-16\" *ngIf=\"configurationType\">\n      <c8y-device-configuration-list\n        [items]=\"repositorySnapshots\"\n        [itemIcon]=\"'file-text'\"\n        [emptyState]=\"repositorySnapshotsEmptyState\"\n        [isFilterEnabled]=\"true\"\n        (configSelected)=\"onRepositoryConfigSelected($event)\"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  <!-- CONFIGURATION PREVIEW -->\n  <div class=\"card--grid__inner-scroll bg-gray-lighter\">\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\" translate>Preview</h5>\n\n      <!-- EMPTY STATE -->\n\n      <div class=\"c8y-empty-state text-left\" *ngIf=\"!repositorySnapshot\">\n        <h1 [c8yIcon]=\"'file-text'\"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small *ngIf=\"!configurationType; else noSnapshot\" translate\n            >Select a configuration to preview</small\n          >\n          <ng-template #noSnapshot>\n            <small translate>Select the configuration you want to preview</small>\n          </ng-template>\n        </p>\n      </div>\n\n      <!-- CONFIGURATION SELECTED STATE -->\n      <c8y-device-configuration-preview\n        *ngIf=\"repositorySnapshot\"\n        [device]=\"device\"\n        [configurationType]=\"configurationType\"\n        [configSnapshot]=\"repositorySnapshot\"\n        [operationToTrigger]=\"'c8y_DownloadConfigFile'\"\n        [actionButtonText]=\"'Send configuration to device' | translate\"\n        [actionButtonIcon]=\"'upload'\"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n</div>\n"
        })
    ], DeviceConfigurationComponent);
    return DeviceConfigurationComponent;
}());
export { DeviceConfigurationComponent };
//# sourceMappingURL=data:application/json;base64,