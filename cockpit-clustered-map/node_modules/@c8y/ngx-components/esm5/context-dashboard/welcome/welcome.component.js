import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { gettext, DocsService, DocLink, NavigatorService } from '@c8y/ngx-components';
import { Router } from '@angular/router';
import { TenantService, ApplicationService, IApplication } from '@c8y/client';
var WelcomeToCockpit = /** @class */ (function () {
    function WelcomeToCockpit(tenantService, docs, router, navigator, applicationService) {
        this.tenantService = tenantService;
        this.docs = docs;
        this.router = router;
        this.navigator = navigator;
        this.applicationService = applicationService;
        this.quickLinks = [];
        this.REPORT_NODE = 'Reports';
        this.CONFIGURATION_NODE = 'Configuration';
        this.TRIAL = 'TRIAL';
    }
    WelcomeToCockpit.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            var _this = this;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.tenantService.currentTenantType()];
                    case 1:
                        _a.tenantType = _b.sent();
                        this.setMessage();
                        this.navSubscription = this.navigator.items$.subscribe(function (nodes) {
                            _this.navNodes = nodes;
                        });
                        this.docsSubscription = this.docs.items$.subscribe(function (links) {
                            _this.links = links;
                        });
                        // <---TRIAL & REGULAR TENANT --->
                        this.createConnectSmartphoneQuickLink();
                        return [4 /*yield*/, this.createQuicklinkRegisterDevice()];
                    case 2:
                        _b.sent();
                        // <--- TRIAL TENANT --->
                        if (this.tenantType === this.TRIAL) {
                            this.createQuicklinkUserGuide();
                            return [2 /*return*/];
                        }
                        // <--- REGULAR TENANT --->
                        this.createQuicklinkAddGroup();
                        this.createQuickLinkReports();
                        this.createQuicklinkDataPointLibrary();
                        this.createQuicklinkSmartRules();
                        return [2 /*return*/];
                }
            });
        });
    };
    WelcomeToCockpit.prototype.ngOnDestroy = function () {
        if (this.docsSubscription && !this.docsSubscription.closed) {
            this.docsSubscription.unsubscribe();
        }
        if (this.navSubscription && !this.navSubscription.closed) {
            this.navSubscription.unsubscribe();
        }
    };
    WelcomeToCockpit.prototype.setMessage = function () {
        if (this.tenantType === this.TRIAL) {
            this.welcomeMessage = gettext("\n        The Cockpit application allows you to build IoT applications in minutes.\n        To get started, connect any device to the platform.\n        If you do not have an IoT device to hand, you can start by connecting your smartphone.\n        Click below to be guided through the process.\n      ");
        }
        else {
            this.welcomeMessage = gettext("\n        The Cockpit application provides you with options to manage\n        and monitor Internet of Things assets and data from business perspective.\n      ");
        }
    };
    WelcomeToCockpit.prototype.createQuicklinkAddGroup = function () {
        // comes from angularJS factory c8yQuickLinks
        var addGroup = this.links.find(function (link) { return link.label === 'Add group'; });
        if (addGroup) {
            this.quickLinks.push(addGroup);
        }
    };
    WelcomeToCockpit.prototype.createConnectSmartphoneQuickLink = function () {
        // Provider in SensorPhoneModule defines the
        // 'Connect smartphone' quicklink.
        var connectSmartphone = this.links.find(function (link) { return link.label === 'Connect smartphone'; });
        if (connectSmartphone) {
            this.quickLinks.push(connectSmartphone);
        }
    };
    WelcomeToCockpit.prototype.createQuickLinkReports = function () {
        var _this = this;
        var reports = {
            icon: 'c8y-reports',
            label: gettext('Reports'),
            url: '/export'
        };
        var reportsNode = this.findNavigatorNode(this.REPORT_NODE);
        if (reportsNode && reportsNode.show) {
            reports.click = function () {
                reportsNode.open = true;
                _this.router.navigateByUrl(reports.url);
            };
            this.quickLinks.push(reports);
        }
    };
    WelcomeToCockpit.prototype.createQuicklinkDataPointLibrary = function () {
        var _this = this;
        var dataPointLib = {
            icon: 'c8y-data-points',
            label: gettext('Data point library'),
            url: '/datapointlibrary'
        };
        var configurationNode = this.findNavigatorNode(this.CONFIGURATION_NODE);
        if (configurationNode && configurationNode.show) {
            dataPointLib.click = function () {
                configurationNode.open = true;
                _this.router.navigateByUrl(dataPointLib.url);
            };
            this.quickLinks.push(dataPointLib);
        }
    };
    WelcomeToCockpit.prototype.createQuicklinkSmartRules = function () {
        var _this = this;
        var smartRules = {
            icon: 'c8y-smart-rules',
            label: gettext('Smart rules'),
            url: '/rules'
        };
        var configurationNode = this.findNavigatorNode(this.CONFIGURATION_NODE);
        if (configurationNode && configurationNode.show) {
            smartRules.click = function () {
                configurationNode.open = true;
                _this.router.navigateByUrl(smartRules.url);
            };
            this.quickLinks.push(smartRules);
        }
    };
    WelcomeToCockpit.prototype.createQuicklinkRegisterDevice = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data, deviceManagement, deviceMgmtUrl_1, registerDevice;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.applicationService.listByUser()];
                    case 1:
                        data = (_a.sent()).data;
                        if (data) {
                            deviceManagement = data.find(function (app) { return app.contextPath === 'devicemanagement'; });
                            if (deviceManagement) {
                                deviceMgmtUrl_1 = this.applicationService.getHref(deviceManagement);
                                registerDevice = {
                                    icon: 'c8y-device-connect',
                                    label: gettext('Register device'),
                                    click: function () { return window.open(deviceMgmtUrl_1 + "/#/deviceregistration", '_self'); }
                                };
                                this.quickLinks.push(registerDevice);
                            }
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    WelcomeToCockpit.prototype.createQuicklinkUserGuide = function () {
        var _this = this;
        var userGuide = {
            icon: 'c8y-user',
            label: gettext('User guide'),
            url: '/users-guide/getting-started',
            click: function () {
                var userGuideURL = _this.docs.getUserGuideLink(userGuide.url);
                window.open(userGuideURL);
            }
        };
        this.quickLinks.push(userGuide);
    };
    WelcomeToCockpit.prototype.findNavigatorNode = function (nodeRealName) {
        if (this.navNodes && this.navNodes.length > 0) {
            return this.navNodes.find(function (node) { return node.realName === nodeRealName; });
        }
        return undefined;
    };
    WelcomeToCockpit.ctorParameters = function () { return [
        { type: TenantService },
        { type: DocsService },
        { type: Router },
        { type: NavigatorService },
        { type: ApplicationService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], WelcomeToCockpit.prototype, "config", void 0);
    WelcomeToCockpit = tslib_1.__decorate([
        Component({
            selector: 'c8y-welcome-to-cockpit',
            template: "<div class=\"welcome-widget welcome-cockpit\">\r\n  <div class=\"flex-row\">\r\n    <div class=\"col-xs-12 col-md-5 flex-item-v-stretch p-24\">\r\n      <h2 class=\"text-light\">{{ 'Welcome to Cockpit' | translate }}</h2>\r\n      <p class=\"text-16 text-light p-t-16 p-b-24\">{{ welcomeMessage | translate }}</p>\r\n      <div class=\"card-group interact-grid tight-grid\">\r\n        <div *ngFor=\"let link of quickLinks\" class=\"col-sm-4 col-xs-6\">\r\n          <c8y-quick-link\r\n            (click)=\"link.click ? link.click() : false\"\r\n            [icon]=\"link.icon\"\r\n            [label]=\"link.label\"\r\n            class=\"card\"\r\n          >\r\n          </c8y-quick-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"col-sm-6 welcome-illustration flex-item-v-stretch\"></div> -->\r\n  </div>\r\n</div>\r\n"
        })
    ], WelcomeToCockpit);
    return WelcomeToCockpit;
}());
export { WelcomeToCockpit };
//# sourceMappingURL=data:application/json;base64,