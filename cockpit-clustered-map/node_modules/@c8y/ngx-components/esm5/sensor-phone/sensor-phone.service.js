import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap';
import { SensorPhoneModalComponent } from './sensor-phone-modal.component';
import { AppStateService } from '@c8y/ngx-components';
import { InventoryService } from '@c8y/client';
import { head } from 'lodash-es';
import { gettext } from '@c8y/ngx-components';
var SensorPhoneService = /** @class */ (function () {
    function SensorPhoneService(bsModalService, ui, inventoryService) {
        var _this = this;
        this.bsModalService = bsModalService;
        this.ui = ui;
        this.inventoryService = inventoryService;
        this.HTTP_STATUS_CODE = {
            OK: 200,
            CREATED: 201
        };
        this.PHONE_GROUP_FRAGMENT = 'c8y_IsSensorPhoneGroup';
        this.PHONE_GROUP_NAME = gettext('Phones');
        this.ui.currentTenant.subscribe(function (data) {
            if (data) {
                _this.domainName = data.domainName;
                _this.tenantId = data.name;
            }
        });
    }
    SensorPhoneService.prototype.createModal = function () {
        this.bsModalService.show(SensorPhoneModalComponent, {
            backdrop: 'static',
            class: 'lg'
        });
    };
    SensorPhoneService.prototype.getHost = function () {
        return this.domainName.substring(this.domainName.indexOf('.') + 1);
    };
    SensorPhoneService.prototype.getTenantName = function () {
        return this.domainName.split('.')[0];
    };
    SensorPhoneService.prototype.getTenantId = function () {
        return this.tenantId;
    };
    SensorPhoneService.prototype.checkPhoneGroupExists = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, data, res;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.inventoryService.list({
                            fragmentType: this.PHONE_GROUP_FRAGMENT
                        })];
                    case 1:
                        _a = _b.sent(), data = _a.data, res = _a.res;
                        if (data && res && res.status === this.HTTP_STATUS_CODE.OK) {
                            return [2 /*return*/, head(data)];
                        }
                        return [2 /*return*/, null];
                }
            });
        });
    };
    SensorPhoneService.prototype.addPhoneGroup = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var group;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.checkPhoneGroupExists()];
                    case 1:
                        group = _a.sent();
                        if (group) {
                            return [2 /*return*/, group];
                        }
                        return [4 /*yield*/, this.createPhoneGroup()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    SensorPhoneService.prototype.createPhoneGroup = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var newPhoneGroup, _a, data, res;
            var _b;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        newPhoneGroup = (_b = {
                                c8y_Global: {},
                                c8y_IsDeviceGroup: {},
                                type: 'c8y_DeviceGroup',
                                name: this.PHONE_GROUP_NAME
                            },
                            _b[this.PHONE_GROUP_FRAGMENT] = {},
                            _b);
                        return [4 /*yield*/, this.inventoryService.create(newPhoneGroup)];
                    case 1:
                        _a = _c.sent(), data = _a.data, res = _a.res;
                        if (data && res && res.status === this.HTTP_STATUS_CODE.CREATED) {
                            return [2 /*return*/, data];
                        }
                        return [2 /*return*/, null];
                }
            });
        });
    };
    SensorPhoneService.prototype.generateRegistrationData = function (deviceId) {
        var res = 'c8y://' + this.getTenantName() + '.' + this.getHost() + '/?deviceId=' + deviceId;
        return res;
    };
    SensorPhoneService.ctorParameters = function () { return [
        { type: BsModalService },
        { type: AppStateService },
        { type: InventoryService }
    ]; };
    SensorPhoneService = tslib_1.__decorate([
        Injectable()
    ], SensorPhoneService);
    return SensorPhoneService;
}());
export { SensorPhoneService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vuc29yLXBob25lLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3NlbnNvci1waG9uZS8iLCJzb3VyY2VzIjpbInNlbnNvci1waG9uZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0MsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUc5QztJQVVFLDRCQUNVLGNBQThCLEVBQzlCLEVBQW1CLEVBQ25CLGdCQUFrQztRQUg1QyxpQkFXQztRQVZTLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixPQUFFLEdBQUYsRUFBRSxDQUFpQjtRQUNuQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBWm5DLHFCQUFnQixHQUFHO1lBQzFCLEVBQUUsRUFBRSxHQUFHO1lBQ1AsT0FBTyxFQUFFLEdBQUc7U0FDYixDQUFDO1FBR00seUJBQW9CLEdBQUcsd0JBQXdCLENBQUM7UUFDdkMscUJBQWdCLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBT3BELElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxVQUFBLElBQUk7WUFDbEMsSUFBSSxJQUFJLEVBQUU7Z0JBQ1IsS0FBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO2dCQUNsQyxLQUFJLENBQUMsUUFBUSxHQUFHLElBQUks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JztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcCc7XG5pbXBvcnQgeyBTZW5zb3JQaG9uZU1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9zZW5zb3ItcGhvbmUtbW9kYWwuY29tcG9uZW50JztcbmltcG9ydCB7IEFwcFN0YXRlU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgSW52ZW50b3J5U2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGhlYWQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU2Vuc29yUGhvbmVTZXJ2aWNlIHtcbiAgcmVhZG9ubHkgSFRUUF9TVEFUVVNfQ09ERSA9IHtcbiAgICBPSzogMjAwLFxuICAgIENSRUFURUQ6IDIwMVxuICB9O1xuICBwcml2YXRlIGRvbWFpbk5hbWU6IHN0cmluZztcbiAgcHJpdmF0ZSB0ZW5hbnRJZDogc3RyaW5nO1xuICBwcml2YXRlIFBIT05FX0dST1VQX0ZSQUdNRU5UID0gJ2M4eV9Jc1NlbnNvclBob25lR3JvdXAnO1xuICBwcml2YXRlIHJlYWRvbmx5IFBIT05FX0dST1VQX05BTUUgPSBnZXR0ZXh0KCdQaG9uZXMnKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGJzTW9kYWxTZXJ2aWNlOiBCc01vZGFsU2VydmljZSxcbiAgICBwcml2YXRlIHVpOiBBcHBTdGF0ZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBpbnZlbnRvcnlTZXJ2aWNlOiBJbnZlbnRvcnlTZXJ2aWNlXG4gICkge1xuICAgIHRoaXMudWkuY3VycmVudFRlbmFudC5zdWJzY3JpYmUoZGF0YSA9PiB7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICB0aGlzLmRvbWFpbk5hbWUgPSBkYXRhLmRvbWFpbk5hbWU7XG4gICAgICAgIHRoaXMudGVuYW50SWQgPSBkYXRhLm5hbWU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVNb2RhbCgpIHtcbiAgICB0aGlzLmJzTW9kYWxTZXJ2aWNlLnNob3coU2Vuc29yUGhvbmVNb2RhbENvbXBvbmVudCwge1xuICAgICAgYmFja2Ryb3A6ICdzdGF0aWMnLFxuICAgICAgY2xhc3M6ICdsZydcbiAgICB9KTtcbiAgfVxuXG4gIGdldEhvc3QoKSB7XG4gICAgcmV0dXJuIHRoaXMuZG9tYWluTmFtZS5zdWJzdHJpbmcodGhpcy5kb21haW5OYW1lLmluZGV4T2YoJy4nKSArIDEpO1xuICB9XG5cbiAgZ2V0VGVuYW50TmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5kb21haW5OYW1lLnNwbGl0KCcuJylbMF07XG4gIH1cblxuICBnZXRUZW5hbnRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy50ZW5hbnRJZDtcbiAgfVxuXG4gIGFzeW5jIGNoZWNrUGhvbmVHcm91cEV4aXN0cygpIHtcbiAgICBjb25zdCB7IGRhdGEsIHJlcyB9ID0gYXdhaXQgdGhpcy5pbnZlbnRvcnlTZXJ2aWNlLmxpc3Qoe1xuICAgICAgZnJhZ21lbnRUeXBlOiB0aGlzLlBIT05FX0dST1VQX0ZSQUdNRU5UXG4gICAgfSk7XG4gICAgaWYgKGRhdGEgJiYgcmVzICYmIHJlcy5zdGF0dXMgPT09IHRoaXMuSFRUUF9TVEFUVVNfQ09ERS5PSykge1xuICAgICAgcmV0dXJuIGhlYWQoZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgYXN5bmMgYWRkUGhvbmVHcm91cCgpIHtcbiAgICBjb25zdCBncm91cCA9IGF3YWl0IHRoaXMuY2hlY2tQaG9uZUdyb3VwRXhpc3RzKCk7XG4gICAgaWYgKGdyb3VwKSB7XG4gICAgICByZXR1cm4gZ3JvdXA7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCB0aGlzLmNyZWF0ZVBob25lR3JvdXAoKTtcbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZVBob25lR3JvdXAoKSB7XG4gICAgY29uc3QgbmV3UGhvbmVHcm91cCA9IHtcbiAgICAgIGM4eV9HbG9iYWw6IHt9LFxuICAgICAgYzh5X0lzRGV2aWNlR3JvdXA6IHt9LFxuICAgICAgdHlwZTogJ2M4eV9EZXZpY2VHcm91cCcsXG4gICAgICBuYW1lOiB0aGlzLlBIT05FX0dST1VQX05BTUUsXG4gICAgICBbdGhpcy5QSE9ORV9HUk9VUF9GUkFHTUVOVF06IHt9XG4gICAgfTtcblxuICAgIGNvbnN0IHsgZGF0YSwgcmVzIH0gPSBhd2FpdCB0aGlzLmludmVudG9yeVNlcnZpY2UuY3JlYXRlKG5ld1Bob25lR3JvdXApO1xuICAgIGlmIChkYXRhICYmIHJlcyAmJiByZXMuc3RhdHVzID09PSB0aGlzLkhUVFBfU1RBVFVTX0NPREUuQ1JFQVRFRCkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgZ2VuZXJhdGVSZWdpc3RyYXRpb25EYXRhKGRldmljZUlkKSB7XG4gICAgY29uc3QgcmVzID0gJ2M4eTovLycgKyB0aGlzLmdldFRlbmFudE5hbWUoKSArICcuJyArIHRoaXMuZ2V0SG9zdCgpICsgJy8/ZGV2aWNlSWQ9JyArIGRldmljZUlkO1xuICAgIHJldHVybiByZXM7XG4gIH1cbn1cbiJdfQ==