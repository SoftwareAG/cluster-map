import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { BasicAuth, FetchClient, ICredentials, IUser, UserService } from '@c8y/client';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { AlertService } from '../alert/alert.service';
import { AppStateService } from '../common/ui-state.service';
import { UserPreferencesService } from '../common/user-preferences/user-preferences.service';
import { gettext } from '../i18n/gettext';
import { TranslateService } from '../i18n/translate.service';
import { take } from 'rxjs/operators';
var UserEditModalComponent = /** @class */ (function () {
    function UserEditModalComponent(modal, user, ui, auth, client, alert, translate, userPreferences, modalService) {
        var _this = this;
        this.modal = modal;
        this.user = user;
        this.ui = ui;
        this.auth = auth;
        this.client = client;
        this.alert = alert;
        this.translate = translate;
        this.userPreferences = userPreferences;
        this.modalService = modalService;
        this.loading = false;
        this.lang = this.ui.state.lang;
        this.modalService.onHide.pipe(take(1)).subscribe(function (reason) {
            if (reason !== null && _this.changedLang !== undefined) {
                _this.translate.switchToLanguage(_this.lang);
            }
        });
    }
    UserEditModalComponent.prototype.onDismiss = function () {
        if (this.changedLang !== undefined) {
            this.translate.switchToLanguage(this.lang);
        }
        this.modal.hide();
    };
    UserEditModalComponent.prototype.onLanguage = function (lang) {
        this.changedLang = lang;
        this.translate.switchToLanguage(this.changedLang);
    };
    UserEditModalComponent.prototype.updateAndClose = function (user) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var currentUserResult, e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.loading = true;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 6, 7, 8]);
                        return [4 /*yield*/, this.user.updateCurrent(user)];
                    case 2:
                        _a.sent();
                        if (user.password) {
                            this.updateCredentials(user.password);
                        }
                        return [4 /*yield*/, this.user.current()];
                    case 3:
                        currentUserResult = _a.sent();
                        this.ui.currentUser.next(currentUserResult.data);
                        if (!(this.changedLang && this.changedLang !== this.lang)) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.persistLanguage(this.changedLang)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        this.modal.hide();
                        this.alert.success(gettext('User saved.'));
                        return [3 /*break*/, 8];
                    case 6:
                        e_1 = _a.sent();
                        this.alert.addServerFailure(e_1);
                        return [3 /*break*/, 8];
                    case 7:
                        this.loading = false;
                        return [7 /*endfinally*/];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    UserEditModalComponent.prototype.persistLanguage = function (lang) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.translate.saveInLocalStorage(lang);
                this.userPreferences.set('language', lang);
                return [2 /*return*/];
            });
        });
    };
    UserEditModalComponent.prototype.updateCredentials = function (password) {
        var newCredentials = {
            password: password,
            user: this.ui.currentUser.value.id,
            tenant: this.client.tenant
        };
        this.auth.updateCredentials(newCredentials);
    };
    UserEditModalComponent.ctorParameters = function () { return [
        { type: BsModalRef },
        { type: UserService },
        { type: AppStateService },
        { type: BasicAuth },
        { type: FetchClient },
        { type: AlertService },
        { type: TranslateService },
        { type: UserPreferencesService },
        { type: BsModalService }
    ]; };
    UserEditModalComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-user-edit-modal',
            template: "<c8y-modal\n  [customFooter]=\"true\"\n  [title]=\"'Edit user' | translate\"\n  (onDismiss)=\"onDismiss()\"\n>\n  <c8y-user-edit\n    [lang]=\"lang\"\n    [user]=\"ui.currentUser | async\"\n    [loading]=\"loading\"\n    (onLanguage)=\"onLanguage($event)\"\n    (onUser)=\"updateAndClose($event)\"\n    (onCancel)=\"onDismiss()\"\n  >\n  </c8y-user-edit>\n</c8y-modal>"
        })
    ], UserEditModalComponent);
    return UserEditModalComponent;
}());
export { UserEditModalComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1lZGl0LW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL3VzZXIvdXNlci1lZGl0LW1vZGFsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2RixPQUFPLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0scURBQXFELENBQUM7QUFDN0YsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRTdELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU10QztJQU1FLGdDQUNTLEtBQWlCLEVBQ2pCLElBQWlCLEVBQ2pCLEVBQW1CLEVBQ2xCLElBQWUsRUFDZixNQUFtQixFQUNuQixLQUFtQixFQUNuQixTQUEyQixFQUMzQixlQUF1QyxFQUN2QyxZQUE0QjtRQVR0QyxpQkFpQkM7UUFoQlEsVUFBSyxHQUFMLEtBQUssQ0FBWTtRQUNqQixTQUFJLEdBQUosSUFBSSxDQUFhO1FBQ2pCLE9BQUUsR0FBRixFQUFFLENBQWlCO1FBQ2xCLFNBQUksR0FBSixJQUFJLENBQVc7UUFDZixXQUFNLEdBQU4sTUFBTSxDQUFhO1FBQ25CLFVBQUssR0FBTCxLQUFLLENBQWM7UUFDbkIsY0FBUyxHQUFULFNBQVMsQ0FBa0I7UUFDM0Isb0JBQWUsR0FBZixlQUFlLENBQXdCO1FBQ3ZDLGlCQUFZLEdBQVosWUFBWSxDQUFnQjtRQVh0QyxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBYWQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFFLE1BQWM7WUFDL0QsSUFBSSxNQUFNLEtBQUssSUFBSSxJQUFJLEtBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxFQUFFO2dCQUNyRCxLQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUM1QztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELDBDQUFTLEdBQVQ7UUFDRSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzVDO1FBQ0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsMkNBQVUsR0FBVixVQUFXLElBQUk7UUFDYixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUssK0NBQWMsR0FBcEIsVUFBcUIsSUFBSTs7Ozs7O3dCQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQzs7Ozt3QkFFbEIscUJBQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUE7O3dCQUFuQyxTQUFtQyxDQUFDO3dCQUNwQyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7NEJBQ2pCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7eUJBQ3ZDO3dCQUN5QixxQkFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFBOzt3QkFBN0MsaUJBQWlCLEdBQUcsU0FBeUI7d0JBQ25ELElBQUksQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQzs2QkFDN0MsQ0FBQSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQSxFQUFsRCx3QkFBa0Q7d0JBQ3BELHFCQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFBOzt3QkFBNUMsU0FBNEMsQ0FBQzs7O3dCQUUvQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO3dCQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQzs7Ozt3QkFFM0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFDLENBQUMsQ0FBQzs7O3dCQUUvQixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQzs7Ozs7O0tBRXhCO0lBRUssZ0RBQWUsR0FBckIsVUFBc0IsSUFBSTs7O2dCQUN4QixJQUFJLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN4QyxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7Ozs7S0FDNUM7SUFFTyxrREFBaUIsR0FBekIsVUFBMEIsUUFBZ0I7UUFDeEMsSUFBTSxjQUFjLEdBQWlCO1lBQ25DLFFBQVEsVUFBQTtZQUNSLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNsQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNO1NBQzNCLENBQUM7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O2dCQS9EZSxVQUFVO2dCQUNYLFdBQVc7Z0JBQ2IsZUFBZTtnQkFDWixTQUFTO2dCQUNQLFdBQVc7Z0JBQ1osWUFBWTtnQkFDUixnQkFBZ0I7Z0JBQ1Ysc0JBQXNCO2dCQUN6QixjQUFjOztJQWYzQixzQkFBc0I7UUFKbEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQiw0WEFBK0M7U0FDaEQsQ0FBQztPQUNXLHNCQUFzQixDQXVFbEM7SUFBRCw2QkFBQztDQUFBLEFBdkVELElBdUVDO1NBdkVZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzaWNBdXRoLCBGZXRjaENsaWVudCwgSUNyZWRlbnRpYWxzLCBJVXNlciwgVXNlclNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBCc01vZGFsUmVmLCBCc01vZGFsU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vYWxlcnQvYWxlcnQuc2VydmljZSc7XG5pbXBvcnQgeyBBcHBTdGF0ZVNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vdWktc3RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBVc2VyUHJlZmVyZW5jZXNTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL3VzZXItcHJlZmVyZW5jZXMvdXNlci1wcmVmZXJlbmNlcy5zZXJ2aWNlJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICcuLi9pMThuL2dldHRleHQnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJy4uL2kxOG4vdHJhbnNsYXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktdXNlci1lZGl0LW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItZWRpdC1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVXNlckVkaXRNb2RhbENvbXBvbmVudCB7XG4gIGN1cnJlbnRVc2VyOiBJVXNlcjtcbiAgbGFuZzogc3RyaW5nO1xuICBjaGFuZ2VkTGFuZzogc3RyaW5nO1xuICBsb2FkaW5nID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIG1vZGFsOiBCc01vZGFsUmVmLFxuICAgIHB1YmxpYyB1c2VyOiBVc2VyU2VydmljZSxcbiAgICBwdWJsaWMgdWk6IEFwcFN0YXRlU2VydmljZSxcbiAgICBwcml2YXRlIGF1dGg6IEJhc2ljQXV0aCxcbiAgICBwcml2YXRlIGNsaWVudDogRmV0Y2hDbGllbnQsXG4gICAgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlOiBUcmFuc2xhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgdXNlclByZWZlcmVuY2VzOiBVc2VyUHJlZmVyZW5jZXNTZXJ2aWNlLFxuICAgIHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBCc01vZGFsU2VydmljZVxuICApIHtcbiAgICB0aGlzLmxhbmcgPSB0aGlzLnVpLnN0YXRlLmxhbmc7XG4gICAgdGhpcy5tb2RhbFNlcnZpY2Uub25IaWRlLnBpcGUodGFrZSgxKSkuc3Vic2NyaWJlKCggcmVhc29uOiBzdHJpbmcgKSA9PiB7XG4gICAgICBpZiAocmVhc29uICE9PSBudWxsICYmIHRoaXMuY2hhbmdlZExhbmcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLnRyYW5zbGF0ZS5zd2l0Y2hUb0xhbmd1YWdlKHRoaXMubGFuZyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBvbkRpc21pc3MoKSB7XG4gICAgaWYgKHRoaXMuY2hhbmdlZExhbmcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy50cmFuc2xhdGUuc3dpdGNoVG9MYW5ndWFnZSh0aGlzLmxhbmcpO1xuICAgIH1cbiAgICB0aGlzLm1vZGFsLmhpZGUoKTtcbiAgfVxuXG4gIG9uTGFuZ3VhZ2UobGFuZykge1xuICAgIHRoaXMuY2hhbmdlZExhbmcgPSBsYW5nO1xuICAgIHRoaXMudHJhbnNsYXRlLnN3aXRjaFRvTGFuZ3VhZ2UodGhpcy5jaGFuZ2VkTGFuZyk7XG4gIH1cblxuICBhc3luYyB1cGRhdGVBbmRDbG9zZSh1c2VyKSB7XG4gICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy51c2VyLnVwZGF0ZUN1cnJlbnQodXNlcik7XG4gICAgICBpZiAodXNlci5wYXNzd29yZCkge1xuICAgICAgICB0aGlzLnVwZGF0ZUNyZWRlbnRpYWxzKHVzZXIucGFzc3dvcmQpO1xuICAgICAgfVxuICAgICAgY29uc3QgY3VycmVudFVzZXJSZXN1bHQgPSBhd2FpdCB0aGlzLnVzZXIuY3VycmVudCgpO1xuICAgICAgdGhpcy51aS5jdXJyZW50VXNlci5uZXh0KGN1cnJlbnRVc2VyUmVzdWx0LmRhdGEpO1xuICAgICAgaWYgKHRoaXMuY2hhbmdlZExhbmcgJiYgdGhpcy5jaGFuZ2VkTGFuZyAhPT0gdGhpcy5sYW5nKSB7XG4gICAgICAgIGF3YWl0IHRoaXMucGVyc2lzdExhbmd1YWdlKHRoaXMuY2hhbmdlZExhbmcpO1xuICAgICAgfVxuICAgICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnVXNlciBzYXZlZC4nKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGUpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBwZXJzaXN0TGFuZ3VhZ2UobGFuZykge1xuICAgIHRoaXMudHJhbnNsYXRlLnNhdmVJbkxvY2FsU3RvcmFnZShsYW5nKTtcbiAgICB0aGlzLnVzZXJQcmVmZXJlbmNlcy5zZXQoJ2xhbmd1YWdlJywgbGFuZyk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUNyZWRlbnRpYWxzKHBhc3N3b3JkOiBzdHJpbmcpIHtcbiAgICBjb25zdCBuZXdDcmVkZW50aWFsczogSUNyZWRlbnRpYWxzID0ge1xuICAgICAgcGFzc3dvcmQsXG4gICAgICB1c2VyOiB0aGlzLnVpLmN1cnJlbnRVc2VyLnZhbHVlLmlkLFxuICAgICAgdGVuYW50OiB0aGlzLmNsaWVudC50ZW5hbnRcbiAgICB9O1xuICAgIHRoaXMuYXV0aC51cGRhdGVDcmVkZW50aWFscyhuZXdDcmVkZW50aWFscyk7XG4gIH1cbn1cbiJdfQ==