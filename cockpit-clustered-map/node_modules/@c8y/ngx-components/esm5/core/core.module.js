import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { ActionBarModule } from './action-bar/action-bar.module';
import { ActionModule } from './action/action.module';
import { AlertModule } from './alert/alert.module';
import { BootstrapModule } from './bootstrap/bootstrap.module';
import { BreadcrumbModule } from './breadcrumb/breadcrumb.module';
import { CommonModule } from './common/common.module';
import { DataGridModule } from './data-grid/data-grid.module';
import { DeviceGridModule } from './device-grid/device-grid.module';
import { DropAreaModule } from './drop-area/drop-area.module';
import { HeaderModule } from './header/header.module';
import { LoginModule } from './login/login.module';
import { ModalModule } from './modal/modal.module';
import { NavigatorModule } from './navigator/navigator.module';
import { AuthenticationModule } from './authentication/authentication.module';
import { SearchModule } from './search/search.module';
import { SelectModule } from './select/select.module';
import { TabsModule } from './tabs/tabs.module';
import { UserModule } from './user/user.module';
import { FormsModule as c8yFormsModule } from './forms/forms.module';
import { DeviceStatusModule } from './device-status/device-status.module';
import { DocsModule } from './docs/docs.module';
import { DynamicComponentModule } from './dynamic-component/dynamic-component.module';
import { DashboardModule } from './dashboard/dashboard.module';
import { StepperModule as c8yStepperModule } from './stepper/stepper.module';
import { ListGroupModule } from './list-group/list-group.module';
try {
    // Levarage webpack to load ngx-bootstrap style
    // it's here and not in @c8y/styles because it's not a dependency of styles
    // @ts-ignore
    // tslint:disable-next-line:no-var-requires
    require('ngx-bootstrap/datepicker/bs-datepicker.css');
}
catch (e) {
    // empty block
}
var CoreModule = /** @class */ (function () {
    function CoreModule() {
    }
    CoreModule_1 = CoreModule;
    CoreModule.forRoot = function () {
        return {
            ngModule: CoreModule_1,
            providers: tslib_1.__spread(CommonModule.providers(), LoginModule.providers())
        };
    };
    var CoreModule_1;
    CoreModule = CoreModule_1 = tslib_1.__decorate([
        NgModule({
            exports: [
                ActionBarModule,
                ActionModule,
                AlertModule,
                BootstrapModule,
                BreadcrumbModule,
                CommonModule,
                DataGridModule,
                DeviceGridModule,
                DropAreaModule,
                HeaderModule,
                LoginModule,
                ModalModule,
                NavigatorModule,
                AuthenticationModule,
                SearchModule,
                SelectModule,
                TabsModule,
                UserModule,
                c8yFormsModule,
                DeviceStatusModule,
                DocsModule,
                c8yStepperModule,
                DynamicComponentModule,
                DashboardModule,
                ListGroupModule
            ]
        })
    ], CoreModule);
    return CoreModule;
}());
export { CoreModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9jb3JlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDakUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsV0FBVyxJQUFJLGNBQWMsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUN0RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGFBQWEsSUFBSSxnQkFBZ0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzdFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVqRSxJQUFJO0lBQ0YsK0NBQStDO0lBQy9DLDJFQUEyRTtJQUMzRSxhQUFhO0lBQ2IsMkNBQTJDO0lBQzNDLE9BQU8sQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO0NBQ3ZEO0FBQUMsT0FBTyxDQUFDLEVBQUU7SUFDVixjQUFjO0NBQ2Y7QUErQkQ7SUFBQTtJQU9BLENBQUM7bUJBUFksVUFBVTtJQUNkLGtCQUFPLEdBQWQ7UUFDRSxPQUFPO1lBQ0wsUUFBUSxFQUFFLFlBQVU7WUFDcEIsU0FBUyxtQkFBTSxZQUFZLENBQUMsU0FBUyxFQUFFLEVBQUssV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ3JFLENBQUM7SUFDSixDQUFDOztJQU5VLFVBQVU7UUE3QnRCLFFBQVEsQ0FBQztZQUNSLE9BQU8sRUFBRTtnQkFDUCxlQUFlO2dCQUNmLFlBQVk7Z0JBQ1osV0FBVztnQkFDWCxlQUFlO2dCQUNmLGdCQUFnQjtnQkFDaEIsWUFBWTtnQkFDWixjQUFjO2dCQUNkLGdCQUFnQjtnQkFDaEIsY0FBYztnQkFDZCxZQUFZO2dCQUNaLFdBQVc7Z0JBQ1gsV0FBVztnQkFDWCxlQUFlO2dCQUNmLG9CQUFvQjtnQkFDcEIsWUFBWTtnQkFDWixZQUFZO2dCQUNaLFVBQVU7Z0JBQ1YsVUFBVTtnQkFDVixjQUFjO2dCQUNkLGtCQUFrQjtnQkFDbEIsVUFBVTtnQkFDVixnQkFBZ0I7Z0JBQ2hCLHNCQUFzQjtnQkFDdEIsZUFBZTtnQkFDZixlQUFlO2FBQ2hCO1NBQ0YsQ0FBQztPQUNXLFVBQVUsQ0FPdEI7SUFBRCxpQkFBQztDQUFBLEFBUEQsSUFPQztTQVBZLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uQmFyTW9kdWxlIH0gZnJvbSAnLi9hY3Rpb24tYmFyL2FjdGlvbi1iYXIubW9kdWxlJztcbmltcG9ydCB7IEFjdGlvbk1vZHVsZSB9IGZyb20gJy4vYWN0aW9uL2FjdGlvbi5tb2R1bGUnO1xuaW1wb3J0IHsgQWxlcnRNb2R1bGUgfSBmcm9tICcuL2FsZXJ0L2FsZXJ0Lm1vZHVsZSc7XG5pbXBvcnQgeyBCb290c3RyYXBNb2R1bGUgfSBmcm9tICcuL2Jvb3RzdHJhcC9ib290c3RyYXAubW9kdWxlJztcbmltcG9ydCB7IEJyZWFkY3J1bWJNb2R1bGUgfSBmcm9tICcuL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5tb2R1bGUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi9jb21tb24vY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBEYXRhR3JpZE1vZHVsZSB9IGZyb20gJy4vZGF0YS1ncmlkL2RhdGEtZ3JpZC5tb2R1bGUnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZE1vZHVsZSB9IGZyb20gJy4vZGV2aWNlLWdyaWQvZGV2aWNlLWdyaWQubW9kdWxlJztcbmltcG9ydCB7IERyb3BBcmVhTW9kdWxlIH0gZnJvbSAnLi9kcm9wLWFyZWEvZHJvcC1hcmVhLm1vZHVsZSc7XG5pbXBvcnQgeyBIZWFkZXJNb2R1bGUgfSBmcm9tICcuL2hlYWRlci9oZWFkZXIubW9kdWxlJztcbmltcG9ydCB7IExvZ2luTW9kdWxlIH0gZnJvbSAnLi9sb2dpbi9sb2dpbi5tb2R1bGUnO1xuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICcuL21vZGFsL21vZGFsLm1vZHVsZSc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JNb2R1bGUgfSBmcm9tICcuL25hdmlnYXRvci9uYXZpZ2F0b3IubW9kdWxlJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uTW9kdWxlIH0gZnJvbSAnLi9hdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbi5tb2R1bGUnO1xuaW1wb3J0IHsgU2VhcmNoTW9kdWxlIH0gZnJvbSAnLi9zZWFyY2gvc2VhcmNoLm1vZHVsZSc7XG5pbXBvcnQgeyBTZWxlY3RNb2R1bGUgfSBmcm9tICcuL3NlbGVjdC9zZWxlY3QubW9kdWxlJztcbmltcG9ydCB7IFRhYnNNb2R1bGUgfSBmcm9tICcuL3RhYnMvdGFicy5tb2R1bGUnO1xuaW1wb3J0IHsgVXNlck1vZHVsZSB9IGZyb20gJy4vdXNlci91c2VyLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSBhcyBjOHlGb3Jtc01vZHVsZSB9IGZyb20gJy4vZm9ybXMvZm9ybXMubW9kdWxlJztcbmltcG9ydCB7IERldmljZVN0YXR1c01vZHVsZSB9IGZyb20gJy4vZGV2aWNlLXN0YXR1cy9kZXZpY2Utc3RhdHVzLm1vZHVsZSc7XG5pbXBvcnQgeyBEb2NzTW9kdWxlIH0gZnJvbSAnLi9kb2NzL2RvY3MubW9kdWxlJztcbmltcG9ydCB7IER5bmFtaWNDb21wb25lbnRNb2R1bGUgfSBmcm9tICcuL2R5bmFtaWMtY29tcG9uZW50L2R5bmFtaWMtY29tcG9uZW50Lm1vZHVsZSc7XG5pbXBvcnQgeyBEYXNoYm9hcmRNb2R1bGUgfSBmcm9tICcuL2Rhc2hib2FyZC9kYXNoYm9hcmQubW9kdWxlJztcbmltcG9ydCB7IFN0ZXBwZXJNb2R1bGUgYXMgYzh5U3RlcHBlck1vZHVsZSB9IGZyb20gJy4vc3RlcHBlci9zdGVwcGVyLm1vZHVsZSc7XG5pbXBvcnQgeyBMaXN0R3JvdXBNb2R1bGUgfSBmcm9tICcuL2xpc3QtZ3JvdXAvbGlzdC1ncm91cC5tb2R1bGUnO1xuXG50cnkge1xuICAvLyBMZXZhcmFnZSB3ZWJwYWNrIHRvIGxvYWQgbmd4LWJvb3RzdHJhcCBzdHlsZVxuICAvLyBpdCdzIGhlcmUgYW5kIG5vdCBpbiBAYzh5L3N0eWxlcyBiZWNhdXNlIGl0J3Mgbm90IGEgZGVwZW5kZW5jeSBvZiBzdHlsZXNcbiAgLy8gQHRzLWlnbm9yZVxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tdmFyLXJlcXVpcmVzXG4gIHJlcXVpcmUoJ25neC1ib290c3RyYXAvZGF0ZXBpY2tlci9icy1kYXRlcGlja2VyLmNzcycpO1xufSBjYXRjaCAoZSkge1xuICAvLyBlbXB0eSBibG9ja1xufVxuXG5ATmdNb2R1bGUoe1xuICBleHBvcnRzOiBbXG4gICAgQWN0aW9uQmFyTW9kdWxlLFxuICAgIEFjdGlvbk1vZHVsZSxcbiAgICBBbGVydE1vZHVsZSxcbiAgICBCb290c3RyYXBNb2R1bGUsXG4gICAgQnJlYWRjcnVtYk1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRGF0YUdyaWRNb2R1bGUsXG4gICAgRGV2aWNlR3JpZE1vZHVsZSxcbiAgICBEcm9wQXJlYU1vZHVsZSxcbiAgICBIZWFkZXJNb2R1bGUsXG4gICAgTG9naW5Nb2R1bGUsXG4gICAgTW9kYWxNb2R1bGUsXG4gICAgTmF2aWdhdG9yTW9kdWxlLFxuICAgIEF1dGhlbnRpY2F0aW9uTW9kdWxlLFxuICAgIFNlYXJjaE1vZHVsZSxcbiAgICBTZWxlY3RNb2R1bGUsXG4gICAgVGFic01vZHVsZSxcbiAgICBVc2VyTW9kdWxlLFxuICAgIGM4eUZvcm1zTW9kdWxlLFxuICAgIERldmljZVN0YXR1c01vZHVsZSxcbiAgICBEb2NzTW9kdWxlLFxuICAgIGM4eVN0ZXBwZXJNb2R1bGUsXG4gICAgRHluYW1pY0NvbXBvbmVudE1vZHVsZSxcbiAgICBEYXNoYm9hcmRNb2R1bGUsXG4gICAgTGlzdEdyb3VwTW9kdWxlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQ29yZU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCkge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQ29yZU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogWy4uLkNvbW1vbk1vZHVsZS5wcm92aWRlcnMoKSwgLi4uTG9naW5Nb2R1bGUucHJvdmlkZXJzKCldXG4gICAgfTtcbiAgfVxufVxuIl19