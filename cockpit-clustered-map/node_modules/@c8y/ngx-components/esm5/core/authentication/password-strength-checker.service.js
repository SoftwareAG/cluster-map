import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { PasswordStrength } from '@c8y/client';
import { filter } from 'lodash-es';
import { gettext } from '../i18n/gettext';
var PasswordStrengthCheckerService = /** @class */ (function () {
    function PasswordStrengthCheckerService() {
        this.GREEN = {
            colorName: 'green',
            color: 'rgb(0, 128, 0)',
            description: gettext('strong'),
            passwordStrength: PasswordStrength.GREEN
        };
        this.YELLOW = {
            colorName: 'yellow',
            color: 'rgb(255, 204, 51)',
            description: gettext('medium'),
            passwordStrength: PasswordStrength.YELLOW
        };
        this.RED = {
            colorName: 'red',
            color: 'rgb(170, 0, 51)',
            description: gettext('weak'),
            passwordStrength: PasswordStrength.RED
        };
    }
    PasswordStrengthCheckerService.prototype.hasLowerCase = function (password) {
        return (password.search(/[a-z]/) !== -1);
    };
    PasswordStrengthCheckerService.prototype.hasUpperCase = function (password) {
        return (password.search(/[A-Z]/) !== -1);
    };
    PasswordStrengthCheckerService.prototype.hasNumbers = function (password) {
        return (password.search(/[0-9]/) !== -1);
    };
    PasswordStrengthCheckerService.prototype.hasSpecialChars = function (password) {
        return (password.search(/[^0-9a-zA-Z]+/) !== -1);
    };
    PasswordStrengthCheckerService.prototype.getStrengthColor = function (password) {
        var passwordStrength = filter([
            this.hasLowerCase(password),
            this.hasUpperCase(password),
            this.hasNumbers(password),
            this.hasSpecialChars(password)
        ]).length;
        if (passwordStrength > 2) {
            return this.GREEN;
        }
        else if (passwordStrength >= 2) {
            return this.YELLOW;
        }
        else {
            return this.RED;
        }
    };
    PasswordStrengthCheckerService = tslib_1.__decorate([
        Injectable()
    ], PasswordStrengthCheckerService);
    return PasswordStrengthCheckerService;
}());
export { PasswordStrengthCheckerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtc3RyZW5ndGgtY2hlY2tlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvYXV0aGVudGljYXRpb24vcGFzc3dvcmQtc3RyZW5ndGgtY2hlY2tlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRW5DLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUcxQztJQURBO1FBR1UsVUFBSyxHQUEwQjtZQUNyQyxTQUFTLEVBQUUsT0FBTztZQUNsQixLQUFLLEVBQUUsZ0JBQWdCO1lBQ3ZCLFdBQVcsRUFBRSxPQUFPLENBQUMsUUFBUSxDQUFDO1lBQzlCLGdCQUFnQixFQUFFLGdCQUFnQixDQUFDLEtBQUs7U0FDekMsQ0FBQztRQUNNLFdBQU0sR0FBMEI7WUFDdEMsU0FBUyxFQUFFLFFBQVE7WUFDbkIsS0FBSyxFQUFFLG1CQUFtQjtZQUMxQixXQUFXLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQztZQUM5QixnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxNQUFNO1NBQzFDLENBQUM7UUFDTSxRQUFHLEdBQTBCO1lBQ25DLFNBQVMsRUFBRSxLQUFLO1lBQ2hCLEtBQUssRUFBRSxpQkFBaUI7WUFDeEIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUM7WUFDNUIsZ0JBQWdCLEVBQUUsZ0JBQWdCLENBQUMsR0FBRztTQUN2QyxDQUFDO0lBa0NKLENBQUM7SUFoQ0MscURBQVksR0FBWixVQUFhLFFBQWdCO1FBQzNCLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELHFEQUFZLEdBQVosVUFBYSxRQUFnQjtRQUMzQixPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxtREFBVSxHQUFWLFVBQVcsUUFBZ0I7UUFDekIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsd0RBQWUsR0FBZixVQUFnQixRQUFnQjtRQUM5QixPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCx5REFBZ0IsR0FBaEIsVUFBaUIsUUFBZ0I7UUFDL0IsSUFBTSxnQkFBZ0IsR0FBRyxNQUFNLENBQUM7WUFDOUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7WUFDM0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7WUFDM0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7WUFDekIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUM7U0FDL0IsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUVWLElBQUksZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFO1lBQ3hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNuQjthQUFNLElBQUksZ0JBQWdCLElBQUksQ0FBQyxFQUFFO1lBQ2hDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztTQUNwQjthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDO1NBQ2pCO0lBQ0gsQ0FBQztJQXBEVSw4QkFBOEI7UUFEMUMsVUFBVSxFQUFFO09BQ0EsOEJBQThCLENBcUQxQztJQUFELHFDQUFDO0NBQUEsQUFyREQsSUFxREM7U0FyRFksOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQYXNzd29yZFN0cmVuZ3RoIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xyXG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdsb2Rhc2gtZXMnO1xyXG5pbXBvcnQgeyBQYXNzd29yZFN0cmVuZ3RoQ29sb3IgfSBmcm9tICcuL3Bhc3N3b3JkLm1vZGVsJztcclxuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBQYXNzd29yZFN0cmVuZ3RoQ2hlY2tlclNlcnZpY2Uge1xyXG5cclxuICBwcml2YXRlIEdSRUVOOiBQYXNzd29yZFN0cmVuZ3RoQ29sb3IgPSB7XHJcbiAgICBjb2xvck5hbWU6ICdncmVlbicsXHJcbiAgICBjb2xvcjogJ3JnYigwLCAxMjgsIDApJyxcclxuICAgIGRlc2NyaXB0aW9uOiBnZXR0ZXh0KCdzdHJvbmcnKSxcclxuICAgIHBhc3N3b3JkU3RyZW5ndGg6IFBhc3N3b3JkU3RyZW5ndGguR1JFRU5cclxuICB9O1xyXG4gIHByaXZhdGUgWUVMTE9XOiBQYXNzd29yZFN0cmVuZ3RoQ29sb3IgPSB7XHJcbiAgICBjb2xvck5hbWU6ICd5ZWxsb3cnLFxyXG4gICAgY29sb3I6ICdyZ2IoMjU1LCAyMDQsIDUxKScsXHJcbiAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dCgnbWVkaXVtJyksXHJcbiAgICBwYXNzd29yZFN0cmVuZ3RoOiBQYXNzd29yZFN0cmVuZ3RoLllFTExPV1xyXG4gIH07XHJcbiAgcHJpdmF0ZSBSRUQ6IFBhc3N3b3JkU3RyZW5ndGhDb2xvciA9IHtcclxuICAgIGNvbG9yTmFtZTogJ3JlZCcsXHJcbiAgICBjb2xvcjogJ3JnYigxNzAsIDAsIDUxKScsXHJcbiAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dCgnd2VhaycpLFxyXG4gICAgcGFzc3dvcmRTdHJlbmd0aDogUGFzc3dvcmRTdHJlbmd0aC5SRURcclxuICB9O1xyXG5cclxuICBoYXNMb3dlckNhc2UocGFzc3dvcmQ6IHN0cmluZykge1xyXG4gICAgcmV0dXJuIChwYXNzd29yZC5zZWFyY2goL1thLXpdLykgIT09IC0xKTtcclxuICB9XHJcblxyXG4gIGhhc1VwcGVyQ2FzZShwYXNzd29yZDogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gKHBhc3N3b3JkLnNlYXJjaCgvW0EtWl0vKSAhPT0gLTEpO1xyXG4gIH1cclxuXHJcbiAgaGFzTnVtYmVycyhwYXNzd29yZDogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gKHBhc3N3b3JkLnNlYXJjaCgvWzAtOV0vKSAhPT0gLTEpO1xyXG4gIH1cclxuXHJcbiAgaGFzU3BlY2lhbENoYXJzKHBhc3N3b3JkOiBzdHJpbmcpIHtcclxuICAgIHJldHVybiAocGFzc3dvcmQuc2VhcmNoKC9bXjAtOWEtekEtWl0rLykgIT09IC0xKTtcclxuICB9XHJcblxyXG4gIGdldFN0cmVuZ3RoQ29sb3IocGFzc3dvcmQ6IHN0cmluZyk6IFBhc3N3b3JkU3RyZW5ndGhDb2xvciB7XHJcbiAgICBjb25zdCBwYXNzd29yZFN0cmVuZ3RoID0gZmlsdGVyKFtcclxuICAgICAgdGhpcy5oYXNMb3dlckNhc2UocGFzc3dvcmQpLFxyXG4gICAgICB0aGlzLmhhc1VwcGVyQ2FzZShwYXNzd29yZCksXHJcbiAgICAgIHRoaXMuaGFzTnVtYmVycyhwYXNzd29yZCksXHJcbiAgICAgIHRoaXMuaGFzU3BlY2lhbENoYXJzKHBhc3N3b3JkKVxyXG4gICAgXSkubGVuZ3RoO1xyXG5cclxuICAgIGlmIChwYXNzd29yZFN0cmVuZ3RoID4gMikge1xyXG4gICAgICByZXR1cm4gdGhpcy5HUkVFTjtcclxuICAgIH0gZWxzZSBpZiAocGFzc3dvcmRTdHJlbmd0aCA+PSAyKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLllFTExPVztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLlJFRDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19