import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { PasswordCheckListComponent } from './password-check-list.component';
import { PasswordConfirm } from './password-confirm.directive';
import { PasswordStrengthCheckerService } from './password-strength-checker.service';
import { PasswordStrengthComponent } from './password-strength.component';
import { NewPasswordComponent } from './new-password.component';
import { PasswordConfirmModalComponent } from './password-confirm-modal.component';
import { ModalModule } from '../modal/modal.module';
import { FormsModule } from '../forms/forms.module';
import { TotpChallengeComponent } from './totp-challenge.component';
import { SmsChallengeComponent } from './sms-challenge.component';
import { TotpSetupComponent } from './totp-setup.component';
import { PasswordService } from './password.service';
/**
 * The angular module definition for new password.
 * @exports PasswordStrengthComponent
 * @exports PasswordCheckListComponent
 * @exports PasswordConfirm
 * @exports NewPasswordComponent
 * @exports PasswordConfirmModalComponent
 */
var AuthenticationModule = /** @class */ (function () {
    function AuthenticationModule() {
    }
    AuthenticationModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                TotpChallengeComponent,
                PasswordConfirm,
                PasswordStrengthComponent,
                PasswordCheckListComponent,
                NewPasswordComponent,
                PasswordConfirmModalComponent,
                SmsChallengeComponent,
                TotpSetupComponent
            ],
            imports: [
                FormsModule,
                TooltipModule,
                CommonModule,
                ModalModule
            ],
            exports: [
                TotpChallengeComponent,
                PasswordStrengthComponent,
                PasswordCheckListComponent,
                PasswordConfirm,
                NewPasswordComponent,
                PasswordConfirmModalComponent,
                SmsChallengeComponent,
                TotpSetupComponent
            ],
            entryComponents: [
                PasswordConfirmModalComponent
            ],
            providers: [
                PasswordStrengthCheckerService,
                PasswordService
            ]
        })
    ], AuthenticationModule);
    return AuthenticationModule;
}());
export { AuthenticationModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGVudGljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvYXV0aGVudGljYXRpb24vYXV0aGVudGljYXRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEOzs7Ozs7O0dBT0c7QUFvQ0g7SUFBQTtJQUFtQyxDQUFDO0lBQXZCLG9CQUFvQjtRQW5DaEMsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFO2dCQUNaLHNCQUFzQjtnQkFDdEIsZUFBZTtnQkFDZix5QkFBeUI7Z0JBQ3pCLDBCQUEwQjtnQkFDMUIsb0JBQW9CO2dCQUNwQiw2QkFBNkI7Z0JBQzdCLHFCQUFxQjtnQkFDckIsa0JBQWtCO2FBQ25CO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLFdBQVc7Z0JBQ1gsYUFBYTtnQkFDYixZQUFZO2dCQUNaLFdBQVc7YUFDWjtZQUNELE9BQU8sRUFBRTtnQkFDUCxzQkFBc0I7Z0JBQ3RCLHlCQUF5QjtnQkFDekIsMEJBQTBCO2dCQUMxQixlQUFlO2dCQUNmLG9CQUFvQjtnQkFDcEIsNkJBQTZCO2dCQUM3QixxQkFBcUI7Z0JBQ3JCLGtCQUFrQjthQUNuQjtZQUNELGVBQWUsRUFBRTtnQkFDZiw2QkFBNkI7YUFDOUI7WUFDRCxTQUFTLEVBQUU7Z0JBQ1QsOEJBQThCO2dCQUM5QixlQUFlO2FBQ2hCO1NBQ0YsQ0FBQztPQUNXLG9CQUFvQixDQUFHO0lBQUQsMkJBQUM7Q0FBQSxBQUFwQyxJQUFvQztTQUF2QixvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xyXG5pbXBvcnQgeyBQYXNzd29yZENoZWNrTGlzdENvbXBvbmVudCB9IGZyb20gJy4vcGFzc3dvcmQtY2hlY2stbGlzdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQYXNzd29yZENvbmZpcm0gfSBmcm9tICcuL3Bhc3N3b3JkLWNvbmZpcm0uZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aENoZWNrZXJTZXJ2aWNlIH0gZnJvbSAnLi9wYXNzd29yZC1zdHJlbmd0aC1jaGVja2VyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQYXNzd29yZFN0cmVuZ3RoQ29tcG9uZW50IH0gZnJvbSAnLi9wYXNzd29yZC1zdHJlbmd0aC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOZXdQYXNzd29yZENvbXBvbmVudCB9IGZyb20gJy4vbmV3LXBhc3N3b3JkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9wYXNzd29yZC1jb25maXJtLW1vZGFsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnLi4vbW9kYWwvbW9kYWwubW9kdWxlJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICcuLi9mb3Jtcy9mb3Jtcy5tb2R1bGUnO1xyXG5pbXBvcnQgeyBUb3RwQ2hhbGxlbmdlQ29tcG9uZW50IH0gZnJvbSAnLi90b3RwLWNoYWxsZW5nZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTbXNDaGFsbGVuZ2VDb21wb25lbnQgfSBmcm9tICcuL3Ntcy1jaGFsbGVuZ2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVG90cFNldHVwQ29tcG9uZW50IH0gZnJvbSAnLi90b3RwLXNldHVwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBhc3N3b3JkU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQuc2VydmljZSc7XHJcblxyXG4vKipcclxuICogVGhlIGFuZ3VsYXIgbW9kdWxlIGRlZmluaXRpb24gZm9yIG5ldyBwYXNzd29yZC5cclxuICogQGV4cG9ydHMgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudFxyXG4gKiBAZXhwb3J0cyBQYXNzd29yZENoZWNrTGlzdENvbXBvbmVudFxyXG4gKiBAZXhwb3J0cyBQYXNzd29yZENvbmZpcm1cclxuICogQGV4cG9ydHMgTmV3UGFzc3dvcmRDb21wb25lbnRcclxuICogQGV4cG9ydHMgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnRcclxuICovXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBUb3RwQ2hhbGxlbmdlQ29tcG9uZW50LFxyXG4gICAgUGFzc3dvcmRDb25maXJtLFxyXG4gICAgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudCxcclxuICAgIFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50LFxyXG4gICAgTmV3UGFzc3dvcmRDb21wb25lbnQsXHJcbiAgICBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCxcclxuICAgIFNtc0NoYWxsZW5nZUNvbXBvbmVudCxcclxuICAgIFRvdHBTZXR1cENvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBUb29sdGlwTW9kdWxlLFxyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgTW9kYWxNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFRvdHBDaGFsbGVuZ2VDb21wb25lbnQsXHJcbiAgICBQYXNzd29yZFN0cmVuZ3RoQ29tcG9uZW50LFxyXG4gICAgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQsXHJcbiAgICBQYXNzd29yZENvbmZpcm0sXHJcbiAgICBOZXdQYXNzd29yZENvbXBvbmVudCxcclxuICAgIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50LFxyXG4gICAgU21zQ2hhbGxlbmdlQ29tcG9uZW50LFxyXG4gICAgVG90cFNldHVwQ29tcG9uZW50XHJcbiAgXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50XHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIFBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSxcclxuICAgIFBhc3N3b3JkU2VydmljZVxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEF1dGhlbnRpY2F0aW9uTW9kdWxlIHt9XHJcbiJdfQ==