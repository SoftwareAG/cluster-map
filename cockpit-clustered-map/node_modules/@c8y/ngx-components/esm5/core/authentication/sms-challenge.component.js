import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { UserService, ICredentials } from '@c8y/client';
import { LoginService } from '../login/login.service';
import { AlertService } from '../alert/public-api';
import { gettext } from '../i18n/gettext';
var SmsChallengeComponent = /** @class */ (function () {
    function SmsChallengeComponent(loginService, users, alert) {
        this.loginService = loginService;
        this.users = users;
        this.alert = alert;
        this.onCancel = new EventEmitter();
        this.model = {
            smsToken: ''
        };
        this.isLoading = false;
        this.resendTfa = '0';
    }
    SmsChallengeComponent.prototype.verifyTFACode = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.isLoading = true;
                        if (!this.useOAuthInternal()) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.verifyCodeWithOauth()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, this.verifyCodeWithBasicAuth()];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        this.isLoading = false;
                        return [2 /*return*/];
                }
            });
        });
    };
    SmsChallengeComponent.prototype.resendTFASms = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, 3, 4]);
                        this.isLoading = true;
                        return [4 /*yield*/, this.users.verifyTFACode(this.resendTfa)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2:
                        e_1 = _a.sent();
                        if (e_1.res.status === 403) {
                            this.loginService.cleanMessages();
                            this.loginService.addSuccessMessage('resend_sms');
                        }
                        else {
                            this.alert.addServerFailure(e_1);
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        this.isLoading = false;
                        return [7 /*endfinally*/];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    SmsChallengeComponent.prototype.useOAuthInternal = function () {
        return this.loginService.isPasswordGrantLogin(this.credentials);
    };
    SmsChallengeComponent.prototype.verifyCodeWithOauth = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var credentials, e_2, resStatus;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 4, , 5]);
                        credentials = this.credentials;
                        return [4 /*yield*/, this.loginService.switchLoginMode(tslib_1.__assign({}, credentials, { tfa: this.model.smsToken }))];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.loginService.verifyAppAccess()];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, this.loginService.authFulfilled()];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        e_2 = _a.sent();
                        resStatus = e_2.res && e_2.res.status;
                        if (resStatus === 401) {
                            // it is assumed that the user and password are correct so it must be the tfa code
                            this.alert.danger(gettext('Invalid code'));
                        }
                        else {
                            this.alert.addServerFailure(e_2);
                        }
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    SmsChallengeComponent.prototype.verifyCodeWithBasicAuth = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, tfaToken, e_3, resStatus;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.users.verifyTFACode(this.model.smsToken)];
                    case 1:
                        res = (_a.sent()).res;
                        tfaToken = res.headers.get('tfatoken');
                        this.credentials.tfa = tfaToken;
                        this.loginWithTFA(tfaToken);
                        return [3 /*break*/, 3];
                    case 2:
                        e_3 = _a.sent();
                        resStatus = e_3.res && e_3.res.status;
                        // BE returns 403 in case of invalid tfa code
                        if (resStatus === 403) {
                            this.alert.danger(gettext('Invalid code'));
                        }
                        else {
                            this.alert.addServerFailure(e_3);
                        }
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    SmsChallengeComponent.prototype.loginWithTFA = function (tfaToken) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var e_4;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.loginService.login(this.loginService.useBasicAuth({ tfa: tfaToken }), this.credentials)];
                    case 1:
                        _a.sent();
                        this.loginService.saveTFAToken(tfaToken, sessionStorage);
                        if (this.loginService.rememberMe) {
                            this.loginService.saveTFAToken(tfaToken, localStorage);
                        }
                        return [3 /*break*/, 3];
                    case 2:
                        e_4 = _a.sent();
                        this.alert.addServerFailure(e_4);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    SmsChallengeComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: UserService },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], SmsChallengeComponent.prototype, "credentials", void 0);
    tslib_1.__decorate([
        Output()
    ], SmsChallengeComponent.prototype, "onCancel", void 0);
    SmsChallengeComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-sms-challenge',
            template: "<form #twoFactorForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"verifyTFACode()\" novalidate>\n  <div class=\"legend form-block center\" translate>Insert the code received via SMS</div>\n\n  <c8y-form-group>\n    <label translate>Verification code</label>\n    <input\n      [(ngModel)]=\"model.smsToken\"\n      #sms_token=\"ngModel\"\n      type=\"text\"\n      name=\"sms_token\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Verification code' | translate }}\"\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Verify' | translate }}\"\n    [disabled]=\"!twoFactorForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    translate\n  >\n    Verify\n  </button>\n\n  <div class=\"top-m-sm\">\n    <a\n      title=\"{{ 'Login' | translate }}\"\n      class=\"btn btn-link btn-sm pull-right\"\n      (click)=\"onCancel.emit()\"\n      translate\n      >Login</a\n    >\n    <a\n      title=\"{{ 'Send new code' | translate }}\"\n      [ngClass]=\"{ disabled: isLoading }\"\n      class=\"btn btn-link btn-sm\"\n      (click)=\"resendTFASms()\"\n      translate\n      >Send new code</a\n    >\n  </div>\n</form>\n"
        })
    ], SmsChallengeComponent);
    return SmsChallengeComponent;
}());
export { SmsChallengeComponent };
//# sourceMappingURL=data:application/json;base64,