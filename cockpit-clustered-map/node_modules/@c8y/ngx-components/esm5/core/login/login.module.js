import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { FormsModule as C8yFormsModule } from '../forms/public-api';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { ChangePasswordComponent } from './change-password.component';
import { CredentialsComponent } from './credentials.component';
import { LoginComponent } from './login.component';
import { LoginService } from './login.service';
import { RecoverPasswordComponent } from './recover-password.component';
import { AuthenticationModule } from '../authentication/authentication.module';
import { AlertModule } from '../alert/alert.module';
import { TotpAuthComponent } from './totp-auth.component';
/**
 * The angular module definition for the login.
 * @exports LoginComponent
 */
var LoginModule = /** @class */ (function () {
    function LoginModule() {
    }
    LoginModule_1 = LoginModule;
    LoginModule.forRoot = function () {
        return {
            ngModule: LoginModule_1,
            providers: LoginModule_1.providers()
        };
    };
    LoginModule.providers = function () {
        return [LoginService];
    };
    var LoginModule_1;
    LoginModule = LoginModule_1 = tslib_1.__decorate([
        NgModule({
            declarations: [
                LoginComponent,
                RecoverPasswordComponent,
                ChangePasswordComponent,
                CredentialsComponent,
                TotpAuthComponent
            ],
            imports: [
                FormsModule,
                TooltipModule,
                CommonModule,
                AuthenticationModule,
                AlertModule,
                C8yFormsModule
            ],
            exports: [LoginComponent]
        })
    ], LoginModule);
    return LoginModule;
}());
export { LoginModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvbG9naW4vbG9naW4ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsV0FBVyxJQUFJLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFMUQ7OztHQUdHO0FBbUJIO0lBQUE7SUFVQSxDQUFDO29CQVZZLFdBQVc7SUFDZixtQkFBTyxHQUFkO1FBQ0UsT0FBTztZQUNMLFFBQVEsRUFBRSxhQUFXO1lBQ3JCLFNBQVMsRUFBRSxhQUFXLENBQUMsU0FBUyxFQUFFO1NBQ25DLENBQUM7SUFDSixDQUFDO0lBQ00scUJBQVMsR0FBaEI7UUFDRSxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDeEIsQ0FBQzs7SUFUVSxXQUFXO1FBbEJ2QixRQUFRLENBQUM7WUFDUixZQUFZLEVBQUU7Z0JBQ1osY0FBYztnQkFDZCx3QkFBd0I7Z0JBQ3hCLHVCQUF1QjtnQkFDdkIsb0JBQW9CO2dCQUNwQixpQkFBaUI7YUFDbEI7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsV0FBVztnQkFDWCxhQUFhO2dCQUNiLFlBQVk7Z0JBQ1osb0JBQW9CO2dCQUNwQixXQUFXO2dCQUNYLGNBQWM7YUFDZjtZQUNELE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQztTQUMxQixDQUFDO09BQ1csV0FBVyxDQVV2QjtJQUFELGtCQUFDO0NBQUEsQUFWRCxJQVVDO1NBVlksV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIGFzIEM4eUZvcm1zTW9kdWxlIH0gZnJvbSAnLi4vZm9ybXMvcHVibGljLWFwaSc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IENoYW5nZVBhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50JztcbmltcG9ydCB7IENyZWRlbnRpYWxzQ29tcG9uZW50IH0gZnJvbSAnLi9jcmVkZW50aWFscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9naW5Db21wb25lbnQgfSBmcm9tICcuL2xvZ2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMb2dpblNlcnZpY2UgfSBmcm9tICcuL2xvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgUmVjb3ZlclBhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9yZWNvdmVyLXBhc3N3b3JkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvbk1vZHVsZSB9IGZyb20gJy4uL2F1dGhlbnRpY2F0aW9uL2F1dGhlbnRpY2F0aW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBBbGVydE1vZHVsZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0Lm1vZHVsZSc7XG5pbXBvcnQgeyBUb3RwQXV0aENvbXBvbmVudCB9IGZyb20gJy4vdG90cC1hdXRoLmNvbXBvbmVudCc7XG5cbi8qKlxuICogVGhlIGFuZ3VsYXIgbW9kdWxlIGRlZmluaXRpb24gZm9yIHRoZSBsb2dpbi5cbiAqIEBleHBvcnRzIExvZ2luQ29tcG9uZW50XG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIExvZ2luQ29tcG9uZW50LFxuICAgIFJlY292ZXJQYXNzd29yZENvbXBvbmVudCxcbiAgICBDaGFuZ2VQYXNzd29yZENvbXBvbmVudCxcbiAgICBDcmVkZW50aWFsc0NvbXBvbmVudCxcbiAgICBUb3RwQXV0aENvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgVG9vbHRpcE1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgQXV0aGVudGljYXRpb25Nb2R1bGUsXG4gICAgQWxlcnRNb2R1bGUsXG4gICAgQzh5Rm9ybXNNb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW0xvZ2luQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBMb2dpbk1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCkge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTG9naW5Nb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IExvZ2luTW9kdWxlLnByb3ZpZGVycygpXG4gICAgfTtcbiAgfVxuICBzdGF0aWMgcHJvdmlkZXJzKCkge1xuICAgIHJldHVybiBbTG9naW5TZXJ2aWNlXTtcbiAgfVxufVxuIl19