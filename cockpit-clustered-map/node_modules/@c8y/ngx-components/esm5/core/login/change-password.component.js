import * as tslib_1 from "tslib";
import { Component, Output, Input, EventEmitter } from '@angular/core';
import { LoginService } from './login.service';
import { PasswordService } from '../authentication/password.service';
import { IResetPassword, ICredentials, UserService } from '@c8y/client';
import { OptionsService } from '../common/public-api';
import { AlertService } from '../alert/public-api';
import { LoginViews } from './login.model';
var ChangePasswordComponent = /** @class */ (function () {
    function ChangePasswordComponent(loginService, users, passwordStrengthCheckerService, options, alert) {
        this.loginService = loginService;
        this.users = users;
        this.passwordStrengthCheckerService = passwordStrengthCheckerService;
        this.options = options;
        this.alert = alert;
        this.onChangeView = new EventEmitter();
        this.passwordPattern = /^[a-zA-Z0-9`~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]{8,32}$/;
        this.isLoading = false;
        this.model = {
            tenantId: '',
            email: '',
            newPassword: '',
            newPasswordConfirm: ''
        };
        this.enforcePasswordStrength = false;
        this.emailReadOnly = false;
        this.TOKEN_PARAM = 'token';
        this.EMAIL_PARAM = 'email';
    }
    ChangePasswordComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                this.model.tenantId = this.loginService.getTenant();
                this.model.email = this.options.get(this.EMAIL_PARAM, '');
                this.emailReadOnly = !!this.model.email;
                this.enforcePasswordStrength = this.loginService.getEnforcePasswordStrength();
                return [2 /*return*/];
            });
        });
    };
    ChangePasswordComponent.prototype.changePassword = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var passwordStrengthColor, resetPassword, res, e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        passwordStrengthColor = this.passwordStrengthCheckerService.getStrengthColor(this.model.newPassword);
                        resetPassword = {
                            token: this.credentials.token,
                            email: this.model.email,
                            newPassword: this.model.newPassword,
                            passwordStrength: passwordStrengthColor.passwordStrength
                        };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, 4, 5]);
                        this.isLoading = true;
                        return [4 /*yield*/, this.users.resetPassword(resetPassword, this.model.tenantId)];
                    case 2:
                        res = (_a.sent()).res;
                        if (res.status === 200) {
                            this.loginService.addSuccessMessage('password_changed');
                            this.credentials.token = undefined;
                            this.options.set(this.TOKEN_PARAM, undefined);
                            this.onChangeView.emit({ view: LoginViews.Credentials });
                        }
                        return [3 /*break*/, 5];
                    case 3:
                        e_1 = _a.sent();
                        this.alert.addServerFailure(e_1);
                        return [3 /*break*/, 5];
                    case 4:
                        this.loginService.reset();
                        this.isLoading = false;
                        return [7 /*endfinally*/];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    ChangePasswordComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: UserService },
        { type: PasswordService },
        { type: OptionsService },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], ChangePasswordComponent.prototype, "credentials", void 0);
    tslib_1.__decorate([
        Output()
    ], ChangePasswordComponent.prototype, "onChangeView", void 0);
    ChangePasswordComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-change-password',
            template: "<form\n  role=\"form\"\n  class=\"loginForm\"\n  (ngSubmit)=\"changePassword()\"\n  #changePasswordForm=\"ngForm\"\n  novalidate\n>\n  <c8y-form-group class=\"tenantField\" id=\"tenantField\" *ngIf=\"loginService.showTenant()\">\n    <label translate>Tenant ID</label>\n    <input\n      [(ngModel)]=\"model.tenantId\"\n      #tenantId=\"ngModel\"\n      type=\"text\"\n      name=\"tenantId\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Tenant ID' | translate }}\"\n      required\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Email address</label>\n    <input\n      [(ngModel)]=\"model.email\"\n      #email=\"ngModel\"\n      type=\"text\"\n      name=\"email\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Email address' | translate }}\"\n      email\n      required\n      [readonly]=\"emailReadOnly\"\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>New password</label>\n    <input\n      [(ngModel)]=\"model.newPassword\"\n      #newPassword=\"ngModel\"\n      type=\"password\"\n      name=\"newPassword\"\n      class=\"form-control\"\n      placeholder=\"{{ 'New password' | translate }}\"\n      [pattern]=\"passwordPattern\"\n      autocomplete=\"new-password\"\n      required\n    />\n    <c8y-messages>\n      <c8y-message\n        name=\"pattern\"\n        [text]=\"loginService.ERROR_MESSAGES.pattern_newPassword\"\n      ></c8y-message>\n    </c8y-messages>\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Confirm password</label>\n    <input\n      [(ngModel)]=\"model.newPasswordConfirm\"\n      #newPasswordConfirm=\"ngModel\"\n      type=\"password\"\n      name=\"newPasswordConfirm\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Confirm password' | translate }}\"\n      passwordConfirm=\"newPassword\"\n      autocomplete=\"new-password\"\n      required\n    />\n    <c8y-messages>\n      <c8y-message\n        name=\"passwordConfirm\"\n        [text]=\"loginService.ERROR_MESSAGES.passwordConfirm\"\n      ></c8y-message>\n    </c8y-messages>\n  </c8y-form-group>\n\n  <c8y-password-strength\n    [password]=\"model.newPassword\"\n    [hidden]=\"!model.newPassword\"\n  ></c8y-password-strength>\n  <c8y-password-check-list\n    [password]=\"model.newPassword\"\n    [hidden]=\"!model.newPassword || !enforcePasswordStrength\"\n  ></c8y-password-check-list>\n\n  <button\n    title=\"{{ 'Set password' | translate }}\"\n    [disabled]=\"!changePasswordForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    translate\n  >\n    Set password\n  </button>\n</form>\n"
        })
    ], ChangePasswordComponent);
    return ChangePasswordComponent;
}());
export { ChangePasswordComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2xvZ2luL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTzNDO0lBa0JFLGlDQUNTLFlBQTBCLEVBQ3pCLEtBQWtCLEVBQ2xCLDhCQUErQyxFQUMvQyxPQUF1QixFQUN2QixLQUFtQjtRQUpwQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUN6QixVQUFLLEdBQUwsS0FBSyxDQUFhO1FBQ2xCLG1DQUE4QixHQUE5Qiw4QkFBOEIsQ0FBaUI7UUFDL0MsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFDdkIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQXJCbkIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTVDLG9CQUFlLEdBQUcsd0RBQXdELENBQUM7UUFDM0UsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixVQUFLLEdBQUc7WUFDTixRQUFRLEVBQUUsRUFBRTtZQUNaLEtBQUssRUFBRSxFQUFFO1lBQ1QsV0FBVyxFQUFFLEVBQUU7WUFDZixrQkFBa0IsRUFBRSxFQUFFO1NBQ3ZCLENBQUM7UUFDRiw0QkFBdUIsR0FBRyxLQUFLLENBQUM7UUFDaEMsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFFZCxnQkFBVyxHQUFHLE9BQU8sQ0FBQztRQUN0QixnQkFBVyxHQUFHLE9BQU8sQ0FBQztJQVExQixDQUFDO0lBRUMsMENBQVEsR0FBZDs7O2dCQUNFLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUM7Z0JBQ3BELElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7Z0JBQzFELElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO2dCQUN4QyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQywwQkFBMEIsRUFBRSxDQUFDOzs7O0tBQy9FO0lBRUssZ0RBQWMsR0FBcEI7Ozs7Ozt3QkFDUSxxQkFBcUIsR0FBUSxJQUFJLENBQUMsOEJBQThCLENBQUMsZ0JBQWdCLENBQ3JGLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUN2QixDQUFDO3dCQUNJLGFBQWEsR0FBbUI7NEJBQ3BDLEtBQUssRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUs7NEJBQzdCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7NEJBQ3ZCLFdBQVcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVc7NEJBQ25DLGdCQUFnQixFQUFFLHFCQUFxQixDQUFDLGdCQUFnQjt5QkFDekQsQ0FBQzs7Ozt3QkFFQSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQzt3QkFDTixxQkFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBQTs7d0JBQTFFLEdBQUcsR0FBSyxDQUFBLFNBQWtFLENBQUEsSUFBdkU7d0JBQ1gsSUFBSSxHQUFHLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRTs0QkFDdEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDOzRCQUN4RCxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7NEJBQ25DLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7NEJBQzlDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO3lCQUMxRDs7Ozt3QkFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEdBQUMsQ0FBQyxDQUFDOzs7d0JBRS9CLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7d0JBQzFCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDOzs7Ozs7S0FFMUI7O2dCQXZDc0IsWUFBWTtnQkFDbEIsV0FBVztnQkFDYyxlQUFlO2dCQUN0QyxjQUFjO2dCQUNoQixZQUFZOztJQXRCcEI7UUFBUixLQUFLLEVBQUU7Z0VBQTJCO0lBQ3pCO1FBQVQsTUFBTSxFQUFFO2lFQUFtQztJQUZqQyx1QkFBdUI7UUFMbkMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQiwwdEZBQStDO1NBRWhELENBQUM7T0FDVyx1QkFBdUIsQ0EyRG5DO0lBQUQsOEJBQUM7Q0FBQSxBQTNERCxJQTJEQztTQTNEWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBJbnB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2dpblNlcnZpY2UgfSBmcm9tICcuL2xvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgUGFzc3dvcmRTZXJ2aWNlIH0gZnJvbSAnLi4vYXV0aGVudGljYXRpb24vcGFzc3dvcmQuc2VydmljZSc7XG5pbXBvcnQgeyBJUmVzZXRQYXNzd29yZCwgSUNyZWRlbnRpYWxzLCBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IE9wdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL3B1YmxpYy1hcGknO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vYWxlcnQvcHVibGljLWFwaSc7XG5pbXBvcnQgeyBMb2dpblZpZXdzIH0gZnJvbSAnLi9sb2dpbi5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1jaGFuZ2UtcGFzc3dvcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVzOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBDaGFuZ2VQYXNzd29yZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGNyZWRlbnRpYWxzOiBJQ3JlZGVudGlhbHM7XG4gIEBPdXRwdXQoKSBvbkNoYW5nZVZpZXcgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcGFzc3dvcmRQYXR0ZXJuID0gL15bYS16QS1aMC05YH4hQCMkJV4mKigpX3wrXFwtPT87OidcIiwuPD57fVtcXF1cXFxcL117OCwzMn0kLztcbiAgaXNMb2FkaW5nID0gZmFsc2U7XG4gIG1vZGVsID0ge1xuICAgIHRlbmFudElkOiAnJyxcbiAgICBlbWFpbDogJycsXG4gICAgbmV3UGFzc3dvcmQ6ICcnLFxuICAgIG5ld1Bhc3N3b3JkQ29uZmlybTogJydcbiAgfTtcbiAgZW5mb3JjZVBhc3N3b3JkU3RyZW5ndGggPSBmYWxzZTtcbiAgZW1haWxSZWFkT25seSA9IGZhbHNlO1xuXG4gIHByaXZhdGUgVE9LRU5fUEFSQU0gPSAndG9rZW4nO1xuICBwcml2YXRlIEVNQUlMX1BBUkFNID0gJ2VtYWlsJztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgbG9naW5TZXJ2aWNlOiBMb2dpblNlcnZpY2UsXG4gICAgcHJpdmF0ZSB1c2VyczogVXNlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBwYXNzd29yZFN0cmVuZ3RoQ2hlY2tlclNlcnZpY2U6IFBhc3N3b3JkU2VydmljZSxcbiAgICBwcml2YXRlIG9wdGlvbnM6IE9wdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnQ6IEFsZXJ0U2VydmljZVxuICApIHsgfVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRoaXMubW9kZWwudGVuYW50SWQgPSB0aGlzLmxvZ2luU2VydmljZS5nZXRUZW5hbnQoKTtcbiAgICB0aGlzLm1vZGVsLmVtYWlsID0gdGhpcy5vcHRpb25zLmdldCh0aGlzLkVNQUlMX1BBUkFNLCAnJyk7XG4gICAgdGhpcy5lbWFpbFJlYWRPbmx5ID0gISF0aGlzLm1vZGVsLmVtYWlsO1xuICAgIHRoaXMuZW5mb3JjZVBhc3N3b3JkU3RyZW5ndGggPSB0aGlzLmxvZ2luU2VydmljZS5nZXRFbmZvcmNlUGFzc3dvcmRTdHJlbmd0aCgpO1xuICB9XG5cbiAgYXN5bmMgY2hhbmdlUGFzc3dvcmQoKSB7XG4gICAgY29uc3QgcGFzc3dvcmRTdHJlbmd0aENvbG9yOiBhbnkgPSB0aGlzLnBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZS5nZXRTdHJlbmd0aENvbG9yKFxuICAgICAgdGhpcy5tb2RlbC5uZXdQYXNzd29yZFxuICAgICk7XG4gICAgY29uc3QgcmVzZXRQYXNzd29yZDogSVJlc2V0UGFzc3dvcmQgPSB7XG4gICAgICB0b2tlbjogdGhpcy5jcmVkZW50aWFscy50b2tlbixcbiAgICAgIGVtYWlsOiB0aGlzLm1vZGVsLmVtYWlsLFxuICAgICAgbmV3UGFzc3dvcmQ6IHRoaXMubW9kZWwubmV3UGFzc3dvcmQsXG4gICAgICBwYXNzd29yZFN0cmVuZ3RoOiBwYXNzd29yZFN0cmVuZ3RoQ29sb3IucGFzc3dvcmRTdHJlbmd0aFxuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcbiAgICAgIGNvbnN0IHsgcmVzIH0gPSBhd2FpdCB0aGlzLnVzZXJzLnJlc2V0UGFzc3dvcmQocmVzZXRQYXNzd29yZCwgdGhpcy5tb2RlbC50ZW5hbnRJZCk7XG4gICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgIHRoaXMubG9naW5TZXJ2aWNlLmFkZFN1Y2Nlc3NNZXNzYWdlKCdwYXNzd29yZF9jaGFuZ2VkJyk7XG4gICAgICAgIHRoaXMuY3JlZGVudGlhbHMudG9rZW4gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMub3B0aW9ucy5zZXQodGhpcy5UT0tFTl9QQVJBTSwgdW5kZWZpbmVkKTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZVZpZXcuZW1pdCh7IHZpZXc6IExvZ2luVmlld3MuQ3JlZGVudGlhbHMgfSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGUpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLmxvZ2luU2VydmljZS5yZXNldCgpO1xuICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==