import * as tslib_1 from "tslib";
import { distinctUntilChanged } from 'rxjs/operators';
import { ActionBarService } from '../action-bar/action-bar.service';
import { AppStateService } from '../common/ui-state.service';
import { Component } from '@angular/core';
import { HeaderService } from '../header/header.service';
import { NavigatorService } from '../navigator/navigator.service';
import { OptionsService } from '../common/options.service';
import { TabsService } from '../tabs/tabs.service';
var BootstrapComponent = /** @class */ (function () {
    function BootstrapComponent(tabs, ui, navigator, actionBar, options, headerService) {
        var _this = this;
        this.tabs = tabs;
        this.ui = ui;
        this.navigator = navigator;
        this.actionBar = actionBar;
        this.options = options;
        this.headerService = headerService;
        this.noAppsMargin$ = this.headerService.map(function (_a) {
            var nav = _a.nav;
            return !nav.open && nav.hiddenOnStartup;
        });
        this.tabsOrientation = this.options.tabsHorizontal ? 'horizontal' : 'vertical';
        this.ui.map(function (_a) {
            var lang = _a.lang;
            return lang;
        }).pipe(distinctUntilChanged()).subscribe(function () {
            _this.actionBar.refresh();
            _this.localeUpdating = true;
            setTimeout(function () {
                _this.localeUpdating = false;
            }, 10);
        });
    }
    Object.defineProperty(BootstrapComponent.prototype, "showPoweredBy", {
        get: function () {
            return !this.options.get('hidePowered');
        },
        enumerable: true,
        configurable: true
    });
    BootstrapComponent.ctorParameters = function () { return [
        { type: TabsService },
        { type: AppStateService },
        { type: NavigatorService },
        { type: ActionBarService },
        { type: OptionsService },
        { type: HeaderService }
    ]; };
    BootstrapComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-bootstrap',
            template: "<c8y-login *ngIf=\"!(ui.currentUser | async)\"></c8y-login>\n\n<div *ngIf=\"(ui.currentUser | async) && !localeUpdating\" [class.head-open]=\"header.headerOpen\">\n  <c8y-header-bar #header></c8y-header-bar>\n  <c8y-navigator-outlet\n    [nodes]=\"navigator.items$ | async\"\n    [open]=\"headerService.navigatorOpen$ | async\"\n  >\n    <header class=\"title navigator-slot-top\">\n      <div class=\"tenant-brand\"></div>\n      <c8y-app-icon\n        [name]=\"(ui.state$ | async).app.name\"\n        [contextPath]=\"(ui.state$ | async).app.contextPath\"\n      ></c8y-app-icon>\n      <span>{{ (ui.state$ | async).app | humanizeAppName | async }}</span>\n    </header>\n    <div style=\"cursor:default\" class=\"powered-by navigator-slot-bottom\" *ngIf=\"showPoweredBy\">\n      <p translate>powered by Cumulocity</p>\n    </div>\n  </c8y-navigator-outlet>\n\n  <div class=\"alerts\">\n    <c8y-alert-outlet></c8y-alert-outlet>\n  </div>\n  <c8y-tabs-outlet\n    #tabsComponent\n    [tabs]=\"tabs.items$ | async\"\n    [navigatorOpen]=\"headerService.navigatorOpen$ | async\"\n    [orientation]=\"tabs.orientation$ | async\"\n  >\n  </c8y-tabs-outlet>\n  <c8y-action-bar\n    #actionBarComponent\n    [navigatorOpen]=\"headerService.navigatorOpen$ | async\"\n    [hasTabs]=\"tabsComponent.hasTabs\"\n    [isTabsHorizontal]=\"tabsComponent.isHorizontal\"\n    [items]=\"actionBar.items$ | async\"\n  >\n  </c8y-action-bar>\n\n  <div\n    class=\"mcontainer\"\n    [ngClass]=\"{\n      open: headerService.navigatorOpen$ | async,\n      'no-apps-margin': noAppsMargin$ | async,\n      'horizontal-tabs': tabsComponent.isHorizontal,\n      'vertical-tabs': !tabsComponent.isHorizontal,\n      'has-tabs': tabsComponent.hasTabs,\n      'has-action-bar': !actionBarComponent.hidden\n    }\"\n  >\n    <div class=\"container-fluid\">\n      <router-outlet></router-outlet>\n      <ng-content select=\"#c8y-legacy-view\"></ng-content>\n      <!-- legacy ng-view, will not be migrated atm -->\n    </div>\n  </div>\n</div>\n<c8y-cookie-banner></c8y-cookie-banner>\n"
        })
    ], BootstrapComponent);
    return BootstrapComponent;
}());
export { BootstrapComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2Jvb3RzdHJhcC9ib290c3RyYXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLG9CQUFvQixFQUFPLE1BQU0sZ0JBQWdCLENBQUM7QUFFMUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRWxFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFNbkQ7SUFVRSw0QkFDUyxJQUFpQixFQUNqQixFQUFtQixFQUNuQixTQUEyQixFQUMzQixTQUEyQixFQUMxQixPQUF1QixFQUN4QixhQUE0QjtRQU5yQyxpQkFtQkc7UUFsQk0sU0FBSSxHQUFKLElBQUksQ0FBYTtRQUNqQixPQUFFLEdBQUYsRUFBRSxDQUFpQjtRQUNuQixjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUMzQixjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUMxQixZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUN4QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUVqQyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFVBQUMsRUFBTztnQkFBTCxZQUFHO1lBQU8sT0FBQSxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksR0FBRyxDQUFDLGVBQWU7UUFBaEMsQ0FBZ0MsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO1FBQy9FLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFVBQUMsRUFBUTtnQkFBTixjQUFJO1lBQU8sT0FBQSxJQUFJO1FBQUosQ0FBSSxDQUFDLENBQUMsSUFBSSxDQUNsQyxvQkFBb0IsRUFBRSxDQUN2QixDQUFDLFNBQVMsQ0FBQztZQUNWLEtBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDekIsS0FBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7WUFDM0IsVUFBVSxDQUFDO2dCQUNULEtBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1lBQzlCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNULENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQXZCSCxzQkFBSSw2Q0FBYTthQUFqQjtZQUNFLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMxQyxDQUFDOzs7T0FBQTs7Z0JBR2MsV0FBVztnQkFDYixlQUFlO2dCQUNSLGdCQUFnQjtnQkFDaEIsZ0JBQWdCO2dCQUNqQixjQUFjO2dCQUNULGFBQWE7O0lBaEIxQixrQkFBa0I7UUFKOUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsd2hFQUF3QztTQUN6QyxDQUFDO09BQ1csa0JBQWtCLENBOEI5QjtJQUFELHlCQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0E5Qlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgZGlzdGluY3RVbnRpbENoYW5nZWQsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHsgQWN0aW9uQmFyU2VydmljZSB9IGZyb20gJy4uL2FjdGlvbi1iYXIvYWN0aW9uLWJhci5zZXJ2aWNlJztcbmltcG9ydCB7IEFwcFN0YXRlU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi91aS1zdGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSGVhZGVyU2VydmljZSB9IGZyb20gJy4uL2hlYWRlci9oZWFkZXIuc2VydmljZSc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JTZXJ2aWNlIH0gZnJvbSAnLi4vbmF2aWdhdG9yL25hdmlnYXRvci5zZXJ2aWNlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE9wdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL29wdGlvbnMuc2VydmljZSc7XG5pbXBvcnQgeyBUYWJzU2VydmljZSB9IGZyb20gJy4uL3RhYnMvdGFicy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWJvb3RzdHJhcCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9ib290c3RyYXAudGVtcGxhdGUuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQm9vdHN0cmFwQ29tcG9uZW50IHtcbiAgbmF2aWdhdG9yT3BlbiQ6IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gIG5vQXBwc01hcmdpbiQ6IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gIGxvY2FsZVVwZGF0aW5nOiBib29sZWFuO1xuICB0YWJzT3JpZW50YXRpb246IHN0cmluZztcblxuICBnZXQgc2hvd1Bvd2VyZWRCeSgpIHtcbiAgICByZXR1cm4gIXRoaXMub3B0aW9ucy5nZXQoJ2hpZGVQb3dlcmVkJyk7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgdGFiczogVGFic1NlcnZpY2UsXG4gICAgcHVibGljIHVpOiBBcHBTdGF0ZVNlcnZpY2UsXG4gICAgcHVibGljIG5hdmlnYXRvcjogTmF2aWdhdG9yU2VydmljZSxcbiAgICBwdWJsaWMgYWN0aW9uQmFyOiBBY3Rpb25CYXJTZXJ2aWNlLFxuICAgIHByaXZhdGUgb3B0aW9uczogT3B0aW9uc1NlcnZpY2UsXG4gICAgcHVibGljIGhlYWRlclNlcnZpY2U6IEhlYWRlclNlcnZpY2VcbiAgKSB7XG4gICAgICB0aGlzLm5vQXBwc01hcmdpbiQgPSB0aGlzLmhlYWRlclNlcnZpY2UubWFwKCh7IG5hdiB9KSA9PiAhbmF2Lm9wZW4gJiYgbmF2LmhpZGRlbk9uU3RhcnR1cCk7XG4gICAgICB0aGlzLnRhYnNPcmllbnRhdGlvbiA9IHRoaXMub3B0aW9ucy50YWJzSG9yaXpvbnRhbCA/ICdob3Jpem9udGFsJyA6ICd2ZXJ0aWNhbCc7XG4gICAgICB0aGlzLnVpLm1hcCgoeyBsYW5nIH0pID0+IGxhbmcpLnBpcGUoXG4gICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKCksXG4gICAgICApLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIHRoaXMuYWN0aW9uQmFyLnJlZnJlc2goKTtcbiAgICAgICAgdGhpcy5sb2NhbGVVcGRhdGluZyA9IHRydWU7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMubG9jYWxlVXBkYXRpbmcgPSBmYWxzZTtcbiAgICAgICAgfSwgMTApO1xuICAgICAgfSk7XG4gICAgfVxufVxuIl19