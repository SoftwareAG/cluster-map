import * as tslib_1 from "tslib";
import { Component, TemplateRef, Attribute, HostBinding } from '@angular/core';
import { AlertService } from './alert.service';
var AlertOutletComponent = /** @class */ (function () {
    function AlertOutletComponent(position, alertService) {
        this.position = position;
        this.alertService = alertService;
        this.detailDisplayedAlert = {};
        this.isStatic = false;
        this.isStatic = this.position === 'static';
    }
    Object.defineProperty(AlertOutletComponent.prototype, "alerts", {
        get: function () {
            return this.alertService.state$;
        },
        enumerable: true,
        configurable: true
    });
    AlertOutletComponent.prototype.getClass = function (alert) {
        var classes = [];
        if (alert.type !== 'danger') {
            classes.push('interact');
        }
        classes.push("alert-" + alert.type);
        return classes.join(' ');
    };
    AlertOutletComponent.prototype.close = function (alert) {
        if (alert.onClose) {
            alert.onClose();
        }
        this.alertService.remove(alert);
    };
    AlertOutletComponent.prototype.showDetails = function (alert) {
        if (alert.onDetail) {
            return alert.onDetail();
        }
        this.detailDisplayedAlert = Object.assign({}, alert);
        this.detailDisplayedAlert.mode = 'raw';
        this.setDetailsContent(alert);
    };
    AlertOutletComponent.prototype.setDetailsContent = function (alert) {
        if (this.isTemplateRef(alert.detailedData) || typeof alert.detailedData === 'string') {
            this.detailDisplayedAlert.contents = alert.detailedData;
        }
        else {
            this.detailDisplayedAlert.contents = JSON.stringify(alert.detailedData, null, 2);
        }
    };
    AlertOutletComponent.prototype.hasDetails = function (alert) {
        return (alert.detailedData || alert.onDetail);
    };
    AlertOutletComponent.prototype.closeDetails = function () {
        this.detailDisplayedAlert = {};
    };
    AlertOutletComponent.prototype.isDetailsShow = function (alert) {
        return this.alertService.areSame(alert, this.detailDisplayedAlert);
    };
    AlertOutletComponent.prototype.isTemplateRef = function (value) {
        return value instanceof TemplateRef;
    };
    AlertOutletComponent.prototype.template = function (content) {
        return this.isTemplateRef(content) ? content : undefined;
    };
    AlertOutletComponent.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Attribute, args: ['position',] }] },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        HostBinding('class.static')
    ], AlertOutletComponent.prototype, "isStatic", void 0);
    AlertOutletComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-alert-outlet',
            template: "<div\n  class=\"alert animated fadeInRightBig\"\n  *ngFor=\"let alert of alerts | async\"\n  [ngClass]=\"[getClass(alert), isDetailsShow(alert) ? 'expanded' : '']\"\n>\n  <button title=\"{{ 'Close' | translate }}\" type=\"button\" class=\"close\" (click)=\"close(alert)\">\n    <span aria-hidden=\"true\">&times;</span>\n    <span class=\"sr-only\">{{ 'Close' | translate }}</span>\n  </button>\n\n  <div *ngIf=\"!isTemplateRef(alert.text); else template(alert.text)\">\n    <strong *ngIf=\"!alert.allowHtml\" [innerText]=\"alert.text | translate\" class=\"message\"></strong>\n    <strong *ngIf=\"alert.allowHtml\" [innerHTML]=\"alert.text | translate\" class=\"message\"></strong>\n  </div>\n  <p *ngIf=\"hasDetails(alert) && !isDetailsShow(alert)\" class=\"text-muted top-m-sm\">\n    <button\n      title=\"{{ 'Show details' | translate }}\"\n      class=\"btn btn-clean\"\n      (click)=\"showDetails(alert)\"\n    >\n      <i class=\"fa fa-chevron-down\"></i>\n      {{ 'Show details' | translate }}\n    </button>\n  </p>\n  <p *ngIf=\"hasDetails(alert) && isDetailsShow(alert)\" class=\"text-muted top-m-sm\">\n    <button title=\"{{ 'Hide details' | translate }}\" class=\"btn btn-clean\" (click)=\"closeDetails()\">\n      <i class=\"fa fa-chevron-up\"></i>\n      {{ 'Hide details' | translate }}\n    </button>\n  </p>\n  <div *ngIf=\"isDetailsShow(alert)\">\n    <div *ngIf=\"!isTemplateRef(detailDisplayedAlert.contents); else template(alert.detailedData)\">\n      <pre><code [innerText]=\"detailDisplayedAlert.contents | translate\"></code></pre>\n    </div>\n  </div>\n</div>\n"
        }),
        tslib_1.__param(0, Attribute('position'))
    ], AlertOutletComponent);
    return AlertOutletComponent;
}());
export { AlertOutletComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQtb3V0bGV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2FsZXJ0L2FsZXJ0LW91dGxldC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0UsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBUS9DO0lBT0UsOEJBQ2lDLFFBQWdCLEVBQ3hDLFlBQTBCO1FBREYsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUN4QyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQVBuQyx5QkFBb0IsR0FBUSxFQUFFLENBQUM7UUFDRixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBUTVDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUM7SUFDN0MsQ0FBQztJQVJELHNCQUFJLHdDQUFNO2FBQVY7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDO1FBQ2xDLENBQUM7OztPQUFBO0lBUUQsdUNBQVEsR0FBUixVQUFTLEtBQVk7UUFDbkIsSUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ25CLElBQUksS0FBSyxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDM0IsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUMxQjtRQUNELE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBUyxLQUFLLENBQUMsSUFBTSxDQUFDLENBQUM7UUFDcEMsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxvQ0FBSyxHQUFMLFVBQU0sS0FBSztRQUNULElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRTtZQUNqQixLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDakI7UUFDRCxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsMENBQVcsR0FBWCxVQUFZLEtBQUs7UUFDZixJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDbEIsT0FBTyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDekI7UUFDRCxJQUFJLENBQUMsb0JBQW9CLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFDdkMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxnREFBaUIsR0FBakIsVUFBa0IsS0FBSztRQUNyQixJQUFLLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLE9BQU8sS0FBSyxDQUFDLFlBQVksS0FBSyxRQUFRLEVBQUc7WUFDdEYsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDO1NBQ3pEO2FBQU07WUFDTCxJQUFJLENBQUMsb0JBQW9CLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDbEY7SUFDSCxDQUFDO0lBRUQseUNBQVUsR0FBVixVQUFXLEtBQUs7UUFDZCxPQUFPLENBQUMsS0FBSyxDQUFDLFlBQVksSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELDJDQUFZLEdBQVo7UUFDRSxJQUFJLENBQUMsb0JBQW9CLEdBQUcsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCw0Q0FBYSxHQUFiLFVBQWMsS0FBSztRQUNqQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRUQsNENBQWEsR0FBYixVQUFjLEtBQUs7UUFDakIsT0FBTyxLQUFLLFlBQVksV0FBVyxDQUFDO0lBQ3RDLENBQUM7SUFFRCx1Q0FBUSxHQUFSLFVBQVMsT0FBTztRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDM0QsQ0FBQzs7NkNBekRFLFNBQVMsU0FBQyxVQUFVO2dCQUNBLFlBQVk7O0lBTk47UUFBNUIsV0FBVyxDQUFDLGNBQWMsQ0FBQzswREFBa0I7SUFIbkMsb0JBQW9CO1FBTGhDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsc2tEQUE0QztTQUM3QyxDQUFDO1FBVUcsbUJBQUEsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFBO09BUmIsb0JBQW9CLENBa0VoQztJQUFELDJCQUFDO0NBQUEsQUFsRUQsSUFrRUM7U0FsRVksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBUZW1wbGF0ZVJlZiwgQXR0cmlidXRlLCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWxlcnQgfSBmcm9tICcuL2FsZXJ0Lm1vZGVsJztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJy4vYWxlcnQuc2VydmljZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFsZXJ0LW91dGxldCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9hbGVydC1vdXRsZXQuY29tcG9uZW50Lmh0bWwnXG59KVxuXG5leHBvcnQgY2xhc3MgQWxlcnRPdXRsZXRDb21wb25lbnQge1xuXG4gIGRldGFpbERpc3BsYXllZEFsZXJ0OiBhbnkgPSB7fTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zdGF0aWMnKSBpc1N0YXRpYyA9IGZhbHNlO1xuICBnZXQgYWxlcnRzKCk6IEJlaGF2aW9yU3ViamVjdDxBbGVydFtdPiB7XG4gICAgcmV0dXJuIHRoaXMuYWxlcnRTZXJ2aWNlLnN0YXRlJDtcbiAgfVxuICBjb25zdHJ1Y3RvcihcbiAgICBAQXR0cmlidXRlKCdwb3NpdGlvbicpIHByaXZhdGUgcG9zaXRpb246IHN0cmluZyxcbiAgICBwdWJsaWMgYWxlcnRTZXJ2aWNlOiBBbGVydFNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5pc1N0YXRpYyA9IHRoaXMucG9zaXRpb24gPT09ICdzdGF0aWMnO1xuICB9XG5cbiAgZ2V0Q2xhc3MoYWxlcnQ6IEFsZXJ0KSB7XG4gICAgY29uc3QgY2xhc3NlcyA9IFtdO1xuICAgIGlmIChhbGVydC50eXBlICE9PSAnZGFuZ2VyJykge1xuICAgICAgY2xhc3Nlcy5wdXNoKCdpbnRlcmFjdCcpO1xuICAgIH1cbiAgICBjbGFzc2VzLnB1c2goYGFsZXJ0LSR7YWxlcnQudHlwZX1gKTtcbiAgICByZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG4gIH1cblxuICBjbG9zZShhbGVydCkge1xuICAgIGlmIChhbGVydC5vbkNsb3NlKSB7XG4gICAgICBhbGVydC5vbkNsb3NlKCk7XG4gICAgfVxuICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnJlbW92ZShhbGVydCk7XG4gIH1cblxuICBzaG93RGV0YWlscyhhbGVydCkge1xuICAgIGlmIChhbGVydC5vbkRldGFpbCkge1xuICAgICAgcmV0dXJuIGFsZXJ0Lm9uRGV0YWlsKCk7XG4gICAgfVxuICAgIHRoaXMuZGV0YWlsRGlzcGxheWVkQWxlcnQgPSBPYmplY3QuYXNzaWduKHt9LCBhbGVydCk7XG4gICAgdGhpcy5kZXRhaWxEaXNwbGF5ZWRBbGVydC5tb2RlID0gJ3Jhdyc7XG4gICAgdGhpcy5zZXREZXRhaWxzQ29udGVudChhbGVydCk7XG4gIH1cblxuICBzZXREZXRhaWxzQ29udGVudChhbGVydCkge1xuICAgIGlmICggdGhpcy5pc1RlbXBsYXRlUmVmKGFsZXJ0LmRldGFpbGVkRGF0YSkgfHwgdHlwZW9mIGFsZXJ0LmRldGFpbGVkRGF0YSA9PT0gJ3N0cmluZycgKSB7XG4gICAgICB0aGlzLmRldGFpbERpc3BsYXllZEFsZXJ0LmNvbnRlbnRzID0gYWxlcnQuZGV0YWlsZWREYXRhO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRldGFpbERpc3BsYXllZEFsZXJ0LmNvbnRlbnRzID0gSlNPTi5zdHJpbmdpZnkoYWxlcnQuZGV0YWlsZWREYXRhLCBudWxsLCAyKTtcbiAgICB9XG4gIH1cblxuICBoYXNEZXRhaWxzKGFsZXJ0KSB7XG4gICAgcmV0dXJuIChhbGVydC5kZXRhaWxlZERhdGEgfHwgYWxlcnQub25EZXRhaWwpO1xuICB9XG5cbiAgY2xvc2VEZXRhaWxzKCkge1xuICAgIHRoaXMuZGV0YWlsRGlzcGxheWVkQWxlcnQgPSB7fTtcbiAgfVxuXG4gIGlzRGV0YWlsc1Nob3coYWxlcnQpIHtcbiAgICByZXR1cm4gdGhpcy5hbGVydFNlcnZpY2UuYXJlU2FtZShhbGVydCwgdGhpcy5kZXRhaWxEaXNwbGF5ZWRBbGVydCk7XG4gIH1cblxuICBpc1RlbXBsYXRlUmVmKHZhbHVlKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgVGVtcGxhdGVSZWY7XG4gIH1cblxuICB0ZW1wbGF0ZShjb250ZW50KTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5pc1RlbXBsYXRlUmVmKGNvbnRlbnQpID8gY29udGVudCA6IHVuZGVmaW5lZDtcbiAgfVxufVxuIl19