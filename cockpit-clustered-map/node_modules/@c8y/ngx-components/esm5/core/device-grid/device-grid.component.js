import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { DeviceGridService } from './device-grid.service';
import { gettext } from '../i18n/gettext';
var DeviceGridComponent = /** @class */ (function () {
    function DeviceGridComponent(deviceGridService) {
        this.deviceGridService = deviceGridService;
        this.title = gettext('Devices');
        this.loadingItemsLabel = gettext('Loading devicesâ€¦');
        this.noMatchingItemsLabel = gettext('No matching devices.');
        this.selectable = false;
        this.onColumnsChange = new EventEmitter();
        this.onDeviceQueryStringChange = new EventEmitter();
        this.columns = this.deviceGridService.getDefaultColumns();
        this.pagination = this.deviceGridService.getDefaultPagination();
        this.actionControls = this.deviceGridService.getDefaultActionControls();
        this.bulkActionControls = this.deviceGridService.getDefaultBulkActionControls();
        this.serverSideDataCallback = this.onDataSourceModifier.bind(this);
    }
    Object.defineProperty(DeviceGridComponent.prototype, "_columns", {
        set: function (value) {
            if (value) {
                this.columns = value;
            }
            else {
                this.columns = this.deviceGridService.getDefaultColumns();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceGridComponent.prototype, "_pagination", {
        set: function (value) {
            if (value) {
                this.pagination = value;
            }
            else {
                this.pagination = this.deviceGridService.getDefaultPagination();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceGridComponent.prototype, "_actionControls", {
        set: function (value) {
            if (value) {
                this.actionControls = value;
            }
            else {
                this.actionControls = this.deviceGridService.getDefaultActionControls();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceGridComponent.prototype, "_bulkActionControls", {
        set: function (value) {
            if (value) {
                this.bulkActionControls = value;
            }
            else {
                this.bulkActionControls = this.deviceGridService.getDefaultBulkActionControls();
            }
        },
        enumerable: true,
        configurable: true
    });
    DeviceGridComponent.prototype.trackByName = function (_index, column) {
        return column.name;
    };
    DeviceGridComponent.prototype.onDataSourceModifier = function (dataSourceModifier) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, res, data, paging, filteredSize, size;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.deviceGridService.getDevices(dataSourceModifier.columns, dataSourceModifier.pagination)];
                    case 1:
                        _a = _b.sent(), res = _a.res, data = _a.data, paging = _a.paging;
                        return [4 /*yield*/, this.deviceGridService.getDevicesCount(dataSourceModifier.columns, dataSourceModifier.pagination)];
                    case 2:
                        filteredSize = _b.sent();
                        return [4 /*yield*/, this.deviceGridService.getDevicesTotal()];
                    case 3:
                        size = _b.sent();
                        this.onColumnsChange.emit(dataSourceModifier.columns);
                        this.onDeviceQueryStringChange.emit(this.deviceGridService.getDeviceQueryString(dataSourceModifier.columns));
                        return [2 /*return*/, {
                                res: res,
                                data: data,
                                paging: paging,
                                filteredSize: filteredSize,
                                size: size
                            }];
                }
            });
        });
    };
    DeviceGridComponent.ctorParameters = function () { return [
        { type: DeviceGridService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "title", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "loadingItemsLabel", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "noMatchingItemsLabel", void 0);
    tslib_1.__decorate([
        Input('columns')
    ], DeviceGridComponent.prototype, "_columns", null);
    tslib_1.__decorate([
        Input('pagination')
    ], DeviceGridComponent.prototype, "_pagination", null);
    tslib_1.__decorate([
        Input('actionControls')
    ], DeviceGridComponent.prototype, "_actionControls", null);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "selectable", void 0);
    tslib_1.__decorate([
        Input('bulkActionControls')
    ], DeviceGridComponent.prototype, "_bulkActionControls", null);
    tslib_1.__decorate([
        Output()
    ], DeviceGridComponent.prototype, "onColumnsChange", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceGridComponent.prototype, "onDeviceQueryStringChange", void 0);
    DeviceGridComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-grid',
            template: "<c8y-data-grid\n  [title]=\"title\"\n  [loadingItemsLabel]=\"loadingItemsLabel\"\n  [noMatchingItemsLabel]=\"noMatchingItemsLabel\"\n  [columns]=\"columns\"\n  [pagination]=\"pagination\"\n  [actionControls]=\"actionControls\"\n  [selectable]=\"selectable\"\n  [bulkActionControls]=\"bulkActionControls\"\n  [serverSideDataCallback]=\"serverSideDataCallback\"\n>\n  <ng-container *ngFor=\"let column of columns; trackBy: trackByName\">\n    <c8y-column [name]=\"column.name\">\n      <ng-container *ngIf=\"column.filteringConfig\">\n        <ng-container *c8yFilteringFormRendererDef=\"let context\">\n          <c8y-filtering-form [context]=\"context\"></c8y-filtering-form>\n        </ng-container>\n      </ng-container>\n    </c8y-column>\n  </ng-container>\n</c8y-data-grid>\n"
        })
    ], DeviceGridComponent);
    return DeviceGridComponent;
}());
export { DeviceGridComponent };
//# sourceMappingURL=data:application/json;base64,