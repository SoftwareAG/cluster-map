import * as tslib_1 from "tslib";
import { Component, forwardRef, Inject } from '@angular/core';
import { CellRendererContext } from '../../data-grid/column/cell-renderer';
import { DeviceGridService } from '../device-grid.service';
var NameCellRendererComponent = /** @class */ (function () {
    function NameCellRendererComponent(context, deviceGridService) {
        this.context = context;
        this.deviceGridService = deviceGridService;
    }
    NameCellRendererComponent.ctorParameters = function () { return [
        { type: CellRendererContext },
        { type: DeviceGridService, decorators: [{ type: Inject, args: [forwardRef(function () { return DeviceGridService; }),] }] }
    ]; };
    NameCellRendererComponent = tslib_1.__decorate([
        Component({
            template: "\n    <a\n      [href]=\"deviceGridService.getDeviceHref(context.item)\"\n      title=\"{{ deviceGridService.getProperName(context.item) }}\"\n      class=\"interact\"\n    >\n      {{ deviceGridService.getProperName(context.item) }}\n    </a>\n  "
        }),
        tslib_1.__param(1, Inject(forwardRef(function () { return DeviceGridService; })))
    ], NameCellRendererComponent);
    return NameCellRendererComponent;
}());
export { NameCellRendererComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2RldmljZS1ncmlkL2NvbHVtbnMvbmFtZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBYTNEO0lBQ0UsbUNBQ1MsT0FBNEIsRUFDaUIsaUJBQW9DO1FBRGpGLFlBQU8sR0FBUCxPQUFPLENBQXFCO1FBQ2lCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7SUFDdkYsQ0FBQzs7Z0JBRmMsbUJBQW1CO2dCQUNvQyxpQkFBaUIsdUJBQXZGLE1BQU0sU0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLGlCQUFpQixFQUFqQixDQUFpQixDQUFDOztJQUhsQyx5QkFBeUI7UUFYckMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHlQQVFUO1NBQ0YsQ0FBQztRQUlHLG1CQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLGlCQUFpQixFQUFqQixDQUFpQixDQUFDLENBQUMsQ0FBQTtPQUhuQyx5QkFBeUIsQ0FLckM7SUFBRCxnQ0FBQztDQUFBLEFBTEQsSUFLQztTQUxZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnLi4vLi4vZGF0YS1ncmlkL2NvbHVtbi9jZWxsLXJlbmRlcmVyJztcbmltcG9ydCB7IERldmljZUdyaWRTZXJ2aWNlIH0gZnJvbSAnLi4vZGV2aWNlLWdyaWQuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxhXG4gICAgICBbaHJlZl09XCJkZXZpY2VHcmlkU2VydmljZS5nZXREZXZpY2VIcmVmKGNvbnRleHQuaXRlbSlcIlxuICAgICAgdGl0bGU9XCJ7eyBkZXZpY2VHcmlkU2VydmljZS5nZXRQcm9wZXJOYW1lKGNvbnRleHQuaXRlbSkgfX1cIlxuICAgICAgY2xhc3M9XCJpbnRlcmFjdFwiXG4gICAgPlxuICAgICAge3sgZGV2aWNlR3JpZFNlcnZpY2UuZ2V0UHJvcGVyTmFtZShjb250ZXh0Lml0ZW0pIH19XG4gICAgPC9hPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIE5hbWVDZWxsUmVuZGVyZXJDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgY29udGV4dDogQ2VsbFJlbmRlcmVyQ29udGV4dCxcbiAgICBASW5qZWN0KGZvcndhcmRSZWYoKCkgPT4gRGV2aWNlR3JpZFNlcnZpY2UpKSBwdWJsaWMgZGV2aWNlR3JpZFNlcnZpY2U6IERldmljZUdyaWRTZXJ2aWNlXG4gICkge31cbn1cbiJdfQ==