import * as tslib_1 from "tslib";
import { Component, ElementRef, NgZone } from '@angular/core';
import { HeaderService } from '../header.service';
import { debounceTime, map, filter } from 'rxjs/operators';
var TitleOutletComponent = /** @class */ (function () {
    function TitleOutletComponent(headerService, element, zone) {
        var _this = this;
        this.headerService = headerService;
        this.element = element;
        this.zone = zone;
        this.title = undefined;
        var title$ = this.headerService.map(function (state) { return state.title; });
        title$.subscribe(function (title) { return (_this.title = title); });
        this.zone.runOutsideAngular(function () {
            title$
                .pipe(debounceTime(100), map(function () { return _this.element.nativeElement.querySelector('h1'); }), filter(function (el) { return el !== null; }), map(function (el) { return el.innerText; }), filter(Boolean))
                .subscribe(function (title) { return headerService.changePageTitle(title); });
        });
    }
    TitleOutletComponent.ctorParameters = function () { return [
        { type: HeaderService },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    TitleOutletComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-title-outlet',
            template: "<div class=\"c8y-ui-title\">\n  <div class=\"title\" *c8yOutlet=\"title\"></div>\n</div>\n"
        })
    ], TitleOutletComponent);
    return TitleOutletComponent;
}());
export { TitleOutletComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUtb3V0bGV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2hlYWRlci90aXRsZS90aXRsZS1vdXRsZXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxZQUFZLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBTTNEO0lBR0UsOEJBQ1UsYUFBNEIsRUFDNUIsT0FBbUIsRUFDbkIsSUFBWTtRQUh0QixpQkFrQkM7UUFqQlMsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFDNUIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUNuQixTQUFJLEdBQUosSUFBSSxDQUFRO1FBTHRCLFVBQUssR0FBRyxTQUFTLENBQUM7UUFPaEIsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsS0FBSyxFQUFYLENBQVcsQ0FBQyxDQUFDO1FBQzVELE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEVBQXBCLENBQW9CLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQzFCLE1BQU07aUJBQ0gsSUFBSSxDQUNILFlBQVksQ0FBQyxHQUFHLENBQUMsRUFDakIsR0FBRyxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQTlDLENBQThDLENBQUMsRUFDekQsTUFBTSxDQUFDLFVBQUEsRUFBRSxJQUFJLE9BQUEsRUFBRSxLQUFLLElBQUksRUFBWCxDQUFXLENBQUMsRUFDekIsR0FBRyxDQUFDLFVBQUEsRUFBRSxJQUFJLE9BQUEsRUFBRSxDQUFDLFNBQVMsRUFBWixDQUFZLENBQUMsRUFDdkIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUNoQjtpQkFDQSxTQUFTLENBQUMsVUFBQyxLQUFhLElBQUssT0FBQSxhQUFhLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxFQUFwQyxDQUFvQyxDQUFDLENBQUM7UUFDeEUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOztnQkFqQndCLGFBQWE7Z0JBQ25CLFVBQVU7Z0JBQ2IsTUFBTTs7SUFOWCxvQkFBb0I7UUFKaEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtZQUM1QixzR0FBNEM7U0FDN0MsQ0FBQztPQUNXLG9CQUFvQixDQXNCaEM7SUFBRCwyQkFBQztDQUFBLEFBdEJELElBc0JDO1NBdEJZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIZWFkZXJTZXJ2aWNlIH0gZnJvbSAnLi4vaGVhZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgZGVib3VuY2VUaW1lLCBtYXAsIGZpbHRlciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXRpdGxlLW91dGxldCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90aXRsZS1vdXRsZXQuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRpdGxlT3V0bGV0Q29tcG9uZW50IHtcbiAgdGl0bGUgPSB1bmRlZmluZWQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBoZWFkZXJTZXJ2aWNlOiBIZWFkZXJTZXJ2aWNlLFxuICAgIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZixcbiAgICBwcml2YXRlIHpvbmU6IE5nWm9uZVxuICApIHtcbiAgICBjb25zdCB0aXRsZSQgPSB0aGlzLmhlYWRlclNlcnZpY2UubWFwKHN0YXRlID0+IHN0YXRlLnRpdGxlKTtcbiAgICB0aXRsZSQuc3Vic2NyaWJlKHRpdGxlID0+ICh0aGlzLnRpdGxlID0gdGl0bGUpKTtcbiAgICB0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgdGl0bGUkXG4gICAgICAgIC5waXBlKFxuICAgICAgICAgIGRlYm91bmNlVGltZSgxMDApLFxuICAgICAgICAgIG1hcCgoKSA9PiB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdoMScpKSxcbiAgICAgICAgICBmaWx0ZXIoZWwgPT4gZWwgIT09IG51bGwpLFxuICAgICAgICAgIG1hcChlbCA9PiBlbC5pbm5lclRleHQpLFxuICAgICAgICAgIGZpbHRlcihCb29sZWFuKVxuICAgICAgICApXG4gICAgICAgIC5zdWJzY3JpYmUoKHRpdGxlOiBzdHJpbmcpID0+IGhlYWRlclNlcnZpY2UuY2hhbmdlUGFnZVRpdGxlKHRpdGxlKSk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==