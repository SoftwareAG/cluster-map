import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ApplicationService, IApplication, ICurrentTenant, IUser } from '@c8y/client';
import { get, includes, orderBy } from 'lodash-es';
import { combineLatest } from 'rxjs';
import { first } from 'rxjs/operators';
import { AppStateService } from '../../common/ui-state.service';
var AppSwitcherComponent = /** @class */ (function () {
    function AppSwitcherComponent(ui, applications) {
        var _this = this;
        this.ui = ui;
        this.applications = applications;
        var _a = this.ui, currentUser = _a.currentUser, currentTenant = _a.currentTenant;
        combineLatest(currentUser, currentTenant).pipe(first()).subscribe(function (_a) {
            var _b = tslib_1.__read(_a, 2), user = _b[0], tenant = _b[1];
            _this.tenant = tenant;
            _this.listAppsForUser(user);
        });
    }
    Object.defineProperty(AppSwitcherComponent.prototype, "hideCloudApps", {
        get: function () {
            return false; // this should be configurable from outside
        },
        enumerable: true,
        configurable: true
    });
    AppSwitcherComponent.prototype.isActive = function (app) {
        return app.contextPath === this.ui.state.app.contextPath;
    };
    AppSwitcherComponent.prototype.getHref = function (app) {
        return this.applications.getHref(app);
    };
    AppSwitcherComponent.prototype.listAppsForUser = function (user) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!user) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.applications.listByUser(user, { pageSize: 1000 })];
                    case 1:
                        data = (_a.sent()).data;
                        this.apps = this.orderApps(this.filterApps(data));
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    AppSwitcherComponent.prototype.filterApps = function (apps) {
        apps = this.filterVisible(apps);
        apps = this.filterCloud(apps);
        apps = this.filterDuplicates(apps);
        return apps;
    };
    AppSwitcherComponent.prototype.filterVisible = function (apps) {
        var visibleApplicationTypes = ['HOSTED', 'EXTERNAL'];
        return apps.filter(function (app) { return includes(visibleApplicationTypes, app.type) &&
            !app.noAppSwitcher &&
            !get(app, 'manifest.noAppSwitcher'); });
    };
    AppSwitcherComponent.prototype.filterCloud = function (apps) {
        var hideCloudApps = this.hideCloudApps;
        var filterFn = function (app) { return !!app.cloud; };
        if (!hideCloudApps) {
            this.oneCloudApps = this.orderApps(apps.filter(filterFn));
        }
        return apps.filter(function (app) { return !filterFn(app); });
    };
    AppSwitcherComponent.prototype.filterDuplicates = function (apps) {
        var _this = this;
        // Filter out apps that have duplicate contextpaths and are not own owned but the current tenant;
        var filterFn = function (app) { return !apps.some(function (otherApp) { return (app !== otherApp) &&
            (app.contextPath && app.contextPath === otherApp.contextPath) &&
            (app.owner.tenant.id !== _this.tenant.name); }); };
        return apps.filter(filterFn);
    };
    AppSwitcherComponent.prototype.orderApps = function (apps) {
        return orderBy(apps, (function (_a) {
            var name = _a.name;
            return name.toLowerCase();
        }));
    };
    AppSwitcherComponent.ctorParameters = function () { return [
        { type: AppStateService },
        { type: ApplicationService }
    ]; };
    AppSwitcherComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-app-switcher',
            template: "<div class=\"app-switcher-dropdown\" dropdown>\n  <button\n    class=\"main-header-button c8y-dropdown dropdown-toggle\"\n    id=\"appSwitcherDropdown\"\n    dropdownToggle\n  >\n    <i class=\"fa-2x fa fw fa-th\"></i>\n  </button>\n  <div\n    *dropdownMenu\n    class=\"app-switcher-dropdown-menu dropdown-menu\"\n    aria-labelledby=\"appSwitcherDropdown\"\n  >\n    <div class=\"app-switcher-sagcloud\" *ngIf=\"oneCloudApps && oneCloudApps.length > 0\">\n      <a\n        title=\"{{ app.name | humanizeAppName | async }}\"\n        class=\"appLink\"\n        *ngFor=\"let app of oneCloudApps\"\n        [href]=\"getHref(app)\"\n      >\n        <c8y-app-icon [app]=\"app\" [name]=\"app.name\" [contextPath]=\"app.contextPath\"></c8y-app-icon>\n        <span class=\"text-truncate-wrap\">{{ app | humanizeAppName | async }}</span>\n      </a>\n    </div>\n    <div class=\"app-switcher\">\n      <a\n        title=\"{{ app.name | humanizeAppName | async }}\"\n        class=\"appLink\"\n        [ngClass]=\"isActive(app) ? 'active' : ''\"\n        *ngFor=\"let app of apps\"\n        [href]=\"getHref(app)\"\n      >\n        <c8y-app-icon [app]=\"app\" [name]=\"app.name\" [contextPath]=\"app.contextPath\"></c8y-app-icon>\n        <span class=\"text-truncate-wrap\">{{ app | humanizeAppName | async }}</span>\n      </a>\n    </div>\n  </div>\n</div>\n"
        })
    ], AppSwitcherComponent);
    return AppSwitcherComponent;
}());
export { AppSwitcherComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXN3aXRjaGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2hlYWRlci9hcHBsaWNhdGlvbi9hcHAtc3dpdGNoZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN0RixPQUFPLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNyQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDdkMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBTWhFO0lBU0UsOEJBQ1UsRUFBbUIsRUFDbkIsWUFBZ0M7UUFGMUMsaUJBVUM7UUFUUyxPQUFFLEdBQUYsRUFBRSxDQUFpQjtRQUNuQixpQkFBWSxHQUFaLFlBQVksQ0FBb0I7UUFDaEMsSUFBQSxZQUF1QyxFQUFyQyw0QkFBVyxFQUFFLGdDQUF3QixDQUFDO1FBQzlDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUM1QyxLQUFLLEVBQUUsQ0FDUixDQUFDLFNBQVMsQ0FBQyxVQUFDLEVBQWdCO2dCQUFoQiwwQkFBZ0IsRUFBZCxZQUFJLEVBQUUsY0FBTTtZQUN2QixLQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNyQixLQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQWRELHNCQUFZLCtDQUFhO2FBQXpCO1lBQ0UsT0FBTyxLQUFLLENB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STtRQUNwQixPQUFPLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxVQUFDLEVBQVE7Z0JBQU4sY0FBSTtZQUFPLE9BQUEsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUFsQixDQUFrQixDQUFDLENBQUMsQ0FBQztJQUMzRCxDQUFDOztnQkEzRGEsZUFBZTtnQkFDTCxrQkFBa0I7O0lBWC9CLG9CQUFvQjtRQUpoQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLDAxQ0FBNEM7U0FDN0MsQ0FBQztPQUNXLG9CQUFvQixDQXNFaEM7SUFBRCwyQkFBQztDQUFBLEFBdEVELElBc0VDO1NBdEVZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwbGljYXRpb25TZXJ2aWNlLCBJQXBwbGljYXRpb24sIElDdXJyZW50VGVuYW50LCBJVXNlciB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldCwgaW5jbHVkZXMsIG9yZGVyQnkgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgY29tYmluZUxhdGVzdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlyc3QgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBBcHBTdGF0ZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9jb21tb24vdWktc3RhdGUuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1hcHAtc3dpdGNoZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vYXBwLXN3aXRjaGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBBcHBTd2l0Y2hlckNvbXBvbmVudCB7XG4gIG9uZUNsb3VkQXBwcz86IEFycmF5PElBcHBsaWNhdGlvbiAmIHtba2V5OiBzdHJpbmddOiBhbnl9PjtcbiAgYXBwczogQXJyYXk8SUFwcGxpY2F0aW9uICYge1trZXk6IHN0cmluZ106IGFueX0+O1xuICBvcGVuOiBib29sZWFuO1xuXG4gIHByaXZhdGUgZ2V0IGhpZGVDbG91ZEFwcHMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGZhbHNlOyAgLy8gdGhpcyBzaG91bGQgYmUgY29uZmlndXJhYmxlIGZyb20gb3V0c2lkZVxuICB9XG4gIHByaXZhdGUgdGVuYW50OiBJQ3VycmVudFRlbmFudDtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB1aTogQXBwU3RhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgYXBwbGljYXRpb25zOiBBcHBsaWNhdGlvblNlcnZpY2UpIHtcbiAgICAgIGNvbnN0IHsgY3VycmVudFVzZXIsIGN1cnJlbnRUZW5hbnR9ID0gdGhpcy51aTtcbiAgICAgIGNvbWJpbmVMYXRlc3QoY3VycmVudFVzZXIsIGN1cnJlbnRUZW5hbnQpLnBpcGUoXG4gICAgICAgIGZpcnN0KClcbiAgICAgICkuc3Vic2NyaWJlKChbIHVzZXIsIHRlbmFudCBdKSA9PiB7XG4gICAgICAgICAgdGhpcy50ZW5hbnQgPSB0ZW5hbnQ7XG4gICAgICAgICAgdGhpcy5saXN0QXBwc0ZvclVzZXIodXNlcik7XG4gICAgICAgIH0pO1xuICB9XG5cbiAgaXNBY3RpdmUoYXBwOiBJQXBwbGljYXRpb24pIHtcbiAgICByZXR1cm4gYXBwLmNvbnRleHRQYXRoID09PSB0aGlzLnVpLnN0YXRlLmFwcC5jb250ZXh0UGF0aDtcbiAgfVxuXG4gIGdldEhyZWYoYXBwOiBJQXBwbGljYXRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5hcHBsaWNhdGlvbnMuZ2V0SHJlZihhcHApO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBsaXN0QXBwc0ZvclVzZXIodXNlcjogSVVzZXIgfCBudWxsKSB7XG4gICAgaWYgKHVzZXIpIHtcbiAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgdGhpcy5hcHBsaWNhdGlvbnMubGlzdEJ5VXNlcih1c2VyLCB7IHBhZ2VTaXplOiAxMDAwIH0pO1xuICAgICAgdGhpcy5hcHBzID0gdGhpcy5vcmRlckFwcHModGhpcy5maWx0ZXJBcHBzKGRhdGEpKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGZpbHRlckFwcHMoYXBwcykge1xuICAgIGFwcHMgPSB0aGlzLmZpbHRlclZpc2libGUoYXBwcyk7XG4gICAgYXBwcyA9IHRoaXMuZmlsdGVyQ2xvdWQoYXBwcyk7XG4gICAgYXBwcyA9IHRoaXMuZmlsdGVyRHVwbGljYXRlcyhhcHBzKTtcbiAgICByZXR1cm4gYXBwcztcbiAgfVxuXG4gIHByaXZhdGUgZmlsdGVyVmlzaWJsZShhcHBzKSB7XG4gICAgY29uc3QgdmlzaWJsZUFwcGxpY2F0aW9uVHlwZXMgPSBbJ0hPU1RFRCcsICdFWFRFUk5BTCddO1xuICAgIHJldHVybiBhcHBzLmZpbHRlcigoYXBwKSA9PiBpbmNsdWRlcyh2aXNpYmxlQXBwbGljYXRpb25UeXBlcywgYXBwLnR5cGUpICYmXG4gICAgICAhYXBwLm5vQXBwU3dpdGNoZXIgJiZcbiAgICAgICFnZXQoYXBwLCAnbWFuaWZlc3Qubm9BcHBTd2l0Y2hlcicpKTtcbiAgfVxuXG4gIHByaXZhdGUgZmlsdGVyQ2xvdWQoYXBwcykge1xuICAgIGNvbnN0IHsgaGlkZUNsb3VkQXBwcyB9ID0gdGhpcztcbiAgICBjb25zdCBmaWx0ZXJGbiA9IChhcHApID0+ICEhYXBwLmNsb3VkO1xuICAgIGlmICghaGlkZUNsb3VkQXBwcykge1xuICAgICAgICB0aGlzLm9uZUNsb3VkQXBwcyA9IHRoaXMub3JkZXJBcHBzKGFwcHMuZmlsdGVyKGZpbHRlckZuKSk7XG4gICAgfVxuICAgIHJldHVybiBhcHBzLmZpbHRlcigoYXBwKSA9PiAhZmlsdGVyRm4oYXBwKSk7XG4gIH1cblxuICBwcml2YXRlIGZpbHRlckR1cGxpY2F0ZXMoYXBwcykge1xuICAgIC8vIEZpbHRlciBvdXQgYXBwcyB0aGF0IGhhdmUgZHVwbGljYXRlIGNvbnRleHRwYXRocyBhbmQgYXJlIG5vdCBvd24gb3duZWQgYnV0IHRoZSBjdXJyZW50IHRlbmFudDtcbiAgICBjb25zdCBmaWx0ZXJGbiA9IChhcHApID0+ICFhcHBzLnNvbWUoKG90aGVyQXBwKSA9PiAoYXBwICE9PSBvdGhlckFwcCkgJiZcbiAgICAgIChhcHAuY29udGV4dFBhdGggJiYgYXBwLmNvbnRleHRQYXRoID09PSBvdGhlckFwcC5jb250ZXh0UGF0aCkgJiZcbiAgICAgIChhcHAub3duZXIudGVuYW50LmlkICE9PSB0aGlzLnRlbmFudC5uYW1lKSk7XG4gICAgcmV0dXJuIGFwcHMuZmlsdGVyKGZpbHRlckZuKTtcbiAgfVxuXG4gIHByaXZhdGUgb3JkZXJBcHBzKGFwcHMpIHtcbiAgICByZXR1cm4gb3JkZXJCeShhcHBzLCAoKHsgbmFtZSB9KSA9PiBuYW1lLnRvTG93ZXJDYXNlKCkpKTtcbiAgfVxufVxuIl19