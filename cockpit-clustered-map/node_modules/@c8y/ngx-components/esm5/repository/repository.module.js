import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ONCE_ROUTE } from '@c8y/ngx-components';
import { ConfigurationListComponent } from './configuration/configuration-list.component';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { RepositoryService } from './repository.service';
import { ConfigurationNewModalComponent } from './configuration/configuration-new-modal.component';
import { RepositoryNavigationFactory } from './repository-navigation-factory';
var ɵ0 = [
    {
        path: 'configuration-new',
        component: ConfigurationListComponent
    }
];
var RepositoryModule = /** @class */ (function () {
    function RepositoryModule() {
    }
    RepositoryModule = tslib_1.__decorate([
        NgModule({
            imports: [CoreModule, TooltipModule],
            exports: [],
            entryComponents: [ConfigurationListComponent, ConfigurationNewModalComponent],
            declarations: [ConfigurationListComponent, ConfigurationNewModalComponent],
            providers: [
                RepositoryService,
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useClass: RepositoryNavigationFactory,
                    multi: true
                },
                {
                    provide: HOOK_ONCE_ROUTE,
                    useValue: ɵ0,
                    multi: true
                }
            ]
        })
    ], RepositoryModule);
    return RepositoryModule;
}());
export { RepositoryModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnkvIiwic291cmNlcyI6WyJyZXBvc2l0b3J5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQ0wsVUFBVSxFQUNWLG9CQUFvQixFQUNwQixlQUFlLEVBRWhCLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDMUYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ25HLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO1NBZ0I5RDtJQUNSO1FBQ0UsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixTQUFTLEVBQUUsMEJBQTBCO0tBQ3RDO0NBQ1M7QUFLbEI7SUFBQTtJQUErQixDQUFDO0lBQW5CLGdCQUFnQjtRQXhCNUIsUUFBUSxDQUFDO1lBQ1IsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQztZQUNwQyxPQUFPLEVBQUUsRUFBRTtZQUNYLGVBQWUsRUFBRSxDQUFDLDBCQUEwQixFQUFFLDhCQUE4QixDQUFDO1lBQzdFLFlBQVksRUFBRSxDQUFDLDBCQUEwQixFQUFFLDhCQUE4QixDQUFDO1lBQzFFLFNBQVMsRUFBRTtnQkFDVCxpQkFBaUI7Z0JBQ2pCO29CQUNFLE9BQU8sRUFBRSxvQkFBb0I7b0JBQzdCLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLEtBQUssRUFBRSxJQUFJO2lCQUNaO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxlQUFlO29CQUN4QixRQUFRLElBS0k7b0JBQ1osS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7T0FDVyxnQkFBZ0IsQ0FBRztJQUFELHVCQUFDO0NBQUEsQUFBaEMsSUFBZ0M7U0FBbkIsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIENvcmVNb2R1bGUsXG4gIEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICBIT09LX09OQ0VfUk9VVEUsXG4gIFJvdXRlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvbkxpc3RDb21wb25lbnQgfSBmcm9tICcuL2NvbmZpZ3VyYXRpb24vY29uZmlndXJhdGlvbi1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IFJlcG9zaXRvcnlTZXJ2aWNlIH0gZnJvbSAnLi9yZXBvc2l0b3J5LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvbk5ld01vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9jb25maWd1cmF0aW9uL2NvbmZpZ3VyYXRpb24tbmV3LW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5TmF2aWdhdGlvbkZhY3RvcnkgfSBmcm9tICcuL3JlcG9zaXRvcnktbmF2aWdhdGlvbi1mYWN0b3J5JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvcmVNb2R1bGUsIFRvb2x0aXBNb2R1bGVdLFxuICBleHBvcnRzOiBbXSxcbiAgZW50cnlDb21wb25lbnRzOiBbQ29uZmlndXJhdGlvbkxpc3RDb21wb25lbnQsIENvbmZpZ3VyYXRpb25OZXdNb2RhbENvbXBvbmVudF0sXG4gIGRlY2xhcmF0aW9uczogW0NvbmZpZ3VyYXRpb25MaXN0Q29tcG9uZW50LCBDb25maWd1cmF0aW9uTmV3TW9kYWxDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICBSZXBvc2l0b3J5U2VydmljZSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBSZXBvc2l0b3J5TmF2aWdhdGlvbkZhY3RvcnksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19PTkNFX1JPVVRFLFxuICAgICAgdXNlVmFsdWU6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICdjb25maWd1cmF0aW9uLW5ldycsXG4gICAgICAgICAgY29tcG9uZW50OiBDb25maWd1cmF0aW9uTGlzdENvbXBvbmVudFxuICAgICAgICB9XG4gICAgICBdIGFzIFJvdXRlW10sXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBSZXBvc2l0b3J5TW9kdWxlIHt9XG4iXX0=