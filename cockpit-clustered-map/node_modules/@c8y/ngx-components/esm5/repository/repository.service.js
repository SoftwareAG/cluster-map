import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { InventoryService, IIdentified, InventoryBinaryService, IManagedObject } from '@c8y/client';
import { RepositoryType } from './repository.model';
var RepositoryService = /** @class */ (function () {
    function RepositoryService(inventory, inventoryBinary) {
        this.inventory = inventory;
        this.inventoryBinary = inventoryBinary;
    }
    RepositoryService.prototype.listConfigurations = function () {
        return this.inventory.list({
            type: RepositoryType.CONFIGURATION,
            withTotalPages: true,
            pageSize: 50
        });
    };
    RepositoryService.prototype.delete = function (entity) {
        // TODO: add cascading delete (will be done by Dawid)
        return this.inventory.delete(entity);
    };
    RepositoryService.prototype.save = function (data, type, mo) {
        if (mo === void 0) { mo = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var existingUrl, response;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        switch (type) {
                            case RepositoryType.CONFIGURATION: {
                                Object.assign(mo, {
                                    type: RepositoryType.CONFIGURATION,
                                    configurationType: data.selected ? data.selected.configurationType : undefined,
                                    name: data.versionOrName,
                                    description: data.description,
                                    deviceType: data.deviceType,
                                    c8y_Global: {}
                                });
                                break;
                            }
                        }
                        existingUrl = mo.url;
                        if (!data.binary.url) return [3 /*break*/, 1];
                        mo.url = data.binary.url;
                        return [3 /*break*/, 3];
                    case 1:
                        if (!data.binary.file) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.inventoryBinary.create(data.binary.file, { c8y_Global: {} })];
                    case 2:
                        response = _a.sent();
                        mo.url = response.data.self;
                        _a.label = 3;
                    case 3:
                        if (mo.id) {
                            return [2 /*return*/, this.updateEntry(mo, existingUrl)];
                        }
                        return [2 /*return*/, this.createEntry(mo)];
                }
            });
        });
    };
    RepositoryService.prototype.createEntry = function (mo) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var binaryId, newMo;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.inventoryBinary.getIdFromUrl(mo.url)];
                    case 1:
                        binaryId = _a.sent();
                        return [4 /*yield*/, this.inventory.create(mo)];
                    case 2:
                        newMo = _a.sent();
                        if (!binaryId) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.inventory.childAdditionsAdd(binaryId, newMo.data)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/, newMo];
                }
            });
        });
    };
    RepositoryService.prototype.updateEntry = function (mo, url) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var existingBinaryId, newBinaryId, id;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.inventoryBinary.getIdFromUrl(url)];
                    case 1:
                        existingBinaryId = _a.sent();
                        return [4 /*yield*/, this.inventoryBinary.getIdFromUrl(mo.url)];
                    case 2:
                        newBinaryId = _a.sent();
                        if (!(existingBinaryId && existingBinaryId !== newBinaryId)) return [3 /*break*/, 4];
                        id = this.inventoryBinary.getIdFromUrl(url);
                        return [4 /*yield*/, this.inventoryBinary.delete(id)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        if (!newBinaryId) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.inventory.childAdditionsAdd(newBinaryId, mo)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/, this.inventory.update(mo)];
                }
            });
        });
    };
    RepositoryService.ctorParameters = function () { return [
        { type: InventoryService },
        { type: InventoryBinaryService }
    ]; };
    RepositoryService = tslib_1.__decorate([
        Injectable()
    ], RepositoryService);
    return RepositoryService;
}());
export { RepositoryService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5LyIsInNvdXJjZXMiOlsicmVwb3NpdG9yeS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsc0JBQXNCLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3BHLE9BQU8sRUFBbUIsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHckU7SUFDRSwyQkFDVSxTQUEyQixFQUMzQixlQUF1QztRQUR2QyxjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUMzQixvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7SUFDOUMsQ0FBQztJQUVKLDhDQUFrQixHQUFsQjtRQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7WUFDekIsSUFBSSxFQUFFLGNBQWMsQ0FBQyxhQUFhO1lBQ2xDLGNBQWMsRUFBRSxJQUFJO1lBQ3BCLFFBQVEsRUFBRSxFQUFFO1NBQ2IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGtDQUFNLEdBQU4sVUFBTyxNQUFtQjtRQUN4QixxREFBcUQ7UUFDckQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUssZ0NBQUksR0FBVixVQUFXLElBQXFCLEVBQUUsSUFBb0IsRUFBRSxFQUFnQztRQUFoQyxtQkFBQSxFQUFBLE9BQWdDOzs7Ozs7d0JBQ3RGLFFBQVEsSUFBSSxFQUFFOzRCQUNaLEtBQUssY0FBYyxDQUFDLGFBQWEsQ0FBQyxDQUFDO2dDQUNqQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRTtvQ0FDaEIsSUFBSSxFQUFFLGNBQWMsQ0FBQyxhQUFhO29DQUNsQyxpQkFBaUIsRUFB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RCx3QkFBQztDQUFBLEFBckVELElBcUVDO1NBckVZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEludmVudG9yeVNlcnZpY2UsIElJZGVudGlmaWVkLCBJbnZlbnRvcnlCaW5hcnlTZXJ2aWNlLCBJTWFuYWdlZE9iamVjdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IFJlcG9zaXRvcnlNb2RhbCwgUmVwb3NpdG9yeVR5cGUgfSBmcm9tICcuL3JlcG9zaXRvcnkubW9kZWwnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUmVwb3NpdG9yeVNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGludmVudG9yeTogSW52ZW50b3J5U2VydmljZSxcbiAgICBwcml2YXRlIGludmVudG9yeUJpbmFyeTogSW52ZW50b3J5QmluYXJ5U2VydmljZVxuICApIHt9XG5cbiAgbGlzdENvbmZpZ3VyYXRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLmludmVudG9yeS5saXN0KHtcbiAgICAgIHR5cGU6IFJlcG9zaXRvcnlUeXBlLkNPTkZJR1VSQVRJT04sXG4gICAgICB3aXRoVG90YWxQYWdlczogdHJ1ZSxcbiAgICAgIHBhZ2VTaXplOiA1MFxuICAgIH0pO1xuICB9XG5cbiAgZGVsZXRlKGVudGl0eTogSUlkZW50aWZpZWQpIHtcbiAgICAvLyBUT0RPOiBhZGQgY2FzY2FkaW5nIGRlbGV0ZSAod2lsbCBiZSBkb25lIGJ5IERhd2lkKVxuICAgIHJldHVybiB0aGlzLmludmVudG9yeS5kZWxldGUoZW50aXR5KTtcbiAgfVxuXG4gIGFzeW5jIHNhdmUoZGF0YTogUmVwb3NpdG9yeU1vZGFsLCB0eXBlOiBSZXBvc2l0b3J5VHlwZSwgbW86IFBhcnRpYWw8SU1hbmFnZWRPYmplY3Q+ID0ge30pIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgUmVwb3NpdG9yeVR5cGUuQ09ORklHVVJBVElPTjoge1xuICAgICAgICBPYmplY3QuYXNzaWduKG1vLCB7XG4gICAgICAgICAgdHlwZTogUmVwb3NpdG9yeVR5cGUuQ09ORklHVVJBVElPTixcbiAgICAgICAgICBjb25maWd1cmF0aW9uVHlwZTogZGF0YS5zZWxlY3RlZCA/IGRhdGEuc2VsZWN0ZWQuY29uZmlndXJhdGlvblR5cGUgOiB1bmRlZmluZWQsXG4gICAgICAgICAgbmFtZTogZGF0YS52ZXJzaW9uT3JOYW1lLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBkYXRhLmRlc2NyaXB0aW9uLFxuICAgICAgICAgIGRldmljZVR5cGU6IGRhdGEuZGV2aWNlVHlwZSxcbiAgICAgICAgICBjOHlfR2xvYmFsOiB7fVxuICAgICAgICB9KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZXhpc3RpbmdVcmwgPSBtby51cmw7XG4gICAgaWYgKGRhdGEuYmluYXJ5LnVybCkge1xuICAgICAgbW8udXJsID0gZGF0YS5iaW5hcnkudXJsO1xuICAgIH0gZWxzZSBpZiAoZGF0YS5iaW5hcnkuZmlsZSkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmludmVudG9yeUJpbmFyeS5jcmVhdGUoZGF0YS5iaW5hcnkuZmlsZSwgeyBjOHlfR2xvYmFsOiB7fSB9KTtcbiAgICAgIG1vLnVybCA9IHJlc3BvbnNlLmRhdGEuc2VsZjtcbiAgICB9XG5cbiAgICBpZiAobW8uaWQpIHtcbiAgICAgIHJldHVybiB0aGlzLnVwZGF0ZUVudHJ5KG1vLCBleGlzdGluZ1VybCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNyZWF0ZUVudHJ5KG1vKTtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgY3JlYXRlRW50cnkobW86IFBhcnRpYWw8SU1hbmFnZWRPYmplY3Q+KSB7XG4gICAgY29uc3QgYmluYXJ5SWQgPSBhd2FpdCB0aGlzLmludmVudG9yeUJpbmFyeS5nZXRJZEZyb21VcmwobW8udXJsKTtcbiAgICBjb25zdCBuZXdNbyA9IGF3YWl0IHRoaXMuaW52ZW50b3J5LmNyZWF0ZShtbyk7XG4gICAgaWYgKGJpbmFyeUlkKSB7XG4gICAgICBhd2FpdCB0aGlzLmludmVudG9yeS5jaGlsZEFkZGl0aW9uc0FkZChiaW5hcnlJZCwgbmV3TW8uZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBuZXdNbztcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgdXBkYXRlRW50cnkobW86IFBhcnRpYWw8SU1hbmFnZWRPYmplY3Q+LCB1cmwpIHtcbiAgICBjb25zdCBleGlzdGluZ0JpbmFyeUlkID0gYXdhaXQgdGhpcy5pbnZlbnRvcnlCaW5hcnkuZ2V0SWRGcm9tVXJsKHVybCk7XG4gICAgY29uc3QgbmV3QmluYXJ5SWQgPSBhd2FpdCB0aGlzLmludmVudG9yeUJpbmFyeS5nZXRJZEZyb21VcmwobW8udXJsKTtcbiAgICBpZiAoZXhpc3RpbmdCaW5hcnlJZCAmJiBleGlzdGluZ0JpbmFyeUlkICE9PSBuZXdCaW5hcnlJZCkge1xuICAgICAgY29uc3QgaWQgPSB0aGlzLmludmVudG9yeUJpbmFyeS5nZXRJZEZyb21VcmwodXJsKTtcbiAgICAgIGF3YWl0IHRoaXMuaW52ZW50b3J5QmluYXJ5LmRlbGV0ZShpZCk7XG4gICAgfVxuICAgIGlmIChuZXdCaW5hcnlJZCkge1xuICAgICAgYXdhaXQgdGhpcy5pbnZlbnRvcnkuY2hpbGRBZGRpdGlvbnNBZGQobmV3QmluYXJ5SWQsIG1vKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuaW52ZW50b3J5LnVwZGF0ZShtbyk7XG4gIH1cbn1cbiJdfQ==