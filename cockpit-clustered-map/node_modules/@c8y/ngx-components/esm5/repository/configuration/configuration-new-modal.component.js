import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { AlertService, DroppedFile, gettext } from '@c8y/ngx-components';
import { uniqBy } from 'lodash';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { pipe } from 'rxjs';
import { map } from 'rxjs/operators';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
var ConfigurationNewModalComponent = /** @class */ (function () {
    function ConfigurationNewModalComponent(repositoryService, bsModalRef, alert) {
        var _this = this;
        this.repositoryService = repositoryService;
        this.bsModalRef = bsModalRef;
        this.alert = alert;
        this.binary = {
            file: undefined,
            url: undefined
        };
        this.pattern = '';
        this.mo = {};
        this.isLoading = false;
        this.result = new Promise(function (resolve, reject) {
            _this._save = resolve;
            _this._cancel = reject;
        });
    }
    ConfigurationNewModalComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.repositoryService.listConfigurations()];
                    case 1:
                        _a.configs = _b.sent();
                        this.setPipe('');
                        return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationNewModalComponent.prototype.cancel = function () {
        this.bsModalRef.hide();
        this._cancel();
    };
    ConfigurationNewModalComponent.prototype.setPipe = function (filterStr) {
        this.pattern = filterStr;
        this.filterPipe = pipe(map(function (data) { return uniqBy(data, 'configurationType'); }), map(function (data) {
            return data.filter(function (mo) {
                return mo.configurationType &&
                    mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1;
            });
        }));
    };
    ConfigurationNewModalComponent.prototype.uploadFile = function (dropped, ngForm) {
        this.binary.file = dropped[0].file;
        this.binary.url = undefined;
        ngForm.form.markAsDirty();
    };
    ConfigurationNewModalComponent.prototype.save = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, selected, versionOrName, description, binary, deviceType, ex_1;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 2, 3, 4]);
                        this.isLoading = true;
                        _a = this, selected = _a.selected, versionOrName = _a.versionOrName, description = _a.description, binary = _a.binary, deviceType = _a.deviceType;
                        return [4 /*yield*/, this.repositoryService.save({ selected: selected, versionOrName: versionOrName, description: description, binary: binary, deviceType: deviceType }, RepositoryType.CONFIGURATION, this.mo)];
                    case 1:
                        _b.sent();
                        this.alert.success(this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.'));
                        this.bsModalRef.hide();
                        this._save();
                        return [3 /*break*/, 4];
                    case 2:
                        ex_1 = _b.sent();
                        this.alert.addServerFailure(ex_1);
                        this._cancel();
                        return [3 /*break*/, 4];
                    case 3:
                        this.isLoading = false;
                        return [7 /*endfinally*/];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationNewModalComponent.ctorParameters = function () { return [
        { type: RepositoryService },
        { type: BsModalRef },
        { type: AlertService }
    ]; };
    ConfigurationNewModalComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-configuration-new-modal',
            template: "<div class=\"modal-header bg-primary text-white text-center\">\n  <h1 c8yIcon=\"cogs\" style=\"font-size: 55px;\"></h1>\n  <h4 class=\"p-t-16 text-uppercase\" translate *ngIf=\"mo.id\">Update configuration</h4>\n  <h4 class=\"p-t-16 text-uppercase\" translate *ngIf=\"!mo.id\">Add configuration</h4>\n</div>\n\n<form #configurationForm=\"ngForm\" (ngSubmit)=\"configurationForm.form.valid && save()\">\n  <div class=\"modal-body\">\n    <c8y-form-group>\n      <label translate>Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"e.g. hosts\"\n        autocomplete=\"off\"\n        required\n        maxlength=\"254\"\n        [(ngModel)]=\"versionOrName\"\n        name=\"versionOrName\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Device type</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"e.g. Posix\"\n        maxlength=\"254\"\n        autocomplete=\"off\"\n        [(ngModel)]=\"deviceType\"\n        name=\"deviceType\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Description</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"e.g. Host configuration Posix\"\n        maxlength=\"254\"\n        autocomplete=\"off\"\n        [(ngModel)]=\"description\"\n        name=\"description\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Configuration type</label>\n      <c8y-typeahead\n        [(selected)]=\"selected\"\n        placeholder=\"e.g. ssh\"\n        (onSearch)=\"setPipe($event)\"\n        displayProperty=\"configurationType\"\n      >\n        <c8y-li\n          *c8yFor=\"let config of configs; pipe: filterPipe; notFound: notFoundTemplate\"\n          class=\"p-l-8 p-r-8 c8y-list__item--link\"\n          (click)=\"selected = config; setPipe('')\"\n          [active]=\"selected === config\"\n        >\n          <c8y-highlight\n            [text]=\"config.configurationType || '--'\"\n            [pattern]=\"pattern\"\n          ></c8y-highlight>\n        </c8y-li>\n        <ng-template #notFoundTemplate>\n          <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"pattern.length > 0\">\n            <span translate>No match found, add new`configuration`?</span>\n            <button type=\"button\" class=\"btn btn-primary btn-xs m-l-16\" translate>\n              Create new`configuration`\n            </button>\n          </c8y-li>\n        </ng-template>\n      </c8y-typeahead>\n    </c8y-form-group>\n\n    <c8y-drop-area\n      (dropped)=\"uploadFile($event, configurationForm)\"\n      [loadingMessage]=\"'Importing, please wait.' | translate\"\n      [title]=\"'Add a configuration file' | translate\"\n      [loading]=\"isLoading\"\n    >\n    </c8y-drop-area>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-default\" [disabled]=\"isLoading\">\n      <span translate>Cancel</span>\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      type=\"submit\"\n      [disabled]=\"!configurationForm.valid || configurationForm.pristine || isLoading\"\n    >\n      <span translate *ngIf=\"!mo.id\">Add configuration</span>\n      <span translate *ngIf=\"mo.id\">Update configuration</span>\n    </button>\n  </div>\n</form>\n"
        })
    ], ConfigurationNewModalComponent);
    return ConfigurationNewModalComponent;
}());
export { ConfigurationNewModalComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi1uZXctbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5LyIsInNvdXJjZXMiOlsiY29uZmlndXJhdGlvbi9jb25maWd1cmF0aW9uLW5ldy1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNoQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUM1QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFtQixjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQU0xRDtJQXdCRSx3Q0FDVSxpQkFBb0MsRUFDcEMsVUFBc0IsRUFDdEIsS0FBbUI7UUFIN0IsaUJBSUk7UUFITSxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3BDLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQXZCN0IsV0FBTSxHQUFrQztZQUN0QyxJQUFJLEVBQUUsU0FBUztZQUNmLEdBQUcsRUFBRSxTQUFTO1NBQ2YsQ0FBQztRQUdGLFlBQU8sR0FBVyxFQUFFLENBQUM7UUFHckIsT0FBRSxHQUE0QixFQUFFLENBQUM7UUFDakMsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUVsQixXQUFNLEdBQWtCLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1B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VCxRQUFRLEVBQUUsNkJBQTZCO1lBQ3ZDLDgxR0FBdUQ7U0FDeEQsQ0FBQztPQUNXLDhCQUE4QixDQWlGMUM7SUFBRCxxQ0FBQztDQUFBLEFBakZELElBaUZDO1NBakZZLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIERyb3BwZWRGaWxlLCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyB1bmlxQnkgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgcGlwZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgUmVwb3NpdG9yeU1vZGFsLCBSZXBvc2l0b3J5VHlwZSB9IGZyb20gJy4uL3JlcG9zaXRvcnkubW9kZWwnO1xuaW1wb3J0IHsgUmVwb3NpdG9yeVNlcnZpY2UgfSBmcm9tICcuLi9yZXBvc2l0b3J5LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY29uZmlndXJhdGlvbi1uZXctbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlndXJhdGlvbi1uZXctbW9kYWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyYXRpb25OZXdNb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIFJlcG9zaXRvcnlNb2RhbCB7XG4gIHNlbGVjdGVkOiB7IGlkOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9O1xuICB2ZXJzaW9uT3JOYW1lOiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIGJpbmFyeTogeyBmaWxlPzogRmlsZTsgdXJsPzogc3RyaW5nIH0gPSB7XG4gICAgZmlsZTogdW5kZWZpbmVkLFxuICAgIHVybDogdW5kZWZpbmVkXG4gIH07XG4gIGRldmljZVR5cGU6IHN0cmluZztcblxuICBwYXR0ZXJuOiBzdHJpbmcgPSAnJztcbiAgZmlsdGVyUGlwZTtcbiAgY29uZmlncztcbiAgbW86IFBhcnRpYWw8SU1hbmFnZWRPYmplY3Q+ID0ge307XG4gIGlzTG9hZGluZyA9IGZhbHNlO1xuXG4gIHJlc3VsdDogUHJvbWlzZTx2b2lkPiA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0aGlzLl9zYXZlID0gcmVzb2x2ZTtcbiAgICB0aGlzLl9jYW5jZWwgPSByZWplY3Q7XG4gIH0pO1xuXG4gIHByaXZhdGUgX3NhdmU7XG4gIHByaXZhdGUgX2NhbmNlbDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlcG9zaXRvcnlTZXJ2aWNlOiBSZXBvc2l0b3J5U2VydmljZSxcbiAgICBwcml2YXRlIGJzTW9kYWxSZWY6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlXG4gICkge31cblxuICBhc3luYyBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNvbmZpZ3MgPSBhd2FpdCB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmxpc3RDb25maWd1cmF0aW9ucygpO1xuICAgIHRoaXMuc2V0UGlwZSgnJyk7XG4gIH1cblxuICBjYW5jZWwoKSB7XG4gICAgdGhpcy5ic01vZGFsUmVmLmhpZGUoKTtcbiAgICB0aGlzLl9jYW5jZWwoKTtcbiAgfVxuXG4gIHNldFBpcGUoZmlsdGVyU3RyOiBzdHJpbmcpIHtcbiAgICB0aGlzLnBhdHRlcm4gPSBmaWx0ZXJTdHI7XG4gICAgdGhpcy5maWx0ZXJQaXBlID0gcGlwZShcbiAgICAgIG1hcCgoZGF0YTogW10pID0+IHVuaXFCeShkYXRhLCAnY29uZmlndXJhdGlvblR5cGUnKSksXG4gICAgICBtYXAoKGRhdGE6IFtdKSA9PiB7XG4gICAgICAgIHJldHVybiBkYXRhLmZpbHRlcihcbiAgICAgICAgICAobW86IGFueSkgPT5cbiAgICAgICAgICAgIG1vLmNvbmZpZ3VyYXRpb25UeXBlICYmXG4gICAgICAgICAgICBtby5jb25maWd1cmF0aW9uVHlwZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoZmlsdGVyU3RyLnRvTG93ZXJDYXNlKCkpID4gLTFcbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHVwbG9hZEZpbGUoZHJvcHBlZDogRHJvcHBlZEZpbGVbXSwgbmdGb3JtOiBOZ0Zvcm0pIHtcbiAgICB0aGlzLmJpbmFyeS5maWxlID0gZHJvcHBlZFswXS5maWxlO1xuICAgIHRoaXMuYmluYXJ5LnVybCA9IHVuZGVmaW5lZDtcbiAgICBuZ0Zvcm0uZm9ybS5tYXJrQXNEaXJ0eSgpO1xuICB9XG5cbiAgYXN5bmMgc2F2ZSgpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlO1xuICAgICAgY29uc3QgeyBzZWxlY3RlZCwgdmVyc2lvbk9yTmFtZSwgZGVzY3JpcHRpb24sIGJpbmFyeSwgZGV2aWNlVHlwZSB9ID0gdGhpcztcbiAgICAgIGF3YWl0IHRoaXMucmVwb3NpdG9yeVNlcnZpY2Uuc2F2ZShcbiAgICAgICAgeyBzZWxlY3RlZCwgdmVyc2lvbk9yTmFtZSwgZGVzY3JpcHRpb24sIGJpbmFyeSwgZGV2aWNlVHlwZSB9LFxuICAgICAgICBSZXBvc2l0b3J5VHlwZS5DT05GSUdVUkFUSU9OLFxuICAgICAgICB0aGlzLm1vXG4gICAgICApO1xuICAgICAgdGhpcy5hbGVydC5zdWNjZXNzKFxuICAgICAgICB0aGlzLm1vLmlkID8gZ2V0dGV4dCgnQ29uZmlndXJhdGlvbiB1cGRhdGVkLicpIDogZ2V0dGV4dCgnQ29uZmlndXJhdGlvbiBjcmVhdGVkLicpXG4gICAgICApO1xuICAgICAgdGhpcy5ic01vZGFsUmVmLmhpZGUoKTtcbiAgICAgIHRoaXMuX3NhdmUoKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGV4KTtcbiAgICAgIHRoaXMuX2NhbmNlbCgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgIH1cbiAgfVxufVxuIl19