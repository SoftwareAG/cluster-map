import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { DeviceGridExampleGuard } from './device-grid-example-guard';
var DeviceListsNavigationFactory = /** @class */ (function () {
    function DeviceListsNavigationFactory(deviceGridExampleGuard) {
        this.deviceGridExampleGuard = deviceGridExampleGuard;
    }
    DeviceListsNavigationFactory.prototype.get = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var navs;
            return tslib_1.__generator(this, function (_a) {
                if (!this.deviceGridExampleGuard.canActivate(null, null)) {
                    return [2 /*return*/, []];
                }
                navs = new NavigatorNode({
                    label: gettext('Grids'),
                    icon: 'table'
                });
                navs.add(new NavigatorNode({
                    label: gettext('Device grid'),
                    path: '/grids/device-grid',
                    icon: 'table'
                }));
                return [2 /*return*/, navs];
            });
        });
    };
    DeviceListsNavigationFactory.ctorParameters = function () { return [
        { type: DeviceGridExampleGuard }
    ]; };
    DeviceListsNavigationFactory = tslib_1.__decorate([
        Injectable()
    ], DeviceListsNavigationFactory);
    return DeviceListsNavigationFactory;
}());
export { DeviceListsNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWxpc3RzLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWxpc3RzLyIsInNvdXJjZXMiOlsiZGV2aWNlLWxpc3RzLW5hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUdyRTtJQUNFLHNDQUFvQixzQkFBOEM7UUFBOUMsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtJQUFHLENBQUM7SUFFaEUsMENBQUcsR0FBVDs7OztnQkFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUU7b0JBQ3hELHNCQUFPLEVBQUUsRUFBQztpQkFDWDtnQkFDSyxJQUFJLEdBQUcsSUFBSSxhQUFhLENBQUM7b0JBQzdCLEtBQUssRUFBRSxPQUFPLENBQUMsT0FBTyxDQUFDO29CQUN2QixJQUFJLEVBQUUsT0FBTztpQkFDZCxDQUFDLENBQUM7Z0JBQ0gsSUFBSSxDQUFDLEdBQUcsQ0FDTixJQUFJLGFBQWEsQ0FBQztvQkFDaEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxhQUFhLENBQUM7b0JBQzdCLElBQUksRUFBRSxvQkFBb0I7b0JBQzFCLElBQUksRUFBRSxPQUFPO2lCQUNkLENBQUMsQ0FDSCxDQUFDO2dCQUNGLHNCQUFPLElBQUksRUFBQzs7O0tBQ2I7O2dCQWxCMkMsc0JBQXNCOztJQUR2RCw0QkFBNEI7UUFEeEMsVUFBVSxFQUFFO09BQ0EsNEJBQTRCLENBb0J4QztJQUFELG1DQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FwQlksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IERldmljZUdyaWRFeGFtcGxlR3VhcmQgfSBmcm9tICcuL2RldmljZS1ncmlkLWV4YW1wbGUtZ3VhcmQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGV2aWNlTGlzdHNOYXZpZ2F0aW9uRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkZXZpY2VHcmlkRXhhbXBsZUd1YXJkOiBEZXZpY2VHcmlkRXhhbXBsZUd1YXJkKSB7fVxuXG4gIGFzeW5jIGdldCgpIHtcbiAgICBpZiAoIXRoaXMuZGV2aWNlR3JpZEV4YW1wbGVHdWFyZC5jYW5BY3RpdmF0ZShudWxsLCBudWxsKSkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBjb25zdCBuYXZzID0gbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgbGFiZWw6IGdldHRleHQoJ0dyaWRzJyksXG4gICAgICBpY29uOiAndGFibGUnXG4gICAgfSk7XG4gICAgbmF2cy5hZGQoXG4gICAgICBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdEZXZpY2UgZ3JpZCcpLFxuICAgICAgICBwYXRoOiAnL2dyaWRzL2RldmljZS1ncmlkJyxcbiAgICAgICAgaWNvbjogJ3RhYmxlJ1xuICAgICAgfSlcbiAgICApO1xuICAgIHJldHVybiBuYXZzO1xuICB9XG59XG4iXX0=