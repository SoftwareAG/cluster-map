import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ModalService, AlertService, gettext, Status } from '@c8y/ngx-components';
import { SmsGatewayService } from './sms-gateway.service';
import { pick } from 'lodash-es';
var SmsGatewayComponent = /** @class */ (function () {
    function SmsGatewayComponent(modalService, alertService, smsGatewayService) {
        this.modalService = modalService;
        this.alertService = alertService;
        this.smsGatewayService = smsGatewayService;
        this.smsProviders = [
            { id: 'openit', name: 'OpenIT' },
            { id: 'sms77', name: 'sms77' }
        ];
        this.supportedConfigOptions = [
            'provider',
            'openit.username',
            'credentials.openit.password',
            'credentials.sms77.api.key'
        ];
        this.pageTitle = gettext('SMS provider');
    }
    SmsGatewayComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.smsConfig = this.getEmptyConfig();
                        this.oldConfig = this.getEmptyConfig();
                        return [4 /*yield*/, this.smsGatewayService.getProviderConfig()];
                    case 1:
                        res = _a.sent();
                        if (this.isSupportedProvider(res.data)) {
                            this.smsConfig = this.getConfigurableProperties(res.data);
                            this.oldConfig = this.smsConfig;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    SmsGatewayComponent.prototype.getConfigurableProperties = function (config) {
        return pick(config, this.supportedConfigOptions);
    };
    SmsGatewayComponent.prototype.isSupportedProvider = function (config) {
        return this.smsProviders.some(function (prov) { return prov.id === config.provider; });
    };
    SmsGatewayComponent.prototype.saveSMSGatewayConfiguration = function (form) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, data, _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.smsGatewayService.saveProviderConfig(this.smsConfig)];
                    case 1:
                        res = _b.sent();
                        if (!(res && res.status !== 200)) return [3 /*break*/, 5];
                        if (!res.json) return [3 /*break*/, 3];
                        return [4 /*yield*/, res.json()];
                    case 2:
                        _a = _b.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        _a = undefined;
                        _b.label = 4;
                    case 4:
                        data = _a;
                        this.alertService.addServerFailure({ data: data, res: res });
                        return [3 /*break*/, 6];
                    case 5:
                        this.alertService.success(gettext('Credentials updated.'));
                        Object.assign(this.oldConfig, this.smsConfig);
                        form.pristine = true;
                        _b.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    SmsGatewayComponent.prototype.deleteSMSGatewayConfiguration = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.modalService.confirm(gettext('Delete credentials'), gettext("You are about to delete SMS provider credentials. Deleting credentials will lock out any users with\n      SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication.\n      Do you want to proceed?"), Status.DANGER, { ok: gettext('Delete') })];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.smsGatewayService.deleteProviderConfig(this.oldConfig)];
                    case 2:
                        _a.sent();
                        this.alertService.success(gettext('Credentials deleted.'));
                        this.smsConfig = this.getEmptyConfig();
                        this.oldConfig = this.getEmptyConfig();
                        return [2 /*return*/];
                }
            });
        });
    };
    SmsGatewayComponent.prototype.getEmptyConfig = function () {
        return {
            provider: undefined
        };
    };
    SmsGatewayComponent.ctorParameters = function () { return [
        { type: ModalService },
        { type: AlertService },
        { type: SmsGatewayService }
    ]; };
    SmsGatewayComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-sms-gateway',
            template: "<c8y-title>{{ pageTitle | translate }}</c8y-title>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-sm-10 col-md-8 col-lg-6\">\n    <form\n      class=\"card\"\n      #smsGatewayForm=\"ngForm\"\n      (ngSubmit)=\"smsGatewayForm.form.valid && saveSMSGatewayConfiguration(smsGatewayForm.form)\"\n    >\n      <div class=\"card-header\">\n        <h4 class=\"card-title\" translate>Credentials</h4>\n      </div>\n      <div class=\"card-block\">\n        <p class=\"bottom-m\" translate>\n          Enter your credentials from your SMS provider. This enables platform features that utilize\n          SMS services (e.g. two-factor authentication and user notifications).\n        </p>\n        <label translate>SMS provider</label>\n        <div class=\"form-group\">\n          <ul class=\"list-unstyled\">\n            <li *ngFor=\"let provider of smsProviders\">\n              <label class=\"c8y-radio\">\n                <input\n                  class=\"form-control\"\n                  type=\"radio\"\n                  name=\"providerName\"\n                  [(ngModel)]=\"smsConfig.provider\"\n                  [value]=\"provider.id\"\n                />\n                <span></span>\n                {{ provider.name | translate }}\n              </label>\n            </li>\n          </ul>\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'openit'\">\n          <label translate for=\"userName\">Username</label>\n          <input\n            id=\"userName\"\n            class=\"form-control\"\n            type=\"text\"\n            autocomplete=\"off\"\n            name=\"userName\"\n            [(ngModel)]=\"smsConfig['openit.username']\"\n            placeholder=\"{{ 'e.g. joe`LOCALIZE`' | translate }}\"\n            required\n          />\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'openit'\">\n          <label translate for=\"password\">Password</label>\n          <input\n            id=\"password\"\n            class=\"form-control\"\n            type=\"password\"\n            autocomplete=\"off\"\n            name=\"password\"\n            [(ngModel)]=\"smsConfig['credentials.openit.password']\"\n            placeholder=\"{{ 'e.g. my_password' | translate }}\"\n            required\n          />\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'sms77'\">\n          <label translate for=\"apiKey\">API key</label>\n          <input\n            id=\"apiKey\"\n            class=\"form-control\"\n            type=\"text\"\n            autocomplete=\"off\"\n            name=\"apiKey\"\n            [(ngModel)]=\"smsConfig['credentials.sms77.api.key']\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"deleteSMSGatewayConfiguration()\"\n          [disabled]=\"!(oldConfig && oldConfig.provider)\"\n          title=\"{{ 'Delete' | translate }}\"\n          translate\n        >\n          Delete\n        </button>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"!smsGatewayForm.form.valid || smsGatewayForm.form.pristine\"\n          title=\"{{ 'Save' | translate }}\"\n          translate\n        >\n          Save\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"
        })
    ], SmsGatewayComponent);
    return SmsGatewayComponent;
}());
export { SmsGatewayComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zLWdhdGV3YXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9zbXMtZ2F0ZXdheS8iLCJzb3VyY2VzIjpbInNtcy1nYXRld2F5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQU1qQztJQU9FLDZCQUNVLFlBQTBCLEVBQzFCLFlBQTBCLEVBQzFCLGlCQUFvQztRQUZwQyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBRTVDLElBQUksQ0FBQyxZQUFZLEdBQUc7WUFDbEIsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUU7WUFDaEMsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7U0FDL0IsQ0FBQztRQUNGLElBQUksQ0FBQyxzQkFBc0IsR0FBRztZQUM1QixVQUFVO1lBQ1YsaUJBQWlCO1lBQ2pCLDZCQUE2QjtZQUM3QiwyQkFBMkI7U0FDNUIsQ0FBQztRQUNGLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFSyxzQ0FBUSxHQUFkOzs7Ozs7d0JBQ0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7d0JBQ3ZDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFB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QUM7T0FDVyxtQkFBbUIsQ0EyRS9CO0lBQUQsMEJBQUM7Q0FBQSxBQTNFRCxJQTJFQztTQTNFWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNtc0NvbmZpZyB9IGZyb20gJy4vc21zLWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBNb2RhbFNlcnZpY2UsIEFsZXJ0U2VydmljZSwgZ2V0dGV4dCwgU3RhdHVzIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBTbXNHYXRld2F5U2VydmljZSB9IGZyb20gJy4vc21zLWdhdGV3YXkuc2VydmljZSc7XG5pbXBvcnQgeyBwaWNrIH0gZnJvbSAnbG9kYXNoLWVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXNtcy1nYXRld2F5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Ntcy1nYXRld2F5LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTbXNHYXRld2F5Q29tcG9uZW50IHtcbiAgc21zQ29uZmlnOiBTbXNDb25maWc7XG4gIG9sZENvbmZpZzogU21zQ29uZmlnO1xuICByZWFkb25seSBzbXNQcm92aWRlcnM7XG4gIHJlYWRvbmx5IHBhZ2VUaXRsZTtcbiAgcHJpdmF0ZSByZWFkb25seSBzdXBwb3J0ZWRDb25maWdPcHRpb25zO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBNb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIHNtc0dhdGV3YXlTZXJ2aWNlOiBTbXNHYXRld2F5U2VydmljZVxuICApIHtcbiAgICB0aGlzLnNtc1Byb3ZpZGVycyA9IFtcbiAgICAgIHsgaWQ6ICdvcGVuaXQnLCBuYW1lOiAnT3BlbklUJyB9LFxuICAgICAgeyBpZDogJ3Ntczc3JywgbmFtZTogJ3Ntczc3JyB9XG4gICAgXTtcbiAgICB0aGlzLnN1cHBvcnRlZENvbmZpZ09wdGlvbnMgPSBbXG4gICAgICAncHJvdmlkZXInLFxuICAgICAgJ29wZW5pdC51c2VybmFtZScsXG4gICAgICAnY3JlZGVudGlhbHMub3Blbml0LnBhc3N3b3JkJyxcbiAgICAgICdjcmVkZW50aWFscy5zbXM3Ny5hcGkua2V5J1xuICAgIF07XG4gICAgdGhpcy5wYWdlVGl0bGUgPSBnZXR0ZXh0KCdTTVMgcHJvdmlkZXInKTtcbiAgfVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc21zQ29uZmlnID0gdGhpcy5nZXRFbXB0eUNvbmZpZygpO1xuICAgIHRoaXMub2xkQ29uZmlnID0gdGhpcy5nZXRFbXB0eUNvbmZpZygpO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuc21zR2F0ZXdheVNlcnZpY2UuZ2V0UHJvdmlkZXJDb25maWcoKTtcbiAgICBpZiAodGhpcy5pc1N1cHBvcnRlZFByb3ZpZGVyKHJlcy5kYXRhKSkge1xuICAgICAgdGhpcy5zbXNDb25maWcgPSB0aGlzLmdldENvbmZpZ3VyYWJsZVByb3BlcnRpZXMocmVzLmRhdGEpO1xuICAgICAgdGhpcy5vbGRDb25maWcgPSB0aGlzLnNtc0NvbmZpZztcbiAgICB9XG4gIH1cblxuICBnZXRDb25maWd1cmFibGVQcm9wZXJ0aWVzKGNvbmZpZyk6IFNtc0NvbmZpZyB7XG4gICAgcmV0dXJuIHBpY2soY29uZmlnLCB0aGlzLnN1cHBvcnRlZENvbmZpZ09wdGlvbnMpO1xuICB9XG5cbiAgaXNTdXBwb3J0ZWRQcm92aWRlcihjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5zbXNQcm92aWRlcnMuc29tZShwcm92ID0+IHByb3YuaWQgPT09IGNvbmZpZy5wcm92aWRlcik7XG4gIH1cblxuICBhc3luYyBzYXZlU01TR2F0ZXdheUNvbmZpZ3VyYXRpb24oZm9ybSkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuc21zR2F0ZXdheVNlcnZpY2Uuc2F2ZVByb3ZpZGVyQ29uZmlnKHRoaXMuc21zQ29uZmlnKTtcbiAgICBpZiAocmVzICYmIHJlcy5zdGF0dXMgIT09IDIwMCkge1xuICAgICAgY29uc3QgZGF0YSA9IHJlcy5qc29uID8gYXdhaXQgcmVzLmpzb24oKSA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmFkZFNlcnZlckZhaWx1cmUoeyBkYXRhLCByZXMgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3MoZ2V0dGV4dCgnQ3JlZGVudGlhbHMgdXBkYXRlZC4nKSk7XG4gICAgICBPYmplY3QuYXNzaWduKHRoaXMub2xkQ29uZmlnLCB0aGlzLnNtc0NvbmZpZyk7XG4gICAgICBmb3JtLnByaXN0aW5lID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBkZWxldGVTTVNHYXRld2F5Q29uZmlndXJhdGlvbigpIHtcbiAgICBhd2FpdCB0aGlzLm1vZGFsU2VydmljZS5jb25maXJtKFxuICAgICAgZ2V0dGV4dCgnRGVsZXRlIGNyZWRlbnRpYWxzJyksXG4gICAgICBnZXR0ZXh0KGBZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSBTTVMgcHJvdmlkZXIgY3JlZGVudGlhbHMuIERlbGV0aW5nIGNyZWRlbnRpYWxzIHdpbGwgbG9jayBvdXQgYW55IHVzZXJzIHdpdGhcbiAgICAgIFNNUy1iYXNlZCB0d28tZmFjdG9yIGF1dGhlbnRpY2F0aW9uIGFuZCBkZWFjdGl2YXRlIHRoZSBTTVMtYmFzZWQgc21hcnQgcnVsZXMgYW5kIGRldmljZSBjb21tdW5pY2F0aW9uLlxuICAgICAgRG8geW91IHdhbnQgdG8gcHJvY2VlZD9gKSxcbiAgICAgIFN0YXR1cy5EQU5HRVIsXG4gICAgICB7IG9rOiBnZXR0ZXh0KCdEZWxldGUnKSB9XG4gICAgKTtcbiAgICBhd2FpdCB0aGlzLnNtc0dhdGV3YXlTZXJ2aWNlLmRlbGV0ZVByb3ZpZGVyQ29uZmlnKHRoaXMub2xkQ29uZmlnKTtcbiAgICB0aGlzLmFsZXJ0U2VydmljZS5zdWNjZXNzKGdldHRleHQoJ0NyZWRlbnRpYWxzIGRlbGV0ZWQuJykpO1xuICAgIHRoaXMuc21zQ29uZmlnID0gdGhpcy5nZXRFbXB0eUNvbmZpZygpO1xuICAgIHRoaXMub2xkQ29uZmlnID0gdGhpcy5nZXRFbXB0eUNvbmZpZygpO1xuICB9XG5cbiAgZ2V0RW1wdHlDb25maWcoKTogU21zQ29uZmlnIHtcbiAgICByZXR1cm4ge1xuICAgICAgcHJvdmlkZXI6IHVuZGVmaW5lZFxuICAgIH07XG4gIH1cbn1cbiJdfQ==