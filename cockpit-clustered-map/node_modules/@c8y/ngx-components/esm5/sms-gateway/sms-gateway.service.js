import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { FetchClient, IFetchOptions, TenantOptionsService } from '@c8y/client';
var SmsGatewayService = /** @class */ (function () {
    function SmsGatewayService(client, tenantOptionsService) {
        this.client = client;
        this.tenantOptionsService = tenantOptionsService;
        this.category = 'messaging';
        this.basePath = 'service/register/messaging';
        this.providerTemplates = {
            cepConfig: {
                'sms.senderAddress': 'cumulocity',
                'sms.senderName': 'cumulocity'
            },
            openit: {
                provider: 'openit',
                'openit.baseUrl': 'https://sms.plusserver.com/put.php'
            },
            sms77: {
                provider: 'sms77',
                'sms77.url': 'https://gateway.sms77.io/api/sms'
            }
        };
    }
    SmsGatewayService.prototype.getProviderConfig = function () {
        return this.tenantOptionsService.detail({ category: this.category, key: '' });
    };
    SmsGatewayService.prototype.saveProviderConfig = function (newConfig) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var providerTemplate, cepConfig, config;
            return tslib_1.__generator(this, function (_a) {
                providerTemplate = this.providerTemplates[newConfig.provider];
                cepConfig = this.providerTemplates.cepConfig;
                Object.assign(newConfig, providerTemplate, cepConfig);
                config = {
                    method: 'PUT',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify(newConfig)
                };
                return [2 /*return*/, this.client.fetch(this.basePath, config)];
            });
        });
    };
    SmsGatewayService.prototype.deleteProviderConfig = function (config) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var providerTemplate;
            return tslib_1.__generator(this, function (_a) {
                providerTemplate = this.providerTemplates[config.provider];
                Object.assign(config, providerTemplate);
                return [2 /*return*/, this.deleteProviderOptions(config)];
            });
        });
    };
    SmsGatewayService.prototype.deleteProviderOptions = function (options) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b, optionKey, e_1_1;
            var e_1, _c;
            return tslib_1.__generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, 5, 6, 7]);
                        _a = tslib_1.__values(Object.keys(options)), _b = _a.next();
                        _d.label = 1;
                    case 1:
                        if (!!_b.done) return [3 /*break*/, 4];
                        optionKey = _b.value;
                        return [4 /*yield*/, this.tenantOptionsService.delete({ category: this.category, key: optionKey })];
                    case 2:
                        _d.sent();
                        _d.label = 3;
                    case 3:
                        _b = _a.next();
                        return [3 /*break*/, 1];
                    case 4: return [3 /*break*/, 7];
                    case 5:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 7];
                    case 6:
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    SmsGatewayService.ctorParameters = function () { return [
        { type: FetchClient },
        { type: TenantOptionsService }
    ]; };
    SmsGatewayService = tslib_1.__decorate([
        Injectable()
    ], SmsGatewayService);
    return SmsGatewayService;
}());
export { SmsGatewayService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zLWdhdGV3YXkuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvc21zLWdhdGV3YXkvIiwic291cmNlcyI6WyJzbXMtZ2F0ZXdheS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLG9CQUFvQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRy9FO0lBa0JFLDJCQUFvQixNQUFtQixFQUFVLG9CQUEwQztRQUF2RSxXQUFNLEdBQU4sTUFBTSxDQUFhO1FBQVUseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQWpCMUUsYUFBUSxHQUFHLFdBQVcsQ0FBQztRQUN2QixhQUFRLEdBQUcsNEJBQTRCLENBQUM7UUFDakQsc0JBQWlCLEdBQUc7WUFDMUIsU0FBUyxFQUFFO2dCQUNULG1CQUFtQixFQUFFLFlBQVk7Z0JBQ2pDLGdCQUFnQixFQUFFLFlBQVk7YUFDL0I7WUFDRCxNQUFNLEVBQUU7Z0JBQ04sUUFBUSxFQUFFLFFBQVE7Z0JBQ2xCLGdCQUFnQixFQUFFLG9DQUFvQzthQUN2RDtZQUNELEtBQUssRUFBRTtnQkFDTCxRQUFRLEVBQUUsT0FBTztnQkFDakIsV0FBVyxFQUFFLGtDQUFrQzthQUNoRDtTQUNGLENBQUM7SUFFNEYsQ0FBQztJQUUvRiw2Q0FBaUIsR0FBakI7UUFDRSxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUssOENBQWtCLEdBQXhCLFVBQXlCLFNBQVM7Ozs7Z0JBQzFCLGdCQUFnQixHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzVELFNBQVMsR0FBSyxJQUFJLENBQUMsaUJBQWlCLFVBQTNCLENBQTRCO2dCQUM3QyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLENBQUMsQ0FBQztnQkFFaEQsTUFBTSxHQUFrQjtvQkFDNUIsTUFBTSxFQUFFLEtBQUs7b0JBQ2IsT0FBTyxFQUFFLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO29CQUMvQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7aUJBQ2hDLENBQUM7Z0JBQ0Ysc0JBQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBQzs7O0tBQ2pEO0lBRUssZ0RBQW9CLEdBQTFCLFVBQTJCLE1BQU07Ozs7Z0JBQ3pCLGdCQUFnQixHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ2pFLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLGdCQUFnQixDQUFDLENBQUM7Z0JBQ3hDLHNCQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsRUFBQzs7O0tBQzNDO0lBRWEsaURBQXFCLEdBQW5DLFVBQW9DLE9BQU87Ozs7Ozs7O3dCQUNqQixLQUFBLGlCQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7Ozs7d0JBQWpDLFNBQVM7d0JBQ2xCLHFCQUFNLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFBQTs7d0JBQW5GLFNBQW1GLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBRXZGOztnQkE3QjJCLFdBQVc7Z0JBQWdDLG9CQUFvQjs7SUFsQmhGLGlCQUFpQjtRQUQ3QixVQUFVLEVBQUU7T0FDQSxpQkFBaUIsQ0FnRDdCO0lBQUQsd0JBQUM7Q0FBQSxBQWhERCxJQWdEQztTQWhEWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGZXRjaENsaWVudCwgSUZldGNoT3B0aW9ucywgVGVuYW50T3B0aW9uc1NlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTbXNHYXRld2F5U2VydmljZSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgY2F0ZWdvcnkgPSAnbWVzc2FnaW5nJztcbiAgcHJpdmF0ZSByZWFkb25seSBiYXNlUGF0aCA9ICdzZXJ2aWNlL3JlZ2lzdGVyL21lc3NhZ2luZyc7XG4gIHByaXZhdGUgcHJvdmlkZXJUZW1wbGF0ZXMgPSB7XG4gICAgY2VwQ29uZmlnOiB7XG4gICAgICAnc21zLnNlbmRlckFkZHJlc3MnOiAnY3VtdWxvY2l0eScsXG4gICAgICAnc21zLnNlbmRlck5hbWUnOiAnY3VtdWxvY2l0eSdcbiAgICB9LFxuICAgIG9wZW5pdDoge1xuICAgICAgcHJvdmlkZXI6ICdvcGVuaXQnLFxuICAgICAgJ29wZW5pdC5iYXNlVXJsJzogJ2h0dHBzOi8vc21zLnBsdXNzZXJ2ZXIuY29tL3B1dC5waHAnXG4gICAgfSxcbiAgICBzbXM3Nzoge1xuICAgICAgcHJvdmlkZXI6ICdzbXM3NycsXG4gICAgICAnc21zNzcudXJsJzogJ2h0dHBzOi8vZ2F0ZXdheS5zbXM3Ny5pby9hcGkvc21zJ1xuICAgIH1cbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNsaWVudDogRmV0Y2hDbGllbnQsIHByaXZhdGUgdGVuYW50T3B0aW9uc1NlcnZpY2U6IFRlbmFudE9wdGlvbnNTZXJ2aWNlKSB7fVxuXG4gIGdldFByb3ZpZGVyQ29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLnRlbmFudE9wdGlvbnNTZXJ2aWNlLmRldGFpbCh7IGNhdGVnb3J5OiB0aGlzLmNhdGVnb3J5LCBrZXk6ICcnIH0pO1xuICB9XG5cbiAgYXN5bmMgc2F2ZVByb3ZpZGVyQ29uZmlnKG5ld0NvbmZpZykge1xuICAgIGNvbnN0IHByb3ZpZGVyVGVtcGxhdGUgPSB0aGlzLnByb3ZpZGVyVGVtcGxhdGVzW25ld0NvbmZpZy5wcm92aWRlcl07XG4gICAgY29uc3QgeyBjZXBDb25maWcgfSA9IHRoaXMucHJvdmlkZXJUZW1wbGF0ZXM7XG4gICAgT2JqZWN0LmFzc2lnbihuZXdDb25maWcsIHByb3ZpZGVyVGVtcGxhdGUsIGNlcENvbmZpZyk7XG5cbiAgICBjb25zdCBjb25maWc6IElGZXRjaE9wdGlvbnMgPSB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgaGVhZGVyczogeyAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShuZXdDb25maWcpXG4gICAgfTtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZmV0Y2godGhpcy5iYXNlUGF0aCwgY29uZmlnKTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZVByb3ZpZGVyQ29uZmlnKGNvbmZpZykge1xuICAgIGNvbnN0IHByb3ZpZGVyVGVtcGxhdGUgPSB0aGlzLnByb3ZpZGVyVGVtcGxhdGVzW2NvbmZpZy5wcm92aWRlcl07XG4gICAgT2JqZWN0LmFzc2lnbihjb25maWcsIHByb3ZpZGVyVGVtcGxhdGUpO1xuICAgIHJldHVybiB0aGlzLmRlbGV0ZVByb3ZpZGVyT3B0aW9ucyhjb25maWcpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBkZWxldGVQcm92aWRlck9wdGlvbnMob3B0aW9ucykge1xuICAgIGZvciAoY29uc3Qgb3B0aW9uS2V5IG9mIE9iamVjdC5rZXlzKG9wdGlvbnMpKSB7XG4gICAgICBhd2FpdCB0aGlzLnRlbmFudE9wdGlvbnNTZXJ2aWNlLmRlbGV0ZSh7IGNhdGVnb3J5OiB0aGlzLmNhdGVnb3J5LCBrZXk6IG9wdGlvbktleSB9KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==