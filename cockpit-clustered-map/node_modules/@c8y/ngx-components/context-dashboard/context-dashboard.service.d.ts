import { ActivatedRouteSnapshot, Router } from '@angular/router';
import { IManagedObject, InventoryService, UserService } from '@c8y/client';
import { AppStateService, ModalService, TabsService, Widget } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { ContextDashboard, ContextDashboardManagedObject, ContextDashboardType } from './context-dashboard.model';
export declare class ContextDashboardService {
    private inventory;
    private tabs;
    private modal;
    private translateService;
    private router;
    private user;
    private appState;
    private cache;
    private readonly DEFAULT_PAGESIZE;
    private readonly FRAGMENT_NAME;
    private readonly DASHBOARD_ROUTE_PATH;
    private readonly INDEX_SPLIT;
    private currentContextRoute;
    private _formDisabled;
    formDisabled: boolean;
    constructor(inventory: InventoryService, tabs: TabsService, modal: ModalService, translateService: TranslateService, router: Router, user: UserService, appState: AppStateService);
    create(dashboardCfg: ContextDashboard, contextOrName: {
        contextData: any;
    } | string): Promise<ContextDashboardManagedObject>;
    detail(dashboardMO: ContextDashboardManagedObject): Promise<IManagedObject>;
    update(dashboard: ContextDashboardManagedObject): Promise<IManagedObject>;
    delete(dashboard: ContextDashboardManagedObject): Promise<void>;
    activateDashboards(route: ActivatedRouteSnapshot, types: ContextDashboardType[]): import("rxjs").Observable<boolean> | import("rxjs").Observable<{
        icon: string;
        path: string;
        label: string;
        priority: number;
    }[]>;
    getNamedDashboardOrCreate(name: string, defaultWidgets: Widget[]): import("rxjs").Observable<ContextDashboardManagedObject>;
    refreshTabs(dashboardMO: ContextDashboardManagedObject): Promise<void>;
    addTab(dashboard: ContextDashboardManagedObject): Promise<void>;
    navigateToDashboard(dashboardMO: ContextDashboardManagedObject): Promise<void>;
    hasPermission(): boolean;
    isNamed(dashboard: Partial<ContextDashboardManagedObject>): any;
    isDeviceType(dashboard: Partial<ContextDashboardManagedObject>): any;
    getStyling(styleList: any, styleName: any, defaultValue: any): any;
    mapWidgets(widgets: Widget[]): any;
    private getDashboard$;
    private getTabs$;
    private getContextDashboards$;
    private setBaseContextRoute;
    /**
     * Cleans already corrupted dashboards from dashboardMo property.
     * Added to fix dashboards on the cloud instance (eu-latest).
     * @deprecated This is going to be removed after 1007.7.0.
     */
    private removeDashboardMoProperty;
    private cacheDashboard;
    private createDashboardTab;
    private clean;
    private getNamedDashboard;
    private getContextDashboards;
    private getDashboardTypeFromViewContext;
    private createFragmentKey;
    private shouldSetGlobal;
}
