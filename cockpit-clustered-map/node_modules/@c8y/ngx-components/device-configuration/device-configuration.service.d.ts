import { EventEmitter } from '@angular/core';
import { EventBinaryService, EventService, IEvent, IManagedObject, InventoryBinaryService, InventoryService, IOperation, OperationService } from '@c8y/client';
import { AlertService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
export declare class DeviceConfigurationService {
    private eventService;
    private eventBinaryService;
    private operationService;
    private alertService;
    private inventoryService;
    private inventoryBinaryService;
    private translateService;
    readonly dateFrom: Date;
    readonly dateTo: Date;
    repositoryConfigListUpdated: EventEmitter<any>;
    constructor(eventService: EventService, eventBinaryService: EventBinaryService, operationService: OperationService, alertService: AlertService, inventoryService: InventoryService, inventoryBinaryService: InventoryBinaryService, translateService: TranslateService);
    getLatestConfigurationEvent(deviceId: string | number, type: string): Promise<IEvent>;
    getEventConfigurationBinary(event: IEvent): Promise<string>;
    createUploadConfigFileOperation(device: any, configurationType: any): Promise<any>;
    getLatestConfigFileOperation(deviceId: any, configType: any, operationType: any): Promise<IOperation>;
    getSnapshotsFromRepository(deviceType: any, configurationType: any): Promise<IManagedObject[]>;
    createDownloadConfigFileOperation(device: any, configurationType: any, binaryUrl: any): Promise<any>;
    getConfigurationBinaryFile(url: any): Promise<any>;
    saveToConfigurationRepository(config: any): Promise<import("@c8y/client").IResult<IManagedObject>>;
    updateRepositoryConfigList(): void;
    private fetchExternalBinary;
}
