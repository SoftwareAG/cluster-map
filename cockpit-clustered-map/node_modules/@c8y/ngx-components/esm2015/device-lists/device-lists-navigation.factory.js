import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { DeviceGridExampleGuard } from './device-grid-example-guard';
let DeviceListsNavigationFactory = class DeviceListsNavigationFactory {
    constructor(deviceGridExampleGuard) {
        this.deviceGridExampleGuard = deviceGridExampleGuard;
    }
    get() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (!this.deviceGridExampleGuard.canActivate(null, null)) {
                return [];
            }
            const navs = new NavigatorNode({
                label: gettext('Grids'),
                icon: 'table'
            });
            navs.add(new NavigatorNode({
                label: gettext('Device grid'),
                path: '/grids/device-grid',
                icon: 'table'
            }));
            return navs;
        });
    }
};
DeviceListsNavigationFactory.ctorParameters = () => [
    { type: DeviceGridExampleGuard }
];
DeviceListsNavigationFactory = tslib_1.__decorate([
    Injectable()
], DeviceListsNavigationFactory);
export { DeviceListsNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWxpc3RzLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWxpc3RzLyIsInNvdXJjZXMiOlsiZGV2aWNlLWxpc3RzLW5hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUdyRSxJQUFhLDRCQUE0QixHQUF6QyxNQUFhLDRCQUE0QjtJQUN2QyxZQUFvQixzQkFBOEM7UUFBOUMsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtJQUFHLENBQUM7SUFFaEUsR0FBRzs7WUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQ3hELE9BQU8sRUFBRSxDQUFDO2FBQ1g7WUFDRCxNQUFNLElBQUksR0FBRyxJQUFJLGFBQWEsQ0FBQztnQkFDN0IsS0FBSyxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUM7Z0JBQ3ZCLElBQUksRUFBRSxPQUFPO2FBQ2QsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLEdBQUcsQ0FDTixJQUFJLGFBQWEsQ0FBQztnQkFDaEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxhQUFhLENBQUM7Z0JBQzdCLElBQUksRUFBRSxvQkFBb0I7Z0JBQzFCLElBQUksRUFBRSxPQUFPO2FBQ2QsQ0FBQyxDQUNILENBQUM7WUFDRixPQUFPLElBQUksQ0FBQztRQUNkLENBQUM7S0FBQTtDQUNGLENBQUE7O1lBbkI2QyxzQkFBc0I7O0FBRHZELDRCQUE0QjtJQUR4QyxVQUFVLEVBQUU7R0FDQSw0QkFBNEIsQ0FvQnhDO1NBcEJZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkRXhhbXBsZUd1YXJkIH0gZnJvbSAnLi9kZXZpY2UtZ3JpZC1leGFtcGxlLWd1YXJkJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERldmljZUxpc3RzTmF2aWdhdGlvbkZhY3RvcnkgaW1wbGVtZW50cyBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZGV2aWNlR3JpZEV4YW1wbGVHdWFyZDogRGV2aWNlR3JpZEV4YW1wbGVHdWFyZCkge31cblxuICBhc3luYyBnZXQoKSB7XG4gICAgaWYgKCF0aGlzLmRldmljZUdyaWRFeGFtcGxlR3VhcmQuY2FuQWN0aXZhdGUobnVsbCwgbnVsbCkpIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgY29uc3QgbmF2cyA9IG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgIGxhYmVsOiBnZXR0ZXh0KCdHcmlkcycpLFxuICAgICAgaWNvbjogJ3RhYmxlJ1xuICAgIH0pO1xuICAgIG5hdnMuYWRkKFxuICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRGV2aWNlIGdyaWQnKSxcbiAgICAgICAgcGF0aDogJy9ncmlkcy9kZXZpY2UtZ3JpZCcsXG4gICAgICAgIGljb246ICd0YWJsZSdcbiAgICAgIH0pXG4gICAgKTtcbiAgICByZXR1cm4gbmF2cztcbiAgfVxufVxuIl19