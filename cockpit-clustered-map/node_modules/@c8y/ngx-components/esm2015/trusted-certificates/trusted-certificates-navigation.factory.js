import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { TenantOptionsService } from '@c8y/client';
import { TrustedCertificatesGuard } from './trusted-certificates.guard';
let TrustedCertificatesNavigationFactory = class TrustedCertificatesNavigationFactory {
    constructor(tenantOptionsService, trustedCertificatesGuard) {
        this.tenantOptionsService = tenantOptionsService;
        this.trustedCertificatesGuard = trustedCertificatesGuard;
        this.nav = [];
    }
    get() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const isFeatureEnabled = yield this.trustedCertificatesGuard.isFeatureEnabled();
            if (isFeatureEnabled && this.nav.length === 0) {
                this.nav.push(new NavigatorNode({
                    label: gettext('Trusted certificates'),
                    icon: 'certificate',
                    path: '/trusted-certificates',
                    parent: gettext('Management'),
                    priority: 100
                }));
            }
            return this.nav;
        });
    }
};
TrustedCertificatesNavigationFactory.ctorParameters = () => [
    { type: TenantOptionsService },
    { type: TrustedCertificatesGuard }
];
TrustedCertificatesNavigationFactory = tslib_1.__decorate([
    Injectable()
], TrustedCertificatesNavigationFactory);
export { TrustedCertificatesNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1c3RlZC1jZXJ0aWZpY2F0ZXMtbmF2aWdhdGlvbi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy90cnVzdGVkLWNlcnRpZmljYXRlcy8iLCJzb3VyY2VzIjpbInRydXN0ZWQtY2VydGlmaWNhdGVzLW5hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDbkQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFHeEUsSUFBYSxvQ0FBb0MsR0FBakQsTUFBYSxvQ0FBb0M7SUFHL0MsWUFDVSxvQkFBMEMsRUFDMUMsd0JBQWtEO1FBRGxELHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUFDMUMsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUEwQjtRQUo1RCxRQUFHLEdBQW9CLEVBQUUsQ0FBQztJQUt2QixDQUFDO0lBQ0UsR0FBRzs7WUFDUCxNQUFNLGdCQUFnQixHQUFHLE1BQU0sSUFBSSxDQUFDLHdCQUF3QixDQUFDLGdCQUFnQixFQUFFLENBQUM7WUFDaEYsSUFBSSxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7Z0JBQzdDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUNYLElBQUksYUFBYSxDQUFDO29CQUNoQixLQUFLLEVBQUUsT0FBTyxDQUFDLHNCQUFzQixDQUFDO29CQUN0QyxJQUFJLEVBQUUsYUFBYTtvQkFDbkIsSUFBSSxFQUFFLHVCQUF1QjtvQkFDN0IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7b0JBQzdCLFFBQVEsRUFBRSxHQUFHO2lCQUNkLENBQUMsQ0FDSCxDQUFDO2FBQ0g7WUFDRCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUM7UUFDbEIsQ0FBQztLQUFBO0NBQ0YsQ0FBQTs7WUFsQmlDLG9CQUFvQjtZQUNoQix3QkFBd0I7O0FBTGpELG9DQUFvQztJQURoRCxVQUFVLEVBQUU7R0FDQSxvQ0FBb0MsQ0FzQmhEO1NBdEJZLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUZW5hbnRPcHRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IFRydXN0ZWRDZXJ0aWZpY2F0ZXNHdWFyZCB9IGZyb20gJy4vdHJ1c3RlZC1jZXJ0aWZpY2F0ZXMuZ3VhcmQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVHJ1c3RlZENlcnRpZmljYXRlc05hdmlnYXRpb25GYWN0b3J5IGltcGxlbWVudHMgTmF2aWdhdG9yTm9kZUZhY3Rvcnkge1xuICBuYXY6IE5hdmlnYXRvck5vZGVbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdGVuYW50T3B0aW9uc1NlcnZpY2U6IFRlbmFudE9wdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJ1c3RlZENlcnRpZmljYXRlc0d1YXJkOiBUcnVzdGVkQ2VydGlmaWNhdGVzR3VhcmRcbiAgKSB7fVxuICBhc3luYyBnZXQoKSB7XG4gICAgY29uc3QgaXNGZWF0dXJlRW5hYmxlZCA9IGF3YWl0IHRoaXMudHJ1c3RlZENlcnRpZmljYXRlc0d1YXJkLmlzRmVhdHVyZUVuYWJsZWQoKTtcbiAgICBpZiAoaXNGZWF0dXJlRW5hYmxlZCAmJiB0aGlzLm5hdi5sZW5ndGggPT09IDApIHtcbiAgICAgIHRoaXMubmF2LnB1c2goXG4gICAgICAgIG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnVHJ1c3RlZCBjZXJ0aWZpY2F0ZXMnKSxcbiAgICAgICAgICBpY29uOiAnY2VydGlmaWNhdGUnLFxuICAgICAgICAgIHBhdGg6ICcvdHJ1c3RlZC1jZXJ0aWZpY2F0ZXMnLFxuICAgICAgICAgIHBhcmVudDogZ2V0dGV4dCgnTWFuYWdlbWVudCcpLFxuICAgICAgICAgIHByaW9yaXR5OiAxMDBcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLm5hdjtcbiAgfVxufVxuIl19