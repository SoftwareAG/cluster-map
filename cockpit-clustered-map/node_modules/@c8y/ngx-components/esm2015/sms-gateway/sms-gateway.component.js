import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ModalService, AlertService, gettext, Status } from '@c8y/ngx-components';
import { SmsGatewayService } from './sms-gateway.service';
import { pick } from 'lodash-es';
let SmsGatewayComponent = class SmsGatewayComponent {
    constructor(modalService, alertService, smsGatewayService) {
        this.modalService = modalService;
        this.alertService = alertService;
        this.smsGatewayService = smsGatewayService;
        this.smsProviders = [
            { id: 'openit', name: 'OpenIT' },
            { id: 'sms77', name: 'sms77' }
        ];
        this.supportedConfigOptions = [
            'provider',
            'openit.username',
            'credentials.openit.password',
            'credentials.sms77.api.key'
        ];
        this.pageTitle = gettext('SMS provider');
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.smsConfig = this.getEmptyConfig();
            this.oldConfig = this.getEmptyConfig();
            const res = yield this.smsGatewayService.getProviderConfig();
            if (this.isSupportedProvider(res.data)) {
                this.smsConfig = this.getConfigurableProperties(res.data);
                this.oldConfig = this.smsConfig;
            }
        });
    }
    getConfigurableProperties(config) {
        return pick(config, this.supportedConfigOptions);
    }
    isSupportedProvider(config) {
        return this.smsProviders.some(prov => prov.id === config.provider);
    }
    saveSMSGatewayConfiguration(form) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const res = yield this.smsGatewayService.saveProviderConfig(this.smsConfig);
            if (res && res.status !== 200) {
                const data = res.json ? yield res.json() : undefined;
                this.alertService.addServerFailure({ data, res });
            }
            else {
                this.alertService.success(gettext('Credentials updated.'));
                Object.assign(this.oldConfig, this.smsConfig);
                form.pristine = true;
            }
        });
    }
    deleteSMSGatewayConfiguration() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.modalService.confirm(gettext('Delete credentials'), gettext(`You are about to delete SMS provider credentials. Deleting credentials will lock out any users with
      SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication.
      Do you want to proceed?`), Status.DANGER, { ok: gettext('Delete') });
            yield this.smsGatewayService.deleteProviderConfig(this.oldConfig);
            this.alertService.success(gettext('Credentials deleted.'));
            this.smsConfig = this.getEmptyConfig();
            this.oldConfig = this.getEmptyConfig();
        });
    }
    getEmptyConfig() {
        return {
            provider: undefined
        };
    }
};
SmsGatewayComponent.ctorParameters = () => [
    { type: ModalService },
    { type: AlertService },
    { type: SmsGatewayService }
];
SmsGatewayComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-sms-gateway',
        template: "<c8y-title>{{ pageTitle | translate }}</c8y-title>\n<div class=\"row\">\n  <div class=\"col-xs-12 col-sm-10 col-md-8 col-lg-6\">\n    <form\n      class=\"card\"\n      #smsGatewayForm=\"ngForm\"\n      (ngSubmit)=\"smsGatewayForm.form.valid && saveSMSGatewayConfiguration(smsGatewayForm.form)\"\n    >\n      <div class=\"card-header\">\n        <h4 class=\"card-title\" translate>Credentials</h4>\n      </div>\n      <div class=\"card-block\">\n        <p class=\"bottom-m\" translate>\n          Enter your credentials from your SMS provider. This enables platform features that utilize\n          SMS services (e.g. two-factor authentication and user notifications).\n        </p>\n        <label translate>SMS provider</label>\n        <div class=\"form-group\">\n          <ul class=\"list-unstyled\">\n            <li *ngFor=\"let provider of smsProviders\">\n              <label class=\"c8y-radio\">\n                <input\n                  class=\"form-control\"\n                  type=\"radio\"\n                  name=\"providerName\"\n                  [(ngModel)]=\"smsConfig.provider\"\n                  [value]=\"provider.id\"\n                />\n                <span></span>\n                {{ provider.name | translate }}\n              </label>\n            </li>\n          </ul>\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'openit'\">\n          <label translate for=\"userName\">Username</label>\n          <input\n            id=\"userName\"\n            class=\"form-control\"\n            type=\"text\"\n            autocomplete=\"off\"\n            name=\"userName\"\n            [(ngModel)]=\"smsConfig['openit.username']\"\n            placeholder=\"{{ 'e.g. joe`LOCALIZE`' | translate }}\"\n            required\n          />\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'openit'\">\n          <label translate for=\"password\">Password</label>\n          <input\n            id=\"password\"\n            class=\"form-control\"\n            type=\"password\"\n            autocomplete=\"off\"\n            name=\"password\"\n            [(ngModel)]=\"smsConfig['credentials.openit.password']\"\n            placeholder=\"{{ 'e.g. my_password' | translate }}\"\n            required\n          />\n        </div>\n        <div class=\"form-group\" *ngIf=\"smsConfig.provider === 'sms77'\">\n          <label translate for=\"apiKey\">API key</label>\n          <input\n            id=\"apiKey\"\n            class=\"form-control\"\n            type=\"text\"\n            autocomplete=\"off\"\n            name=\"apiKey\"\n            [(ngModel)]=\"smsConfig['credentials.sms77.api.key']\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"deleteSMSGatewayConfiguration()\"\n          [disabled]=\"!(oldConfig && oldConfig.provider)\"\n          title=\"{{ 'Delete' | translate }}\"\n          translate\n        >\n          Delete\n        </button>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"!smsGatewayForm.form.valid || smsGatewayForm.form.pristine\"\n          title=\"{{ 'Save' | translate }}\"\n          translate\n        >\n          Save\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"
    })
], SmsGatewayComponent);
export { SmsGatewayComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zLWdhdGV3YXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9zbXMtZ2F0ZXdheS8iLCJzb3VyY2VzIjpbInNtcy1nYXRld2F5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQU1qQyxJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFtQjtJQU85QixZQUNVLFlBQTBCLEVBQzFCLFlBQTBCLEVBQzFCLGlCQUFvQztRQUZwQyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUMxQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBRTVDLElBQUksQ0FBQyxZQUFZLEdBQUc7WUFDbEIsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUU7WUFDaEMsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7U0FDL0IsQ0FBQztRQUNGLElBQUksQ0FBQyxzQkFBc0IsR0FBRztZQUM1QixVQUFVO1lBQ1YsaUJBQWlCO1lBQ2pCLDZCQUE2QjtZQUM3QiwyQkFBMkI7U0FDNUIsQ0FBQztRQUNGLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFSyxRQUFROztZQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3ZDLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFDN0QsSUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUN0QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzFELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQzthQUNqQztRQUNILENBQUM7S0FBQTtJQUVELHlCQUF5QixDQUFDLE1BQU07UUFDOUIsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxNQUFNO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRUssMkJBQTJCLENBQUMsSUFBSTs7WUFDcEMsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUMsaUJBQWlCLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzVFLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssR0FBRyxFQUFFO2dCQUM3QixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO2dCQUNyRCxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7YUFDbkQ7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQztnQkFDM0QsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDOUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7YUFDdEI7UUFDSCxDQUFDO0tBQUE7SUFFSyw2QkFBNkI7O1lBQ2pDLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQzdCLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxFQUM3QixPQUFPLENBQUM7OzhCQUVnQixDQUFDLEVBQ3pCLE1BQU0sQ0FBQyxNQUFNLEVBQ2IsRUFBRSxFQUFFLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQzFCLENBQUM7WUFDRixNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDbEUsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQztZQUMzRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN6QyxDQUFDO0tBQUE7SUFFRCxjQUFjO1FBQ1osT0FBTztZQUNMLFFBQVEsRUFBRSxTQUFTO1NBQ3BCLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTs7WUFuRXlCLFlBQVk7WUFDWixZQUFZO1lBQ1AsaUJBQWlCOztBQVZuQyxtQkFBbUI7SUFKL0IsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGlCQUFpQjtRQUMzQiwyM0dBQTJDO0tBQzVDLENBQUM7R0FDVyxtQkFBbUIsQ0EyRS9CO1NBM0VZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU21zQ29uZmlnIH0gZnJvbSAnLi9zbXMtY29uZmlnLm1vZGVsJztcbmltcG9ydCB7IE1vZGFsU2VydmljZSwgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0LCBTdGF0dXMgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFNtc0dhdGV3YXlTZXJ2aWNlIH0gZnJvbSAnLi9zbXMtZ2F0ZXdheS5zZXJ2aWNlJztcbmltcG9ydCB7IHBpY2sgfSBmcm9tICdsb2Rhc2gtZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc21zLWdhdGV3YXknLFxuICB0ZW1wbGF0ZVVybDogJy4vc21zLWdhdGV3YXkuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNtc0dhdGV3YXlDb21wb25lbnQge1xuICBzbXNDb25maWc6IFNtc0NvbmZpZztcbiAgb2xkQ29uZmlnOiBTbXNDb25maWc7XG4gIHJlYWRvbmx5IHNtc1Byb3ZpZGVycztcbiAgcmVhZG9ubHkgcGFnZVRpdGxlO1xuICBwcml2YXRlIHJlYWRvbmx5IHN1cHBvcnRlZENvbmZpZ09wdGlvbnM7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IE1vZGFsU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlLFxuICAgIHByaXZhdGUgc21zR2F0ZXdheVNlcnZpY2U6IFNtc0dhdGV3YXlTZXJ2aWNlXG4gICkge1xuICAgIHRoaXMuc21zUHJvdmlkZXJzID0gW1xuICAgICAgeyBpZDogJ29wZW5pdCcsIG5hbWU6ICdPcGVuSVQnIH0sXG4gICAgICB7IGlkOiAnc21zNzcnLCBuYW1lOiAnc21zNzcnIH1cbiAgICBdO1xuICAgIHRoaXMuc3VwcG9ydGVkQ29uZmlnT3B0aW9ucyA9IFtcbiAgICAgICdwcm92aWRlcicsXG4gICAgICAnb3Blbml0LnVzZXJuYW1lJyxcbiAgICAgICdjcmVkZW50aWFscy5vcGVuaXQucGFzc3dvcmQnLFxuICAgICAgJ2NyZWRlbnRpYWxzLnNtczc3LmFwaS5rZXknXG4gICAgXTtcbiAgICB0aGlzLnBhZ2VUaXRsZSA9IGdldHRleHQoJ1NNUyBwcm92aWRlcicpO1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zbXNDb25maWcgPSB0aGlzLmdldEVtcHR5Q29uZmlnKCk7XG4gICAgdGhpcy5vbGRDb25maWcgPSB0aGlzLmdldEVtcHR5Q29uZmlnKCk7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5zbXNHYXRld2F5U2VydmljZS5nZXRQcm92aWRlckNvbmZpZygpO1xuICAgIGlmICh0aGlzLmlzU3VwcG9ydGVkUHJvdmlkZXIocmVzLmRhdGEpKSB7XG4gICAgICB0aGlzLnNtc0NvbmZpZyA9IHRoaXMuZ2V0Q29uZmlndXJhYmxlUHJvcGVydGllcyhyZXMuZGF0YSk7XG4gICAgICB0aGlzLm9sZENvbmZpZyA9IHRoaXMuc21zQ29uZmlnO1xuICAgIH1cbiAgfVxuXG4gIGdldENvbmZpZ3VyYWJsZVByb3BlcnRpZXMoY29uZmlnKTogU21zQ29uZmlnIHtcbiAgICByZXR1cm4gcGljayhjb25maWcsIHRoaXMuc3VwcG9ydGVkQ29uZmlnT3B0aW9ucyk7XG4gIH1cblxuICBpc1N1cHBvcnRlZFByb3ZpZGVyKGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnNtc1Byb3ZpZGVycy5zb21lKHByb3YgPT4gcHJvdi5pZCA9PT0gY29uZmlnLnByb3ZpZGVyKTtcbiAgfVxuXG4gIGFzeW5jIHNhdmVTTVNHYXRld2F5Q29uZmlndXJhdGlvbihmb3JtKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5zbXNHYXRld2F5U2VydmljZS5zYXZlUHJvdmlkZXJDb25maWcodGhpcy5zbXNDb25maWcpO1xuICAgIGlmIChyZXMgJiYgcmVzLnN0YXR1cyAhPT0gMjAwKSB7XG4gICAgICBjb25zdCBkYXRhID0gcmVzLmpzb24gPyBhd2FpdCByZXMuanNvbigpIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZSh7IGRhdGEsIHJlcyB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcyhnZXR0ZXh0KCdDcmVkZW50aWFscyB1cGRhdGVkLicpKTtcbiAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5vbGRDb25maWcsIHRoaXMuc21zQ29uZmlnKTtcbiAgICAgIGZvcm0ucHJpc3RpbmUgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZVNNU0dhdGV3YXlDb25maWd1cmF0aW9uKCkge1xuICAgIGF3YWl0IHRoaXMubW9kYWxTZXJ2aWNlLmNvbmZpcm0oXG4gICAgICBnZXR0ZXh0KCdEZWxldGUgY3JlZGVudGlhbHMnKSxcbiAgICAgIGdldHRleHQoYFlvdSBhcmUgYWJvdXQgdG8gZGVsZXRlIFNNUyBwcm92aWRlciBjcmVkZW50aWFscy4gRGVsZXRpbmcgY3JlZGVudGlhbHMgd2lsbCBsb2NrIG91dCBhbnkgdXNlcnMgd2l0aFxuICAgICAgU01TLWJhc2VkIHR3by1mYWN0b3IgYXV0aGVudGljYXRpb24gYW5kIGRlYWN0aXZhdGUgdGhlIFNNUy1iYXNlZCBzbWFydCBydWxlcyBhbmQgZGV2aWNlIGNvbW11bmljYXRpb24uXG4gICAgICBEbyB5b3Ugd2FudCB0byBwcm9jZWVkP2ApLFxuICAgICAgU3RhdHVzLkRBTkdFUixcbiAgICAgIHsgb2s6IGdldHRleHQoJ0RlbGV0ZScpIH1cbiAgICApO1xuICAgIGF3YWl0IHRoaXMuc21zR2F0ZXdheVNlcnZpY2UuZGVsZXRlUHJvdmlkZXJDb25maWcodGhpcy5vbGRDb25maWcpO1xuICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3MoZ2V0dGV4dCgnQ3JlZGVudGlhbHMgZGVsZXRlZC4nKSk7XG4gICAgdGhpcy5zbXNDb25maWcgPSB0aGlzLmdldEVtcHR5Q29uZmlnKCk7XG4gICAgdGhpcy5vbGRDb25maWcgPSB0aGlzLmdldEVtcHR5Q29uZmlnKCk7XG4gIH1cblxuICBnZXRFbXB0eUNvbmZpZygpOiBTbXNDb25maWcge1xuICAgIHJldHVybiB7XG4gICAgICBwcm92aWRlcjogdW5kZWZpbmVkXG4gICAgfTtcbiAgfVxufVxuIl19