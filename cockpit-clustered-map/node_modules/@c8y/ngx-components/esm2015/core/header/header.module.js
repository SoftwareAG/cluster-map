import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { ActionModule } from '../action/action.module';
import { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';
import { CommonModule } from '../common/common.module';
import { SearchModule } from '../search/search.module';
import { UserModule } from '../user/user.module';
import { AppIconComponent } from './application/app-icon.component';
import { AppSwitcherComponent } from './application/app-switcher.component';
import { HeaderBarComponent } from './header-bar/header-bar.component';
import { TitleOutletComponent } from './title/title-outlet.component';
import { TitleComponent } from './title/title.component';
import { NavigatorModule } from '../navigator/navigator.module';
import { RightDrawerComponent } from './right-drawer/right-drawer.component';
/**
 * The angular module definition for the header of the application.
 * @exports HeaderBarComponent
 * @exports TitleComponent
 * @exports TitleOutletComponent
 * @exports AppIconComponent
 * @exports AppSwitcherComponent
 */
let HeaderModule = class HeaderModule {
};
HeaderModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            TitleComponent,
            HeaderBarComponent,
            TitleOutletComponent,
            AppIconComponent,
            AppSwitcherComponent,
            RightDrawerComponent
        ],
        imports: [
            BsDropdownModule,
            UserModule,
            SearchModule,
            CommonModule,
            ActionModule,
            BreadcrumbModule,
            NavigatorModule
        ],
        exports: [
            HeaderBarComponent,
            TitleComponent,
            TitleOutletComponent,
            AppIconComponent,
            AppSwitcherComponent,
            RightDrawerComponent
        ]
    })
], HeaderModule);
export { HeaderModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2hlYWRlci9oZWFkZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNuRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUV2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRTdFOzs7Ozs7O0dBT0c7QUE0QkgsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtDQUFHLENBQUE7QUFBZixZQUFZO0lBM0J4QixRQUFRLENBQUM7UUFDUixZQUFZLEVBQUU7WUFDWixjQUFjO1lBQ2Qsa0JBQWtCO1lBQ2xCLG9CQUFvQjtZQUNwQixnQkFBZ0I7WUFDaEIsb0JBQW9CO1lBQ3BCLG9CQUFvQjtTQUNyQjtRQUNELE9BQU8sRUFBRTtZQUNQLGdCQUFnQjtZQUNoQixVQUFVO1lBQ1YsWUFBWTtZQUNaLFlBQVk7WUFDWixZQUFZO1lBQ1osZ0JBQWdCO1lBQ2hCLGVBQWU7U0FDaEI7UUFDRCxPQUFPLEVBQUU7WUFDUCxrQkFBa0I7WUFDbEIsY0FBYztZQUNkLG9CQUFvQjtZQUNwQixnQkFBZ0I7WUFDaEIsb0JBQW9CO1lBQ3BCLG9CQUFvQjtTQUNyQjtLQUNGLENBQUM7R0FDVyxZQUFZLENBQUc7U0FBZixZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzRHJvcGRvd25Nb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duJztcbmltcG9ydCB7IEFjdGlvbk1vZHVsZSB9IGZyb20gJy4uL2FjdGlvbi9hY3Rpb24ubW9kdWxlJztcbmltcG9ydCB7IEJyZWFkY3J1bWJNb2R1bGUgfSBmcm9tICcuLi9icmVhZGNydW1iL2JyZWFkY3J1bWIubW9kdWxlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IFNlYXJjaE1vZHVsZSB9IGZyb20gJy4uL3NlYXJjaC9zZWFyY2gubW9kdWxlJztcbmltcG9ydCB7IFVzZXJNb2R1bGUgfSBmcm9tICcuLi91c2VyL3VzZXIubW9kdWxlJztcbmltcG9ydCB7IEFwcEljb25Db21wb25lbnQgfSBmcm9tICcuL2FwcGxpY2F0aW9uL2FwcC1pY29uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcHBTd2l0Y2hlckNvbXBvbmVudCB9IGZyb20gJy4vYXBwbGljYXRpb24vYXBwLXN3aXRjaGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBIZWFkZXJCYXJDb21wb25lbnQgfSBmcm9tICcuL2hlYWRlci1iYXIvaGVhZGVyLWJhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGVhZGVyU2VydmljZSB9IGZyb20gJy4vaGVhZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgVGl0bGVPdXRsZXRDb21wb25lbnQgfSBmcm9tICcuL3RpdGxlL3RpdGxlLW91dGxldC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGl0bGVDb21wb25lbnQgfSBmcm9tICcuL3RpdGxlL3RpdGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JNb2R1bGUgfSBmcm9tICcuLi9uYXZpZ2F0b3IvbmF2aWdhdG9yLm1vZHVsZSc7XG5pbXBvcnQgeyBSaWdodERyYXdlckNvbXBvbmVudCB9IGZyb20gJy4vcmlnaHQtZHJhd2VyL3JpZ2h0LWRyYXdlci5jb21wb25lbnQnO1xuXG4vKipcbiAqIFRoZSBhbmd1bGFyIG1vZHVsZSBkZWZpbml0aW9uIGZvciB0aGUgaGVhZGVyIG9mIHRoZSBhcHBsaWNhdGlvbi5cbiAqIEBleHBvcnRzIEhlYWRlckJhckNvbXBvbmVudFxuICogQGV4cG9ydHMgVGl0bGVDb21wb25lbnRcbiAqIEBleHBvcnRzIFRpdGxlT3V0bGV0Q29tcG9uZW50XG4gKiBAZXhwb3J0cyBBcHBJY29uQ29tcG9uZW50XG4gKiBAZXhwb3J0cyBBcHBTd2l0Y2hlckNvbXBvbmVudFxuICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBUaXRsZUNvbXBvbmVudCxcbiAgICBIZWFkZXJCYXJDb21wb25lbnQsXG4gICAgVGl0bGVPdXRsZXRDb21wb25lbnQsXG4gICAgQXBwSWNvbkNvbXBvbmVudCxcbiAgICBBcHBTd2l0Y2hlckNvbXBvbmVudCxcbiAgICBSaWdodERyYXdlckNvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQnNEcm9wZG93bk1vZHVsZSxcbiAgICBVc2VyTW9kdWxlLFxuICAgIFNlYXJjaE1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgQWN0aW9uTW9kdWxlLFxuICAgIEJyZWFkY3J1bWJNb2R1bGUsXG4gICAgTmF2aWdhdG9yTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBIZWFkZXJCYXJDb21wb25lbnQsXG4gICAgVGl0bGVDb21wb25lbnQsXG4gICAgVGl0bGVPdXRsZXRDb21wb25lbnQsXG4gICAgQXBwSWNvbkNvbXBvbmVudCxcbiAgICBBcHBTd2l0Y2hlckNvbXBvbmVudCxcbiAgICBSaWdodERyYXdlckNvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEhlYWRlck1vZHVsZSB7fVxuIl19