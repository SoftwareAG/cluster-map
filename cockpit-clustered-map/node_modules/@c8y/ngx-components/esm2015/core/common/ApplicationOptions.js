/*
 * -----------------------------WARNING---------------------------------
 * This file has an *exact* copy in packages/cli/src/webpack.
 * Any changes to this file must be reflected there, too.
 */
export class ApplicationOptions {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwbGljYXRpb25PcHRpb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvY29tbW9uL0FwcGxpY2F0aW9uT3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBQ0gsTUFBTSxPQUFPLGtCQUFrQjtDQW9JOUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1XQVJOSU5HLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBUaGlzIGZpbGUgaGFzIGFuICpleGFjdCogY29weSBpbiBwYWNrYWdlcy9jbGkvc3JjL3dlYnBhY2suXG4gKiBBbnkgY2hhbmdlcyB0byB0aGlzIGZpbGUgbXVzdCBiZSByZWZsZWN0ZWQgdGhlcmUsIHRvby5cbiAqL1xuZXhwb3J0IGNsYXNzIEFwcGxpY2F0aW9uT3B0aW9ucyB7XG4gIC8qKiBBcHBsaWNhdGlvbiBuYW1lIChzYXZlZCB0byB0aGUgc2VydmVyKS4gKi9cbiAgbmFtZTogc3RyaW5nO1xuICAvKiogQXBwbGljYXRpb24gY29udGV4dCBwYXRoIChzYXZlZCB0byB0aGUgc2VydmVyKS4gKi9cbiAgY29udGV4dFBhdGg6IHN0cmluZztcbiAgLyoqIEFwcGxpY2F0aW9uIGtleSAoc2F2ZWQgdG8gdGhlIHNlcnZlcikuICovXG4gIGtleTogc3RyaW5nO1xuICAvKiogU2V0IHRvIGB0cnVlYCBpZiB0aGUgYXBwbGljYXRpb24gaXMgaHlicmlkIGFuZCB1c2VzIEFuZ3VsYXIgYW5kIEFuZ3VsYXJKUyBzaW11bHRhbmVvdXNseS4gKi9cbiAgdXBncmFkZT86IGJvb2xlYW47XG4gIC8qKiBQYXRoIHRvIHRoZSBicmFuZGluZyBlbnRyeSBmaWxlLiAqL1xuICBicmFuZGluZ0VudHJ5Pzogc3RyaW5nO1xuICAvKiogUGF0aCB0byB0c2NjbmZpZy5qc29uIGZpbGUgaWYgVHlwZVNjcmlwdCBpcyB1c2VkIChkZWZhdWx0OiAuL3RzY29uZmlnLmpzb24pLiAqL1xuICB0c0NvbmZpZ1BhdGg/OiBzdHJpbmc7XG4gIC8qKiBFbnRyeSBtb2R1bGUgZm9yIEFuZ3VsYXIgY29tcGlsZXIgKG9ubHkgdXNlZCB3aXRoIGxhenkgbG9hZGVkIHJvdXRlcyksIGUuZy4gYCdhcHAubW9kdWxlLnRzI0FwcE1vZHVsZSdgLiAqL1xuICBlbnRyeU1vZHVsZT86IHN0cmluZztcbiAgLyoqIFBhdGggdG8gY3VzdG9tIGluZGV4Lmh0bWwgKG90aGVyd2lzZSBkZWZhdWx0IG9uZSB3aWxsIGJlIHVzZWQpLiAqL1xuICBpbmRleFRlbXBsYXRlPzogc3RyaW5nO1xuICAvKiogVVJMIHRvIGR5bmFtaWNhbGx5IGZldGNoZWQgb3B0aW9ucy4gKi9cbiAgZHluYW1pY09wdGlvbnNVcmw/OiBzdHJpbmc7XG4gIC8qKiBVUkwgdG8gZmF2aWNvbi4gKi9cbiAgZmF2aWNvblVybD86IHN0cmluZztcbiAgLyoqIFVSTCB0byAqLmNzcyBmaWxlIHdoaWNoIHdpbGwgcmVwbGFjZSBkZWZhdWx0IGJyYW5kaW5nLiAqL1xuICBicmFuZGluZ1VybD86IHN0cmluZztcbiAgLyoqIE9iamVjdCB3aXRoIHByb3BlcnRpZXMgdGhhdCB3aWxsIGJlIGNvbnZlcnRlZCB0byBDU1MgY3VzdG9tIHZhcmlhYmxlcy4gKi9cbiAgYnJhbmRpbmdDc3NWYXJzPzoge1xuICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgfTtcbiAgLyoqXG4gICAqIEFsbG93cyBmb3IgYWRkaW5nIG9yIG92ZXJyaWRpbmcgbGFuZ3VhZ2VzIGF2YWlsYWJsZSBpbiB0aGUgYXBwbGljYXRpb24uXG4gICAqXG4gICAqIEl0cyBrZXlzIGFyZSBsYW5ndWFnZSBjb2RlcyBhbmQgaXRzIHZhbHVlcyBhcmUgb2JqZWN0cyB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAgICpcbiAgICogLSBgbmFtZWA6IEVuZ2xpc2ggbmFtZSBvZiB0aGUgbGFuZ3VhZ2UsXG4gICAqIC0gYG5hdGl2ZU5hbWVgOiBuYXRpdmUgbmFtZSBvZiB0aGUgbGFuZ3VhZ2UsXG4gICAqIC0gYHVybGA6IGZ1bGwgVVJMIHRvIEpTT04gZmlsZSB3aXRoIGNvbXBpbGVkIHRyYW5zbGF0aW9ucztcbiAgICogICAgaWYgbm90IGRlZmluZWQsIHRyYW5zbGF0aW9ucyB3aWxsIGJlIGxvYWRlZCBmcm9tIGAke2xvY2FsZVBhdGh9LyR7bGFuZ0NvZGV9Lmpzb25gLlxuICAgKlxuICAgKiBFeGFtcGxlOlxuICAgKiBgYGBqc29uXG4gICAqIFwibGFuZ3VhZ2VzXCI6IHtcbiAgICogICBcImRlXCI6IHtcbiAgICogICAgIFwibmFtZVwiOiBcIkdlcm1hblwiLFxuICAgKiAgICAgXCJuYXRpdmVOYW1lXCI6IFwiRGV1dHNjaFwiLFxuICAgKiAgICAgXCJ1cmxcIjogXCIvYXBwcy9wdWJsaWMvdWktYXNzZXRzL2RlLmpzb25cIlxuICAgKiAgIH1cbiAgICogfVxuICAgKiBgYGBcbiAgICovXG4gIGxhbmd1YWdlcz86IHtcbiAgICBbbGFuZ0NvZGU6IHN0cmluZ106IHtcbiAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgIG5hdGl2ZU5hbWU6IHN0cmluZztcbiAgICAgIHVybDogc3RyaW5nO1xuICAgIH07XG4gIH07XG4gIC8qKiBQYXRoIHRvIHRoZSBmb2xkZXIgZnJvbSB3aGljaCAqLnBvIGZpbGVzIHdpbGwgYmUgbG9hZGVkLiAqL1xuICBsb2NhbGVQYXRoPzogc3RyaW5nO1xuICAvKiogQXJyYXkgb2YgVVJMcyB0byBhZGRpdGlvbmFsICouY3NzIGZpbGVzIHRvIGJlIGxvYWRlZCBhdCBydW50aW1lLiAqL1xuICBleHRyYUNzc1VybHM/OiBzdHJpbmdbXTtcbiAgLyoqIERvY3VtZW50YXRpb24gbGlua3Mgc2V0dGluZ3MuICovXG4gIGRvY3M/OiB7XG4gICAgLyoqIEhpZGUgZGVmYXVsdCBsaW5rcyB0byBkb2N1bWVudGF0aW9uLiAqL1xuICAgIG5vRGVmYXVsdDogYm9vbGVhbjtcbiAgICAvKiogTGlzdCBvZiByZWdleCBzdHJpbmdzLiBNYXRjaGluZyBkZWZhdWx0IGRvY3MgVVJMcyB3aWxsIGJlIGhpZGRlbi4gKi9cbiAgICBleGNsdWRlRGVmYXVsdDogc3RyaW5nW107XG4gICAgLyoqIEFkZGl0aW9uYWwgbGlua3MgdG8gYmUgZGlzcGxheWVkLiAqL1xuICAgIGxpbmtzOiBBcnJheTx7XG4gICAgICBpY29uOiBzdHJpbmc7XG4gICAgICBsYWJlbDogc3RyaW5nO1xuICAgICAgdXJsOiBzdHJpbmc7XG4gICAgICB0eXBlOiAnZG9jJyB8ICdxdWlja2xpbmsnO1xuICAgIH0+O1xuICB9O1xuICAvKiogQXBwbGljYXRpb24gaWNvbiB0byBiZSBkaXNwbGF5ZWQgaW4gYXBwIHN3aXRjaGVyIGFuZCBoZWFkZXIgYmFyLiAqL1xuICBpY29uPzoge1xuICAgIGNsYXNzPzogc3RyaW5nO1xuICAgIHVybD86IHN0cmluZztcbiAgfTtcblxuICAvLyBUaGVzZSBhcmUgdGhlIG9sZCBvcHRpb25zXG4gIC8qKiBIaWRlIGFwcGxpY2F0aW9uIGluIGFwcCBzd2l0Y2hlciAoc2F2ZWQgdG8gdGhlIHNlcnZlcikuICovXG4gIG5vQXBwU3dpdGNoZXI/OiBib29sZWFuO1xuICAvKiogSFRNTCBwYWdlIHRpdGxlLiAqL1xuICBnbG9iYWxUaXRsZT86IHN0cmluZztcbiAgLyoqIEhpZGUgXCJwb3dlcmVkIGJ5XCIgYW5kIHZlcnNpb24gaW5mbyBhdCB0aGUgYm90dG9tIG9mIHRoZSBuYXZpZ2F0b3IgYW5kIGluIHRoZSB1c2VyIG1lbnUuICovXG4gIGhpZGVQb3dlcmVkPzogYm9vbGVhbjtcbiAgLyoqIFVSTCB0byBzdXBwb3J0IHBhZ2UgKHNldCB0byBgZmFsc2VgIHRvIGhpZGUgdGhlIGxpbmspLiAqL1xuICBzdXBwb3J0VXJsPzogYm9vbGVhbiB8IHN0cmluZztcbiAgLyoqXG4gICAqIFJlcGxhY2VtZW50IHN0cmluZyBmb3IgYHVzZXJgIGZpZWxkIGluIGF1ZGl0IGxvZ3MgZm9yIGFjdGlvbnMgcGVyZm9ybWVkIGJ5IGEgc3VwcG9ydCB1c2VyXG4gICAqIChhdmFpbGFibGUgcGxhY2Vob2xkZXJzOiBge3tzdXBwb3J0X3VzZXJ9fWAsIGB7e3N1cHBvcnRlZF91c2VyfX1gKS5cbiAgICovXG4gIHN1cHBvcnRVc2VyU3RyaW5nPzogc3RyaW5nO1xuICAvKiogRW5hYmxlIG9yIGRpc2FibGUgdGhlIHJpZ2h0IGRyYXdlci4gKi9cbiAgcmlnaHREcmF3ZXI/OiBib29sZWFuO1xuICAvKiogRW5hYmxlIG9yIGRpc2FibGUgYnJlYWRjcnVtYnMgaW4gdGhlIGhlYWRlciBmb3IgZ3JvdXBzIGFuZCBkZXZpY2VzIChkZWZhdWx0OiBmYWxzZSkuICovXG4gIGJyZWFkY3J1bWJzPzogYm9vbGVhbjtcbiAgLyoqIENvbGxhcHNlIG5hdmlnYXRvciBvbiBpbml0aWFsIGxvYWQuICovXG4gIGhpZGVOYXZpZ2F0b3I/OiBib29sZWFuO1xuICAvKiogU2hvdyB0YWJzIGhvcml6b250YWxseSBvciB2ZXJ0aWNhbGx5LiAqL1xuICB0YWJzSG9yaXpvbnRhbD86IGJvb2xlYW47XG4gIC8qKiBBZGRpdGlvbmFsIGxpbmsgdG8gZGlzcGxheSBvbiBsb2dpbiBzY3JlZW4uICovXG4gIGxvZ2luRXh0cmFMaW5rPzoge1xuICAgIHVybDogc3RyaW5nO1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gIH07XG4gIC8qKiBFbmFibGUgb3IgZGlzYWJsZSBzdG9yYWdlIGxpbWl0YXRpb24gZmVhdHVyZS4gKi9cbiAgc3RvcmFnZUxpbWl0YXRpb25GZWF0dXJlRW5hYmxlZD86IGJvb2xlYW47XG4gIC8qKiBOYW1lIG9mIGNvbXBhbnkgaGFuZGxpbmcgc3VwcG9ydCByZXF1ZXN0cyBmcm9tIGFwcCB1c2VycyAoZGlzcGxheWVkIGluIG5vdGlmaWNhdGlvbiBtZXNzYWdlKS4gKi9cbiAgY29tcGFueU5hbWU/OiBzdHJpbmc7XG4gIC8qKiBVUkwgdGVtcGxhdGUgZm9yIGRvY3VtZW50YXRpb24gbGlua3MgKGRlZmF1bHQ6IGAnJHtkb2NzQmFzZVVybH0ke3BhcnRpYWxVcmx9J2ApLiAqL1xuICBndWlkZUhyZWZUZW1wbGF0ZT86IHN0cmluZztcbiAgLyoqIEJhc2UgVVJMIGZvciBkb2N1bWVudGF0aW9uIGxpbmtzLiAqL1xuICBkb2NzQmFzZVVybD86IHN0cmluZztcbiAgLyoqIENTUCBzdHJpbmcgdG8gYmUgYWRkZWQgdG8gYGluZGV4Lmh0bWxgLiAqL1xuICBjb250ZW50U2VjdXJpdHlQb2xpY3k/OiBzdHJpbmc7XG4gIC8qKiBFbmFibGVzIGNsb3VkIHNlbnNvciB3aXphcmQgKi9cbiAgc2Vuc29yUGhvbmU/OiBib29sZWFuO1xuICAvKiogTGVnYWN5IGxpc3Qgb2YgaW1wb3J0ZWQgcGx1Z2lucy4gKi9cbiAgaW1wb3J0cz86IHN0cmluZ1tdO1xuICAvKiogU2hvdyBvciBoaWRlIGEgbmV3c2xldHRlciBzdWJzY3JpcHRpb24gY2hlY2tib3ggaW4gZWRpdCB1c2VyIG1vZGFsLiAqL1xuICBuZXdzbGV0dGVyPzogYm9vbGVhbjtcbiAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnRyeSBwb2ludCBpcyB0cmF2ZXJzZWQgZnJvbSBsZWdhY3kgY3VtdWxvY2l0eSouanNvbiBhcHAgbWFuaWZlc3QuICovXG4gIGxlZ2FjeT86IGJvb2xlYW47XG4gIC8qKiBQYXRoIHRvIHRoZSByb290IG5vZGVfbW9kdWxlcyBkaXIgKHVzZWZ1bCB3aGVuIHdvcmtpbmcgaW4gbW9ub3JlcG8gc2V0dXAsIGUuZy4geWFybiB3b3Jrc3BhY2VzKS4gKi9cbiAgcm9vdE5vZGVNb2R1bGVzUGF0aD86IHN0cmluZztcbiAgLyoqIENvb2tpZSBCYW5uZXIgY29uZmlndXJhdGlvbiAqL1xuICBjb29raWVCYW5uZXI/OiB7XG4gICAgY29va2llQmFubmVyVGl0bGU/OiBzdHJpbmc7XG4gICAgY29va2llQmFubmVyVGV4dD86IHN0cmluZztcbiAgICBwb2xpY3lVcmw/OiBzdHJpbmc7XG4gIH07XG59XG4iXX0=