import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { OptionsService } from '../../common/options.service';
let CookieBannerComponent = class CookieBannerComponent {
    constructor(options) {
        this.options = options;
        this.storageKey = 'acceptCookieNotice';
        this.acceptValue = '1';
    }
    ngOnInit() {
        this.settings = this.options.get('cookieBanner');
        if (this.settings && this.settings.cookieBannerText && !localStorage.getItem(this.storageKey)) {
            this.showBanner = true;
        }
    }
    acceptCookies() {
        localStorage.setItem(this.storageKey, this.acceptValue);
        this.showBanner = false;
    }
};
CookieBannerComponent.ctorParameters = () => [
    { type: OptionsService }
];
CookieBannerComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-cookie-banner',
        template: "<div class=\"c8y-cookie-banner\">\n  <div class=\"container\">\n    <div class=\"row p-t-16 p-b-16\" *ngIf=\"showBanner\">\n      <div class=\"col-md-3\" *ngIf=\"settings.cookieBannerTitle\">\n        <h3>{{ settings.cookieBannerTitle | translate }}</h3>\n        <div class=\"p-b-16 visible-sm visible-xs\"></div>\n      </div>\n      <div class=\"col-md-7\">\n        <div class=\"cookie-banner-content text-pre\">\n          {{ settings.cookieBannerText | translate }}\n        </div>\n      </div>\n      <div class=\"col-md-2\">\n        <div class=\"row\">\n          <div class=\"col-sm-6 col-md-12\">\n            <div class=\"p-b-16 visible-sm visible-xs\"></div>\n            <button class=\"btn btn-primary btn-block\" (click)=\"acceptCookies()\">\n              {{ 'Agree and proceed' | translate }}\n            </button>\n          </div>\n          <div class=\"col-sm-6 col-md-12\">\n            <div class=\"p-b-16\"></div>\n            <a\n              class=\"btn btn-default btn-block\"\n              href=\"{{ settings.policyUrl }}\"\n              target=\"_blank\"\n              *ngIf=\"settings.policyUrl\"\n            >\n              {{ 'Privacy policy' | translate }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
    })
], CookieBannerComponent);
export { CookieBannerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLWJhbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9ib290c3RyYXAvY29va2llLWJhbm5lci9jb29raWUtYmFubmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFNOUQsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBcUI7SUFNaEMsWUFBb0IsT0FBdUI7UUFBdkIsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFMbEMsZUFBVSxHQUFXLG9CQUFvQixDQUFDO1FBQzFDLGdCQUFXLEdBQVcsR0FBRyxDQUFDO0lBSVcsQ0FBQztJQUUvQyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNqRCxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQzdGLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1NBQ3hCO0lBQ0gsQ0FBQztJQUVELGFBQWE7UUFDWCxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7Q0FDRixDQUFBOztZQWI4QixjQUFjOztBQU5oQyxxQkFBcUI7SUFKakMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLG1CQUFtQjtRQUM3Qiw0eENBQTRDO0tBQzdDLENBQUM7R0FDVyxxQkFBcUIsQ0FtQmpDO1NBbkJZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPcHRpb25zU2VydmljZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9vcHRpb25zLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY29va2llLWJhbm5lcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb29raWUtYmFubmVyLnRlbXBsYXRlLmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvb2tpZUJhbm5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHJlYWRvbmx5IHN0b3JhZ2VLZXk6IHN0cmluZyA9ICdhY2NlcHRDb29raWVOb3RpY2UnO1xuICByZWFkb25seSBhY2NlcHRWYWx1ZTogc3RyaW5nID0gJzEnO1xuICBzaG93QmFubmVyOiBib29sZWFuO1xuICBzZXR0aW5nczogeyBjb29raWVCYW5uZXJUaXRsZT86IHN0cmluZzsgY29va2llQmFubmVyVGV4dDogc3RyaW5nOyBwb2xpY3lVcmw/OiBzdHJpbmcgfTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnM6IE9wdGlvbnNTZXJ2aWNlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0dGluZ3MgPSB0aGlzLm9wdGlvbnMuZ2V0KCdjb29raWVCYW5uZXInKTtcbiAgICBpZiAodGhpcy5zZXR0aW5ncyAmJiB0aGlzLnNldHRpbmdzLmNvb2tpZUJhbm5lclRleHQgJiYgIWxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmFnZUtleSkpIHtcbiAgICAgIHRoaXMuc2hvd0Jhbm5lciA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgYWNjZXB0Q29va2llcygpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIHRoaXMuYWNjZXB0VmFsdWUpO1xuICAgIHRoaXMuc2hvd0Jhbm5lciA9IGZhbHNlO1xuICB9XG59XG4iXX0=