import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { UserService } from '@c8y/client';
import { Status } from '../common/status.model';
import { gettext } from '../i18n/gettext';
import { ModalService } from '../modal/modal.service';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { LoginService } from '../login/public-api';
let UserTotpSetupComponent = class UserTotpSetupComponent {
    constructor(user, modalService, modal, loginService) {
        this.user = user;
        this.modalService = modalService;
        this.modal = modal;
        this.loginService = loginService;
    }
    totpSetupVerified(token) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.user.activateTotp();
            this.modal.hide();
            try {
                yield this.modalService.acknowledge(gettext('Logout required'), gettext('You must log out in order to apply your changes'), Status.WARNING, gettext('Log out'));
                yield this.loginService.logout();
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    close() {
        this.modal.hide();
    }
};
UserTotpSetupComponent.ctorParameters = () => [
    { type: UserService },
    { type: ModalService },
    { type: BsModalRef },
    { type: LoginService }
];
UserTotpSetupComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-user-totp-setup',
        template: "<c8y-modal [customFooter]=\"true\">\n  <ng-container c8y-modal-title>\n    <button\n      title=\"{{ 'Close' | translate }}\"\n      (click)=\"close()\"\n      type=\"button\"\n      class=\"close\"\n    ><span aria-hidden=\"true\">\u00D7</span></button>\n    <h3 class=\"text-center\" translate>Set up two-factor authentication</h3>\n  </ng-container>\n  <c8y-totp-setup></c8y-totp-setup>\n  <c8y-totp-challenge (onSuccess)=\"totpSetupVerified($event)\"></c8y-totp-challenge>\n</c8y-modal>\n"
    })
], UserTotpSetupComponent);
export { UserTotpSetupComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci10b3RwLXNldHVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL3VzZXIvdXNlci10b3RwLXNldHVwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFPbkQsSUFBYSxzQkFBc0IsR0FBbkMsTUFBYSxzQkFBc0I7SUFDakMsWUFDVSxJQUFpQixFQUNqQixZQUEwQixFQUMxQixLQUFpQixFQUNqQixZQUEwQjtRQUgxQixTQUFJLEdBQUosSUFBSSxDQUFhO1FBQ2pCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLFVBQUssR0FBTCxLQUFLLENBQVk7UUFDakIsaUJBQVksR0FBWixZQUFZLENBQWM7SUFBSSxDQUFDO0lBRW5DLGlCQUFpQixDQUFDLEtBQUs7O1lBQzNCLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUMvQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2xCLElBQUk7Z0JBQ0YsTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FDakMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEVBQzFCLE9BQU8sQ0FBQyxpREFBaUQsQ0FBQyxFQUMxRCxNQUFNLENBQUMsT0FBTyxFQUNkLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FDbkIsQ0FBQztnQkFDRixNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUM7YUFDbEM7WUFBQyxPQUFPLEVBQUUsRUFBRTtnQkFDWCxpQkFBaUI7YUFDbEI7UUFDSCxDQUFDO0tBQUE7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDO0NBQ0YsQ0FBQTs7WUF4QmlCLFdBQVc7WUFDSCxZQUFZO1lBQ25CLFVBQVU7WUFDSCxZQUFZOztBQUx6QixzQkFBc0I7SUFKbEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHFCQUFxQjtRQUMvQix3ZkFBK0M7S0FDaEQsQ0FBQztHQUNXLHNCQUFzQixDQTBCbEM7U0ExQlksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IFN0YXR1cyB9IGZyb20gJy4uL2NvbW1vbi9zdGF0dXMubW9kZWwnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XG5pbXBvcnQgeyBNb2RhbFNlcnZpY2UgfSBmcm9tICcuLi9tb2RhbC9tb2RhbC5zZXJ2aWNlJztcbmltcG9ydCB7IEJzTW9kYWxSZWYgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IExvZ2luU2VydmljZSB9IGZyb20gJy4uL2xvZ2luL3B1YmxpYy1hcGknO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vYWxlcnQvcHVibGljLWFwaSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS11c2VyLXRvdHAtc2V0dXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vdXNlci10b3RwLXNldHVwLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBVc2VyVG90cFNldHVwQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB1c2VyOiBVc2VyU2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogTW9kYWxTZXJ2aWNlLFxuICAgIHByaXZhdGUgbW9kYWw6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZSkgeyB9XG5cbiAgYXN5bmMgdG90cFNldHVwVmVyaWZpZWQodG9rZW4pIHtcbiAgICBhd2FpdCB0aGlzLnVzZXIuYWN0aXZhdGVUb3RwKCk7XG4gICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubW9kYWxTZXJ2aWNlLmFja25vd2xlZGdlKFxuICAgICAgICBnZXR0ZXh0KCdMb2dvdXQgcmVxdWlyZWQnKSxcbiAgICAgICAgZ2V0dGV4dCgnWW91IG11c3QgbG9nIG91dCBpbiBvcmRlciB0byBhcHBseSB5b3VyIGNoYW5nZXMnKSxcbiAgICAgICAgU3RhdHVzLldBUk5JTkcsXG4gICAgICAgIGdldHRleHQoJ0xvZyBvdXQnKVxuICAgICAgKTtcbiAgICAgIGF3YWl0IHRoaXMubG9naW5TZXJ2aWNlLmxvZ291dCgpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAvLyBpbnRlbmRlZCBlbXB0eVxuICAgIH1cbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMubW9kYWwuaGlkZSgpO1xuICB9XG59XG4iXX0=