import * as tslib_1 from "tslib";
import { Component, Input, HostBinding, Renderer2, ElementRef, OnChanges, ViewChild, OnDestroy, AfterContentInit, AfterContentChecked } from '@angular/core';
import { debounceTime } from 'rxjs/operators';
import { fromEventPattern, fromEvent, merge } from 'rxjs';
import { Router } from '@angular/router';
let TabsOutletComponent = class TabsOutletComponent {
    constructor(router, renderer, el) {
        this.router = router;
        this.renderer = renderer;
        this.el = el;
        this.tabs = [];
        this.orientation = 'vertical';
        this.navigatorOpen = false;
        this.showLeft = false;
        this.showRight = false;
    }
    get isNavigatorOpen() {
        return this.navigatorOpen;
    }
    get hasTabs() {
        return this.tabs && this.tabs.length;
    }
    get isHorizontal() {
        return this.orientation === 'horizontal';
    }
    get isVertical() {
        return this.orientation !== 'horizontal';
    }
    ngOnDestroy() {
        if (this.scrollSubscription) {
            this.scrollSubscription.unsubscribe();
        }
    }
    ngAfterContentInit() {
        if (this.orientation === 'horizontal') {
            this.scrollSubscribe();
        }
    }
    isActive(tab) {
        if (tab && tab.path) {
            return this.router.isActive(tab.path, false);
        }
        else {
            return false;
        }
    }
    navigateTo(path) {
        this.router.navigate([path]);
    }
    scroll(direction = 'right') {
        const { widthScroll, width, scrollLeft } = this.getDimensions();
        const multiplier = direction === 'left' ? -1 : 1;
        let targetScroll = scrollLeft + width * multiplier;
        if (targetScroll < 0) {
            targetScroll = 0;
        }
        if (targetScroll > widthScroll - width) {
            targetScroll = widthScroll - width;
        }
        // TODO: we should animate this
        this.container.nativeElement.scrollLeft = targetScroll;
    }
    scrollSubscribe() {
        let unlisten;
        this.scrollSubscription = merge(fromEvent(this.container.nativeElement, 'scroll'), fromEventPattern((handler) => {
            unlisten = this.renderer.listen('window', 'resize', handler);
        }, () => unlisten())).pipe(debounceTime(250)).subscribe(() => this.updateScroll());
    }
    updateScroll() {
        const { widthScroll, width, scrollLeft } = this.getDimensions();
        this.showLeft = !!scrollLeft;
        this.showRight = widthScroll > width + scrollLeft;
    }
    getDimensions() {
        const elTabs = this.tabsContainer.nativeElement;
        const el = this.container.nativeElement;
        const widthScroll = elTabs.scrollWidth;
        const width = el.clientWidth;
        const scrollLeft = el.scrollLeft;
        return { widthScroll, width, scrollLeft };
    }
};
TabsOutletComponent.ctorParameters = () => [
    { type: Router },
    { type: Renderer2 },
    { type: ElementRef }
];
tslib_1.__decorate([
    Input()
], TabsOutletComponent.prototype, "tabs", void 0);
tslib_1.__decorate([
    Input()
], TabsOutletComponent.prototype, "orientation", void 0);
tslib_1.__decorate([
    Input()
], TabsOutletComponent.prototype, "navigatorOpen", void 0);
tslib_1.__decorate([
    HostBinding('class.navigator-open')
], TabsOutletComponent.prototype, "isNavigatorOpen", null);
tslib_1.__decorate([
    HostBinding('class.page-tabs')
], TabsOutletComponent.prototype, "hasTabs", null);
tslib_1.__decorate([
    HostBinding('class.page-tabs-horizontal')
], TabsOutletComponent.prototype, "isHorizontal", null);
tslib_1.__decorate([
    HostBinding('class.page-tabs-vertical')
], TabsOutletComponent.prototype, "isVertical", null);
tslib_1.__decorate([
    ViewChild('container', { read: ElementRef, static: true })
], TabsOutletComponent.prototype, "container", void 0);
tslib_1.__decorate([
    ViewChild('left', { read: ElementRef, static: false })
], TabsOutletComponent.prototype, "leftBtn", void 0);
tslib_1.__decorate([
    ViewChild('right', { read: ElementRef, static: false })
], TabsOutletComponent.prototype, "rightBtn", void 0);
tslib_1.__decorate([
    ViewChild('tabsContainer', { read: ElementRef, static: false })
], TabsOutletComponent.prototype, "tabsContainer", void 0);
TabsOutletComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-tabs-outlet,c8y-ui-tabs',
        template: "<div #container class=\"tabContainer hidden-xs\">\n  <button class=\"tabs-slider tabs-slider-left\" #left *ngIf=\"showLeft\" (click)=\"scroll('left')\">\n    <i [c8yIcon]=\"'chevron-left'\"></i>\n  </button>\n  <button class=\"tabs-slider tabs-slider-right\" #right *ngIf=\"showRight\" (click)=\"scroll('right')\">\n    <i [c8yIcon]=\"'chevron-right'\"></i>\n  </button>\n  <ul class=\"nav nav-tabs nav-tabsc8y\" #tabsContainer>\n    <li [ngClass]=\"{'active': rla.isActive}\" *ngFor=\"let tab of tabs\">\n      <a [routerLink]=\"tab.path\" routerLinkActive #rla=\"routerLinkActive\" title=\"{{tab?.label | translate}}\">\n        <i [c8yIcon]=\"tab?.icon\" *ngIf=\"!tab.template && tab?.icon\"></i>\n        <span class=\"txt\" *ngIf=\"!tab.template\">{{tab?.label | translate}}</span>\n        <ng-container *ngTemplateOutlet=\"tab.template\"></ng-container>\n      </a>\n    </li>\n  </ul>\n</div>\n\n<div class=\"visible-xs mobile-tabs\">\n  <div class=\"c8y-select-wrapper\">\n    <select (change)=\"navigateTo($event.target.value)\" #select>\n      <option *ngFor=\"let tab of tabs\" [value]=\"tab.path\" [selected]=\"isActive(tab)\">\n        {{tab?.label | translate}}\n      </option>\n    </select>\n  </div>\n</div>\n"
    })
], TabsOutletComponent);
export { TabsOutletComponent };
//# sourceMappingURL=data:application/json;base64,