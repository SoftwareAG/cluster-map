import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '../common/common.module';
import { DeviceGridComponent } from './device-grid.component';
import { DataGridModule } from '../data-grid/data-grid.module';
import { DeviceGridService } from './device-grid.service';
import { DeviceStatusModule } from '../device-status/device-status.module';
import { FilteringFormComponent } from './filtering-form.component';
import { FormsModule } from '../forms/forms.module';
import { StatusCellRendererComponent } from './columns/status.cell-renderer.component';
import { NameCellRendererComponent } from './columns/name.cell-renderer.component';
import { ModelCellRendererComponent } from './columns/model.cell-renderer.component';
import { SerialNumberCellRendererComponent } from './columns/serial-number.cell-renderer.component';
import { GroupCellRendererComponent } from './columns/group.cell-renderer.component';
import { RegistrationDateCellRendererComponent } from './columns/registration-date.cell-renderer.component';
import { AlarmsCellRendererComponent } from './columns/alarms.cell-renderer.component';
let DeviceGridModule = class DeviceGridModule {
};
DeviceGridModule = tslib_1.__decorate([
    NgModule({
        imports: [CommonModule, FormsModule, DeviceStatusModule, DataGridModule],
        declarations: [
            DeviceGridComponent,
            FilteringFormComponent,
            StatusCellRendererComponent,
            NameCellRendererComponent,
            ModelCellRendererComponent,
            SerialNumberCellRendererComponent,
            GroupCellRendererComponent,
            RegistrationDateCellRendererComponent,
            AlarmsCellRendererComponent
        ],
        exports: [
            DeviceGridComponent,
            FilteringFormComponent,
            StatusCellRendererComponent,
            NameCellRendererComponent,
            ModelCellRendererComponent,
            SerialNumberCellRendererComponent,
            GroupCellRendererComponent,
            RegistrationDateCellRendererComponent,
            AlarmsCellRendererComponent
        ],
        entryComponents: [
            DeviceGridComponent,
            FilteringFormComponent,
            StatusCellRendererComponent,
            NameCellRendererComponent,
            ModelCellRendererComponent,
            SerialNumberCellRendererComponent,
            GroupCellRendererComponent,
            RegistrationDateCellRendererComponent,
            AlarmsCellRendererComponent
        ],
        providers: [DeviceGridService]
    })
], DeviceGridModule);
export { DeviceGridModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWdyaWQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZGV2aWNlLWdyaWQvZGV2aWNlLWdyaWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDM0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXBELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ25GLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ3BHLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQzVHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBdUN2RixJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtDQUFHLENBQUE7QUFBbkIsZ0JBQWdCO0lBckM1QixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLGtCQUFrQixFQUFFLGNBQWMsQ0FBQztRQUN4RSxZQUFZLEVBQUU7WUFDWixtQkFBbUI7WUFDbkIsc0JBQXNCO1lBQ3RCLDJCQUEyQjtZQUMzQix5QkFBeUI7WUFDekIsMEJBQTBCO1lBQzFCLGlDQUFpQztZQUNqQywwQkFBMEI7WUFDMUIscUNBQXFDO1lBQ3JDLDJCQUEyQjtTQUM1QjtRQUNELE9BQU8sRUFBRTtZQUNQLG1CQUFtQjtZQUNuQixzQkFBc0I7WUFDdEIsMkJBQTJCO1lBQzNCLHlCQUF5QjtZQUN6QiwwQkFBMEI7WUFDMUIsaUNBQWlDO1lBQ2pDLDBCQUEwQjtZQUMxQixxQ0FBcUM7WUFDckMsMkJBQTJCO1NBQzVCO1FBQ0QsZUFBZSxFQUFFO1lBQ2YsbUJBQW1CO1lBQ25CLHNCQUFzQjtZQUN0QiwyQkFBMkI7WUFDM0IseUJBQXlCO1lBQ3pCLDBCQUEwQjtZQUMxQixpQ0FBaUM7WUFDakMsMEJBQTBCO1lBQzFCLHFDQUFxQztZQUNyQywyQkFBMkI7U0FDNUI7UUFDRCxTQUFTLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztLQUMvQixDQUFDO0dBQ1csZ0JBQWdCLENBQUc7U0FBbkIsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IERldmljZUdyaWRDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS1ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXRhR3JpZE1vZHVsZSB9IGZyb20gJy4uL2RhdGEtZ3JpZC9kYXRhLWdyaWQubW9kdWxlJztcbmltcG9ydCB7IERldmljZUdyaWRTZXJ2aWNlIH0gZnJvbSAnLi9kZXZpY2UtZ3JpZC5zZXJ2aWNlJztcbmltcG9ydCB7IERldmljZVN0YXR1c01vZHVsZSB9IGZyb20gJy4uL2RldmljZS1zdGF0dXMvZGV2aWNlLXN0YXR1cy5tb2R1bGUnO1xuaW1wb3J0IHsgRmlsdGVyaW5nRm9ybUNvbXBvbmVudCB9IGZyb20gJy4vZmlsdGVyaW5nLWZvcm0uY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnLi4vZm9ybXMvZm9ybXMubW9kdWxlJztcblxuaW1wb3J0IHsgU3RhdHVzQ2VsbFJlbmRlcmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW5zL3N0YXR1cy5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOYW1lQ2VsbFJlbmRlcmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW5zL25hbWUuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTW9kZWxDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbnMvbW9kZWwuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VyaWFsTnVtYmVyQ2VsbFJlbmRlcmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW5zL3NlcmlhbC1udW1iZXIuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3JvdXBDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbnMvZ3JvdXAuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmVnaXN0cmF0aW9uRGF0ZUNlbGxSZW5kZXJlckNvbXBvbmVudCB9IGZyb20gJy4vY29sdW1ucy9yZWdpc3RyYXRpb24tZGF0ZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBbGFybXNDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbnMvYWxhcm1zLmNlbGwtcmVuZGVyZXIuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgRm9ybXNNb2R1bGUsIERldmljZVN0YXR1c01vZHVsZSwgRGF0YUdyaWRNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBEZXZpY2VHcmlkQ29tcG9uZW50LFxuICAgIEZpbHRlcmluZ0Zvcm1Db21wb25lbnQsXG4gICAgU3RhdHVzQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIE5hbWVDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgTW9kZWxDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgU2VyaWFsTnVtYmVyQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3VwQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIFJlZ2lzdHJhdGlvbkRhdGVDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgQWxhcm1zQ2VsbFJlbmRlcmVyQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBEZXZpY2VHcmlkQ29tcG9uZW50LFxuICAgIEZpbHRlcmluZ0Zvcm1Db21wb25lbnQsXG4gICAgU3RhdHVzQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIE5hbWVDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgTW9kZWxDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgU2VyaWFsTnVtYmVyQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3VwQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIFJlZ2lzdHJhdGlvbkRhdGVDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgQWxhcm1zQ2VsbFJlbmRlcmVyQ29tcG9uZW50XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1xuICAgIERldmljZUdyaWRDb21wb25lbnQsXG4gICAgRmlsdGVyaW5nRm9ybUNvbXBvbmVudCxcbiAgICBTdGF0dXNDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgTmFtZUNlbGxSZW5kZXJlckNvbXBvbmVudCxcbiAgICBNb2RlbENlbGxSZW5kZXJlckNvbXBvbmVudCxcbiAgICBTZXJpYWxOdW1iZXJDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgR3JvdXBDZWxsUmVuZGVyZXJDb21wb25lbnQsXG4gICAgUmVnaXN0cmF0aW9uRGF0ZUNlbGxSZW5kZXJlckNvbXBvbmVudCxcbiAgICBBbGFybXNDZWxsUmVuZGVyZXJDb21wb25lbnRcbiAgXSxcbiAgcHJvdmlkZXJzOiBbRGV2aWNlR3JpZFNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIERldmljZUdyaWRNb2R1bGUge31cbiJdfQ==