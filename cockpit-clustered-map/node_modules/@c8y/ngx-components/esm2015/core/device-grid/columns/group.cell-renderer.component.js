import * as tslib_1 from "tslib";
import { Component, forwardRef, Inject } from '@angular/core';
import { CellRendererContext } from '../../data-grid/column/cell-renderer';
import { DeviceGridService } from '../device-grid.service';
let GroupCellRendererComponent = class GroupCellRendererComponent {
    constructor(context, deviceGridService) {
        this.context = context;
        this.deviceGridService = deviceGridService;
    }
};
GroupCellRendererComponent.ctorParameters = () => [
    { type: CellRendererContext },
    { type: DeviceGridService, decorators: [{ type: Inject, args: [forwardRef(() => DeviceGridService),] }] }
];
GroupCellRendererComponent = tslib_1.__decorate([
    Component({
        template: "<span\n  title=\"{{\n    deviceGridService.getParentsNames(\n      context.item,\n      context.property.externalFilterQuery?.deviceGroupId\n    )\n  }}\"\n  class=\"text-truncate\"\n>\n  {{\n    deviceGridService.getParentsNames(\n      context.item,\n      context.property.externalFilterQuery?.deviceGroupId\n    )\n  }}\n</span>\n"
    }),
    tslib_1.__param(1, Inject(forwardRef(() => DeviceGridService)))
], GroupCellRendererComponent);
export { GroupCellRendererComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuY2VsbC1yZW5kZXJlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9kZXZpY2UtZ3JpZC9jb2x1bW5zL2dyb3VwLmNlbGwtcmVuZGVyZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFLM0QsSUFBYSwwQkFBMEIsR0FBdkMsTUFBYSwwQkFBMEI7SUFDckMsWUFDUyxPQUE0QixFQUNpQixpQkFBb0M7UUFEakYsWUFBTyxHQUFQLE9BQU8sQ0FBcUI7UUFDaUIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtJQUN2RixDQUFDO0NBQ0wsQ0FBQTs7WUFIbUIsbUJBQW1CO1lBQ29DLGlCQUFpQix1QkFBdkYsTUFBTSxTQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQzs7QUFIbEMsMEJBQTBCO0lBSHRDLFNBQVMsQ0FBQztRQUNULDBWQUFtRDtLQUNwRCxDQUFDO0lBSUcsbUJBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUE7R0FIbkMsMEJBQTBCLENBS3RDO1NBTFksMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENlbGxSZW5kZXJlckNvbnRleHQgfSBmcm9tICcuLi8uLi9kYXRhLWdyaWQvY29sdW1uL2NlbGwtcmVuZGVyZXInO1xuaW1wb3J0IHsgRGV2aWNlR3JpZFNlcnZpY2UgfSBmcm9tICcuLi9kZXZpY2UtZ3JpZC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiAnLi9ncm91cC5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBHcm91cENlbGxSZW5kZXJlckNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBjb250ZXh0OiBDZWxsUmVuZGVyZXJDb250ZXh0LFxuICAgIEBJbmplY3QoZm9yd2FyZFJlZigoKSA9PiBEZXZpY2VHcmlkU2VydmljZSkpIHB1YmxpYyBkZXZpY2VHcmlkU2VydmljZTogRGV2aWNlR3JpZFNlcnZpY2VcbiAgKSB7fVxufVxuIl19