import { BaseDeviceGridColumn } from './base.device-grid-column';
import { GroupCellRendererComponent } from './group.cell-renderer.component';
import { gettext } from '../../i18n/gettext';
export class GroupDeviceGridColumn extends BaseDeviceGridColumn {
    constructor() {
        super();
        this.name = 'group';
        this.header = gettext('Group');
        this.cellRendererComponent = GroupCellRendererComponent;
        this.filterable = true;
        this.filteringConfig = {
            schema: {
                type: 'object',
                properties: {
                    deviceGroupId: {
                        type: 'integer',
                        format: 'deviceGroupId'
                    }
                }
            },
            form: [
                {
                    key: 'deviceGroupId',
                    title: gettext('Show devices in group')
                }
            ],
            getFilter(model) {
                const filter = {};
                if (model.deviceGroupId) {
                    filter.__bygroupid = model.deviceGroupId;
                }
                return filter;
            }
        };
        this.sortable = false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuZGV2aWNlLWdyaWQtY29sdW1uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZGV2aWNlLWdyaWQvY29sdW1ucy9ncm91cC5kZXZpY2UtZ3JpZC1jb2x1bW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTdDLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxvQkFBb0I7SUFDN0Q7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUVSLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxxQkFBcUIsR0FBRywwQkFBMEIsQ0FBQztRQUV4RCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsZUFBZSxHQUFHO1lBQ3JCLE1BQU0sRUFBRTtnQkFDTixJQUFJLEVBQUUsUUFBUTtnQkFDZCxVQUFVLEVBQUU7b0JBQ1YsYUFBYSxFQUFFO3dCQUNiLElBQUksRUFBRSxTQUFTO3dCQUNmLE1BQU0sRUFBRSxlQUFlO3FCQUN4QjtpQkFDRjthQUNGO1lBQ0QsSUFBSSxFQUFFO2dCQUNKO29CQUNFLEdBQUcsRUFBRSxlQUFlO29CQUNwQixLQUFLLEVBQUUsT0FBTyxDQUFDLHVCQUF1QixDQUFDO2lCQUN4QzthQUNGO1lBQ0QsU0FBUyxDQUFDLEtBQUs7Z0JBQ2IsTUFBTSxNQUFNLEdBQVEsRUFBRSxDQUFDO2dCQUN2QixJQUFJLEtBQUssQ0FBQyxhQUFhLEVBQUU7b0JBQ3ZCLE1BQU0sQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztpQkFDMUM7Z0JBQ0QsT0FBTyxNQUFNLENBQUM7WUFDaEIsQ0FBQztTQUNGLENBQUM7UUFFRixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlRGV2aWNlR3JpZENvbHVtbiB9IGZyb20gJy4vYmFzZS5kZXZpY2UtZ3JpZC1jb2x1bW4nO1xuaW1wb3J0IHsgR3JvdXBDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2dyb3VwLmNlbGwtcmVuZGVyZXIuY29tcG9uZW50JztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICcuLi8uLi9pMThuL2dldHRleHQnO1xuXG5leHBvcnQgY2xhc3MgR3JvdXBEZXZpY2VHcmlkQ29sdW1uIGV4dGVuZHMgQmFzZURldmljZUdyaWRDb2x1bW4ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5uYW1lID0gJ2dyb3VwJztcbiAgICB0aGlzLmhlYWRlciA9IGdldHRleHQoJ0dyb3VwJyk7XG4gICAgdGhpcy5jZWxsUmVuZGVyZXJDb21wb25lbnQgPSBHcm91cENlbGxSZW5kZXJlckNvbXBvbmVudDtcblxuICAgIHRoaXMuZmlsdGVyYWJsZSA9IHRydWU7XG4gICAgdGhpcy5maWx0ZXJpbmdDb25maWcgPSB7XG4gICAgICBzY2hlbWE6IHtcbiAgICAgICAgdHlwZTogJ29iamVjdCcsXG4gICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICBkZXZpY2VHcm91cElkOiB7XG4gICAgICAgICAgICB0eXBlOiAnaW50ZWdlcicsXG4gICAgICAgICAgICBmb3JtYXQ6ICdkZXZpY2VHcm91cElkJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGZvcm06IFtcbiAgICAgICAge1xuICAgICAgICAgIGtleTogJ2RldmljZUdyb3VwSWQnLFxuICAgICAgICAgIHRpdGxlOiBnZXR0ZXh0KCdTaG93IGRldmljZXMgaW4gZ3JvdXAnKVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgZ2V0RmlsdGVyKG1vZGVsKSB7XG4gICAgICAgIGNvbnN0IGZpbHRlcjogYW55ID0ge307XG4gICAgICAgIGlmIChtb2RlbC5kZXZpY2VHcm91cElkKSB7XG4gICAgICAgICAgZmlsdGVyLl9fYnlncm91cGlkID0gbW9kZWwuZGV2aWNlR3JvdXBJZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmlsdGVyO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnNvcnRhYmxlID0gZmFsc2U7XG4gIH1cbn1cbiJdfQ==