import * as tslib_1 from "tslib";
import { Component, Inject, ViewChild } from '@angular/core';
import { ICON_LIST } from '@c8y/ngx-components';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { DASHBOARD_THEME_CLASSES, WIDGET_HEADER_CLASSES } from './context-dashboard.model';
import { clone } from 'lodash-es';
import { ContextDashboardService } from './context-dashboard.service';
let DashboardDetailComponent = class DashboardDetailComponent {
    constructor(modal, iconList, contextDashboardService) {
        this.modal = modal;
        this.contextDashboardService = contextDashboardService;
        this.styling = {
            themeClass: 'dashboard-theme-light',
            headerClass: 'panel-title-regular'
        };
        this.possibleStyling = { DASHBOARD_THEME_CLASSES, WIDGET_HEADER_CLASSES };
        this.result = new Promise((resolve, reject) => {
            this._save = resolve;
            this._cancel = reject;
        });
        this.DEFAULT_DASHBOARD_MARGIN = 12;
        this.DEFAULT_DASHBOARD_ICON = 'th';
        this.DEFAULT_DASHBOARD_PRIORITY = 10000;
        this.DEFAULT_DASHBOARD_NAME = 'Dashboard';
        this.icons = iconList;
        this.filteredIcons = iconList;
    }
    ngAfterContentInit() {
        const defaultDashboardCfg = {
            name: this.DEFAULT_DASHBOARD_NAME,
            priority: this.DEFAULT_DASHBOARD_PRIORITY,
            icon: this.DEFAULT_DASHBOARD_ICON,
            deviceTypeValue: this.deviceType
        };
        if (this.dashboard) {
            this.current = clone(this.dashboard);
            this.setDashboardStyle();
        }
        else {
            this.dashboard = defaultDashboardCfg;
            this.dashboardDetailForm.form.markAsDirty();
        }
    }
    save() {
        this.dashboard.classes = { [this.styling.themeClass]: true };
        this.dashboard.widgetClasses = { [this.styling.headerClass]: true };
        this._save(this.dashboard);
    }
    close() {
        this._cancel();
        this.modal.hide();
    }
    getDashboardPreviewStyle() {
        const cssClasses = {};
        cssClasses[this.styling.headerClass] = true;
        cssClasses[this.styling.themeClass] = true;
        return cssClasses;
    }
    selectIcon(icon) {
        this.dashboard.icon = icon;
        this.dashboardDetailForm.form.markAsDirty();
    }
    updateFiltered(term) {
        if (term) {
            const search = new RegExp(term, 'i');
            this.filteredIcons = this.icons.filter(val => search.test(val));
        }
        else {
            this.filteredIcons = this.icons;
        }
    }
    setDashboardStyle() {
        const allClasses = Object.assign({}, this.dashboard.classes, this.dashboard.widgetClasses);
        const styles = Object.keys(allClasses).map(c => c.split('-').pop());
        styles.forEach(styleName => {
            this.styling.themeClass = this.contextDashboardService.getStyling(DASHBOARD_THEME_CLASSES, styleName, this.styling.themeClass);
            this.styling.headerClass = this.contextDashboardService.getStyling(WIDGET_HEADER_CLASSES, styleName, this.styling.headerClass);
        });
    }
};
DashboardDetailComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: Array, decorators: [{ type: Inject, args: [ICON_LIST,] }] },
    { type: ContextDashboardService }
];
tslib_1.__decorate([
    ViewChild('dashboardDetailForm', { static: true })
], DashboardDetailComponent.prototype, "dashboardDetailForm", void 0);
DashboardDetailComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-dashboard-detail',
        template: "<div class=\"modal-header\">\n  <h3 *ngIf=\"!current\" translate>\n    Add dashboard\n  </h3>\n  <h3 *ngIf=\"current\" translate>Edit dashboard</h3>\n</div>\n\n<div class=\"modal-body\">\n  <form #dashboardDetailForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div *ngIf=\"!isNamedDashboard\">\n          <h6 class=\"legend form-block\"><span translate>Tab</span></h6>\n          <div class=\"input-group\">\n            <c8y-form-group>\n              <label class=\"m-r-8\" translate>Icon</label>\n              <div dropdown class=\"dropdown\">\n                <button\n                  title=\"{{ 'Icon' | translate }}\"\n                  class=\"btn-default btn btn-gray\"\n                  dropdownToggle\n                >\n                  <i c8yIcon=\"{{dashboard.icon}}\"></i>\n                  <span class=\"caret\"></span> \n                </button>                  \n                <ul\n                  *dropdownMenu\n                  class=\"dropdown-menu modal-inner-scroll dropdown-menu-grid-4\"\n                  style=\"max-height: 250px;margin-left: 0;\"\n                >\n                  <ng-container *ngFor=\"let icon of filteredIcons\">\n                    <li (click)=\"selectIcon(icon)\">\n                      <a style=\"cursor: pointer\" title=\"{{icon}}\" [ngClass]=\"{'active': dashboard.icon === icon}\">\n                        <i class=\"icon\" [c8yIcon]=\"icon\" ></i>\n                      </a>\n                    </li>\n                  </ng-container>\n                </ul>\n              </div>\n            </c8y-form-group>\n            <c8y-form-group class=\"flex-grow\">\n              <label>\n                <span class=\"m-r-4\" translate>Menu label</span>\n                <button class=\"btn btn-clean\"\n                  popover=\"{{\n                    'Menu label to display in submenu when dashboard is attached' | translate\n                  }}\"\n                  triggers=\"focus\"\n                  placement=\"right\"\n                  container=\"body\"\n                >\n                  <i\n                    [c8yIcon]=\"'question-circle-o'\"\n                    class=\"text-primary\"\n                  ></i>\n                </button>\n              </label>\n              <input\n                title=\"{{ 'Menu label' | translate }}\"\n                class=\"form-control\"\n                name=\"name\"\n                [(ngModel)]=\"dashboard.name\"\n                placeholder=\"{{ 'e.g. My dashboard' | translate }}\"\n                required\n              />\n            </c8y-form-group>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <c8y-form-group>\n                <label>\n                  <span translate class=\"m-r-4\">Position in navigation</span>\n                  <button class=\"btn btn-clean\"\n                    popover=\"{{\n                      'Position in navigation menu (10000 first, -10000 last)' | translate\n                    }}\"\n                    triggers=\"focus\"\n                    placement=\"right\"\n                    container=\"body\"\n                  >\n                    <i \n                      [c8yIcon]=\"'question-circle-o'\"\n                      class=\"text-primary\"\n                    ></i>\n                  </button>\n                  \n                </label>\n                <input\n                  title=\"{{ 'Position in navigation' | translate }}\"\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"priority\"\n                  [(ngModel)]=\"dashboard.priority\"\n                  min=\"-10000\"\n                  max=\"10000\"\n                  placeholder=\"{{ 'e.g.' | translate }} 500\"\n                  required\n                />\n              </c8y-form-group>\n            </div>\n            <div class=\"col-sm-6\">\n             \n            </div>\n\n            <div style=\"position: relative;\">\n              <div class=\"col-sm-12\">\n                <div class=\"form-group m-b-24\" *ngIf=\"!current && deviceType\">\n                  <label class=\"c8y-checkbox\">\n                    <input type=\"checkbox\" name=\"deviceType\" [(ngModel)]=\"dashboard.deviceType\" />\n                    <span></span>\n                    {{ 'Apply dashboard to all devices of type ' | translate\n                    }}<i>{{ dashboard.deviceTypeValue }}</i>\n                  </label>\n                </div>\n\n                <div\n                  class=\"alert alert-info  m-b-24\"\n                  *ngIf=\"dashboard.deviceType && dashboard.deviceTypeValue\"\n                >\n                  <i c8y-icon=\"info\"></i>\n                  {{ 'This dashboard is shared between all devices of the type ' | translate }}\n                  <i>{{ dashboard.deviceTypeValue }}</i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <c8y-appearance-settings\n            [(themeClass)]=\"styling.themeClass\"\n            [(headerClass)]=\"styling.headerClass\"\n          >\n          </c8y-appearance-settings>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <c8y-form-group>\n                <label>{{ 'Widget margin' | translate }}</label>\n                <div class=\"input-group\">\n                  <input\n                    title=\"{{ 'Widget margin' | translate }}\"\n                    id=\"margin\"\n                    name=\"margin\"\n                    type=\"number\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"dashboard.widgetMargin\"\n                    min=\"0\"\n                    max=\"50\"\n                    placeholder=\"{{ DEFAULT_DASHBOARD_MARGIN }}\"\n                  />\n                  <span class=\"input-group-addon\">px</span>\n                </div>\n              </c8y-form-group>\n            </div>\n            <div class=\"col-sm-6\">\n              <label translate>Widget titles</label>\n              <c8y-form-group>\n                <label\n                  title=\"{{ 'Translate widget titles if possible' | translate }}\"\n                  class=\"c8y-checkbox\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    name=\"translateWidgetTitle\"\n                    [(ngModel)]=\"dashboard.translateWidgetTitle\"\n                  /><span></span>\n                  <span>{{ 'Translate if possible' | translate }}</span>\n                </label>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-sm-6\">\n        <c8y-widget-preview\n          [tab]=\"!isNamedDashboard ? dashboard : undefined\"\n          [previewClasses]=\"getDashboardPreviewStyle()\"\n        ></c8y-widget-preview>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button title=\"{{ 'Cancel' | translate }}\" class=\"btn btn-default\" (click)=\"close()\" translate>\n    Cancel\n  </button>\n  <button\n    title=\"{{ 'Save' | translate }}\"\n    class=\"btn btn-primary\"\n    (click)=\"save()\"\n    [disabled]=\"dashboardDetailForm.form.invalid || dashboardDetailForm.form.pristine\"\n    translate\n  >\n    Save\n  </button>\n</div>\n"
    }),
    tslib_1.__param(1, Inject(ICON_LIST))
], DashboardDetailComponent);
export { DashboardDetailComponent };
//# sourceMappingURL=data:application/json;base64,