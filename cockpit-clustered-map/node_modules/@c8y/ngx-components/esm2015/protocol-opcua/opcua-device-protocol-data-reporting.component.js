import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { set, unset, toInteger } from 'lodash';
import { gettext } from '@c8y/ngx-components';
import { ControlContainer, NgModelGroup } from '@angular/forms';
let OpcuaDeviceProtocolDataReportingComponent = class OpcuaDeviceProtocolDataReportingComponent {
    constructor() {
        this.onSubscriptionChange = new EventEmitter();
        this.subscription = {
            type: 'None'
        };
        this.subscriptionParameters = {
            samplingRate: undefined,
            deadbandType: 'None',
            deadbandValue: undefined,
            ranges: '',
            queueSize: undefined,
            dataChangeTrigger: 'Status',
            discardOldest: true
        };
        this.cyclicReadParameters = {
            rate: undefined
        };
        this.types = [
            { value: 'None', label: gettext('None') },
            { value: 'CyclicRead', label: gettext('Cyclic read') },
            { value: 'Subscription', label: gettext('Subscription') }
        ];
        this.filters = [
            { value: 'None', label: gettext('None') },
            { value: 'absolute', label: gettext('Absolute') },
            { value: 'percent', label: gettext('Percent') }
        ];
        this.triggers = [
            { value: 'Status', label: gettext('Status') },
            { value: 'StatusValue', label: gettext('Status/Value') },
            { value: 'StatusValueTimestamp', label: gettext('Status/Value/Timestamp') }
        ];
        this.discard = [
            { value: true, label: gettext('oldest`data`') },
            { value: false, label: gettext('newest`data`') }
        ];
        this.requireCyclic = false;
        this.requireSubscription = false;
        this.parseReadingInterval = $event => toInteger($event.target.value);
    }
    set model(_model) {
        if (_model.subscriptionType) {
            this.subscription = _model.subscriptionType;
            if (this.subscription.type === 'CyclicRead') {
                this.cyclicReadParameters = _model.subscriptionType.cyclicReadParameters;
                this.requireCyclic = true;
                this.requireSubscription = false;
            }
            if (this.subscription.type === 'Subscription') {
                this.subscriptionParameters = _model.subscriptionType.subscriptionParameters;
                this.requireCyclic = false;
                this.requireSubscription = true;
            }
            if (this.subscription.type === 'None') {
                this.requireCyclic = false;
                this.requireSubscription = false;
            }
        }
        this._model = _model;
    }
    updateModel() {
        setTimeout(() => {
            unset(this.subscription, 'subscriptionParameters');
            unset(this.subscription, 'cyclicReadParameters');
            if (this.subscription.type === 'CyclicRead') {
                this.requireCyclic = true;
                this.requireSubscription = false;
                set(this.subscription, 'cyclicReadParameters', this.cyclicReadParameters);
            }
            else if (this.subscription.type === 'Subscription') {
                this.requireCyclic = false;
                this.requireSubscription = true;
                set(this.subscription, 'subscriptionParameters', this.subscriptionParameters);
            }
            else if (this.subscription.type === 'None') {
                this.requireCyclic = false;
                this.requireSubscription = false;
            }
        });
    }
};
tslib_1.__decorate([
    Input()
], OpcuaDeviceProtocolDataReportingComponent.prototype, "model", null);
tslib_1.__decorate([
    Input()
], OpcuaDeviceProtocolDataReportingComponent.prototype, "groupName", void 0);
tslib_1.__decorate([
    Output()
], OpcuaDeviceProtocolDataReportingComponent.prototype, "onSubscriptionChange", void 0);
OpcuaDeviceProtocolDataReportingComponent = tslib_1.__decorate([
    Component({
        selector: 'opcua-device-protocol-data-reporting',
        template: "<c8y-form-group>\n  <label translate>Mechanism</label>\n  <label\n    *ngFor=\"let mechanism of types\"\n    title=\"{{ mechanism.label | translate }}\"\n    class=\"c8y-radio radio-inline\"\n  >\n    <input\n      type=\"radio\"\n      name=\"subscriptionType\"\n      [value]=\"mechanism.value\"\n      [(ngModel)]=\"subscription.type\"\n      (change)=\"updateModel()\"\n      required\n    />\n    <span></span> {{ mechanism.label | translate }}\n  </label>\n</c8y-form-group>\n\n<div class=\"row collapse\" [collapse]=\"subscription.type != 'CyclicRead'\" [isAnimated]=\"true\">\n  <div class=\"col-sm-6 col-md-4 col-lg-3\">\n    <c8y-form-group>\n      <label translate>Reading interval</label>\n      <div class=\"input-group\">\n        <input\n          class=\"form-control\"\n          type=\"number\"\n          name=\"rate\"\n          [(ngModel)]=\"cyclicReadParameters.rate\"\n          placeholder=\"{{ 'e.g.' | translate }} 50\"\n          [required]=\"requireCyclic\"\n          min=\"0\"\n        />\n        <span class=\"input-group-addon units\" title=\"{{ 'Milliseconds' | translate }}\" translate>\n          msec\n        </span>\n      </div>\n    </c8y-form-group>\n  </div>\n</div>\n\n<div class=\"row collapse\" [collapse]=\"subscription.type != 'Subscription'\" [isAnimated]=\"true\">\n  <div class=\"col-sm-6 col-lg-4\">\n    <c8y-form-group>\n      <label translate>Sampling interval</label>\n      <div class=\"input-group\">\n        <input\n          class=\"form-control\"\n          type=\"number\"\n          name=\"samplingRate\"\n          [(ngModel)]=\"subscriptionParameters.samplingRate\"\n          placeholder=\"{{ 'e.g.' | translate }} 500\"\n          [required]=\"requireSubscription\"\n          min=\"0\"\n        />\n        <span class=\"input-group-addon units\" title=\"{{ 'Milliseconds' | translate }}\" translate>\n          msec\n        </span>\n      </div>\n    </c8y-form-group>\n  </div>\n  <div class=\"col-sm-6 col-lg-4\">\n    <c8y-form-group>\n      <label translate>Queue size</label>\n      <div class=\"input-group\">\n        <input\n          class=\"form-control\"\n          type=\"number\"\n          name=\"queueSize\"\n          [(ngModel)]=\"subscriptionParameters.queueSize\"\n          placeholder=\"{{ 'e.g.' | translate }} 10\"\n          min=\"1\"\n          [required]=\"requireSubscription\"\n        />\n        <span class=\"input-group-addon\">\n          <strong translate>Discard</strong>&nbsp;\n          <label\n            *ngFor=\"let discardOption of discard\"\n            title=\"{{ discardOption.label | translate }}\"\n            class=\"c8y-radio radio-inline\"\n          >\n            <input\n              type=\"radio\"\n              name=\"discard\"\n              [value]=\"discardOption.value\"\n              [(ngModel)]=\"subscriptionParameters.discardOldest\"\n              [required]=\"requireSubscription\"\n            />\n            <span></span> {{ discardOption.label | translate }}\n          </label>\n        </span>\n      </div>\n    </c8y-form-group>\n  </div>\n  <div class=\"clearfix\"></div>\n  <div class=\"col-sm-6 col-lg-4\">\n    <c8y-form-group>\n      <label translate>Data change trigger</label>\n      <label\n        *ngFor=\"let trigger of triggers\"\n        title=\"{{ trigger.label | translate }}\"\n        class=\"c8y-radio radio-inline\"\n      >\n        <input\n          type=\"radio\"\n          name=\"dataChangeTrigger\"\n          [value]=\"trigger.value\"\n          [(ngModel)]=\"subscriptionParameters.dataChangeTrigger\"\n          [required]=\"requireSubscription\"\n        />\n        <span></span> {{ trigger.label | translate }}\n      </label>\n    </c8y-form-group>\n  </div>\n  <div class=\"col-sm-6 col-lg-4\">\n    <c8y-form-group>\n      <label translate>Deadband filter</label>\n      <label\n        *ngFor=\"let deadbandFilter of filters\"\n        title=\"{{ deadbandFilter.label | translate }}\"\n        class=\"c8y-radio radio-inline\"\n      >\n        <input\n          type=\"radio\"\n          name=\"deadbandType\"\n          [value]=\"deadbandFilter.value\"\n          [(ngModel)]=\"subscriptionParameters.deadbandType\"\n          [required]=\"requireSubscription\"\n        />\n        <span></span> {{ deadbandFilter.label | translate }}\n      </label>\n    </c8y-form-group>\n    <div [collapse]=\"subscriptionParameters.deadbandType == 'None'\" [isAnimated]=\"true\">\n      <c8y-form-group>\n        <label translate>Deadband value</label>\n        <input\n          class=\"form-control\"\n          type=\"number\"\n          name=\"deadbandValue\"\n          [(ngModel)]=\"subscriptionParameters.deadbandValue\"\n          placeholder=\"{{ 'e.g.' | translate }} 10\"\n          [required]=\"subscriptionParameters.deadbandType != 'None'\"\n          min=\"0\"\n        />\n      </c8y-form-group>\n    </div>\n  </div>\n</div>\n",
        viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]
    })
], OpcuaDeviceProtocolDataReportingComponent);
export { OpcuaDeviceProtocolDataReportingComponent };
//# sourceMappingURL=data:application/json;base64,