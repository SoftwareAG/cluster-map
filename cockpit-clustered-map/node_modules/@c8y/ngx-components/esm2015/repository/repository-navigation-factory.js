import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode, NavigatorNodeFactory, OptionsService } from '@c8y/ngx-components';
let RepositoryNavigationFactory = class RepositoryNavigationFactory {
    constructor(optionsService) {
        this.optionsService = optionsService;
        this.navs = [];
    }
    get() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const betaFlag = localStorage.getItem('c8y_beta_status');
            if (betaFlag === 'all' && this.navs.length === 0) {
                this.navs.push(new NavigatorNode({
                    label: gettext('Configuration repository'),
                    path: 'configuration-new',
                    icon: 'gears',
                    parent: gettext('Management'),
                    priority: 800
                }));
            }
            return this.navs;
        });
    }
};
RepositoryNavigationFactory.ctorParameters = () => [
    { type: OptionsService }
];
RepositoryNavigationFactory = tslib_1.__decorate([
    Injectable()
], RepositoryNavigationFactory);
export { RepositoryNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeS1uYXZpZ2F0aW9uLWZhY3RvcnkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnkvIiwic291cmNlcyI6WyJyZXBvc2l0b3J5LW5hdmlnYXRpb24tZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxvQkFBb0IsRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUduRyxJQUFhLDJCQUEyQixHQUF4QyxNQUFhLDJCQUEyQjtJQUd0QyxZQUFvQixjQUE4QjtRQUE5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFGbEQsU0FBSSxHQUFvQixFQUFFLENBQUM7SUFFMEIsQ0FBQztJQUVoRCxHQUFHOztZQUNQLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztZQUN6RCxJQUFJLFFBQVEsS0FBSyxLQUFLLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDWixJQUFJLGFBQWEsQ0FBQztvQkFDaEIsS0FBSyxFQUFFLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztvQkFDMUMsSUFBSSxFQUFFLG1CQUFtQjtvQkFDekIsSUFBSSxFQUFFLE9BQU87b0JBQ2IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7b0JBQzdCLFFBQVEsRUFBRSxHQUFHO2lCQUNkLENBQUMsQ0FDSCxDQUFDO2FBQ0g7WUFDRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDbkIsQ0FBQztLQUFBO0NBQ0YsQ0FBQTs7WUFqQnFDLGNBQWM7O0FBSHZDLDJCQUEyQjtJQUR2QyxVQUFVLEVBQUU7R0FDQSwyQkFBMkIsQ0FvQnZDO1NBcEJZLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5LCBPcHRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUmVwb3NpdG9yeU5hdmlnYXRpb25GYWN0b3J5IGltcGxlbWVudHMgTmF2aWdhdG9yTm9kZUZhY3Rvcnkge1xuICBuYXZzOiBOYXZpZ2F0b3JOb2RlW10gPSBbXTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnNTZXJ2aWNlOiBPcHRpb25zU2VydmljZSkge31cblxuICBhc3luYyBnZXQoKSB7XG4gICAgY29uc3QgYmV0YUZsYWcgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYzh5X2JldGFfc3RhdHVzJyk7XG4gICAgaWYgKGJldGFGbGFnID09PSAnYWxsJyAmJiB0aGlzLm5hdnMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLm5hdnMucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdDb25maWd1cmF0aW9uIHJlcG9zaXRvcnknKSxcbiAgICAgICAgICBwYXRoOiAnY29uZmlndXJhdGlvbi1uZXcnLFxuICAgICAgICAgIGljb246ICdnZWFycycsXG4gICAgICAgICAgcGFyZW50OiBnZXR0ZXh0KCdNYW5hZ2VtZW50JyksXG4gICAgICAgICAgcHJpb3JpdHk6IDgwMFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmF2cztcbiAgfVxufVxuIl19