import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { pipe, Subject, timer, of } from 'rxjs';
import { debounce, distinctUntilChanged, map } from 'rxjs/operators';
import { RepositoryService } from '../repository.service';
import { BsModalService } from 'ngx-bootstrap/modal';
import { ConfigurationNewModalComponent } from './configuration-new-modal.component';
let ConfigurationListComponent = class ConfigurationListComponent {
    constructor(alert, repositoryService, modalService) {
        this.alert = alert;
        this.repositoryService = repositoryService;
        this.modalService = modalService;
        this.filterChange$ = new Subject();
        this.filterTerm = '';
        this.CARRIAGE_RETURN_KEY = 13;
        this.CARRIAGE_RETURN_CODE = 'Enter';
        this.DELETED_SUCCESS_MSG = gettext('Configuration deleted.');
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.reset();
            this.filterChange$
                .pipe(debounce((event) => event.code === this.CARRIAGE_RETURN_CODE || event.keyCode === this.CARRIAGE_RETURN_KEY
                ? timer(10)
                : timer(300)), map((e) => e.target.value), distinctUntilChanged())
                .subscribe(filterTerm => {
                this.filterTerm = filterTerm;
                this.setPipe(filterTerm);
            });
        });
    }
    ngOnDestroy() {
        this.filterChange$.complete();
    }
    add() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.modalService.show(ConfigurationNewModalComponent, {
                    class: 'modal-sm',
                    ignoreBackdropClick: true
                }).content.result;
                yield this.reset();
            }
            catch (ex) {
                // inteded empty
            }
        });
    }
    edit(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                const modal = this.modalService.show(ConfigurationNewModalComponent, {
                    class: 'modal-sm',
                    ignoreBackdropClick: true,
                    initialState: {
                        selected: { id: configuration.id, configurationType: configuration.configurationType },
                        versionOrName: configuration.name,
                        deviceType: configuration.deviceType,
                        description: configuration.description,
                        binary: { url: configuration.url }
                    }
                }).content;
                modal.mo = configuration;
                yield modal.result;
                yield this.reset();
            }
            catch (ex) {
                // inteded empty
            }
        });
    }
    delete(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.repositoryService.delete(configuration);
                this.alert.success(this.DELETED_SUCCESS_MSG);
                yield this.reset();
            }
            catch (ex) {
                this.alert.addServerFailure(ex);
            }
        });
    }
    setPipe(filterTerm) {
        this.filterPipe = pipe(map((data) => filterTerm.trim().length === 0
            ? data
            : data.filter((mo) => this.filterContainString(mo.name, filterTerm) ||
                this.filterContainString(mo.configurationType, filterTerm))));
    }
    filterContainString(name, filterTerm) {
        const term = filterTerm.toLowerCase().trim();
        return name && name.toLowerCase().indexOf(term) > -1;
    }
    reset() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.filterTerm = '';
            this.configurations$ = of(yield this.repositoryService.listConfigurations());
            this.setPipe('');
        });
    }
};
ConfigurationListComponent.ctorParameters = () => [
    { type: AlertService },
    { type: RepositoryService },
    { type: BsModalService }
];
ConfigurationListComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-configuration-list',
        template: "<c8y-title>\n  <span translate>Configuration snapshots repository</span>&nbsp;\n  <small *ngIf=\"(configurations$ | async)?.paging.totalPages === 1 && !filterTerm\"\n    >{{ (configurations$ | async).data.length }} <span translate>snapshots</span></small\n  >\n  <small\n    *ngIf=\"(configurations$ | async)?.paging.totalPages > 1 && !filterTerm\"\n    [tooltip]=\"'More data available. Scroll to the bottom of the list to load it.' | translate\"\n    container=\"body\"\n    >{{ (configurations$ | async).paging.pageSize }}+ <span translate>snapshots</span></small\n  >\n  <small *ngIf=\"filterTerm\"\n    ><span translate>Search results for</span>&nbsp;\"{{ this.filterTerm }}\"</small\n  >\n</c8y-title>\n\n<c8y-action-bar-item itemClass=\"navbar-form\">\n  <div class=\"input-group input-group-search\">\n    <input\n      class=\"form-control\"\n      placeholder=\"{{ 'Filter\u2026' | translate }}\"\n      type=\"text\"\n      [value]=\"filterTerm\"\n      (keyup)=\"filterChange$.next($event)\"\n    />\n    <span class=\"input-group-btn\">\n      <button class=\"btn btn-clean\" (click)=\"filterTerm = ''; setPipe('')\">\n        <i [c8yIcon]=\"filterTerm.length === 0 ? 'filter' : 'close'\"></i>\n      </button>\n    </span>\n  </div>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" (click)=\"add()\">\n    <i c8yIcon=\"plus-square\"></i> {{ 'Add configuration snapshot' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div\n  class=\"c8y-empty-state text-center\"\n  *ngIf=\"!filterTerm && (configurations$ | async)?.data.length === 0\"\n>\n  <h1 c8yIcon=\"gears\"></h1>\n  <h3 translate>There are no configuration snapshots defined</h3>\n  <p translate>Add a configuration snapshot first.</p>\n  <div>\n    <button (click)=\"add()\" class=\"btn btn-primary\" translate>\n      Add configuration snapshot\n    </button>\n  </div>\n  <p c8y-guide-docs>\n    <small translate\n      >Find out more in the\n      <a c8y-guide-href=\"users-guide/device-management/#configuration-repository\"\n        >User guide`KEEP_ORIGINAL`</a\n      >.</small\n    >\n  </p>\n</div>\n\n<ng-template #notFound>\n  <c8y-li class=\"p-8 text-center\">\n    <p>\n      <span translate>No more entries found for filter:</span>&nbsp;<strong>{{\n        filterTerm\n      }}</strong>\n    </p>\n    <button class=\"btn btn-primary btn-xs m-t-8\" translate (click)=\"filterTerm = ''; setPipe('')\">\n      Reset filter\n    </button>\n  </c8y-li>\n</ng-template>\n<div class=\"p-b-32\">\n  <c8y-list-group>\n    <c8y-li\n      *c8yFor=\"\n        let configuration of configurations$;\n        pipe: filterPipe;\n        notFound: this.filterTerm ? notFound : undefined\n      \"\n    >\n      <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n      <div class=\"row flex-row\">\n        <div class=\"col-xs-3\">\n          <c8y-highlight\n            [text]=\"configuration.name || '-'\"\n            elementClass=\"text-info\"\n            [pattern]=\"filterTerm\"\n          ></c8y-highlight>\n        </div>\n        <div class=\"col-xs-3\">\n          <span class=\"text-muted text-truncate\" [title]=\"configuration.description\">{{\n            configuration.description\n          }}</span>\n        </div>\n        <div class=\"col-xs-3\">\n          <small translate class=\"text-muted text-uppercase\">Device type:</small>&nbsp;\n          {{ configuration.deviceType || '-' }}\n        </div>\n        <div class=\"col-xs-3 text-right\">\n          <span class=\"label label-primary\" *ngIf=\"configuration.configurationType\">\n            <c8y-highlight\n              [text]=\"configuration.configurationType\"\n              elementClass=\"text-info\"\n              [pattern]=\"filterTerm\"\n            ></c8y-highlight>\n          </span>\n        </div>\n      </div>\n      <c8y-li-action (click)=\"edit(configuration)\" icon=\"pencil\">\n        Edit\n      </c8y-li-action>\n      <c8y-li-action (click)=\"delete(configuration)\" icon=\"trash-o\">\n        Delete\n      </c8y-li-action>\n    </c8y-li>\n  </c8y-list-group>\n</div>\n"
    })
], ConfigurationListComponent);
export { ConfigurationListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvcmVwb3NpdG9yeS8iLCJzb3VyY2VzIjpbImNvbmZpZ3VyYXRpb24vY29uZmlndXJhdGlvbi1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVsRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzVELE9BQU8sRUFBYyxJQUFJLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDNUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxvQkFBb0IsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFPckYsSUFBYSwwQkFBMEIsR0FBdkMsTUFBYSwwQkFBMEI7SUFTckMsWUFDVSxLQUFtQixFQUNuQixpQkFBb0MsRUFDcEMsWUFBNEI7UUFGNUIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQUNuQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3BDLGlCQUFZLEdBQVosWUFBWSxDQUFnQjtRQVR0QyxrQkFBYSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7UUFDOUIsZUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNDLHdCQUFtQixHQUFHLEVBQUUsQ0FBQztRQUN6Qix5QkFBb0IsR0FBRyxPQUFPLENBQUM7UUFDL0Isd0JBQW1CLEdBQUcsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUM7SUFNdEUsQ0FBQztJQUVFLFFBQVE7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VUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sS0FBSyxDQUFDO1lBQzVCLENBQUMsQ0FBQyxJQUFJO1lBQ04sQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQ1QsQ0FBQyxFQUFrQixFQUFFLEVBQUUsQ0FDckIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDO2dCQUM3QyxJQUFJLENBQUMsbUJBQW1CLENBQUMsRUFBRSxDQUFDLGlCQUFpQixFQUFFLFVBQVUsQ0FBQyxDQUM3RCxDQUNOLENBQ0YsQ0FBQztJQUNKLENBQUM7SUFFTyxtQkFBbUIsQ0FBQyxJQUFZLEVBQUUsVUFBa0I7UUFDMUQsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzdDLE9BQU8sSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVhLEtBQUs7O1lBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxlQUFlLEdBQUcsRUFBRSxDQUFDLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGtCQUFrQixFQUFFLENBQUMsQ0FBQztZQUM3RSxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ25CLENBQUM7S0FBQTtDQUNGLENBQUE7O1lBL0ZrQixZQUFZO1lBQ0EsaUJBQWlCO1lBQ3RCLGNBQWM7O0FBWjNCLDBCQUEwQjtJQUp0QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsd0JBQXdCO1FBQ2xDLG9oSUFBa0Q7S0FDbkQsQ0FBQztHQUNXLDBCQUEwQixDQXlHdEM7U0F6R1ksMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0LCBJUmVzdWx0TGlzdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgcGlwZSwgU3ViamVjdCwgdGltZXIsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBkZWJvdW5jZSwgZGlzdGluY3RVbnRpbENoYW5nZWQsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFJlcG9zaXRvcnlTZXJ2aWNlIH0gZnJvbSAnLi4vcmVwb3NpdG9yeS5zZXJ2aWNlJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uTmV3TW9kYWxDb21wb25lbnQgfSBmcm9tICcuL2NvbmZpZ3VyYXRpb24tbmV3LW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5TW9kYWwgfSBmcm9tICcuLi9yZXBvc2l0b3J5Lm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWNvbmZpZ3VyYXRpb24tbGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25maWd1cmF0aW9uLWxpc3QuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyYXRpb25MaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29uZmlndXJhdGlvbnMkOiBPYnNlcnZhYmxlPElSZXN1bHRMaXN0PElNYW5hZ2VkT2JqZWN0Pj47XG4gIGZpbHRlclBpcGU7XG4gIGZpbHRlckNoYW5nZSQgPSBuZXcgU3ViamVjdCgpO1xuICBmaWx0ZXJUZXJtID0gJyc7XG4gIHByaXZhdGUgcmVhZG9ubHkgQ0FSUklBR0VfUkVUVVJOX0tFWSA9IDEzO1xuICBwcml2YXRlIHJlYWRvbmx5IENBUlJJQUdFX1JFVFVSTl9DT0RFID0gJ0VudGVyJztcbiAgcHJpdmF0ZSByZWFkb25seSBERUxFVEVEX1NVQ0NFU1NfTVNHID0gZ2V0dGV4dCgnQ29uZmlndXJhdGlvbiBkZWxldGVkLicpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYWxlcnQ6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIHJlcG9zaXRvcnlTZXJ2aWNlOiBSZXBvc2l0b3J5U2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2VcbiAgKSB7fVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIGF3YWl0IHRoaXMucmVzZXQoKTtcblxuICAgIHRoaXMuZmlsdGVyQ2hhbmdlJFxuICAgICAgLnBpcGUoXG4gICAgICAgIGRlYm91bmNlKChldmVudDogYW55KSA9PlxuICAgICAgICAgIGV2ZW50LmNvZGUgPT09IHRoaXMuQ0FSUklBR0VfUkVUVVJOX0NPREUgfHwgZXZlbnQua2V5Q29kZSA9PT0gdGhpcy5DQVJSSUFHRV9SRVRVUk5fS0VZXG4gICAgICAgICAgICA/IHRpbWVyKDEwKVxuICAgICAgICAgICAgOiB0aW1lcigzMDApXG4gICAgICAgICksXG4gICAgICAgIG1hcCgoZTogYW55KSA9PiBlLnRhcmdldC52YWx1ZSksXG4gICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKClcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoZmlsdGVyVGVybSA9PiB7XG4gICAgICAgIHRoaXMuZmlsdGVyVGVybSA9IGZpbHRlclRlcm07XG4gICAgICAgIHRoaXMuc2V0UGlwZShmaWx0ZXJUZXJtKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5maWx0ZXJDaGFuZ2UkLmNvbXBsZXRlKCk7XG4gIH1cblxuICBhc3luYyBhZGQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0ICh0aGlzLm1vZGFsU2VydmljZS5zaG93KENvbmZpZ3VyYXRpb25OZXdNb2RhbENvbXBvbmVudCwge1xuICAgICAgICBjbGFzczogJ21vZGFsLXNtJyxcbiAgICAgICAgaWdub3JlQmFja2Ryb3BDbGljazogdHJ1ZVxuICAgICAgfSkuY29udGVudCBhcyBDb25maWd1cmF0aW9uTmV3TW9kYWxDb21wb25lbnQpLnJlc3VsdDtcbiAgICAgIGF3YWl0IHRoaXMucmVzZXQoKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgLy8gaW50ZWRlZCBlbXB0eVxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGVkaXQoY29uZmlndXJhdGlvbjogSU1hbmFnZWRPYmplY3QpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgbW9kYWwgPSB0aGlzLm1vZGFsU2VydmljZS5zaG93KENvbmZpZ3VyYXRpb25OZXdNb2RhbENvbXBvbmVudCwge1xuICAgICAgICBjbGFzczogJ21vZGFsLXNtJyxcbiAgICAgICAgaWdub3JlQmFja2Ryb3BDbGljazogdHJ1ZSxcbiAgICAgICAgaW5pdGlhbFN0YXRlOiB7XG4gICAgICAgICAgc2VsZWN0ZWQ6IHsgaWQ6IGNvbmZpZ3VyYXRpb24uaWQsIGNvbmZpZ3VyYXRpb25UeXBlOiBjb25maWd1cmF0aW9uLmNvbmZpZ3VyYXRpb25UeXBlIH0sXG4gICAgICAgICAgdmVyc2lvbk9yTmFtZTogY29uZmlndXJhdGlvbi5uYW1lLFxuICAgICAgICAgIGRldmljZVR5cGU6IGNvbmZpZ3VyYXRpb24uZGV2aWNlVHlwZSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogY29uZmlndXJhdGlvbi5kZXNjcmlwdGlvbixcbiAgICAgICAgICBiaW5hcnk6IHsgdXJsOiBjb25maWd1cmF0aW9uLnVybCB9XG4gICAgICAgIH0gYXMgUmVwb3NpdG9yeU1vZGFsXG4gICAgICB9KS5jb250ZW50IGFzIENvbmZpZ3VyYXRpb25OZXdNb2RhbENvbXBvbmVudDtcbiAgICAgIG1vZGFsLm1vID0gY29uZmlndXJhdGlvbjtcbiAgICAgIGF3YWl0IG1vZGFsLnJlc3VsdDtcbiAgICAgIGF3YWl0IHRoaXMucmVzZXQoKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgLy8gaW50ZWRlZCBlbXB0eVxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZShjb25maWd1cmF0aW9uOiBJTWFuYWdlZE9iamVjdCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmRlbGV0ZShjb25maWd1cmF0aW9uKTtcbiAgICAgIHRoaXMuYWxlcnQuc3VjY2Vzcyh0aGlzLkRFTEVURURfU1VDQ0VTU19NU0cpO1xuICAgICAgYXdhaXQgdGhpcy5yZXNldCgpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZXgpO1xuICAgIH1cbiAgfVxuXG4gIHNldFBpcGUoZmlsdGVyVGVybTogc3RyaW5nKSB7XG4gICAgdGhpcy5maWx0ZXJQaXBlID0gcGlwZShcbiAgICAgIG1hcCgoZGF0YTogW10pID0+XG4gICAgICAgIGZpbHRlclRlcm0udHJpbSgpLmxlbmd0aCA9PT0gMFxuICAgICAgICAgID8gZGF0YVxuICAgICAgICAgIDogZGF0YS5maWx0ZXIoXG4gICAgICAgICAgICAgIChtbzogSU1hbmFnZWRPYmplY3QpID0+XG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJDb250YWluU3RyaW5nKG1vLm5hbWUsIGZpbHRlclRlcm0pIHx8XG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJDb250YWluU3RyaW5nKG1vLmNvbmZpZ3VyYXRpb25UeXBlLCBmaWx0ZXJUZXJtKVxuICAgICAgICAgICAgKVxuICAgICAgKVxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIGZpbHRlckNvbnRhaW5TdHJpbmcobmFtZTogc3RyaW5nLCBmaWx0ZXJUZXJtOiBzdHJpbmcpIHtcbiAgICBjb25zdCB0ZXJtID0gZmlsdGVyVGVybS50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbiAgICByZXR1cm4gbmFtZSAmJiBuYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZih0ZXJtKSA+IC0xO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyByZXNldCgpIHtcbiAgICB0aGlzLmZpbHRlclRlcm0gPSAnJztcbiAgICB0aGlzLmNvbmZpZ3VyYXRpb25zJCA9IG9mKGF3YWl0IHRoaXMucmVwb3NpdG9yeVNlcnZpY2UubGlzdENvbmZpZ3VyYXRpb25zKCkpO1xuICAgIHRoaXMuc2V0UGlwZSgnJyk7XG4gIH1cbn1cbiJdfQ==