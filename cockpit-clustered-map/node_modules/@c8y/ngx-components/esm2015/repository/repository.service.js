import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { InventoryService, IIdentified, InventoryBinaryService, IManagedObject } from '@c8y/client';
import { RepositoryType } from './repository.model';
let RepositoryService = class RepositoryService {
    constructor(inventory, inventoryBinary) {
        this.inventory = inventory;
        this.inventoryBinary = inventoryBinary;
    }
    listConfigurations() {
        return this.inventory.list({
            type: RepositoryType.CONFIGURATION,
            withTotalPages: true,
            pageSize: 50
        });
    }
    delete(entity) {
        // TODO: add cascading delete (will be done by Dawid)
        return this.inventory.delete(entity);
    }
    save(data, type, mo = {}) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            switch (type) {
                case RepositoryType.CONFIGURATION: {
                    Object.assign(mo, {
                        type: RepositoryType.CONFIGURATION,
                        configurationType: data.selected ? data.selected.configurationType : undefined,
                        name: data.versionOrName,
                        description: data.description,
                        deviceType: data.deviceType,
                        c8y_Global: {}
                    });
                    break;
                }
            }
            const existingUrl = mo.url;
            if (data.binary.url) {
                mo.url = data.binary.url;
            }
            else if (data.binary.file) {
                const response = yield this.inventoryBinary.create(data.binary.file, { c8y_Global: {} });
                mo.url = response.data.self;
            }
            if (mo.id) {
                return this.updateEntry(mo, existingUrl);
            }
            return this.createEntry(mo);
        });
    }
    createEntry(mo) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const binaryId = yield this.inventoryBinary.getIdFromUrl(mo.url);
            const newMo = yield this.inventory.create(mo);
            if (binaryId) {
                yield this.inventory.childAdditionsAdd(binaryId, newMo.data);
            }
            return newMo;
        });
    }
    updateEntry(mo, url) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const existingBinaryId = yield this.inventoryBinary.getIdFromUrl(url);
            const newBinaryId = yield this.inventoryBinary.getIdFromUrl(mo.url);
            if (existingBinaryId && existingBinaryId !== newBinaryId) {
                const id = this.inventoryBinary.getIdFromUrl(url);
                yield this.inventoryBinary.delete(id);
            }
            if (newBinaryId) {
                yield this.inventory.childAdditionsAdd(newBinaryId, mo);
            }
            return this.inventory.update(mo);
        });
    }
};
RepositoryService.ctorParameters = () => [
    { type: InventoryService },
    { type: InventoryBinaryService }
];
RepositoryService = tslib_1.__decorate([
    Injectable()
], RepositoryService);
export { RepositoryService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5LyIsInNvdXJjZXMiOlsicmVwb3NpdG9yeS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsc0JBQXNCLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3BHLE9BQU8sRUFBbUIsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHckUsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7SUFDNUIsWUFDVSxTQUEyQixFQUMzQixlQUF1QztRQUR2QyxjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUMzQixvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7SUFDOUMsQ0FBQztJQUVKLGtCQUFrQjtRQUNoQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1lBQ3pCLElBQUksRUFBRSxjQUFjLENBQUMsYUFBYTtZQUNsQyxjQUFjLEVBQUUsSUFBSTtZQUNwQixRQUFRLEVBQUUsRUFBRTtTQUNiLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBbUI7UUFDeEIscURBQXFEO1FBQ3JELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVLLElBQUksQ0FBQyxJQUFxQixFQUFFLElBQW9CLEVBQUUsS0FBOEIsRUFBRTs7WUFDdEYsUUFBUSxJQUFJLEVBQUU7Z0JBQ1osS0FBSyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7b0JBQ2pDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO3dCQUNoQixJQUFJLEVBQUUsY0FBYyxDQUFDLGFBQWE7d0JBQ2xDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLFNBQVM7d0JBQzlFLElBQUksRUFBRSxJQUFJLENBQUMsYUFBYTt3QkFDeEIsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXO3dCQUM3QixVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVU7d0JBQzNCLFVBQVUsRUFBRSxFQUFFO3FCQUNmLENBQUMsQ0FBQztvQkFDSCxNQUFNO2lCQUNQO2FBQ0Y7WUFFRCxNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDO1lBQzNCLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7Z0JBQ25CLEVBQUUsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7YUFDMUI7aUJBQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtnQkFDM0IsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUN6RixFQUFFLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQzdCO1lBRUQsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUNULE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLEVBQUUsV0FBVyxDQUFDLENBQUM7YUFDMUM7WUFDRCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDOUIsQ0FBQztLQUFBO0lBRWEsV0FBVyxDQUFDLEVBQTJCOztZQUNuRCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNqRSxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzlDLElBQUksUUFBUSxFQUFFO2dCQUNaLE1BQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzlEO1lBQ0QsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDO0tBQUE7SUFFYSxXQUFXLENBQUMsRUFBMkIsRUFBRSxHQUFHOztZQUN4RCxNQUFNLGdCQUFnQixHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdEUsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDcEUsSUFBSSxnQkFBZ0IsSUFBSSxnQkFBZ0IsS0FBSyxXQUFXLEVBQUU7Z0JBQ3hELE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNsRCxNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ3ZDO1lBQ0QsSUFBSSxXQUFXLEVBQUU7Z0JBQ2YsTUFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQzthQUN6RDtZQUNELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkMsQ0FBQztLQUFBO0NBQ0YsQ0FBQTs7WUFuRXNCLGdCQUFnQjtZQUNWLHNCQUFzQjs7QUFIdEMsaUJBQWlCO0lBRDdCLFVBQVUsRUFBRTtHQUNBLGlCQUFpQixDQXFFN0I7U0FyRVksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW52ZW50b3J5U2VydmljZSwgSUlkZW50aWZpZWQsIEludmVudG9yeUJpbmFyeVNlcnZpY2UsIElNYW5hZ2VkT2JqZWN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgUmVwb3NpdG9yeU1vZGFsLCBSZXBvc2l0b3J5VHlwZSB9IGZyb20gJy4vcmVwb3NpdG9yeS5tb2RlbCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSZXBvc2l0b3J5U2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgaW52ZW50b3J5OiBJbnZlbnRvcnlTZXJ2aWNlLFxuICAgIHByaXZhdGUgaW52ZW50b3J5QmluYXJ5OiBJbnZlbnRvcnlCaW5hcnlTZXJ2aWNlXG4gICkge31cblxuICBsaXN0Q29uZmlndXJhdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW52ZW50b3J5Lmxpc3Qoe1xuICAgICAgdHlwZTogUmVwb3NpdG9yeVR5cGUuQ09ORklHVVJBVElPTixcbiAgICAgIHdpdGhUb3RhbFBhZ2VzOiB0cnVlLFxuICAgICAgcGFnZVNpemU6IDUwXG4gICAgfSk7XG4gIH1cblxuICBkZWxldGUoZW50aXR5OiBJSWRlbnRpZmllZCkge1xuICAgIC8vIFRPRE86IGFkZCBjYXNjYWRpbmcgZGVsZXRlICh3aWxsIGJlIGRvbmUgYnkgRGF3aWQpXG4gICAgcmV0dXJuIHRoaXMuaW52ZW50b3J5LmRlbGV0ZShlbnRpdHkpO1xuICB9XG5cbiAgYXN5bmMgc2F2ZShkYXRhOiBSZXBvc2l0b3J5TW9kYWwsIHR5cGU6IFJlcG9zaXRvcnlUeXBlLCBtbzogUGFydGlhbDxJTWFuYWdlZE9iamVjdD4gPSB7fSkge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSBSZXBvc2l0b3J5VHlwZS5DT05GSUdVUkFUSU9OOiB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24obW8sIHtcbiAgICAgICAgICB0eXBlOiBSZXBvc2l0b3J5VHlwZS5DT05GSUdVUkFUSU9OLFxuICAgICAgICAgIGNvbmZpZ3VyYXRpb25UeXBlOiBkYXRhLnNlbGVjdGVkID8gZGF0YS5zZWxlY3RlZC5jb25maWd1cmF0aW9uVHlwZSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICBuYW1lOiBkYXRhLnZlcnNpb25Pck5hbWUsXG4gICAgICAgICAgZGVzY3JpcHRpb246IGRhdGEuZGVzY3JpcHRpb24sXG4gICAgICAgICAgZGV2aWNlVHlwZTogZGF0YS5kZXZpY2VUeXBlLFxuICAgICAgICAgIGM4eV9HbG9iYWw6IHt9XG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBleGlzdGluZ1VybCA9IG1vLnVybDtcbiAgICBpZiAoZGF0YS5iaW5hcnkudXJsKSB7XG4gICAgICBtby51cmwgPSBkYXRhLmJpbmFyeS51cmw7XG4gICAgfSBlbHNlIGlmIChkYXRhLmJpbmFyeS5maWxlKSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuaW52ZW50b3J5QmluYXJ5LmNyZWF0ZShkYXRhLmJpbmFyeS5maWxlLCB7IGM4eV9HbG9iYWw6IHt9IH0pO1xuICAgICAgbW8udXJsID0gcmVzcG9uc2UuZGF0YS5zZWxmO1xuICAgIH1cblxuICAgIGlmIChtby5pZCkge1xuICAgICAgcmV0dXJuIHRoaXMudXBkYXRlRW50cnkobW8sIGV4aXN0aW5nVXJsKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlRW50cnkobW8pO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBjcmVhdGVFbnRyeShtbzogUGFydGlhbDxJTWFuYWdlZE9iamVjdD4pIHtcbiAgICBjb25zdCBiaW5hcnlJZCA9IGF3YWl0IHRoaXMuaW52ZW50b3J5QmluYXJ5LmdldElkRnJvbVVybChtby51cmwpO1xuICAgIGNvbnN0IG5ld01vID0gYXdhaXQgdGhpcy5pbnZlbnRvcnkuY3JlYXRlKG1vKTtcbiAgICBpZiAoYmluYXJ5SWQpIHtcbiAgICAgIGF3YWl0IHRoaXMuaW52ZW50b3J5LmNoaWxkQWRkaXRpb25zQWRkKGJpbmFyeUlkLCBuZXdNby5kYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld01vO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyB1cGRhdGVFbnRyeShtbzogUGFydGlhbDxJTWFuYWdlZE9iamVjdD4sIHVybCkge1xuICAgIGNvbnN0IGV4aXN0aW5nQmluYXJ5SWQgPSBhd2FpdCB0aGlzLmludmVudG9yeUJpbmFyeS5nZXRJZEZyb21VcmwodXJsKTtcbiAgICBjb25zdCBuZXdCaW5hcnlJZCA9IGF3YWl0IHRoaXMuaW52ZW50b3J5QmluYXJ5LmdldElkRnJvbVVybChtby51cmwpO1xuICAgIGlmIChleGlzdGluZ0JpbmFyeUlkICYmIGV4aXN0aW5nQmluYXJ5SWQgIT09IG5ld0JpbmFyeUlkKSB7XG4gICAgICBjb25zdCBpZCA9IHRoaXMuaW52ZW50b3J5QmluYXJ5LmdldElkRnJvbVVybCh1cmwpO1xuICAgICAgYXdhaXQgdGhpcy5pbnZlbnRvcnlCaW5hcnkuZGVsZXRlKGlkKTtcbiAgICB9XG4gICAgaWYgKG5ld0JpbmFyeUlkKSB7XG4gICAgICBhd2FpdCB0aGlzLmludmVudG9yeS5jaGlsZEFkZGl0aW9uc0FkZChuZXdCaW5hcnlJZCwgbW8pO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5pbnZlbnRvcnkudXBkYXRlKG1vKTtcbiAgfVxufVxuIl19