import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
let ConfigurationListComponent = class ConfigurationListComponent {
    constructor() {
        this.configSelected = new EventEmitter();
        this.filterTerm = '';
    }
    showConfigurationTypePreview(config) {
        this.selectedConfig = config;
        this.configSelected.emit(config);
    }
    updatePipe(filterTerm) {
        this.filterTerm = filterTerm;
    }
};
tslib_1.__decorate([
    Input()
], ConfigurationListComponent.prototype, "items", void 0);
tslib_1.__decorate([
    Input()
], ConfigurationListComponent.prototype, "itemIcon", void 0);
tslib_1.__decorate([
    Input()
], ConfigurationListComponent.prototype, "emptyState", void 0);
tslib_1.__decorate([
    Input()
], ConfigurationListComponent.prototype, "isFilterEnabled", void 0);
tslib_1.__decorate([
    Output()
], ConfigurationListComponent.prototype, "configSelected", void 0);
ConfigurationListComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-device-configuration-list',
        template: "<div class=\"left-p-md bottom-p-xs\" *ngIf=\"isFilterEnabled\">\n  <c8y-filter [icon]=\"'search'\" (onSearch)=\"updatePipe($event)\"></c8y-filter>\n</div>\n\n<!-- EMPTY STATE -->\n<div class=\"c8y-empty-state text-left\" *ngIf=\"items?.length === 0\">\n  <h1 [c8yIcon]=\"emptyState.icon\"></h1>\n  <p>\n    <strong>{{ emptyState.title | translate }}</strong\n    ><br />\n    <small>{{ emptyState.text | translate }}</small>\n  </p>\n</div>\n\n<!-- CONFIGURATIONS AVAILABLE -->\n<div class=\"c8y-nav-stacked\">\n  <div\n    class=\"c8y-stacked-item flex-row\"\n    [class.active]=\"config === selectedConfig\"\n    *ngFor=\"let config of items | configurationFilterPipe: filterTerm\"\n    (click)=\"showConfigurationTypePreview(config)\"\n  >\n    <div class=\"list-item-icon\">\n      <i [c8yIcon]=\"itemIcon\"></i>\n    </div>\n    <div class=\"list-item-body text-truncate\">\n      <span>{{ config.name }}</span>\n      <span class=\"text-uppercase text-gray-light pull-right\">{{ config.deviceType }}</span>\n    </div>\n  </div>\n</div>\n\n<!-- for Carlos: config.configurationType to differentiate whether a config matches configuration type. -->\n"
    })
], ConfigurationListComponent);
export { ConfigurationListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWNvbmZpZ3VyYXRpb24vIiwic291cmNlcyI6WyJjb25maWd1cmF0aW9uLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBVXZFLElBQWEsMEJBQTBCLEdBQXZDLE1BQWEsMEJBQTBCO0lBSnZDO1FBU1ksbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBRXRELGVBQVUsR0FBVyxFQUFFLENBQUM7SUFVMUIsQ0FBQztJQVJDLDRCQUE0QixDQUFDLE1BQU07UUFDakMsSUFBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUM7UUFDN0IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELFVBQVUsQ0FBQyxVQUFrQjtRQUMzQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztJQUMvQixDQUFDO0NBQ0YsQ0FBQTtBQWhCVTtJQUFSLEtBQUssRUFBRTt5REFBcUM7QUFDcEM7SUFBUixLQUFLLEVBQUU7NERBQWtCO0FBQ2pCO0lBQVIsS0FBSyxFQUFFOzhEQUF5QztBQUN4QztJQUFSLEtBQUssRUFBRTttRUFBMEI7QUFDeEI7SUFBVCxNQUFNLEVBQUU7a0VBQTZDO0FBTDNDLDBCQUEwQjtJQUp0QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsK0JBQStCO1FBQ3pDLCtvQ0FBa0Q7S0FDbkQsQ0FBQztHQUNXLDBCQUEwQixDQWlCdEM7U0FqQlksMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIENvbmZpZ3VyYXRpb25MaXN0RW1wdHlTdGF0ZSxcbiAgU3VwcG9ydGVkQ29uZmlndXJhdGlvbkl0ZW1cbn0gZnJvbSAnLi9kZXZpY2UtY29uZmlndXJhdGlvbi5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1kZXZpY2UtY29uZmlndXJhdGlvbi1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbmZpZ3VyYXRpb24tbGlzdC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvbkxpc3RDb21wb25lbnQge1xuICBASW5wdXQoKSBpdGVtczogU3VwcG9ydGVkQ29uZmlndXJhdGlvbkl0ZW1bXTtcbiAgQElucHV0KCkgaXRlbUljb246IHN0cmluZztcbiAgQElucHV0KCkgZW1wdHlTdGF0ZTogQ29uZmlndXJhdGlvbkxpc3RFbXB0eVN0YXRlO1xuICBASW5wdXQoKSBpc0ZpbHRlckVuYWJsZWQ6IGJvb2xlYW47XG4gIEBPdXRwdXQoKSBjb25maWdTZWxlY3RlZCA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBzZWxlY3RlZENvbmZpZztcbiAgZmlsdGVyVGVybTogc3RyaW5nID0gJyc7XG5cbiAgc2hvd0NvbmZpZ3VyYXRpb25UeXBlUHJldmlldyhjb25maWcpOiB2b2lkIHtcbiAgICB0aGlzLnNlbGVjdGVkQ29uZmlnID0gY29uZmlnO1xuICAgIHRoaXMuY29uZmlnU2VsZWN0ZWQuZW1pdChjb25maWcpO1xuICB9XG5cbiAgdXBkYXRlUGlwZShmaWx0ZXJUZXJtOiBzdHJpbmcpIHtcbiAgICB0aGlzLmZpbHRlclRlcm0gPSBmaWx0ZXJUZXJtO1xuICB9XG59XG4iXX0=