import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { IEvent, IManagedObject, Realtime } from '@c8y/client';
import { DeviceConfigurationService } from './device-configuration.service';
import { gettext } from '@c8y/ngx-components';
let DeviceConfigurationComponent = class DeviceConfigurationComponent {
    constructor(route, deviceConfigurationService, realtime) {
        this.route = route;
        this.deviceConfigurationService = deviceConfigurationService;
        this.realtime = realtime;
        this.configSnapshot = {};
        this.deviceConfigurationService.repositoryConfigListUpdated.subscribe(() => tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.repositorySnapshot = undefined;
            this.repositorySnapshots = yield this.getSnapshotsFromRepository(this.device.type, this.configurationType);
        }));
    }
    ngOnInit() {
        this.device = this.route.snapshot.parent.data.contextData;
        this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({
            name: item
        }));
        this.repositorySnapshotsEmptyState = {
            icon: 'gears',
            title: gettext('No configurations available.'),
            text: gettext('Add configuration to configuration repository')
        };
        const eventsChannel = '/eventsWithChildren/' + this.device.id;
        this.eventsSubscription = this.realtime.observable(eventsChannel).subscribe(({ data }) => {
            this.updateConfigSnapshotOnEvent(data);
        });
    }
    onConfigTypeSelected(config) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.configurationType = undefined;
            this.repositorySnapshot = undefined;
            this.configSnapshot = {};
            const configEvent = yield this.deviceConfigurationService.getLatestConfigurationEvent(this.device.id, config.name);
            this.updateConfigSnapshotOnEvent(configEvent, config.name);
            this.configurationType = config.name;
            this.repositorySnapshots = yield this.getSnapshotsFromRepository(this.device.type, config.name);
        });
    }
    getSnapshotsFromRepository(deviceType, configurationType) {
        return this.deviceConfigurationService.getSnapshotsFromRepository(deviceType, configurationType);
    }
    updateConfigSnapshotOnEvent(event, configurationType) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const type = configurationType || this.configurationType;
            if (event && event.type === type) {
                this.configSnapshot = {
                    time: event.time,
                    name: event.text,
                    deviceType: this.device.deviceType,
                    configurationType: type
                };
                this.configSnapshot.binary = yield this.deviceConfigurationService.getEventConfigurationBinary(event);
            }
        });
    }
    onRepositoryConfigSelected(config) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.repositorySnapshot = {
                time: config.creationTime,
                name: config.name,
                binaryUrl: config.url,
                deviceType: config.deviceType,
                configurationType: config.configurationType
            };
            if (config.url) {
                this.repositorySnapshot.binary = yield this.deviceConfigurationService.getConfigurationBinaryFile(config.url);
            }
        });
    }
    ngOnDestroy() {
        this.eventsSubscription.unsubscribe();
    }
};
DeviceConfigurationComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: DeviceConfigurationService },
    { type: Realtime }
];
DeviceConfigurationComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-device-configuration',
        template: "<div class=\"card card--grid card--grid--fullpage grid__col--4-8 grid__row--6-6\">\n  <!-- DEVICE SUPPORTED CONFIGURATIONS -->\n  <div class=\"card--grid__inner-scroll\">\n    <div class=\"card-header separator\">\n      <h4 class=\"card-title\" translate>Configurations</h4>\n    </div>\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\"><span translate>Device-supported configurations</span></h5>\n    </div>\n    <div class=\"p-r-16\">\n      <c8y-device-configuration-list\n        [items]=\"supportedConfigurations\"\n        [itemIcon]=\"'gears'\"\n        (configSelected)=\"onConfigTypeSelected($event)\"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  <!-- CONFIGURATION PREVIEW -->\n  <div class=\"card--grid__inner-scroll bg-gray-lighter\">\n    <div class=\"card-header separator bg-gray-lighter hidden-xs hidden-sm\">\n      <h4>&nbsp;</h4>\n    </div>\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\"><span translate>Preview</span></h5>\n\n      <!-- EMPTY STATE -->\n      <div class=\"c8y-empty-state text-left\" *ngIf=\"!configurationType\">\n        <h1 [c8yIcon]=\"'file-text'\"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small translate>Select a configuration to preview</small>\n        </p>\n      </div>\n\n      <!-- PREVIEW AVAILABLE STATE -->\n      <c8y-device-configuration-preview\n        *ngIf=\"configurationType\"\n        [device]=\"device\"\n        [configurationType]=\"configurationType\"\n        [configSnapshot]=\"configSnapshot\"\n        [canSaveSnapshot]=\"true\"\n        [operationToTrigger]=\"'c8y_UploadConfigFile'\"\n        [actionButtonText]=\"'Get snapshot from device' | translate\"\n        [actionButtonIcon]=\"'download'\"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n\n  <!-- AVAILABLE SUPPORTED CONFIGURATIONS -->\n  <div class=\"card--grid__inner-scroll\">\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\" translate>Available supported configurations</h5>\n    </div>\n\n    <!-- EMPTY STATE -->\n    <div class=\"c8y-empty-state text-left\" *ngIf=\"!configurationType\">\n      <h1 [c8yIcon]=\"'gears'\"></h1>\n      <p>\n        <strong translate>No selection</strong><br />\n        <small translate>Select a configuration from the device-supported configuration list</small>\n      </p>\n    </div>\n    <div class=\"p-r-16\" *ngIf=\"configurationType\">\n      <c8y-device-configuration-list\n        [items]=\"repositorySnapshots\"\n        [itemIcon]=\"'file-text'\"\n        [emptyState]=\"repositorySnapshotsEmptyState\"\n        [isFilterEnabled]=\"true\"\n        (configSelected)=\"onRepositoryConfigSelected($event)\"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  <!-- CONFIGURATION PREVIEW -->\n  <div class=\"card--grid__inner-scroll bg-gray-lighter\">\n    <div class=\"card-block\">\n      <h5 class=\"legend form-block\" translate>Preview</h5>\n\n      <!-- EMPTY STATE -->\n\n      <div class=\"c8y-empty-state text-left\" *ngIf=\"!repositorySnapshot\">\n        <h1 [c8yIcon]=\"'file-text'\"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small *ngIf=\"!configurationType; else noSnapshot\" translate\n            >Select a configuration to preview</small\n          >\n          <ng-template #noSnapshot>\n            <small translate>Select the configuration you want to preview</small>\n          </ng-template>\n        </p>\n      </div>\n\n      <!-- CONFIGURATION SELECTED STATE -->\n      <c8y-device-configuration-preview\n        *ngIf=\"repositorySnapshot\"\n        [device]=\"device\"\n        [configurationType]=\"configurationType\"\n        [configSnapshot]=\"repositorySnapshot\"\n        [operationToTrigger]=\"'c8y_DownloadConfigFile'\"\n        [actionButtonText]=\"'Send configuration to device' | translate\"\n        [actionButtonIcon]=\"'upload'\"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n</div>\n"
    })
], DeviceConfigurationComponent);
export { DeviceConfigurationComponent };
//# sourceMappingURL=data:application/json;base64,