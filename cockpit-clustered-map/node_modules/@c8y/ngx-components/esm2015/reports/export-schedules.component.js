import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { ActionType } from './export-schedules.interface';
import { ReportsService } from './reports.service';
import { BsModalService, BsModalRef, ModalOptions } from 'ngx-bootstrap/modal';
import { ScheduleModalComponent } from './schedule-modal.component';
import { ConfirmModalComponent, Status, gettext } from '@c8y/ngx-components';
import { cloneDeep } from 'lodash-es';
import { CronService } from './cron.service';
import { TranslateService } from '@ngx-translate/core';
import { UserService } from '@c8y/client';
let ExportSchedulesComponent = class ExportSchedulesComponent {
    constructor(reportsService, bsModalService, cronService, translateService, userService) {
        this.reportsService = reportsService;
        this.bsModalService = bsModalService;
        this.cronService = cronService;
        this.translateService = translateService;
        this.userService = userService;
        this.scheduleList = [];
        this.initialSchedule = {
            timestamp: null,
            emailConfig: {
                to: [],
                cc: [],
                bcc: [],
                replyTo: '',
                text: this.translateService.instant(gettext('File with exported data can be downloaded from {tenant-domain}/inventory/binaries/{binaryId}.')),
                subject: ''
            },
            cronConfig: {
                minute: '0',
                hour: '0',
                day: '1',
                month: '1',
                weekday: '?'
            }
        };
        this.listClass = 'interact-list';
        this.sortReverse = false;
        this.isOpen = {};
        this.isEditMenuOpen = false;
        this.currentUserEmail = '';
        this.loadingStatus = {
            inProgress: false,
            done: false,
            error: false
        };
    }
    set exportId(exportId) {
        this._exportId = exportId;
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.getScheduleList(true);
            const currentUserEmail = yield this.getCurrentUserEmail();
            this.initialSchedule.emailConfig.to = currentUserEmail;
            this.exp = yield this.reportsService.getExport(this._exportId);
            this.initialSchedule.emailConfig.subject = this.translateService.instant(gettext('Export of "{{expName}}"'), { expName: this.exp.name });
        });
    }
    getCurrentUserEmail() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const { data } = yield this.userService.current();
            return data && data.email ? [data.email] : [];
        });
    }
    getScheduleList(withProgress) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (withProgress) {
                this.loadingStatus.inProgress = true;
            }
            this.scheduleList = yield this.reportsService.getScheduleList(this._exportId);
            if (withProgress) {
                this.loadingStatus.inProgress = false;
            }
        });
    }
    addSchedule() {
        this.openAddEditModal(this._exportId, this.initialSchedule, ActionType.CREATE);
    }
    editSchedule(schedule, event) {
        event.preventDefault();
        this.openAddEditModal(this._exportId, schedule, ActionType.EDIT);
    }
    duplicateSchedule(schedule, event) {
        event.preventDefault();
        this.openAddEditModal(this._exportId, schedule, ActionType.DUPLICATE);
    }
    openAddEditModal(exportId, schedule, actionType) {
        const payload = { actionType, exportId, schedule: cloneDeep(schedule) };
        const modalOptions = { class: 'modal-sm', initialState: payload };
        this.modalRef = this.bsModalService.show(ScheduleModalComponent, modalOptions);
        this.modalRef.content.emitter.subscribe((load) => this.getMessageFromModal(load));
    }
    getMessageFromModal(payload) {
        if (payload.success) {
            // refresh schedule list
            this.getScheduleList(false);
        }
    }
    removeSchedule(schedule, event) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            event.preventDefault();
            const subject = schedule.emailConfig.subject;
            const payload = {
                status: Status.DANGER,
                title: gettext('Delete schedule'),
                labels: { ok: gettext('Delete') },
                body: this.translateService.instant(gettext('You are about to delete the schedule "{{subject}}". Do you want to proceed?'), { subject })
            };
            const modalOptions = { initialState: payload };
            this.modalRef = this.bsModalService.show(ConfirmModalComponent, modalOptions);
            const confirm = yield this.modalRef.content.result;
            if (confirm) {
                const success = yield this.reportsService.deleteSchedule(schedule, this._exportId);
                if (success) {
                    // refresh schedule list
                    this.getScheduleList(false);
                }
            }
        });
    }
};
ExportSchedulesComponent.ctorParameters = () => [
    { type: ReportsService },
    { type: BsModalService },
    { type: CronService },
    { type: TranslateService },
    { type: UserService }
];
tslib_1.__decorate([
    Input()
], ExportSchedulesComponent.prototype, "exportId", null);
ExportSchedulesComponent = tslib_1.__decorate([
    Component({
        selector: 'export-schedules',
        template: "<div>\n  <div *ngIf=\"loadingStatus.inProgress\" class=\"flex-row\">\n    <div style=\"position: relative; min-height: 40px;min-width: 55px;\">\n      <div class=\"spinner\">\n        <div class=\"rect1\"></div>\n        <div class=\"rect2\"></div>\n        <div class=\"rect3\"></div>\n        <div class=\"rect4\"></div>\n        <div class=\"rect5\"></div>\n      </div>\n    </div>\n    <span translate>Retrieving schedules\u2026</span>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error\">\n    <div class=\"alert alert-warning\" translate>\n      Could not load schedules list.\n    </div>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error\">\n    <div class=\"c8y-empty-state text-center\" *ngIf=\"!scheduleList.length\">\n      <h1 c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></h1>\n      <h3 translate>No export schedules defined.</h3>\n    </div>\n\n    <div class=\"list-group\" *ngIf=\"scheduleList.length\">\n      <div\n        class=\"list-group-item flex-row pointer\"\n        *ngFor=\"let schedule of scheduleList\"\n        (click)=\"editSchedule(schedule, $event)\"\n      >\n        <div class=\"list-item-actions\" (click)=\"$event.stopPropagation()\">\n          <div class=\"settings dropdown\" dropdown>\n            <button\n              class=\"dropdown-toggle c8y-dropdown\"\n              dropdownToggle\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              title=\"{{ 'Actions' | translate }}\"\n            >\n              <i [c8yIcon]=\"'ellipsis-v'\"></i>\n            </button>\n            <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n              <li role=\"menuitem\">\n                <a\n                  href=\"\"\n                  title=\"{{ 'Edit schedule' | translate }}\"\n                  (click)=\"editSchedule(schedule, $event)\"\n                >\n                  <i [c8yIcon]=\"'pencil'\"></i> {{ 'Edit' | translate }}\n                </a>\n              </li>\n              <li role=\"menuitem\">\n                <a\n                  href=\"\"\n                  title=\"{{ 'Duplicate schedule' | translate }}\"\n                  (click)=\"duplicateSchedule(schedule, $event)\"\n                >\n                  <i [c8yIcon]=\"'copy'\"></i> {{ 'Duplicate' | translate }}\n                </a>\n              </li>\n              <li role=\"menuitem\">\n                <a\n                  href=\"\"\n                  title=\"{{ 'Delete schedule' | translate }}\"\n                  (click)=\"removeSchedule(schedule, $event)\"\n                >\n                  <i [c8yIcon]=\"'trash'\"></i> {{ 'Delete' | translate }}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"list-item-icon\">\n          <i c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></i>\n        </div>\n        <div class=\"list-item-body flex-row\">\n          <div class=\"col-sm-6\">\n            <div class=\"text-truncate\" title=\"{{ schedule.emailConfig.subject }}\">\n              {{ schedule.emailConfig.subject }}\n            </div>\n          </div>\n          <div class=\"col-sm-6\">\n            <div class=\"flex-row\" style=\"align-items: baseline;\">\n              <i c8yIcon=\"calendar\" class=\"text-muted m-r-4\"></i>\n              <small class=\"smart-rule-information text-muted\">\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 2\" translate>\n                  Hourly: {{ schedule.cronConfig.minute | number: '2.0-0' }} minute(s) past the\n                  hour.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 3\" translate>\n                  Daily: at {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 4\" translate>\n                  Weekly: {{ cronService.getWeekDayName(schedule.cronConfig) }}, at\n                  {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 5\" translate>\n                  Monthly: {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the month,\n                  at {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n                <span *ngIf=\"cronService.getBase(schedule.cronConfig) === 6\" translate>\n                  Yearly: {{ cronService.getMonthName(schedule.cronConfig) }},\n                  {{ cronService.getMonthDayName(schedule.cronConfig) }} day of the month, at\n                  {{ schedule.cronConfig.hour | number: '2.0-0' }}:{{\n                    schedule.cronConfig.minute | number: '2.0-0'\n                  }}.\n                </span>\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button\n    type=\"button\"\n    class=\"btn-add-block m-t-16\"\n    title=\"{{ 'Add schedule' | translate }}\"\n    (click)=\"addSchedule()\"\n  >\n    <i [c8yIcon]=\"'plus-square'\"></i> {{ 'Add schedule' | translate }}\n  </button>\n</div>\n"
    })
], ExportSchedulesComponent);
export { ExportSchedulesComponent };
//# sourceMappingURL=data:application/json;base64,