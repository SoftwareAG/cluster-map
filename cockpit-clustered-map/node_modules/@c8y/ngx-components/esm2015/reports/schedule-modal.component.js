import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { ActionType } from './export-schedules.interface';
import { ReportsService } from './reports.service';
import { CronService } from './cron.service';
import { cloneDeep } from 'lodash';
import { gettext } from '@c8y/ngx-components';
let ScheduleModalComponent = class ScheduleModalComponent {
    constructor(modalRef, reportsService, cronService) {
        this.modalRef = modalRef;
        this.reportsService = reportsService;
        this.cronService = cronService;
        this.emitter = new EventEmitter();
        this.ActionType = ActionType;
        this.multiEmailPattern = /^([a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\.[a-z0-9-]+)*,?)*$/i;
        this.singleEmailPattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/;
        this.cronExpression = '* * * * *';
        this.validCron = false;
        this.emitterPayload = {
            success: false,
            message: ''
        };
        this.placeholdersInfo = gettext('Available placeholders: {tenant-domain}, {host}, {binaryId}. Whole link to downloadable file is: {tenant-domain}/inventory/binaries/{binaryId}.');
        this.savingStatus = {
            inProgress: false,
            done: false,
            error: false
        };
    }
    ngOnInit() {
        this.oldSchedule = cloneDeep(this.schedule);
        this.populateEmailFieldsFromSchedule(this.schedule);
        this.cronExpression = this.cronService.generateCron(this.schedule.cronConfig);
        this.validCron = this.cronService.validateModels(this.cronService.getBase(this.schedule.cronConfig), this.schedule.cronConfig);
    }
    populateEmailFieldsFromSchedule(schedule) {
        if (schedule.emailConfig.to && schedule.emailConfig.to.length) {
            this.emailTo = schedule.emailConfig.to.toString();
        }
        if (schedule.emailConfig.cc && schedule.emailConfig.cc.length) {
            this.emailCc = schedule.emailConfig.cc.toString();
        }
        if (schedule.emailConfig.bcc && schedule.emailConfig.bcc.length) {
            this.emailBcc = schedule.emailConfig.bcc.toString();
        }
        if (schedule.emailConfig.replyTo) {
            this.emailReplyTo = schedule.emailConfig.replyTo;
        }
        if (schedule.emailConfig.subject) {
            this.emailSubject = schedule.emailConfig.subject;
        }
        if (schedule.emailConfig.text) {
            this.emailText = schedule.emailConfig.text;
        }
    }
    save() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.populateScheduleFromCronExpression();
            this.populateScheduleFromEmailFields();
            this.savingStatus.inProgress = true;
            let success = false;
            if (this.actionType === ActionType.EDIT) {
                success = yield this.reportsService.updateSchedule(this.oldSchedule, this.schedule, this.exportId);
            }
            else {
                const date = new Date();
                const timestamp = date.getTime();
                this.schedule.timestamp = timestamp;
                success = yield this.reportsService.addSchedule(this.schedule, this.exportId);
            }
            if (success) {
                this.modalRef.hide();
                // signal to the parent component to update list
                this.emitterPayload.success = true;
                this.emitter.emit(this.emitterPayload);
            }
            this.savingStatus.inProgress = false;
        });
    }
    cancel() {
        this.modalRef.hide();
    }
    getCron(cron) {
        this.validCron = cron.valid;
        if (cron.valid) {
            this.cronExpression = cron.cron;
        }
    }
    populateScheduleFromCronExpression() {
        this.schedule.cronConfig = this.cronService.generateCronConfig(this.cronExpression);
    }
    convertStringOfEmailsToArray(stringOfEmails) {
        const arr = [];
        if (stringOfEmails) {
            const parts = stringOfEmails.split(',');
            parts.forEach(item => {
                if (item) {
                    arr.push(item);
                }
            });
        }
        return arr;
    }
    populateScheduleFromEmailFields() {
        this.schedule.emailConfig.to = this.emailTo
            ? this.convertStringOfEmailsToArray(this.emailTo)
            : null;
        this.schedule.emailConfig.cc = this.emailCc
            ? this.convertStringOfEmailsToArray(this.emailCc)
            : null;
        this.schedule.emailConfig.bcc = this.emailBcc
            ? this.convertStringOfEmailsToArray(this.emailBcc)
            : null;
        this.schedule.emailConfig.replyTo = this.emailReplyTo;
        this.schedule.emailConfig.subject = this.emailSubject;
        this.schedule.emailConfig.text = this.emailText;
    }
};
ScheduleModalComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: ReportsService },
    { type: CronService }
];
tslib_1.__decorate([
    Output()
], ScheduleModalComponent.prototype, "emitter", void 0);
ScheduleModalComponent = tslib_1.__decorate([
    Component({
        selector: 'schedule-modal',
        template: "<div class=\"modal-header text-center bg-primary\">\n  <header class=\"text-white\">\n    <div style=\"font-size: 62px;\">\n      <span c8yIcon=\"c8y-report\"></span>\n    </div>\n    <h4 class=\"text-uppercase\" style=\"margin:0; letter-spacing: 0.15em;\">\n      <span *ngIf=\"actionType === ActionType.CREATE\" translate>New export schedule</span>\n      <span *ngIf=\"actionType === ActionType.EDIT\" translate>Edit export schedule</span>\n      <span *ngIf=\"actionType === ActionType.DUPLICATE\" translate>Duplicate export schedule</span>\n    </h4>\n  </header>\n</div>\n\n<div class=\"modal-body\">\n  <p class=\"lead text-center p-t-24\" style=\"margin-bottom: 0;\" translate>\n    On schedule send export via email\n  </p>\n</div>\n<div class=\"modal-inner-scroll smart-rule-control\">\n  <form #scheduleForm=\"ngForm\" class=\"edit-smart-rule-details\">\n    <div class=\"list-group\">\n      <div class=\"list-group-item bg-gray-white\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light\">1</span\n          ><strong class=\"p-l-4\" translate>Frequency</strong>\n        </div>\n        <div class=\"p-t-4\">\n          <div class=\"form-group\">\n            <cron [cronIn]=\"cronExpression\" (emitter)=\"getCron($event)\" name=\"cron\"></cron>\n          </div>\n        </div>\n      </div>\n      <div class=\"list-group-item\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light\">2</span>&nbsp;<strong translate>Send email</strong>\n        </div>\n        <div class=\"form-horizontal p-t-16\">\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class=\"control-label col-sm-3\" translate>Send to</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  name=\"to\"\n                  [(ngModel)]=\"emailTo\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  required\n                  [pattern]=\"multiEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class=\"control-label col-sm-3\" translate>CC</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"cc\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  [(ngModel)]=\"emailCc\"\n                  [pattern]=\"multiEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em translate>Enter one or more valid email addresses, separated with a comma.</em>\n            </div>\n            <label class=\"control-label col-sm-3\" translate>BCC</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"bcc\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  [(ngModel)]=\"emailBcc\"\n                  [pattern]=\"multiEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_multiEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label col-sm-3\" translate>Reply to</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"replyTo\"\n                  placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                  [(ngModel)]=\"emailReplyTo\"\n                  [pattern]=\"singleEmailPattern\"\n                />\n                <c8y-messages>\n                  <c8y-message\n                    name=\"pattern\"\n                    [text]=\"reportsService.ERROR_MESSAGES.pattern_singleEmail\"\n                  ></c8y-message>\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label col-sm-3\" translate>Subject</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <input\n                  type=\"text\"\n                  class=\"form-control span\"\n                  name=\"subject\"\n                  [(ngModel)]=\"emailSubject\"\n                  placeholder=\"{{ 'e.g. Daily report' | translate }}\"\n                  required\n                />\n              </c8y-form-group>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"text-muted col-sm-12 p-b-4\" style=\"display: flex; align-items: baseline;\">\n              <i [c8yIcon]=\"'info-circle'\" class=\"text-info m-r-8\"></i>\n              <em>{{ placeholdersInfo | translate }}</em>\n            </div>\n            <label class=\"col-sm-3 control-label\" translate>Message</label>\n            <div class=\"col-sm-9\">\n              <c8y-form-group>\n                <textarea\n                  class=\"form-control\"\n                  name=\"text\"\n                  [(ngModel)]=\"emailText\"\n                  placeholder=\"{{ 'Message' | translate }}\"\n                  required\n                ></textarea>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button class=\"btn btn-default\" (click)=\"cancel()\" title=\"{{ 'Cancel' | translate }}\" translate>\n    Cancel\n  </button>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"save()\"\n    [ngClass]=\"{ ' btn-pending ': savingStatus.inProgress }\"\n    [disabled]=\"!validCron || !scheduleForm.form.valid\"\n  >\n    <span *ngIf=\"!savingStatus.inProgress\">\n      <span *ngIf=\"actionType === ActionType.CREATE\" title=\"{{ 'Create' | translate }}\" translate\n        >Create</span\n      >\n      <span *ngIf=\"actionType === ActionType.EDIT\" title=\"{{ 'Save' | translate }}\" translate\n        >Save</span\n      >\n      <span\n        *ngIf=\"actionType === ActionType.DUPLICATE\"\n        title=\"{{ 'Duplicate' | translate }}\"\n        translate\n        >Duplicate</span\n      >\n    </span>\n    <span *ngIf=\"savingStatus.inProgress\" title=\"{{ 'Saving' | translate }}\u2026\"\n      >{{ 'Saving' | translate }}\u2026</span\n    >\n  </button>\n</div>\n"
    })
], ScheduleModalComponent);
export { ScheduleModalComponent };
//# sourceMappingURL=data:application/json;base64,