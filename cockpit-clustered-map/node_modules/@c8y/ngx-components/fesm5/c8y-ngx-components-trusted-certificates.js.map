{"version":3,"file":"c8y-ngx-components-trusted-certificates.js","sources":["ng://@c8y/ngx-components/trusted-certificates/add-trusted-certificate.component.ts","ng://@c8y/ngx-components/trusted-certificates/trusted-certificates.component.ts","ng://@c8y/ngx-components/trusted-certificates/trusted-certificates.guard.ts","ng://@c8y/ngx-components/trusted-certificates/trusted-certificates-navigation.factory.ts","ng://@c8y/ngx-components/trusted-certificates/trusted-certificates.module.ts","ng://@c8y/ngx-components/trusted-certificates/c8y-ngx-components-trusted-certificates.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ITrustedCertificate, TrustedCertificateService } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-trusted-certificate',\n  templateUrl: './add-trusted-certificate.component.html'\n})\nexport class AddTrustedCertificateComponent {\n  AUTO_REGISTRATION_POPOVER = gettext('All devices with credentials signed by this certificate will be able to communicate with the platform without a prior registration.');\n  trustedCertificate: Partial<ITrustedCertificate> = {\n    status: 'DISABLED'\n  };\n\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private trustedCertificateService: TrustedCertificateService,\n    private alertService: AlertService\n  ) {}\n\n  async save() {\n    try {\n      await this.trustedCertificateService.create(this.trustedCertificate);\n      this.alertService.success(gettext('Certificate saved.'));\n      this._save();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { AddTrustedCertificateComponent } from './add-trusted-certificate.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ITrustedCertificate, TrustedCertificateService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { pipe, BehaviorSubject, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'c8y-trusted-certificates',\n  templateUrl: './trusted-certificates.component.html',\n})\nexport class TrustedCertificatesComponent implements OnInit {\n  reloading: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  reload: BehaviorSubject<void> = new BehaviorSubject(null);\n  trustedCertificates: Observable<IResultList<ITrustedCertificate>> = this.reload.pipe(\n    tap(() => this.reloading.next(true)),\n    switchMap(() => this.getTrustedCertificates()),\n    tap(() => this.reloading.next(false))\n  );\n  sortByExpirationDateAsc = pipe(\n    tap((results: ITrustedCertificate[]) => {\n      return results.sort((n1, n2) => n1.notAfter.localeCompare(n2.notAfter));\n    })\n  );\n\n  constructor(\n    private bsModal: BsModalService,\n    private alertService: AlertService,\n    private trustedCertificateService: TrustedCertificateService,\n    private modalService: ModalService,\n    private translateService: TranslateService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadTrustedCertificates();\n  }\n\n  async loadTrustedCertificates() {\n    this.reload.next();\n  }\n\n  getTrustedCertificates() {\n    const filter: object = {\n      pageSize: 1000,\n      withTotalPages: true,\n    };\n    return this.trustedCertificateService.list(filter);\n  }\n\n  async addTrustedCertificate() {\n    const modal = this.bsModal.show(AddTrustedCertificateComponent, {\n      class: 'modal-sm',\n      ignoreBackdropClick: true,\n    }).content as AddTrustedCertificateComponent;\n    try {\n      await modal.result;\n      modal.close();\n      this.reload.next();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  async deleteTrustedCertificate(certificate, index) {\n    const title = gettext('Delete trusted certificate');\n    const confirmationText = gettext(\n      'You are about to delete a trusted certificate \"{{ certificateName }}\".'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const certificateName = certificate.name;\n    const body = [\n      this.translateService.instant(confirmationText, {\n        certificateName,\n      }),\n      this.translateService.instant(finalQuestion),\n    ].join(' ');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, { ok: gettext('Delete') });\n      await this.trustedCertificateService.delete(certificate.fingerprint);\n      this.alertService.success(gettext('Certificate deleted.'));\n      this.reload.next();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateCertificate(\n    trustedCertificate: ITrustedCertificate,\n    updatingPart: Partial<ITrustedCertificate>\n  ) {\n    try {\n      await this.trustedCertificateService.update({\n        fingerprint: trustedCertificate.fingerprint,\n        ...updatingPart,\n      });\n      this.alertService.success(gettext('Certificate saved.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  highlightDependingOnExpirationStatus(item: ITrustedCertificate) {\n    const warningOffset = 24 * 60 * 60 * 1000 * 90; // 90 days\n    const todayTimestamp = new Date().getTime();\n    const warningTimestamp = new Date().getTime() + warningOffset;\n    const notAfterTimestamp = new Date(item.notAfter).getTime();\n    const expired = notAfterTimestamp < todayTimestamp;\n    const expiresInLessThan90Days = notAfterTimestamp < warningTimestamp;\n    if (expired) {\n      return 'text-danger';\n    }\n    if (expiresInLessThan90Days) {\n      return 'text-warning';\n    }\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { OptionsService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class TrustedCertificatesGuard implements CanActivate {\n  private isFeatureEnabledCache: boolean;\n  constructor(private optionsService: OptionsService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.isFeatureEnabled();\n  }\n\n  async isFeatureEnabled() {\n    if (this.isFeatureEnabledCache === undefined) {\n      this.isFeatureEnabledCache = (await this.optionsService.getTenantOption(\n        'oauth.internal.token',\n        'trusted-certificates.enabled',\n        false\n      )) as boolean;\n    }\n    return this.isFeatureEnabledCache;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\nimport { TenantOptionsService } from '@c8y/client';\nimport { TrustedCertificatesGuard } from './trusted-certificates.guard';\n\n@Injectable()\nexport class TrustedCertificatesNavigationFactory implements NavigatorNodeFactory {\n  nav: NavigatorNode[] = [];\n\n  constructor(\n    private tenantOptionsService: TenantOptionsService,\n    private trustedCertificatesGuard: TrustedCertificatesGuard\n  ) {}\n  async get() {\n    const isFeatureEnabled = await this.trustedCertificatesGuard.isFeatureEnabled();\n    if (isFeatureEnabled && this.nav.length === 0) {\n      this.nav.push(\n        new NavigatorNode({\n          label: gettext('Trusted certificates'),\n          icon: 'certificate',\n          path: '/trusted-certificates',\n          parent: gettext('Management'),\n          priority: 100\n        })\n      );\n    }\n    return this.nav;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { CommonModule, CoreModule, HOOK_NAVIGATOR_NODES } from '@c8y/ngx-components';\nimport { TrustedCertificatesComponent } from './trusted-certificates.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AddTrustedCertificateComponent } from './add-trusted-certificate.component';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TrustedCertificatesNavigationFactory } from './trusted-certificates-navigation.factory';\nimport { TrustedCertificatesGuard } from './trusted-certificates.guard';\n\nconst trustedCertificatesRoutes: Route[] = [\n  {\n    path: 'trusted-certificates',\n    component: TrustedCertificatesComponent,\n    canActivate: [TrustedCertificatesGuard]\n  }\n];\n\n@NgModule({\n  declarations: [TrustedCertificatesComponent, AddTrustedCertificateComponent],\n  exports: [],\n  imports: [\n    CoreModule,\n    CommonModule,\n    RouterModule.forRoot(trustedCertificatesRoutes, { useHash: true }),\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    ReactiveFormsModule,\n    ButtonsModule,\n    PopoverModule\n  ],\n  entryComponents: [TrustedCertificatesComponent, AddTrustedCertificateComponent],\n  providers: [\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: TrustedCertificatesNavigationFactory,\n      multi: true\n    },\n    TrustedCertificatesGuard\n  ]\n})\nexport class TrustedCertificatesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {AddTrustedCertificateComponent as ɵb} from './add-trusted-certificate.component';\nexport {TrustedCertificatesNavigationFactory as ɵd} from './trusted-certificates-navigation.factory';\nexport {TrustedCertificatesComponent as ɵa} from './trusted-certificates.component';\nexport {TrustedCertificatesGuard as ɵc} from './trusted-certificates.guard';"],"names":[],"mappings":"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"}