{"version":3,"file":"c8y-ngx-components-repository.js","sources":["ng://@c8y/ngx-components/repository/repository.model.ts","ng://@c8y/ngx-components/repository/repository.service.ts","ng://@c8y/ngx-components/repository/configuration/configuration-new-modal.component.ts","ng://@c8y/ngx-components/repository/configuration/configuration-list.component.ts","ng://@c8y/ngx-components/repository/repository-navigation-factory.ts","ng://@c8y/ngx-components/repository/repository.module.ts","ng://@c8y/ngx-components/repository/c8y-ngx-components-repository.ts"],"sourcesContent":["import { IManagedObject } from '@c8y/client';\n\nexport enum RepositoryType {\n  FIRMWARE = 'c8y_Firmware',\n  SOFTWARE = 'c8y_Software',\n  CONFIGURATION = 'c8y_ConfigurationDump'\n}\n\nexport const REPOSITORY_BINARY_TYPE = {\n  [RepositoryType.SOFTWARE]: 'c8y_SoftwareBinary',\n  [RepositoryType.FIRMWARE]: 'c8y_FirmwareBinary',\n  [RepositoryType.CONFIGURATION]: 'c8y_ConfigurationDumpBinary'\n};\n\nexport interface RepositoryModal {\n  selected: { id: string; name?: string; [key: string]: any };\n  versionOrName: string;\n  description: string;\n  deviceType?: string;\n  binary: {\n    file?: File;\n    url?: string;\n  };\n}\n\nexport interface RepositoryCategory extends Partial<IManagedObject> {\n  type: string;\n  description: string;\n  c8y_Filter: {\n    type: string;\n  };\n}\n\nexport interface FirmwareBinary extends Partial<IManagedObject> {\n  type: string;\n  c8y_Firmware: {\n    version: string;\n    url: string;\n    childAssets: any[];\n  };\n}\n\nexport interface FirmwarePatchBinary extends FirmwareBinary {\n  c8y_Patch: {\n    dependency: string;\n  };\n}\n\nexport interface SoftwareBinary extends Partial<IManagedObject> {\n  type: string;\n  c8y_Software: {\n    version: string;\n    url: string;\n    childAssets: any[];\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { InventoryService, IIdentified, InventoryBinaryService, IManagedObject } from '@c8y/client';\nimport { RepositoryModal, RepositoryType } from './repository.model';\n\n@Injectable()\nexport class RepositoryService {\n  constructor(\n    private inventory: InventoryService,\n    private inventoryBinary: InventoryBinaryService\n  ) {}\n\n  listConfigurations() {\n    return this.inventory.list({\n      type: RepositoryType.CONFIGURATION,\n      withTotalPages: true,\n      pageSize: 50\n    });\n  }\n\n  delete(entity: IIdentified) {\n    // TODO: add cascading delete (will be done by Dawid)\n    return this.inventory.delete(entity);\n  }\n\n  async save(data: RepositoryModal, type: RepositoryType, mo: Partial<IManagedObject> = {}) {\n    switch (type) {\n      case RepositoryType.CONFIGURATION: {\n        Object.assign(mo, {\n          type: RepositoryType.CONFIGURATION,\n          configurationType: data.selected ? data.selected.configurationType : undefined,\n          name: data.versionOrName,\n          description: data.description,\n          deviceType: data.deviceType,\n          c8y_Global: {}\n        });\n        break;\n      }\n    }\n\n    const existingUrl = mo.url;\n    if (data.binary.url) {\n      mo.url = data.binary.url;\n    } else if (data.binary.file) {\n      const response = await this.inventoryBinary.create(data.binary.file, { c8y_Global: {} });\n      mo.url = response.data.self;\n    }\n\n    if (mo.id) {\n      return this.updateEntry(mo, existingUrl);\n    }\n    return this.createEntry(mo);\n  }\n\n  private async createEntry(mo: Partial<IManagedObject>) {\n    const binaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    const newMo = await this.inventory.create(mo);\n    if (binaryId) {\n      await this.inventory.childAdditionsAdd(binaryId, newMo.data);\n    }\n    return newMo;\n  }\n\n  private async updateEntry(mo: Partial<IManagedObject>, url) {\n    const existingBinaryId = await this.inventoryBinary.getIdFromUrl(url);\n    const newBinaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    if (existingBinaryId && existingBinaryId !== newBinaryId) {\n      const id = this.inventoryBinary.getIdFromUrl(url);\n      await this.inventoryBinary.delete(id);\n    }\n    if (newBinaryId) {\n      await this.inventory.childAdditionsAdd(newBinaryId, mo);\n    }\n    return this.inventory.update(mo);\n  }\n}\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IManagedObject } from '@c8y/client';\nimport { AlertService, DroppedFile, gettext } from '@c8y/ngx-components';\nimport { uniqBy } from 'lodash';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RepositoryModal, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-configuration-new-modal',\n  templateUrl: './configuration-new-modal.component.html'\n})\nexport class ConfigurationNewModalComponent implements RepositoryModal {\n  selected: { id: string; name: string };\n  versionOrName: string;\n  description: string;\n  binary: { file?: File; url?: string } = {\n    file: undefined,\n    url: undefined\n  };\n  deviceType: string;\n\n  pattern: string = '';\n  filterPipe;\n  configs;\n  mo: Partial<IManagedObject> = {};\n  isLoading = false;\n\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  private _save;\n  private _cancel;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private bsModalRef: BsModalRef,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.configs = await this.repositoryService.listConfigurations();\n    this.setPipe('');\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: []) => uniqBy(data, 'configurationType')),\n      map((data: []) => {\n        return data.filter(\n          (mo: any) =>\n            mo.configurationType &&\n            mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  uploadFile(dropped: DroppedFile[], ngForm: NgForm) {\n    this.binary.file = dropped[0].file;\n    this.binary.url = undefined;\n    ngForm.form.markAsDirty();\n  }\n\n  async save() {\n    try {\n      this.isLoading = true;\n      const { selected, versionOrName, description, binary, deviceType } = this;\n      await this.repositoryService.save(\n        { selected, versionOrName, description, binary, deviceType },\n        RepositoryType.CONFIGURATION,\n        this.mo\n      );\n      this.alert.success(\n        this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.')\n      );\n      this.bsModalRef.hide();\n      this._save();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n      this._cancel();\n    } finally {\n      this.isLoading = false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { Observable, pipe, Subject, timer, of } from 'rxjs';\nimport { debounce, distinctUntilChanged, map } from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfigurationNewModalComponent } from './configuration-new-modal.component';\nimport { RepositoryModal } from '../repository.model';\n\n@Component({\n  selector: 'c8y-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent implements OnInit {\n  configurations$: Observable<IResultList<IManagedObject>>;\n  filterPipe;\n  filterChange$ = new Subject();\n  filterTerm = '';\n  private readonly CARRIAGE_RETURN_KEY = 13;\n  private readonly CARRIAGE_RETURN_CODE = 'Enter';\n  private readonly DELETED_SUCCESS_MSG = gettext('Configuration deleted.');\n\n  constructor(\n    private alert: AlertService,\n    private repositoryService: RepositoryService,\n    private modalService: BsModalService\n  ) {}\n\n  async ngOnInit() {\n    await this.reset();\n\n    this.filterChange$\n      .pipe(\n        debounce((event: any) =>\n          event.code === this.CARRIAGE_RETURN_CODE || event.keyCode === this.CARRIAGE_RETURN_KEY\n            ? timer(10)\n            : timer(300)\n        ),\n        map((e: any) => e.target.value),\n        distinctUntilChanged()\n      )\n      .subscribe(filterTerm => {\n        this.filterTerm = filterTerm;\n        this.setPipe(filterTerm);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.filterChange$.complete();\n  }\n\n  async add() {\n    try {\n      await (this.modalService.show(ConfigurationNewModalComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true\n      }).content as ConfigurationNewModalComponent).result;\n      await this.reset();\n    } catch (ex) {\n      // inteded empty\n    }\n  }\n\n  async edit(configuration: IManagedObject) {\n    try {\n      const modal = this.modalService.show(ConfigurationNewModalComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true,\n        initialState: {\n          selected: { id: configuration.id, configurationType: configuration.configurationType },\n          versionOrName: configuration.name,\n          deviceType: configuration.deviceType,\n          description: configuration.description,\n          binary: { url: configuration.url }\n        } as RepositoryModal\n      }).content as ConfigurationNewModalComponent;\n      modal.mo = configuration;\n      await modal.result;\n      await this.reset();\n    } catch (ex) {\n      // inteded empty\n    }\n  }\n\n  async delete(configuration: IManagedObject) {\n    try {\n      await this.repositoryService.delete(configuration);\n      this.alert.success(this.DELETED_SUCCESS_MSG);\n      await this.reset();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n    }\n  }\n\n  setPipe(filterTerm: string) {\n    this.filterPipe = pipe(\n      map((data: []) =>\n        filterTerm.trim().length === 0\n          ? data\n          : data.filter(\n              (mo: IManagedObject) =>\n                this.filterContainString(mo.name, filterTerm) ||\n                this.filterContainString(mo.configurationType, filterTerm)\n            )\n      )\n    );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n\n  private async reset() {\n    this.filterTerm = '';\n    this.configurations$ = of(await this.repositoryService.listConfigurations());\n    this.setPipe('');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory, OptionsService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class RepositoryNavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  constructor(private optionsService: OptionsService) {}\n\n  async get() {\n    const betaFlag = localStorage.getItem('c8y_beta_status');\n    if (betaFlag === 'all' && this.navs.length === 0) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Configuration repository'),\n          path: 'configuration-new',\n          icon: 'gears',\n          parent: gettext('Management'),\n          priority: 800\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ONCE_ROUTE,\n  Route\n} from '@c8y/ngx-components';\nimport { ConfigurationListComponent } from './configuration/configuration-list.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { RepositoryService } from './repository.service';\nimport { ConfigurationNewModalComponent } from './configuration/configuration-new-modal.component';\nimport { RepositoryNavigationFactory } from './repository-navigation-factory';\n\n@NgModule({\n  imports: [CoreModule, TooltipModule],\n  exports: [],\n  entryComponents: [ConfigurationListComponent, ConfigurationNewModalComponent],\n  declarations: [ConfigurationListComponent, ConfigurationNewModalComponent],\n  providers: [\n    RepositoryService,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: RepositoryNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: [\n        {\n          path: 'configuration-new',\n          component: ConfigurationListComponent\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class RepositoryModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ConfigurationListComponent as ɵa} from './configuration/configuration-list.component';\nexport {ConfigurationNewModalComponent as ɵc} from './configuration/configuration-new-modal.component';\nexport {RepositoryNavigationFactory as ɵd} from './repository-navigation-factory';\nexport {RepositoryService as ɵb} from './repository.service';"],"names":[],"mappings":"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"}