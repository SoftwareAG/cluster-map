{"version":3,"file":"c8y-ngx-components-assets-navigator.js","sources":["ng://@c8y/ngx-components/assets-navigator/asset-node-config.model.ts","ng://@c8y/ngx-components/assets-navigator/load-more-node.ts","ng://@c8y/ngx-components/assets-navigator/group-fragment.model.ts","ng://@c8y/ngx-components/assets-navigator/asset-node.ts","ng://@c8y/ngx-components/assets-navigator/dynamic-group-node.ts","ng://@c8y/ngx-components/assets-navigator/group.service.ts","ng://@c8y/ngx-components/assets-navigator/asset-node.service.ts","ng://@c8y/ngx-components/assets-navigator/asset-node.factory.ts","ng://@c8y/ngx-components/assets-navigator/assets-navigator.module.ts","ng://@c8y/ngx-components/assets-navigator/c8y-ngx-components-assets-navigator.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\nexport const ASSET_NAVIGATOR_CONFIG = new InjectionToken<AssetNavigatorConfig>('AssetNodeConfig');\r\n\r\nexport interface AssetNavigatorConfig {\r\n  smartGroups?: boolean;\r\n  openOnStart?: boolean;\r\n  rootNodePriority?: number;\r\n  disableDragAndDrop?: boolean;\r\n}\r\n","import { NavigatorNode, gettext } from '@c8y/ngx-components';\n\nexport class LoadMoreNode extends NavigatorNode {\n  priority = -Infinity;\n  label = gettext('Load more');\n  icon = 'plus';\n  droppable = true;\n}\n","export enum GroupFragment {\n  groupType = 'c8y_DeviceGroup',\n  subGroupType = 'c8y_DeviceSubgroup',\n  groupFragmentType = 'c8y_IsDeviceGroup',\n  dataBrokerSourceFragment = 'c8y_BrokerSource',\n  dynamicGroupType = 'c8y_DynamicGroup',\n  dynamicGroupFragment = 'c8y_IsDynamicGroup',\n  dynamicGroupColumnConfig = 'c8y_UIDeviceFilterConfig',\n  dynamicGroupQueryString = 'c8y_DeviceQueryString',\n}\n","import { Paging } from '@c8y/client';\nimport { ClickOptions, gettext, NavigatorNode, DeviceStatusComponent } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { Subject, Subscription } from 'rxjs';\nimport { AssetNodeMo, AssetNodeService } from './asset-node.service';\nimport { LoadMoreNode } from './load-more-node';\nimport { GroupFragment } from './group-fragment.model';\n\nenum Action {\n  FETCH,\n  NEXT,\n  REFRESH\n}\n\nexport class AssetNode extends NavigatorNode {\n  root: boolean;\n  mo: any;\n\n  get label() {\n    return (this.root && gettext('Groups')) || this.mo.name || '--';\n  }\n\n  get hasChildren() {\n    return this.root || this.service.groups.isGroup(this.mo);\n  }\n\n  get iconComponent() {\n    return this.isDevice ? DeviceStatusComponent : undefined;\n  }\n\n  get isDevice() {\n    return !!(this.mo.c8y_IsDevice || get(this.mo, 'deviceParents.references.length'));\n  }\n\n  private events: Subject<Action>;\n  private paging: Paging<AssetNodeMo>;\n  private loadMoreNode: LoadMoreNode;\n  private onUpdateSubscription: Subscription;\n\n  constructor(\n    protected service: AssetNodeService,\n    config = {}\n  ) {\n    super(config);\n    this.root = this.root || false;\n    this.mo = this.mo || {};\n    this.path = this.root ? 'group' : (this.isDevice ? `device/${this.mo.id}` : `group/${this.mo.id}`);\n    this.draggable = !this.service.moduleConfig.disableDragAndDrop && !this.root;\n    this.droppable = !this.service.moduleConfig.disableDragAndDrop && !this.isDevice;\n    this.routerLinkExact = this.root;\n    this.updateIcon(false);\n    this.onUpdateSubscription = this.service\n      .onUpdate(this)\n      .subscribe(({ data, method }) => this.refresh(data, method));\n  }\n\n  openOnStart(url) {\n    const urlRegex = /^\\/group\\//;\n    if (this.root) {\n      if (this.service.moduleConfig.openOnStart || urlRegex.test(url)) {\n        return true;\n      }\n    }\n    const matches = url.match(/\\/(group)\\/(\\d+)/);\n    let isMatch = false;\n    if (matches) {\n      const id = matches[2];\n      isMatch = [].concat(\n        get(this.mo, 'childAssets.references', []),\n      ).some(({ managedObject }) => managedObject.id === id);\n      return isMatch;\n    }\n    return false;\n  }\n\n  refresh(mo: any = {}, method = 'GET') {\n    if (mo.id === this.mo.id) {\n      this.mo = mo;\n    } else if (method === 'DELETE') {\n      this.parents.forEach((node: AssetNode) => node.refresh());\n      return;\n    }\n    if (this.events) {\n      this.events.next(Action.REFRESH);\n    }\n  }\n\n  click(options: ClickOptions = {}) {\n    if (this.isDevice) {\n      this.service.preferBreadcrumb(this.parents);\n      return;\n    }\n    if (!this.events) {\n      this.hookEvents();\n    }\n\n    this.updateIcon(options.open);\n    if (options.open) {\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  addManagedObject(mo) {\n    const { childAdditions } = this.mo;\n    if (!this.isChildAddition(childAdditions, mo)) {\n      this.add(this.service.createChildNode(mo));\n    }\n  }\n\n  isChildAddition(childAdditions, mo) {\n    return (\n      childAdditions &&\n      childAdditions.references.some(({ managedObject: { id } }) => id === mo.id)\n    );\n  }\n\n  destroy() {\n    this.onUpdateSubscription.unsubscribe();\n  }\n\n  get canDrop() {\n    const nodeToMove = this.service.draggedData;\n    if (nodeToMove) {\n      const shouldGetChildOfItsOwn = !!nodeToMove.find((child) => child === this);\n      const isAlreadyChild = (this.children as AssetNode[])\n        .some((child) => child.mo && child.mo.id === nodeToMove.mo.id);\n      const preventMove = this === nodeToMove || shouldGetChildOfItsOwn || isAlreadyChild;\n      return this.droppable && !preventMove;\n    }\n    return this.droppable;\n  }\n\n  dragStart($event) {\n    super.dragStart($event);\n    this.service.draggedData = this;\n    this.service.rootNode.droppable = !this.isDevice;\n  }\n\n  dragEnd($event) {\n    super.dragEnd($event);\n  }\n\n  async drop($event) {\n    super.drop($event);\n    const nodeToMove = this.service.draggedData;\n    if (this.canDrop) {\n      await this.moveNode(nodeToMove);\n    } else {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  protected fetch() {\n    return this.root ? this.service.getRootNodes() : this.service.getGroupItems(this.mo.id);\n  }\n\n  private async moveNode(nodeToMove: AssetNode) {\n    try {\n      const isCopy = await this.showDropConfirm(nodeToMove);\n      await this.verifyNodeAccess(nodeToMove);\n      await this.addMovedNode(nodeToMove);\n      if (!isCopy) {\n        await this.removeMovedNode(nodeToMove);\n      }\n      this.expand();\n    } catch (ex) {\n      if (ex) {\n        this.service.alert.addServerFailure(ex);\n      }\n    } finally {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  private async showDropConfirm(nodeToMove: AssetNode) {\n    this.confirm.title = gettext('Move');\n    this.confirm.message = gettext('Do you want to move the group?');\n    const buttons: any = [{\n      label: gettext('Cancel'),\n      action: () => Promise.reject()\n    }, {\n      label: gettext('Move'),\n      status: 'default',\n      action: () => Promise.resolve(false)\n    }];\n    if (nodeToMove.isDevice) {\n      this.confirm.title = gettext('Move or add');\n      this.confirm.message = gettext('Do you want to move or add the device?');\n      buttons.push({\n        label: gettext('Add'),\n        status: 'primary',\n        action: () => Promise.resolve(true)\n      });\n    }\n    return this.confirm.show(buttons);\n  }\n\n  private async verifyNodeAccess(nodeToMove: AssetNode) {\n    return this.service.inventory.update({ id: nodeToMove.mo.id });\n  }\n\n  private async addMovedNode(nodeToMove: AssetNode) {\n    let mo;\n    if (this.root) {\n      const { data } = await this.service.inventory.update({ id: nodeToMove.mo.id, type: GroupFragment.groupType });\n      mo = data;\n    } else {\n      const { data } = await this.service.inventory.childAssetsAdd(nodeToMove.mo, this.mo);\n      mo = data;\n    }\n    this.addManagedObject(mo);\n  }\n\n  private async removeMovedNode(nodeToMove: AssetNode) {\n    for (const parent of nodeToMove.parents as AssetNode[]) {\n      if (parent.mo && parent.mo.type === GroupFragment.dynamicGroupType) {\n        break; // smart groups don't need to be changed\n      }\n      if (parent.root) {\n        await this.service.inventory.update({ id: nodeToMove.mo.id, type: GroupFragment.subGroupType });\n      } else {\n        await this.service.inventory.childAssetsRemove(nodeToMove.mo, parent.mo);\n      }\n      parent.remove(nodeToMove);\n    }\n  }\n\n  private hookEvents() {\n    this.events = new Subject();\n    this.events.subscribe((evt) => {\n      if (!this.loading) {\n        this.handleEvent(evt);\n      }\n    });\n  }\n\n  private async handleEvent(evt: Action) {\n    if (!this.children.length && evt === Action.FETCH) {\n      this.loading = true;\n      this.addNodes(await this.fetch());\n      this.loading = false;\n    } else if (evt === Action.NEXT) {\n      this.loadMoreNode.loading = true;\n      this.addNodes(await this.paging.next());\n      this.loadMoreNode.loading = false;\n    } else if (evt === Action.REFRESH) {\n      this.loading = false;\n      this.paging = undefined;\n      this.loadMoreNode = undefined;\n      this.empty();\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  private addNodes(res) {\n    if (res.paging) {\n      const { pageSize, currentPage, totalPages } = this.paging = res.paging;\n      if (currentPage === 1) {\n        this.empty();\n      }\n      const itemsCount = res.data.length;\n      const moreItemsAvailable = totalPages ? (currentPage < totalPages) : (itemsCount === pageSize);\n      this.toggleLoadMore(moreItemsAvailable);\n    }\n    (res.data || res).map((mo) => this.addManagedObject(mo));\n  }\n\n  private updateIcon(open) {\n    this.icon = this.service.groups.icon(\n      // if it's root we are going to pass a fake mo to get the same icon as groups\n      this.root ? { type: GroupFragment.groupType } : this.mo,\n      open\n    );\n  }\n\n  private toggleLoadMore(show: boolean) {\n    if (!this.loadMoreNode && show) {\n      this.loadMoreNode = new LoadMoreNode();\n      this.add(this.loadMoreNode);\n      this.loadMoreNode.click = () => this.events.next(Action.NEXT);\n    }\n\n    if (this.loadMoreNode) {\n      this.loadMoreNode.hidden = !show;\n    }\n  }\n}\n","\nimport { AssetNode } from './asset-node';\nimport { AssetNodeService } from './asset-node.service';\n\nexport class DynamicGroupNode extends AssetNode {\n  constructor(\n    protected service: AssetNodeService,\n    config = {}\n  ) {\n    super(service, config);\n    this.draggable = false;\n    this.droppable = false;\n  }\n\n  get hasChildren() {\n    return true;\n  }\n\n  get query() {\n    return this.mo.c8y_DeviceQueryString;\n  }\n\n  protected fetch(): any {\n    return this.service.getDynamicGroupItems(this.query);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupFragment } from './group-fragment.model';\n\n@Injectable()\nexport class DeviceGroupService {\n  icons = {\n    brokerSourceInactive: {\n      icon: 'c8y-group-remote-inactive'\n    },\n    brokerSource: {\n      icon: 'c8y-group-remote',\n      iconOpen: 'c8y-group-remote-open'\n    },\n    group: {\n      icon: 'c8y-group',\n      iconOpen: 'c8y-group-open'\n    },\n    dynamicGroup: {\n      icon: 'c8y-group-smart',\n      iconOpen: 'c8y-group-smart-open'\n    },\n    other: {\n      icon: 'circle',\n      iconClass: 'statusUnknown'\n    }\n  };\n  dataBrokerSourceFragmentInactive = `_${GroupFragment.dataBrokerSourceFragment}`;\n\n  isGroup(mo) {\n    return !!mo[GroupFragment.groupFragmentType] || mo.type === GroupFragment.groupType || mo.type === GroupFragment.subGroupType;\n  }\n\n  isDynamicGroup(mo) {\n    return !!mo[GroupFragment.dynamicGroupFragment] || mo.type === GroupFragment.dynamicGroupType;\n  }\n\n  isDataBroker(mo) {\n    return !!mo[GroupFragment.dataBrokerSourceFragment] || !!mo[this.dataBrokerSourceFragmentInactive];\n  }\n\n  isDataBrokerActive(mo) {\n    return !!mo[GroupFragment.dataBrokerSourceFragment] && !mo[this.dataBrokerSourceFragmentInactive];\n  }\n\n  icon(mo, open) {\n    let type = 'other';\n    if (this.isDynamicGroup(mo)) {\n      type = 'dynamicGroup';\n    } else if (this.isDataBrokerActive(mo)) {\n      type = 'brokerSource';\n    } else if (this.isDataBroker(mo)) {\n      type = 'brokerSourceInactive';\n    } else if (this.isGroup(mo)) {\n      type = 'group';\n    }\n    const icon = this.icons[type];\n    return (open && icon.iconOpen) || icon.icon;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { InventoryService, UserService, PagingStrategy } from '@c8y/client';\nimport {\n  AlertService,\n  BreadcrumbService,\n  ModalService,\n  NavigatorNode,\n  AppStateService\n} from '@c8y/ngx-components';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { empty } from 'rxjs';\nimport { filter, mergeMap, map, scan } from 'rxjs/operators';\nimport { AssetNode } from './asset-node';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { DynamicGroupNode } from './dynamic-group-node';\nimport { GroupFragment } from './group-fragment.model';\nimport { DeviceGroupService } from './group.service';\nimport { flatMap, includes, reject, map as ldMap } from 'lodash-es';\n\nexport interface AssetNodeMo {\n  id: string;\n  type: string;\n}\n\n@Injectable()\nexport class AssetNodeService {\n  rootNode: AssetNode;\n  firstUrl = true;\n  draggedData: AssetNode;\n\n  constructor(\n    public inventory: InventoryService,\n    public groups: DeviceGroupService,\n    public apiService: ApiService,\n    public modal: ModalService,\n    public alert: AlertService,\n    private breadcrumbService: BreadcrumbService,\n    private user: UserService,\n    private appState: AppStateService,\n    @Optional() @Inject(ASSET_NAVIGATOR_CONFIG) public moduleConfig: AssetNavigatorConfig\n  ) {\n    this.moduleConfig = {\n      rootNodePriority: 2000,\n      ...(moduleConfig || {})\n    };\n  }\n\n  createRootNode() {\n    this.rootNode = this.createAssetNode({\n      root: true,\n      priority: this.moduleConfig.rootNodePriority\n    });\n    return this.rootNode;\n  }\n\n  createDynamicGroupNode(config) {\n    return new DynamicGroupNode(this, config);\n  }\n\n  createAssetNode(config) {\n    return new AssetNode(this, config);\n  }\n\n  createChildNode(managedObject) {\n    const { type } = managedObject;\n    const config: Partial<AssetNode> = { mo: managedObject };\n    if (type === GroupFragment.dynamicGroupType) {\n      return this.createDynamicGroupNode(config);\n    }\n    return this.createAssetNode(config);\n  }\n\n  getRootNodes(): Promise<any> {\n    if (this.user.hasRole(this.appState.currentUser.value, 'ROLE_INVENTORY_READ')) {\n      const query = this.rootQueryFilter();\n      const rootNodeFilter = this.createFilter({ query, pageSize: 20, skipChildrenNames: true });\n      return this.inventory.list(rootNodeFilter);\n    } else {\n      const groupFilter = this.createFilter({\n        fragmentType: GroupFragment.groupFragmentType,\n        withTotalPages: true,\n        pageSize: 500,\n        skipChildrenNames: true\n      });\n      return this.inventory\n        .list$(groupFilter, {\n          hot: false,\n          pagingStrategy: PagingStrategy.ALL,\n          realtime: false\n        })\n        .pipe(\n          scan((acc: any[], val: any) => [...acc, ...val], []),\n          map(groups => this.rejectSubgroups(groups))\n        )\n        .toPromise();\n    }\n  }\n\n  getGroupItems(moId: string): Promise<any> {\n    const query = this.groupQueryFilter(moId);\n    const groupFilter = this.createFilter({ query, skipChildrenNames: true });\n    return this.inventory.list(groupFilter);\n  }\n\n  getDynamicGroupItems(query: string): Promise<any> {\n    const dynamicGroupfilter = this.createFilter({ q: query });\n    return this.inventory.list(dynamicGroupfilter);\n  }\n\n  groupQueryFilter(moId: string) {\n    return `$filter=(bygroupid(${moId}))$orderby=name`;\n  }\n\n  rootQueryFilter() {\n    const { moduleConfig } = this;\n    const rootFilter = [`(type eq '${GroupFragment.groupType}')`];\n    if (moduleConfig.smartGroups) {\n      rootFilter.push(`(type eq '${GroupFragment.dynamicGroupType}')`);\n    }\n    return `$filter=(${rootFilter.join(' or ')})$orderby=name`;\n  }\n\n  onUpdate({ mo, root }) {\n    if (mo.id) {\n      return this.apiService\n        .hookResponse(\n          ({ url, method }) =>\n            ['PUT', 'DELETE', 'POST'].includes(method) &&\n            RegExp(`((inventory/managedObjects)|(service/smartgroup/smartgroups))/${mo.id}`).test(\n              url\n            )\n        )\n        .pipe(\n          filter(() => !this.draggedData),\n          mergeMap(this.apiService.resolveData),\n          filter((response) => !response.data.c8y_Dashboard)\n        );\n    } else if (root) {\n      return this.apiService.hookResponse(\n        ({ url, method, options }) =>\n          RegExp('((inventory/managedObjects)|(service/smartgroup/smartgroups))/?$').test(url) &&\n          method === 'POST' &&\n          this.isNewManagedObjectRoot(options)\n      );\n    } else {\n      return empty();\n    }\n  }\n\n  isNewManagedObjectRoot(options: any = {}) {\n    const { data } = options;\n    let isRootAsset = false;\n    if (typeof data === 'object') {\n      isRootAsset = !!data[GroupFragment.groupFragmentType];\n      if (!isRootAsset && this.moduleConfig.smartGroups) {\n        isRootAsset = !!data[GroupFragment.dynamicGroupFragment];\n      }\n    }\n    return isRootAsset;\n  }\n\n  /**\n   * There could be multiple breadcrumbs for devices,\n   * so we set a preferred one on click on a device.\n   * @param parents The parent nodes of the device to select the prefered one.\n   */\n  preferBreadcrumb(parents: NavigatorNode[]) {\n    if (parents.length === 1) {\n      this.breadcrumbService.selectPreferredByPath(parents[0].path);\n    }\n  }\n\n  private rejectSubgroups(groups) {\n    const allChildAssetRefs = flatMap(groups, 'childAssets.references');\n    const allChildAssetIds = ldMap(allChildAssetRefs, 'managedObject.id');\n    const isSubgroup = group => includes(allChildAssetIds, group.id);\n    return reject(groups, isSubgroup);\n  }\n\n  private createFilter(extraParams: any = {}) {\n    const params = {\n      currentPage: 1,\n      withTotalPages: true,\n      pageSize: 10\n    };\n    return { ...params, ...extraParams };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AssetNodeService } from './asset-node.service';\nimport { NavigatorNode } from '@c8y/ngx-components';\n\n@Injectable()\nexport class AssetNodeFactory {\n  constructor(private service: AssetNodeService) {}\n\n  get(): NavigatorNode {\n    if (!this.service.rootNode) {\n      this.service.createRootNode();\n    }\n    return this.service.rootNode;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HOOK_NAVIGATOR_NODES, ModalModule, ModalService, DeviceStatusComponent, DeviceStatusModule} from '@c8y/ngx-components';\nimport { ASSET_NAVIGATOR_CONFIG} from './asset-node-config.model';\nimport { AssetNodeFactory } from './asset-node.factory';\nimport { AssetNodeService } from './asset-node.service';\nimport { AssetNavigatorConfig } from './asset-node-config.model';\nimport { DeviceGroupService } from './group.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ModalModule,\n    DeviceStatusModule\n  ],\n  providers: [\n    ModalService,\n    AssetNodeService,\n    DeviceGroupService,\n    {\n      provide: HOOK_NAVIGATOR_NODES, useClass: AssetNodeFactory, multi: true\n    }\n  ],\n  entryComponents: [DeviceStatusComponent]\n})\nexport class AssetsNavigatorModule {\n  static config(config: AssetNavigatorConfig): ModuleWithProviders {\n    return {\n      ngModule: AssetsNavigatorModule,\n      providers: [\n        {\n          provide: ASSET_NAVIGATOR_CONFIG, useValue: config\n        }\n      ],\n    };\n  }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ASSET_NAVIGATOR_CONFIG as ɵa,AssetNavigatorConfig as ɵb} from './asset-node-config.model';"],"names":["tslib_1.__extends","tslib_1.__values","ldMap","tslib_1.__param"],"mappings":"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"}