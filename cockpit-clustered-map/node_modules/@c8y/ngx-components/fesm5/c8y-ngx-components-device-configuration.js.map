{"version":3,"file":"c8y-ngx-components-device-configuration.js","sources":["ng://@c8y/ngx-components/device-configuration/device-configuration.service.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-list.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-operation.component.ts","ng://@c8y/ngx-components/device-configuration/source-code-preview.component.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.guard.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.model.ts","ng://@c8y/ngx-components/device-configuration/save-to-repository.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-preview.component.ts","ng://@c8y/ngx-components/device-configuration/configuration-filter.pipe.ts","ng://@c8y/ngx-components/device-configuration/device-configuration.module.ts","ng://@c8y/ngx-components/device-configuration/c8y-ngx-components-device-configuration.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport {\n  EventBinaryService,\n  EventService,\n  IEvent,\n  IManagedObject,\n  InventoryBinaryService,\n  InventoryService,\n  IOperation,\n  OperationService\n} from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class DeviceConfigurationService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  repositoryConfigListUpdated = new EventEmitter<any>();\n\n  constructor(\n    private eventService: EventService,\n    private eventBinaryService: EventBinaryService,\n    private operationService: OperationService,\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private translateService: TranslateService\n  ) {}\n\n  async getLatestConfigurationEvent(deviceId: string | number, type: string): Promise<IEvent> {\n    const filter: object = {\n      source: deviceId,\n      type,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      pageSize: 1\n    };\n\n    const { data } = await this.eventService.list(filter);\n    return data[0];\n  }\n\n  async getEventConfigurationBinary(event: IEvent): Promise<string> {\n    let binary;\n    try {\n      const res = await this.eventBinaryService.download(event);\n      binary = res.text();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return binary;\n  }\n\n  async createUploadConfigFileOperation(device, configurationType) {\n    let operation;\n    const operationText = gettext(\n      'Retrieve {{ configurationType }} configuration snapshot from device {{ deviceName }}'\n    );\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      c8y_UploadConfigFile: {\n        type: configurationType\n      },\n      description: this.translateService.instant(operationText, {\n        configurationType,\n        deviceName: device.name\n      })\n    };\n\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  async getLatestConfigFileOperation(deviceId, configType, operationType): Promise<IOperation> {\n    const filter: object = {\n      deviceId,\n      fragmentType: operationType,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 2000\n    };\n\n    const { data } = await this.operationService.list(filter);\n    return data.find(op => op[operationType].type === configType);\n  }\n\n  async getSnapshotsFromRepository(deviceType, configurationType): Promise<IManagedObject[]> {\n    let query: any;\n    const filter: object = {\n      pageSize: 2000,\n      withTotalPages: true\n    };\n    query = {\n      __filter: {\n        __and: [\n          {\n            type: 'c8y_ConfigurationDump'\n          },\n          {\n            __or: [\n              { configurationType: { __eq: configurationType } },\n              {\n                __not: {\n                  __has: 'configurationType'\n                }\n              }\n            ]\n          }\n        ]\n      },\n      __orderby: [{ configurationType: -1, name: 1 }]\n    };\n\n    if (deviceType) {\n      const deviceTypeFilter = {\n        __or: [\n          { deviceType: { __eq: deviceType } },\n          {\n            __not: {\n              __has: 'deviceType'\n            }\n          }\n        ]\n      };\n      query.__filter.__and.push(deviceTypeFilter);\n    }\n    return (await this.inventoryService.listQuery(query, filter)).data;\n  }\n\n  async createDownloadConfigFileOperation(device, configurationType, binaryUrl) {\n    let operation;\n    const operationText = gettext(\n      'Send configuration {{ configurationType }} to device {{ deviceName }}'\n    );\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      c8y_DownloadConfigFile: {\n        url: binaryUrl,\n        type: configurationType\n      },\n      description: this.translateService.instant(operationText, {\n        configurationType,\n        deviceName: device.name\n      })\n    };\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  async getConfigurationBinaryFile(url) {\n    let binary;\n    const moId = this.inventoryBinaryService.getIdFromUrl(url);\n    if (moId) {\n      const binaryMO = (await this.inventoryService.detail(moId)).data;\n      const res = await this.inventoryBinaryService.download(binaryMO);\n      binary = await res.text();\n    } else {\n      binary = this.fetchExternalBinary(url);\n    }\n    return binary;\n  }\n\n  async saveToConfigurationRepository(config) {\n    const mo: Partial<IManagedObject> = {};\n    Object.assign(mo, {\n      name: config.name,\n      type: 'c8y_ConfigurationDump',\n      deviceType: config.deviceType,\n      configurationType: config.configurationType,\n      c8y_Global: {}\n    });\n    const response = await this.inventoryBinaryService.create(new Blob([config.binary]), {\n      c8y_Global: {}\n    });\n    mo.url = response.data.self;\n    return this.inventoryService.create(mo);\n  }\n\n  updateRepositoryConfigList() {\n    this.repositoryConfigListUpdated.emit();\n  }\n\n  private async fetchExternalBinary(url) {\n    let configBinary;\n    try {\n      const res = await fetch(url);\n      if (res.status === 200) {\n        configBinary = await res.text();\n      }\n    } catch (ex) {\n      // do nothing\n    }\n    return configBinary;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IEvent, IManagedObject, Realtime } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport {\n  ConfigurationListEmptyState,\n  ConfigurationSnapshot,\n  SupportedConfigurationItem\n} from './device-configuration.model';\nimport { Subscription } from 'rxjs';\nimport { gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-configuration',\n  templateUrl: './device-configuration.component.html'\n})\nexport class DeviceConfigurationComponent implements OnInit, OnDestroy {\n  supportedConfigurations: SupportedConfigurationItem[];\n  configurationType: string;\n  configSnapshot: Partial<ConfigurationSnapshot> = {};\n  repositorySnapshots: IManagedObject[];\n  repositorySnapshot: ConfigurationSnapshot;\n  repositorySnapshotsEmptyState: ConfigurationListEmptyState;\n  device: IManagedObject;\n\n  private eventsSubscription: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime\n  ) {\n    this.deviceConfigurationService.repositoryConfigListUpdated.subscribe(async () => {\n      this.repositorySnapshot = undefined;\n      this.repositorySnapshots = await this.getSnapshotsFromRepository(\n        this.device.type,\n        this.configurationType\n      );\n    });\n  }\n\n  ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({\n      name: item\n    }));\n\n    this.repositorySnapshotsEmptyState = {\n      icon: 'gears',\n      title: gettext('No configurations available.'),\n      text: gettext('Add configuration to configuration repository')\n    };\n    const eventsChannel = '/eventsWithChildren/' + this.device.id;\n    this.eventsSubscription = this.realtime.observable(eventsChannel).subscribe(({ data }) => {\n      this.updateConfigSnapshotOnEvent(data);\n    });\n  }\n\n  async onConfigTypeSelected(config) {\n    this.configurationType = undefined;\n    this.repositorySnapshot = undefined;\n    this.configSnapshot = {};\n\n    const configEvent = await this.deviceConfigurationService.getLatestConfigurationEvent(\n      this.device.id,\n      config.name\n    );\n    this.updateConfigSnapshotOnEvent(configEvent, config.name);\n\n    this.configurationType = config.name;\n    this.repositorySnapshots = await this.getSnapshotsFromRepository(this.device.type, config.name);\n  }\n\n  getSnapshotsFromRepository(deviceType, configurationType) {\n    return this.deviceConfigurationService.getSnapshotsFromRepository(\n      deviceType,\n      configurationType\n    );\n  }\n\n  async updateConfigSnapshotOnEvent(event: IEvent, configurationType?) {\n    const type = configurationType || this.configurationType;\n    if (event && event.type === type) {\n      this.configSnapshot = {\n        time: event.time,\n        name: event.text,\n        deviceType: this.device.deviceType,\n        configurationType: type\n      };\n      this.configSnapshot.binary = await this.deviceConfigurationService.getEventConfigurationBinary(\n        event\n      );\n    }\n  }\n\n  async onRepositoryConfigSelected(config) {\n    this.repositorySnapshot = {\n      time: config.creationTime,\n      name: config.name,\n      binaryUrl: config.url,\n      deviceType: config.deviceType,\n      configurationType: config.configurationType\n    };\n    if (config.url) {\n      this.repositorySnapshot.binary = await this.deviceConfigurationService.getConfigurationBinaryFile(\n        config.url\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.eventsSubscription.unsubscribe();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  ConfigurationListEmptyState,\n  SupportedConfigurationItem\n} from './device-configuration.model';\n\n@Component({\n  selector: 'c8y-device-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent {\n  @Input() items: SupportedConfigurationItem[];\n  @Input() itemIcon: string;\n  @Input() emptyState: ConfigurationListEmptyState;\n  @Input() isFilterEnabled: boolean;\n  @Output() configSelected = new EventEmitter<string>();\n  selectedConfig;\n  filterTerm: string = '';\n\n  showConfigurationTypePreview(config): void {\n    this.selectedConfig = config;\n    this.configSelected.emit(config);\n  }\n\n  updatePipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { operationStatusIcons, operationStatusClasses } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-configuration-operation',\n  templateUrl: './configuration-operation.component.html'\n})\nexport class ConfigurationOperationComponent {\n  @Input() operation: IOperation;\n  statusIcons: object;\n  statusClasses: object;\n\n  ngOnInit() {\n    this.statusIcons = operationStatusIcons;\n    this.statusClasses = operationStatusClasses;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-source-code-preview',\n  templateUrl: './source-code-preview.component.html'\n})\nexport class SourceCodePreviewComponent {\n  @Input() isDisabled: boolean;\n  @Input() text: string;\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\n\nexport class DeviceConfigurationGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    return (\n      contextData &&\n      contextData.c8y_SupportedConfigurations &&\n      contextData.c8y_SupportedConfigurations.length > 0\n    );\n  }\n}\n","export interface ConfigurationSnapshot {\n  time: string;\n  name: string;\n  binaryUrl?: string;\n  binary?: any;\n  deviceType?: string;\n  configurationType?: string;\n}\n\nexport interface SupportedConfigurationItem {\n  name: string;\n  deviceType?: string;\n  configurationType?: string;\n}\n\nexport interface ConfigurationListEmptyState {\n  icon?: string;\n  title?: string;\n  text?: string;\n}\n\nexport enum DeviceConfigurationOperation {\n  UPLOAD_CONFIG = 'c8y_UploadConfigFile',\n  DOWNLOAD_CONFIG = 'c8y_DownloadConfigFile'\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ConfigurationSnapshot } from './device-configuration.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Component({\n  selector: 'c8y-save-config-to-configuration-repository',\n  templateUrl: 'save-to-repository.component.html'\n})\nexport class SaveToRepositoryComponent {\n  configSnapshot: ConfigurationSnapshot;\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private alertService: AlertService,\n    private deviceConfigurationService: DeviceConfigurationService\n  ) {}\n\n  async save() {\n    try {\n      await this.deviceConfigurationService.saveToConfigurationRepository(this.configSnapshot);\n      this.alertService.success(gettext('Configuration saved.'));\n      this._save();\n    } catch (ex) {\n      if (ex.data) {\n        this.alertService.danger(ex.data.message);\n      }\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation } from './device-configuration.model';\nimport { IManagedObject, IOperation, OperationStatus, Realtime, UserService } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { Subscription } from 'rxjs';\nimport { saveAs } from 'file-saver/FileSaver';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { cloneDeep } from 'lodash-es';\nimport { AppStateService } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-configuration-preview',\n  templateUrl: './configuration-preview.component.html'\n})\nexport class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n  @Input() device: IManagedObject;\n  @Input() configurationType: string;\n  @Input() configSnapshot: ConfigurationSnapshot;\n  @Input() canSaveSnapshot: boolean;\n  @Input() actionButtonText: string;\n  @Input() actionButtonIcon: string;\n  @Input() operationToTrigger:\n    | DeviceConfigurationOperation.UPLOAD_CONFIG\n    | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n\n  operation: IOperation;\n  private operationsSubscription: Subscription;\n\n  constructor(\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private bsModal: BsModalService,\n    private user: UserService,\n    private appState: AppStateService\n  ) {}\n\n  async ngOnInit() {\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      const configOperation = await this.getOperation();\n      this.updateOperation(configOperation);\n    }\n\n    const operationsChannel = `/operations/${this.device.id}`;\n    this.operationsSubscription = this.realtime\n      .observable(operationsChannel)\n      .subscribe(({ data }) => {\n        this.updateOperation(data);\n      });\n  }\n\n  async createDeviceOperation() {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      this.operation = await this.deviceConfigurationService.createDownloadConfigFileOperation(\n        this.device,\n        this.configurationType,\n        this.configSnapshot.binaryUrl\n      );\n    }\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      this.operation = await this.deviceConfigurationService.createUploadConfigFileOperation(\n        this.device,\n        this.configurationType\n      );\n    }\n  }\n\n  showOperation(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return !!this.operation;\n    }\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(\n        this.operation.status\n      )\n    );\n  }\n\n  showBinary(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return true;\n    }\n    return !this.showOperation();\n  }\n\n  isCreateOperationDisabled(): boolean {\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status)\n    );\n  }\n\n  updateOperation(operation: IOperation) {\n    if (\n      operation &&\n      operation[this.operationToTrigger] &&\n      operation[this.operationToTrigger].type &&\n      operation[this.operationToTrigger].type === this.configurationType\n    ) {\n      this.operation = operation;\n    }\n  }\n\n  getOperation() {\n    return this.deviceConfigurationService.getLatestConfigFileOperation(\n      this.device.id,\n      this.configurationType,\n      this.operationToTrigger\n    );\n  }\n\n  download() {\n    const blob = new Blob([this.configSnapshot.binary]);\n    const fileName = this.configSnapshot.name;\n    saveAs(blob, fileName);\n  }\n\n  async saveToRepository() {\n    const initialState = {\n      configSnapshot: cloneDeep(this.configSnapshot)\n    };\n    const modal = this.bsModal.show(SaveToRepositoryComponent, {\n      class: 'modal-sm',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as SaveToRepositoryComponent;\n    try {\n      await modal.result;\n      this.deviceConfigurationService.updateRepositoryConfigList();\n      modal.close();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  hasPermission(): boolean {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  ngOnDestroy() {\n    this.operationsSubscription.unsubscribe();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SupportedConfigurationItem } from './device-configuration.model';\n\n@Pipe({\n  name: 'configurationFilterPipe'\n})\nexport class ConfigurationFilterPipe implements PipeTransform {\n  transform(items: any[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter(\n          (item: SupportedConfigurationItem) =>\n            this.filterContainString(item.name, filterTerm) ||\n            this.filterContainString(item.deviceType, filterTerm)\n        );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, gettext, HOOK_ONCE_ROUTE, Route, ViewContext } from '@c8y/ngx-components';\nimport { DeviceConfigurationComponent } from './device-configuration.component';\nimport { ConfigurationListComponent } from './configuration-list.component';\nimport { ConfigurationOperationComponent } from './configuration-operation.component';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { SourceCodePreviewComponent } from './source-code-preview.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { DeviceConfigurationGuard } from './device-configuration.guard';\nimport { ConfigurationPreviewComponent } from './configuration-preview.component';\nimport { ConfigurationFilterPipe } from './configuration-filter.pipe';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\n\nconst routes: Route[] = [\n  {\n    context: ViewContext.Device,\n    path: 'device-configuration',\n    component: DeviceConfigurationComponent,\n    label: gettext('Configuration'),\n    icon: 'gears',\n    canActivate: [DeviceConfigurationGuard]\n  }\n];\n\n@NgModule({\n  declarations: [\n    DeviceConfigurationComponent,\n    ConfigurationListComponent,\n    ConfigurationOperationComponent,\n    SourceCodePreviewComponent,\n    ConfigurationPreviewComponent,\n    ConfigurationFilterPipe,\n    SaveToRepositoryComponent\n  ],\n  exports: [],\n  imports: [CoreModule, TooltipModule],\n  entryComponents: [DeviceConfigurationComponent, SaveToRepositoryComponent],\n  providers: [\n    DeviceConfigurationService,\n    DeviceConfigurationGuard,\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useValue: routes,\n      multi: true\n    }\n  ]\n})\nexport class DeviceConfigurationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ConfigurationFilterPipe as ɵg} from './configuration-filter.pipe';\nexport {ConfigurationListComponent as ɵc} from './configuration-list.component';\nexport {ConfigurationOperationComponent as ɵd} from './configuration-operation.component';\nexport {ConfigurationPreviewComponent as ɵf} from './configuration-preview.component';\nexport {DeviceConfigurationComponent as ɵa} from './device-configuration.component';\nexport {DeviceConfigurationGuard as ɵi} from './device-configuration.guard';\nexport {DeviceConfigurationService as ɵb} from './device-configuration.service';\nexport {SaveToRepositoryComponent as ɵh} from './save-to-repository.component';\nexport {SourceCodePreviewComponent as ɵe} from './source-code-preview.component';"],"names":["tslib_1.__decorate"],"mappings":"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"}